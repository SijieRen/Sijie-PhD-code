[["TEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf something eats the tiger then the tiger needs the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(Tiger, Dog))\nTEXT:\tIf the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nFOL:\t(Sees(Bear, Dog) & Eats(Dog, Tiger)) -> Eats(Dog, Bear)\nTEXT:\tIf something eats the bear then it sees the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Tiger))\nTEXT:\tIf the tiger sees the rabbit then the rabbit eats the bear.\nFOL:\tSees(Tiger, Rabbit) -> Eats(Rabbit, Bear)\nTEXT:\tIf something eats the bear and the bear sees the rabbit then it sees the dog.\nFOL:\tall x. (Eats(x, Bear) & Sees(Bear, Rabbit)) -> Sees(x, Dog)\nTEXT:\tIf something sees the dog then it sees the rabbit.\nFOL:\tall x. (Sees(x, Dog) -> Sees(x, Rabbit))\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf something eats the tiger then the tiger needs the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(Tiger, Dog))\nTEXT:\tIf the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nFOL:\t(Sees(Bear, Dog) & Eats(Dog, Tiger)) -> Eats(Dog, Bear)\nTEXT:\tIf something eats the bear then it sees the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Tiger))\nTEXT:\tIf the tiger sees the rabbit then the rabbit eats the bear.\nFOL:\tSees(Tiger, Rabbit) -> Eats(Rabbit, Bear)\nTEXT:\tIf something eats the bear and the bear sees the rabbit then it sees the dog.\nFOL:\tall x. ((Eats(x, Bear) & Sees(Bear, Rabbit)) -> Sees(x, Dog))\nTEXT:\tIf something sees the dog then it sees the rabbit.\nFOL:\tall x. (Sees(x, Dog) -> Sees(x, Rabbit))\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf something eats the tiger then the tiger needs the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(Tiger, Dog))\nTEXT:\tIf the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nFOL:\t(Sees(Bear, Dog) & Eats(Dog, Tiger)) -> Eats(Dog, Bear)\nTEXT:\tIf something eats the bear then it sees the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Tiger))\nTEXT:\tIf the tiger sees the rabbit then the rabbit eats the bear.\nFOL:\tSees(Tiger, Rabbit) -> Eats(Rabbit, Bear)\nTEXT:\tIf something eats the bear and the bear sees the rabbit then it sees the dog.\nFOL:\tall x. ((Eats(x, Bear) & Sees(Bear, Rabbit)) -> Sees(x, Dog))\nTEXT:\tIf something sees the dog then it sees the rabbit.\nFOL:\tall x. (Sees(x, Dog) -> Sees(x, Rabbit))\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf something eats the tiger then the tiger needs the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(Tiger, Dog))\nTEXT:\tIf the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nFOL:\t(Sees(Bear, Dog) & Eats(Dog, Tiger)) -> Eats(Dog, Bear)\nTEXT:\tIf something eats the bear then it sees the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Tiger))\nTEXT:\tIf the tiger sees the rabbit then the rabbit eats the bear.\nFOL:\tSees(Tiger, Rabbit) -> Eats(Rabbit, Bear)\nTEXT:\tIf something eats the bear and the bear sees the rabbit then it sees the dog.\nFOL:\tall x. ((Eats(x, Bear) & Sees(Bear, Rabbit)) -> Sees(x, Dog))\nTEXT:\tIf something sees the dog then it sees the rabbit.\nFOL:\tall x. (Sees(x, Dog) -> Sees(x, Rabbit))\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf something eats the tiger then the tiger needs the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(Tiger, Dog))\nTEXT:\tIf the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nFOL:\t(Sees(Bear, Dog) & Eats(Dog, Tiger)) -> Eats(Dog, Bear)\nTEXT:\tIf something eats the bear then it sees the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Tiger))\nTEXT:\tIf the tiger sees the rabbit then the rabbit eats the bear.\nFOL:\tSees(Tiger, Rabbit) -> Eats(Rabbit, Bear)\nTEXT:\tIf something eats the bear and the bear sees the rabbit then it sees the dog.\nFOL:\tall x. ((Eats(x, Bear) & Sees(Bear, Rabbit)) -> Sees(x, Dog))\nTEXT:\tIf something sees the dog then it sees the rabbit.\nFOL:\tall x. (Sees(x, Dog) -> Sees(x, Rabbit))\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll quiet people are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf someone is quiet then they are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf Erin is round then Erin is green.\nFOL:\tRound(Erin) -> Green(Erin)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone is quiet and nice then they are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tIf someone is round then they are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Gary is quiet then Gary is not white.\nFOL:\tQuiet(Gary) -> -White(Gary)\nTEXT:\tIf someone is nice and green then they are smart.\nFOL:\tall x. (Nice(x) & Green(x) -> Smart(x))\nTEXT:\tFiona is not cold.\nFOL:\t-Cold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll quiet people are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf someone is quiet then they are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf Erin is round then Erin is green.\nFOL:\tRound(Erin) -> Green(Erin)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone is quiet and nice then they are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tIf someone is round then they are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Gary is quiet then Gary is not white.\nFOL:\tQuiet(Gary) -> -White(Gary)\nTEXT:\tIf someone is nice and green then they are smart.\nFOL:\tall x. (Nice(x) & Green(x) -> Smart(x))\nTEXT:\tFiona is not cold.\nFOL:\t-Cold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll quiet people are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf someone is quiet then they are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf Erin is round then Erin is green.\nFOL:\tRound(Erin) -> Green(Erin)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone is quiet and nice then they are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tIf someone is round then they are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Gary is quiet then Gary is not white.\nFOL:\tQuiet(Gary) -> -White(Gary)\nTEXT:\tIf someone is nice and green then they are smart.\nFOL:\tall x. (Nice(x) & Green(x) -> Smart(x))\nTEXT:\tFiona is not cold.\nFOL:\t-Cold(Fiona)\nANSWER:\tTrue\n", "TEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll quiet people are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf someone is quiet then they are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf Erin is round then Erin is green.\nFOL:\tRound(Erin) -> Green(Erin)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone is quiet and nice then they are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tIf someone is round then they are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Gary is quiet then Gary is not white.\nFOL:\tQuiet(Gary) -> -White(Gary)\nTEXT:\tIf someone is nice and green then they are smart.\nFOL:\tall x. (Nice(x) & Green(x) -> Smart(x))\nTEXT:\tFiona is not cold.\nFOL:\t-Cold(Fiona)\nANSWER:\tTrue\n", "TEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll quiet people are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf someone is quiet then they are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf Erin is round then Erin is green.\nFOL:\tRound(Erin) -> Green(Erin)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone is quiet and nice then they are cold.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> Cold(x))\nTEXT:\tIf someone is round then they are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Gary is quiet then Gary is not white.\nFOL:\tQuiet(Gary) -> -White(Gary)\nTEXT:\tIf someone is nice and green then they are smart.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Smart(x))\nTEXT:\tFiona is not cold.\nFOL:\t-Cold(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tRed things are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry things are kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tIf something is cold and rough then it is white.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> White(x))\nTEXT:\tIf Fiona is furry then Fiona is kind.\nFOL:\tFurry(Fiona) -> Kind(Fiona)\nTEXT:\tRough, kind things are furry.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Furry(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tRed things are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry things are kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tIf something is cold and rough then it is white.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> White(x))\nTEXT:\tIf Fiona is furry then Fiona is kind.\nFOL:\tFurry(Fiona) -> Kind(Fiona)\nTEXT:\tRough, kind things are furry.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Furry(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tRed things are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry things are kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tIf something is cold and rough then it is white.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> White(x))\nTEXT:\tIf Fiona is furry then Fiona is kind.\nFOL:\t(Furry(Fiona) -> Kind(Fiona))\nTEXT:\tRough, kind things are furry.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Furry(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tRed things are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry things are kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tIf something is cold and rough then it is white.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> White(x))\nTEXT:\tIf Fiona is furry then Fiona is kind.\nFOL:\tFurry(Fiona) -> Kind(Fiona)\nTEXT:\tRough, kind things are furry.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Furry(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tRed things are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry things are kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tIf something is cold and rough then it is white.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> White(x))\nTEXT:\tIf Fiona is furry then Fiona is kind.\nFOL:\tFurry(Fiona) -> Kind(Fiona)\nTEXT:\tRough, kind things are furry.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Furry(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tAll blue things are red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tBlue, nice things are quiet.\nFOL:\tall x. (Blue(x) & Nice(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tIf Charlie is smart and Charlie is cold then Charlie is furry.\nFOL:\t(Smart(Charlie) & Cold(Charlie)) -> Furry(Charlie)\nTEXT:\tIf something is furry then it is nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tRed, quiet things are smart.\nFOL:\tall x. (Red(x) & Quiet(x) -> Smart(x))\nTEXT:\tNice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tQuiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tAll blue things are red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tBlue, nice things are quiet.\nFOL:\tall x. (Blue(x) & Nice(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\t(Quiet(Harry) -> Furry(Harry))\nTEXT:\tIf Charlie is smart and Charlie is cold then Charlie is furry.\nFOL:\t(Smart(Charlie) & Cold(Charlie) -> Furry(Charlie))\nTEXT:\tIf something is furry then it is nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tRed, quiet things are smart.\nFOL:\tall x. (Red(x) & Quiet(x) -> Smart(x))\nTEXT:\tNice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tQuiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tAll blue things are red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tBlue, nice things are quiet.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tIf Charlie is smart and Charlie is cold then Charlie is furry.\nFOL:\t(Smart(Charlie) & Cold(Charlie)) -> Furry(Charlie)\nTEXT:\tIf something is furry then it is nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tRed, quiet things are smart.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Smart(x))\nTEXT:\tNice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tQuiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tAll blue things are red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tBlue, nice things are quiet.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tIf Charlie is smart and Charlie is cold then Charlie is furry.\nFOL:\t(Smart(Charlie) & Cold(Charlie)) -> Furry(Charlie)\nTEXT:\tIf something is furry then it is nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tRed, quiet things are smart.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Smart(x))\nTEXT:\tNice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tQuiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tAll blue things are red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tBlue, nice things are quiet.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tIf Charlie is smart and Charlie is cold then Charlie is furry.\nFOL:\t(Smart(Charlie) & Cold(Charlie)) -> Furry(Charlie)\nTEXT:\tIf something is furry then it is nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tRed, quiet things are smart.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Smart(x))\nTEXT:\tNice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tQuiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf something is white and young then it is big.\nFOL:\tall x. (White(x) & Young(x) -> Big(x))\nTEXT:\tGreen, furry things are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll big things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tFalse\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf something is white and young then it is big.\nFOL:\tall x. ((White(x) & Young(x)) -> Big(x))\nTEXT:\tGreen, furry things are white.\nFOL:\tall x. ((Green(x) & Furry(x)) -> White(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll big things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tFalse\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf something is white and young then it is big.\nFOL:\tall x. (White(x) & Young(x) -> Big(x))\nTEXT:\tGreen, furry things are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll big things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tFalse\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf something is white and young then it is big.\nFOL:\tall x. (White(x) & Young(x) -> Big(x))\nTEXT:\tGreen, furry things are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll big things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tFalse\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf something is white and young then it is big.\nFOL:\tall x. (White(x) & Young(x) -> Big(x))\nTEXT:\tGreen, furry things are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll big things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tFalse\n"], ["TEXT:\tThe bald eagle does not need the mouse.\nFOL:\t-Needs(BaldEagle, Mouse)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tIf something is round then it chases the bear.\nFOL:\tall x. (Round(x) -> Chases(x, Bear))\nTEXT:\tIf something eats the bear and it does not need the bald eagle then it chases the bear.\nFOL:\tall x. ((Eats(x, Bear) & -Needs(x, BaldEagle)) -> Chases(x, Bear))\nTEXT:\tIf something chases the bear then it needs the tiger.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Tiger))\nTEXT:\tIf something chases the mouse and the mouse is red then it does not eat the bald eagle.\nFOL:\tall x. (Chases(x, Mouse) & Red(Mouse) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is red then it does not eat the bald eagle.\nFOL:\tall x. (Red(x) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is round and it needs the tiger then the tiger is round.\nFOL:\tall x. ((Round(x) & Needs(x, Tiger)) -> Round(Tiger))\nTEXT:\tIf something needs the bald eagle then it is not red.\nFOL:\tall x. (Needs(x, BaldEagle) -> -Red(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nFOL:\tall x. ((Needs(x, BaldEagle) & Eats(BaldEagle, Tiger)) -> Eats(Tiger, Mouse))\nTEXT:\tIf something is round and it does not eat the mouse then it does not need the mouse.\nFOL:\tall x. ((Round(x) & -Eats(x, Mouse)) -> -Needs(x, Mouse))\nTEXT:\tThe mouse does not chase the bear.\nFOL:\t-Chases(Mouse, Bear)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle does not need the mouse.\nFOL:\t-Need(BaldEagle, Mouse)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eat(Bear, BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEat(Bear, Tiger)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChase(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEat(Mouse, Bear)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEat(Tiger, Bear)\nTEXT:\tIf something is round then it chases the bear.\nFOL:\tall x. (Round(x) -> Chase(x, Bear))\nTEXT:\tIf something eats the bear and it does not need the bald eagle then it chases the bear.\nFOL:\tall x. ((Eat(x, Bear) & -Need(x, BaldEagle)) -> Chase(x, Bear))\nTEXT:\tIf something chases the bear then it needs the tiger.\nFOL:\tall x. (Chase(x, Bear) -> Need(x, Tiger))\nTEXT:\tIf something chases the mouse and the mouse is red then it does not eat the bald eagle.\nFOL:\tall x. (Chase(x, Mouse) & Red(Mouse) -> -Eat(x, BaldEagle))\nTEXT:\tIf something is red then it does not eat the bald eagle.\nFOL:\tall x. (Red(x) -> -Eat(x, BaldEagle))\nTEXT:\tIf something is round and it needs the tiger then the tiger is round.\nFOL:\tall x. ((Round(x) & Need(x, Tiger)) -> Round(Tiger))\nTEXT:\tIf something needs the bald eagle then it is not red.\nFOL:\tall x. (Need(x, BaldEagle) -> -Red(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nFOL:\tall x. ((Need(x, BaldEagle) & Eat(BaldEagle, Tiger)) -> Eat(Tiger, Mouse))\nTEXT:\tIf something is round and it does not eat the mouse then it does not need the mouse.\nFOL:\tall x. ((Round(x) & -Eat(x, Mouse)) -> -Need(x, Mouse))\nTEXT:\tThe mouse does not chase the bear.\nFOL:\t-Chase(Mouse, Bear)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle does not need the mouse.\nFOL:\t-Need(BaldEagle, Mouse)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eat(Bear, BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEat(Bear, Tiger)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChase(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEat(Mouse, Bear)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEat(Tiger, Bear)\nTEXT:\tIf something is round then it chases the bear.\nFOL:\tall x. (Round(x) -> Chase(x, Bear))\nTEXT:\tIf something eats the bear and it does not need the bald eagle then it chases the bear.\nFOL:\tall x. (Eat(x, Bear) & -Need(x, BaldEagle) -> Chase(x, Bear))\nTEXT:\tIf something chases the bear then it needs the tiger.\nFOL:\tall x. (Chase(x, Bear) -> Need(x, Tiger))\nTEXT:\tIf something chases the mouse and the mouse is red then it does not eat the bald eagle.\nFOL:\tall x. (Chase(x, Mouse) & Red(Mouse) -> -Eat(x, BaldEagle))\nTEXT:\tIf something is red then it does not eat the bald eagle.\nFOL:\tall x. (Red(x) -> -Eat(x, BaldEagle))\nTEXT:\tIf something is round and it needs the tiger then the tiger is round.\nFOL:\tall x. (Round(x) & Need(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something needs the bald eagle then it is not red.\nFOL:\tall x. (Need(x, BaldEagle) -> -Red(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nFOL:\tall x. (Need(x, BaldEagle) & Eat(BaldEagle, Tiger) -> Eat(Tiger, Mouse))\nTEXT:\tIf something is round and it does not eat the mouse then it does not need the mouse.\nFOL:\tall x. (Round(x) & -Eat(x, Mouse) -> -Need(x, Mouse))\nTEXT:\tThe mouse does not chase the bear.\nFOL:\t-Chase(Mouse, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not need the mouse.\nFOL:\t-Needs(BaldEagle, Mouse)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t- Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tIf something is round then it chases the bear.\nFOL:\tall x. (Round(x) -> Chases(x, Bear))\nTEXT:\tIf something eats the bear and it does not need the bald eagle then it chases the bear.\nFOL:\tall x. (Eats(x, Bear) & -Needs(x, BaldEagle) -> Chases(x, Bear))\nTEXT:\tIf something chases the bear then it needs the tiger.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Tiger))\nTEXT:\tIf something chases the mouse and the mouse is red then it does not eat the bald eagle.\nFOL:\tall x. (Chases(x, Mouse) & Red(Mouse) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is red then it does not eat the bald eagle.\nFOL:\tall x. (Red(x) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is round and it needs the tiger then the tiger is round.\nFOL:\tall x. (Round(x) & Needs(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something needs the bald eagle then it is not red.\nFOL:\tall x. (Needs(x, BaldEagle) -> -Red(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nFOL:\tall x. (Needs(x, BaldEagle) & Eats(BaldEagle, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf something is round and it does not eat the mouse then it does not need the mouse.\nFOL:\tall x. (Round(x) & -Eats(x, Mouse) -> -Needs(x, Mouse))\nTEXT:\tThe mouse does not chase the bear.\nFOL:\t-Chases(Mouse, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not need the mouse.\nFOL:\t-Need(BaldEagle, Mouse)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eat(Bear, BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEat(Bear, Tiger)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChase(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEat(Mouse, Bear)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEat(Tiger, Bear)\nTEXT:\tIf something is round then it chases the bear.\nFOL:\tall x. (Round(x) -> Chase(x, Bear))\nTEXT:\tIf something eats the bear and it does not need the bald eagle then it chases the bear.\nFOL:\tall x. (Eat(x, Bear) & -Need(x, BaldEagle) -> Chase(x, Bear))\nTEXT:\tIf something chases the bear then it needs the tiger.\nFOL:\tall x. (Chase(x, Bear) -> Need(x, Tiger))\nTEXT:\tIf something chases the mouse and the mouse is red then it does not eat the bald eagle.\nFOL:\tall x. (Chase(x, Mouse) & Red(Mouse) -> -Eat(x, BaldEagle))\nTEXT:\tIf something is red then it does not eat the bald eagle.\nFOL:\tall x. (Red(x) -> -Eat(x, BaldEagle))\nTEXT:\tIf something is round and it needs the tiger then the tiger is round.\nFOL:\tall x. (Round(x) & Need(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something needs the bald eagle then it is not red.\nFOL:\tall x. (Need(x, BaldEagle) -> -Red(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nFOL:\tall x. (Need(x, BaldEagle) & Eat(BaldEagle, Tiger) -> Eat(Tiger, Mouse))\nTEXT:\tIf something is round and it does not eat the mouse then it does not need the mouse.\nFOL:\tall x. (Round(x) & -Eat(x, Mouse) -> -Need(x, Mouse))\nTEXT:\tThe mouse does not chase the bear.\nFOL:\t-Chase(Mouse, Bear)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is green then it is rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something is white and green then it is smart.\nFOL:\tall x. (White(x) & Green(x) -> Smart(x))\nTEXT:\tIf Anne is rough then Anne is green.\nFOL:\tRough(Anne) -> Green(Anne)\nTEXT:\tIf something is big then it is quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tIf something is nice and white then it is quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is big.\nFOL:\tall x. (Green(x) & Smart(x) -> Big(x))\nTEXT:\tIf something is quiet and rough then it is white.\nFOL:\tall x. (Quiet(x) & Rough(x) -> White(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is not nice.\nFOL:\t- Nice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is green then it is rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something is white and green then it is smart.\nFOL:\tall x. (White(x) & Green(x) -> Smart(x))\nTEXT:\tIf Anne is rough then Anne is green.\nFOL:\tRough(Anne) -> Green(Anne)\nTEXT:\tIf something is big then it is quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tIf something is nice and white then it is quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is big.\nFOL:\tall x. (Green(x) & Smart(x) -> Big(x))\nTEXT:\tIf something is quiet and rough then it is white.\nFOL:\tall x. (Quiet(x) & Rough(x) -> White(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is not nice.\nFOL:\t- Nice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is green then it is rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something is white and green then it is smart.\nFOL:\tall x. (White(x) & Green(x) -> Smart(x))\nTEXT:\tIf Anne is rough then Anne is green.\nFOL:\t(Rough(Anne) -> Green(Anne))\nTEXT:\tIf something is big then it is quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tIf something is nice and white then it is quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is big.\nFOL:\tall x. (Green(x) & Smart(x) -> Big(x))\nTEXT:\tIf something is quiet and rough then it is white.\nFOL:\tall x. (Quiet(x) & Rough(x) -> White(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is green then it is rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something is white and green then it is smart.\nFOL:\tall x. ((White(x) & Green(x)) -> Smart(x))\nTEXT:\tIf Anne is rough then Anne is green.\nFOL:\t(Rough(Anne) -> Green(Anne))\nTEXT:\tIf something is big then it is quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tIf something is nice and white then it is quiet.\nFOL:\tall x. ((Nice(x) & White(x)) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is big.\nFOL:\tall x. ((Green(x) & Smart(x)) -> Big(x))\nTEXT:\tIf something is quiet and rough then it is white.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> White(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is green then it is rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something is white and green then it is smart.\nFOL:\tall x. (White(x) & Green(x) -> Smart(x))\nTEXT:\tIf Anne is rough then Anne is green.\nFOL:\tRough(Anne) -> Green(Anne)\nTEXT:\tIf something is big then it is quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tIf something is nice and white then it is quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is big.\nFOL:\tall x. (Green(x) & Smart(x) -> Big(x))\nTEXT:\tIf something is quiet and rough then it is white.\nFOL:\tall x. (Quiet(x) & Rough(x) -> White(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf someone visits the mouse then they visit the lion.\nFOL:\tall x. (Visits(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone needs the lion then they visit the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger eats the mouse.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf someone eats the mouse and they are blue then they visit the tiger.\nFOL:\tall x. (Eats(x, Mouse) & Blue(x) -> Visits(x, Tiger))\nTEXT:\tIf someone eats the mouse and the mouse is round then they eat the lion.\nFOL:\tall x. (Eats(x, Mouse) & Round(Mouse) -> Eats(x, Lion))\nTEXT:\tIf someone visits the tiger and the tiger visits the mouse then they visit the dog.\nFOL:\tall x. (Visits(x, Tiger) & Visits(Tiger, Mouse) -> Visits(x, Dog))\nTEXT:\tIf someone is round and they need the lion then the lion is red.\nFOL:\tall x. (Round(x) & Needs(x, Lion) -> Red(Lion))\nTEXT:\tIf someone visits the lion then the lion visits the mouse.\nFOL:\tall x. (Visits(x, Lion) -> Visits(Lion, Mouse))\nTEXT:\tIf someone visits the dog then they need the lion.\nFOL:\tall x. (Visits(x, Dog) -> Needs(x, Lion))\nTEXT:\tThe mouse does not need the lion.\nFOL:\t-Needs(Mouse, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf someone visits the mouse then they visit the lion.\nFOL:\tall x. (Visits(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone needs the lion then they visit the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger eats the mouse.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf someone eats the mouse and they are blue then they visit the tiger.\nFOL:\tall x. ((Eats(x, Mouse) & Blue(x)) -> Visits(x, Tiger))\nTEXT:\tIf someone eats the mouse and the mouse is round then they eat the lion.\nFOL:\tall x. ((Eats(x, Mouse) & Round(Mouse)) -> Eats(x, Lion))\nTEXT:\tIf someone visits the tiger and the tiger visits the mouse then they visit the dog.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(Tiger, Mouse)) -> Visits(x, Dog))\nTEXT:\tIf someone is round and they need the lion then the lion is red.\nFOL:\tall x. ((Round(x) & Needs(x, Lion)) -> Red(Lion))\nTEXT:\tIf someone visits the lion then the lion visits the mouse.\nFOL:\tall x. (Visits(x, Lion) -> Visits(Lion, Mouse))\nTEXT:\tIf someone visits the dog then they need the lion.\nFOL:\tall x. (Visits(x, Dog) -> Needs(x, Lion))\nTEXT:\tThe mouse does not need the lion.\nFOL:\t-Needs(Mouse, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf someone visits the mouse then they visit the lion.\nFOL:\tall x. (Visits(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone needs the lion then they visit the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger eats the mouse.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf someone eats the mouse and they are blue then they visit the tiger.\nFOL:\tall x. (Eats(x, Mouse) & Blue(x) -> Visits(x, Tiger))\nTEXT:\tIf someone eats the mouse and the mouse is round then they eat the lion.\nFOL:\tall x. (Eats(x, Mouse) & Round(Mouse) -> Eats(x, Lion))\nTEXT:\tIf someone visits the tiger and the tiger visits the mouse then they visit the dog.\nFOL:\tall x. (Visits(x, Tiger) & Visits(Tiger, Mouse) -> Visits(x, Dog))\nTEXT:\tIf someone is round and they need the lion then the lion is red.\nFOL:\tall x. (Round(x) & Needs(x, Lion) -> Red(Lion))\nTEXT:\tIf someone visits the lion then the lion visits the mouse.\nFOL:\tall x. (Visits(x, Lion) -> Visits(Lion, Mouse))\nTEXT:\tIf someone visits the dog then they need the lion.\nFOL:\tall x. (Visits(x, Dog) -> Needs(x, Lion))\nTEXT:\tThe mouse does not need the lion.\nFOL:\t-Needs(Mouse, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf someone visits the mouse then they visit the lion.\nFOL:\tall x. (Visits(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone needs the lion then they visit the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger eats the mouse.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf someone eats the mouse and they are blue then they visit the tiger.\nFOL:\tall x. ((Eats(x, Mouse) & Blue(x)) -> Visits(x, Tiger))\nTEXT:\tIf someone eats the mouse and the mouse is round then they eat the lion.\nFOL:\tall x. ((Eats(x, Mouse) & Round(Mouse)) -> Eats(x, Lion))\nTEXT:\tIf someone visits the tiger and the tiger visits the mouse then they visit the dog.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(Tiger, Mouse)) -> Visits(x, Dog))\nTEXT:\tIf someone is round and they need the lion then the lion is red.\nFOL:\tall x. ((Round(x) & Needs(x, Lion)) -> Red(Lion))\nTEXT:\tIf someone visits the lion then the lion visits the mouse.\nFOL:\tall x. (Visits(x, Lion) -> Visits(Lion, Mouse))\nTEXT:\tIf someone visits the dog then they need the lion.\nFOL:\tall x. (Visits(x, Dog) -> Needs(x, Lion))\nTEXT:\tThe mouse does not need the lion.\nFOL:\t-Needs(Mouse, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf someone visits the mouse then they visit the lion.\nFOL:\tall x. (Visits(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone needs the lion then they visit the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger eats the mouse.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf someone eats the mouse and they are blue then they visit the tiger.\nFOL:\tall x. ((Eats(x, Mouse) & Blue(x)) -> Visits(x, Tiger))\nTEXT:\tIf someone eats the mouse and the mouse is round then they eat the lion.\nFOL:\tall x. ((Eats(x, Mouse) & Round(Mouse)) -> Eats(x, Lion))\nTEXT:\tIf someone visits the tiger and the tiger visits the mouse then they visit the dog.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(Tiger, Mouse)) -> Visits(x, Dog))\nTEXT:\tIf someone is round and they need the lion then the lion is red.\nFOL:\tall x. ((Round(x) & Needs(x, Lion)) -> Red(Lion))\nTEXT:\tIf someone visits the lion then the lion visits the mouse.\nFOL:\tall x. (Visits(x, Lion) -> Visits(Lion, Mouse))\nTEXT:\tIf someone visits the dog then they need the lion.\nFOL:\tall x. (Visits(x, Dog) -> Needs(x, Lion))\nTEXT:\tThe mouse does not need the lion.\nFOL:\t-Needs(Mouse, Lion)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nTEXT:\tIf Bob is rough then Bob is furry.\nFOL:\tRough(Bob) -> Furry(Bob)\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll big, furry people are not smart.\nFOL:\tall x. (Big(x) & Furry(x) -> -Smart(x))\nTEXT:\tIf someone is smart and rough then they are big.\nFOL:\tall x. (Smart(x) & Rough(x) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAll smart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and not rough then they are kind.\nFOL:\tall x. (Furry(x) & -Rough(x) -> Kind(x))\nTEXT:\tIf someone is rough and furry then they are white.\nFOL:\tall x. (Rough(x) & Furry(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nTEXT:\tIf Bob is rough then Bob is furry.\nFOL:\tRough(Bob) -> Furry(Bob)\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll big, furry people are not smart.\nFOL:\tall x. (Big(x) & Furry(x) -> -Smart(x))\nTEXT:\tIf someone is smart and rough then they are big.\nFOL:\tall x. (Smart(x) & Rough(x) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAll smart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and not rough then they are kind.\nFOL:\tall x. (Furry(x) & -Rough(x) -> Kind(x))\nTEXT:\tIf someone is rough and furry then they are white.\nFOL:\tall x. (Rough(x) & Furry(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nTEXT:\tIf Bob is rough then Bob is furry.\nFOL:\tRough(Bob) -> Furry(Bob)\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll big, furry people are not smart.\nFOL:\tall x. ((Big(x) & Furry(x)) -> -Smart(x))\nTEXT:\tIf someone is smart and rough then they are big.\nFOL:\tall x. ((Smart(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAll smart, young people are furry.\nFOL:\tall x. ((Smart(x) & Young(x)) -> Furry(x))\nTEXT:\tIf someone is furry and not rough then they are kind.\nFOL:\tall x. ((Furry(x) & -Rough(x)) -> Kind(x))\nTEXT:\tIf someone is rough and furry then they are white.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nTEXT:\tIf Bob is rough then Bob is furry.\nFOL:\tRough(Bob) -> Furry(Bob)\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll big, furry people are not smart.\nFOL:\tall x. (Big(x) & Furry(x) -> -Smart(x))\nTEXT:\tIf someone is smart and rough then they are big.\nFOL:\tall x. (Smart(x) & Rough(x) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAll smart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and not rough then they are kind.\nFOL:\tall x. (Furry(x) & -Rough(x) -> Kind(x))\nTEXT:\tIf someone is rough and furry then they are white.\nFOL:\tall x. (Rough(x) & Furry(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nTEXT:\tIf Bob is rough then Bob is furry.\nFOL:\tRough(Bob) -> Furry(Bob)\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll big, furry people are not smart.\nFOL:\tall x. ((Big(x) & Furry(x)) -> -Smart(x))\nTEXT:\tIf someone is smart and rough then they are big.\nFOL:\tall x. ((Smart(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAll smart, young people are furry.\nFOL:\tall x. ((Smart(x) & Young(x)) -> Furry(x))\nTEXT:\tIf someone is furry and not rough then they are kind.\nFOL:\tall x. ((Furry(x) & -Rough(x)) -> Kind(x))\nTEXT:\tIf someone is rough and furry then they are white.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear does not chase the cat.\nFOL:\t-Chase(Bear, Cat)\nTEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is not nice.\nFOL:\t-Nice(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tIf someone is kind and they see the dog then the dog chases the cow.\nFOL:\tall x. ((Kind(x) & Sees(x, Dog)) -> Chase(Dog, Cow))\nTEXT:\tIf someone eats the bear and the bear chases the dog then the dog eats the cow.\nFOL:\tall x. ((Eats(x, Bear) & Chase(Bear, Dog)) -> Eats(Dog, Cow))\nTEXT:\tIf someone sees the bear then they see the cow.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cow))\nTEXT:\tIf someone sees the cat and the cat sees the bear then they eat the dog.\nFOL:\tall x. ((Sees(x, Cat) & Sees(Cat, Bear)) -> Eats(x, Dog))\nTEXT:\tIf someone is nice and they eat the cow then the cow does not chase the cat.\nFOL:\tall x. ((Nice(x) & Eats(x, Cow)) -> -Chase(Cow, Cat))\nTEXT:\tIf someone sees the cow then they see the cat.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Cat))\nTEXT:\tIf someone is green then they see the bear.\nFOL:\tall x. (Green(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the dog then they are red.\nFOL:\tall x. (Eats(x, Dog) -> Red(x))\nTEXT:\tThe dog is not red.\nFOL:\t-Red(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not chase the cat.\nFOL:\t-Chase(Bear, Cat)\nTEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is not nice.\nFOL:\t-Nice(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tIf someone is kind and they see the dog then the dog chases the cow.\nFOL:\tall x. (Kind(x) & Sees(x, Dog) -> Chase(Dog, Cow))\nTEXT:\tIf someone eats the bear and the bear chases the dog then the dog eats the cow.\nFOL:\tall x. (Eats(x, Bear) & Chase(Bear, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf someone sees the bear then they see the cow.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cow))\nTEXT:\tIf someone sees the cat and the cat sees the bear then they eat the dog.\nFOL:\tall x. (Sees(x, Cat) & Sees(Cat, Bear) -> Eats(x, Dog))\nTEXT:\tIf someone is nice and they eat the cow then the cow does not chase the cat.\nFOL:\tall x. (Nice(x) & Eats(x, Cow) -> -Chase(Cow, Cat))\nTEXT:\tIf someone sees the cow then they see the cat.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Cat))\nTEXT:\tIf someone is green then they see the bear.\nFOL:\tall x. (Green(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the dog then they are red.\nFOL:\tall x. (Eats(x, Dog) -> Red(x))\nTEXT:\tThe dog is not red.\nFOL:\t-Red(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not chase the cat.\nFOL:\t-Chase(Bear, Cat)\nTEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is not nice.\nFOL:\t-Nice(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tIf someone is kind and they see the dog then the dog chases the cow.\nFOL:\tall x. ((Kind(x) & Sees(x, Dog)) -> Chases(Dog, Cow))\nTEXT:\tIf someone eats the bear and the bear chases the dog then the dog eats the cow.\nFOL:\tall x. ((Eats(x, Bear) & Chases(Bear, Dog)) -> Eats(Dog, Cow))\nTEXT:\tIf someone sees the bear then they see the cow.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cow))\nTEXT:\tIf someone sees the cat and the cat sees the bear then they eat the dog.\nFOL:\tall x. ((Sees(x, Cat) & Sees(Cat, Bear)) -> Eats(x, Dog))\nTEXT:\tIf someone is nice and they eat the cow then the cow does not chase the cat.\nFOL:\tall x. ((Nice(x) & Eats(x, Cow)) -> -Chases(Cow, Cat))\nTEXT:\tIf someone sees the cow then they see the cat.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Cat))\nTEXT:\tIf someone is green then they see the bear.\nFOL:\tall x. (Green(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the dog then they are red.\nFOL:\tall x. (Eats(x, Dog) -> Red(x))\nTEXT:\tThe dog is not red.\nFOL:\t-Red(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not chase the cat.\nFOL:\t-Chase(Bear, Cat)\nTEXT:\tThe bear eats the cat.\nFOL:\tEat(Bear, Cat)\nTEXT:\tThe bear eats the cow.\nFOL:\tEat(Bear, Cow)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is not nice.\nFOL:\t-Nice(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSee(Bear, Dog)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSee(Cat, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEat(Cow, Dog)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tIf someone is kind and they see the dog then the dog chases the cow.\nFOL:\tall x. ((Kind(x) & See(x, Dog)) -> Chase(Dog, Cow))\nTEXT:\tIf someone eats the bear and the bear chases the dog then the dog eats the cow.\nFOL:\tall x. ((Eat(x, Bear) & Chase(Bear, Dog)) -> Eat(Dog, Cow))\nTEXT:\tIf someone sees the bear then they see the cow.\nFOL:\tall x. (See(x, Bear) -> See(x, Cow))\nTEXT:\tIf someone sees the cat and the cat sees the bear then they eat the dog.\nFOL:\tall x. ((See(x, Cat) & See(Cat, Bear)) -> Eat(x, Dog))\nTEXT:\tIf someone is nice and they eat the cow then the cow does not chase the cat.\nFOL:\tall x. ((Nice(x) & Eat(x, Cow)) -> -Chase(Cow, Cat))\nTEXT:\tIf someone sees the cow then they see the cat.\nFOL:\tall x. (See(x, Cow) -> See(x, Cat))\nTEXT:\tIf someone is green then they see the bear.\nFOL:\tall x. (Green(x) -> See(x, Bear))\nTEXT:\tIf someone eats the dog then they are red.\nFOL:\tall x. (Eat(x, Dog) -> Red(x))\nTEXT:\tThe dog is not red.\nFOL:\t-Red(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not chase the cat.\nFOL:\t-Chase(Bear, Cat)\nTEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is not nice.\nFOL:\t-Nice(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tIf someone is kind and they see the dog then the dog chases the cow.\nFOL:\tall x. (Kind(x) & Sees(x, Dog) -> Chase(Dog, Cow))\nTEXT:\tIf someone eats the bear and the bear chases the dog then the dog eats the cow.\nFOL:\tall x. (Eats(x, Bear) & Chase(Bear, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf someone sees the bear then they see the cow.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cow))\nTEXT:\tIf someone sees the cat and the cat sees the bear then they eat the dog.\nFOL:\tall x. (Sees(x, Cat) & Sees(Cat, Bear) -> Eats(x, Dog))\nTEXT:\tIf someone is nice and they eat the cow then the cow does not chase the cat.\nFOL:\tall x. (Nice(x) & Eats(x, Cow) -> -Chase(Cow, Cat))\nTEXT:\tIf someone sees the cow then they see the cat.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Cat))\nTEXT:\tIf someone is green then they see the bear.\nFOL:\tall x. (Green(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the dog then they are red.\nFOL:\tall x. (Eats(x, Dog) -> Red(x))\nTEXT:\tThe dog is not red.\nFOL:\t-Red(Dog)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf Dave is big then Dave is kind.\nFOL:\tBig(Dave) -> Kind(Dave)\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tAll kind, young things are smart.\nFOL:\tall x. (Kind(x) & Young(x) -> Smart(x))\nTEXT:\tKind, green things are round.\nFOL:\tall x. (Kind(x) & Green(x) -> Round(x))\nTEXT:\tYoung, round things are green.\nFOL:\tall x. (Young(x) & Round(x) -> Green(x))\nTEXT:\tIf Harry is young and Harry is cold then Harry is green.\nFOL:\tYoung(Harry) & Cold(Harry) -> Green(Harry)\nTEXT:\tYoung, green things are kind.\nFOL:\tall x. (Young(x) & Green(x) -> Kind(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf Dave is big then Dave is kind.\nFOL:\tBig(Dave) -> Kind(Dave)\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tAll kind, young things are smart.\nFOL:\tall x. (Kind(x) & Young(x) -> Smart(x))\nTEXT:\tKind, green things are round.\nFOL:\tall x. (Kind(x) & Green(x) -> Round(x))\nTEXT:\tYoung, round things are green.\nFOL:\tall x. (Young(x) & Round(x) -> Green(x))\nTEXT:\tIf Harry is young and Harry is cold then Harry is green.\nFOL:\tYoung(Harry) & Cold(Harry) -> Green(Harry)\nTEXT:\tYoung, green things are kind.\nFOL:\tall x. (Young(x) & Green(x) -> Kind(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf Dave is big then Dave is kind.\nFOL:\tBig(Dave) -> Kind(Dave)\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tAll kind, young things are smart.\nFOL:\tall x. (Kind(x) & Young(x) -> Smart(x))\nTEXT:\tKind, green things are round.\nFOL:\tall x. (Kind(x) & Green(x) -> Round(x))\nTEXT:\tYoung, round things are green.\nFOL:\tall x. (Young(x) & Round(x) -> Green(x))\nTEXT:\tIf Harry is young and Harry is cold then Harry is green.\nFOL:\t(Young(Harry) & Cold(Harry)) -> Green(Harry)\nTEXT:\tYoung, green things are kind.\nFOL:\tall x. (Young(x) & Green(x) -> Kind(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf Dave is big then Dave is kind.\nFOL:\tBig(Dave) -> Kind(Dave)\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Big(x))\nTEXT:\tAll kind, young things are smart.\nFOL:\tall x. ((Kind(x) & Young(x)) -> Smart(x))\nTEXT:\tKind, green things are round.\nFOL:\tall x. ((Kind(x) & Green(x)) -> Round(x))\nTEXT:\tYoung, round things are green.\nFOL:\tall x. ((Young(x) & Round(x)) -> Green(x))\nTEXT:\tIf Harry is young and Harry is cold then Harry is green.\nFOL:\t(Young(Harry) & Cold(Harry)) -> Green(Harry)\nTEXT:\tYoung, green things are kind.\nFOL:\tall x. ((Young(x) & Green(x)) -> Kind(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf Dave is big then Dave is kind.\nFOL:\tBig(Dave) -> Kind(Dave)\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tAll kind, young things are smart.\nFOL:\tall x. (Kind(x) & Young(x) -> Smart(x))\nTEXT:\tKind, green things are round.\nFOL:\tall x. (Kind(x) & Green(x) -> Round(x))\nTEXT:\tYoung, round things are green.\nFOL:\tall x. (Young(x) & Round(x) -> Green(x))\nTEXT:\tIf Harry is young and Harry is cold then Harry is green.\nFOL:\t(Young(Harry) & Cold(Harry)) -> Green(Harry)\nTEXT:\tYoung, green things are kind.\nFOL:\tall x. (Young(x) & Green(x) -> Kind(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf Harry is young then Harry is red.\nFOL:\tYoung(Harry) -> Red(Harry)\nTEXT:\tIf something is young then it is smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tCold, young things are round.\nFOL:\tall x. ((Cold(x) & Young(x)) -> Round(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tSmart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf Harry is young then Harry is red.\nFOL:\tYoung(Harry) -> Red(Harry)\nTEXT:\tIf something is young then it is smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tCold, young things are round.\nFOL:\tall x. (Cold(x) & Young(x) -> Round(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tSmart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf Harry is young then Harry is red.\nFOL:\tYoung(Harry) -> Red(Harry)\nTEXT:\tIf something is young then it is smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tCold, young things are round.\nFOL:\tall x. ((Cold(x) & Young(x)) -> Round(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tSmart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf Harry is young then Harry is red.\nFOL:\tYoung(Harry) -> Red(Harry)\nTEXT:\tIf something is young then it is smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tCold, young things are round.\nFOL:\tall x. ((Cold(x) & Young(x)) -> Round(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tSmart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf Harry is young then Harry is red.\nFOL:\tYoung(Harry) -> Red(Harry)\nTEXT:\tIf something is young then it is smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tCold, young things are round.\nFOL:\tall x. (Cold(x) & Young(x) -> Round(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tSmart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe lion chases the rabbit.\nFOL:\tChases(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe lion does not visit the dog.\nFOL:\t-Visits(Lion, Dog)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone visits the lion then they are not round.\nFOL:\tall x. (Visits(x, Lion) -> -Round(x))\nTEXT:\tIf someone visits the tiger then they are nice.\nFOL:\tall x. (Visits(x, Tiger) -> Nice(x))\nTEXT:\tIf someone sees the tiger and the tiger does not visit the rabbit then they are not nice.\nFOL:\tall x. (Sees(x, Tiger) & -Visits(Tiger, Rabbit) -> -Nice(x))\nTEXT:\tIf someone visits the dog then the dog is not cold.\nFOL:\tall x. (Visits(x, Dog) -> -Cold(Dog))\nTEXT:\tIf someone is cold and red then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> -Chases(x, Tiger))\nTEXT:\tIf someone is cold then they visit the lion.\nFOL:\tall x. (Cold(x) -> Visits(x, Lion))\nTEXT:\tIf someone is nice then they are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone sees the lion then the lion visits the tiger.\nFOL:\tall x. (Sees(x, Lion) -> Visits(Lion, Tiger))\nTEXT:\tIf someone chases the rabbit then they chase the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> Chases(x, Dog))\nTEXT:\tThe lion visits the lion.\nFOL:\tVisits(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe lion chases the rabbit.\nFOL:\tChases(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe lion does not visit the dog.\nFOL:\t-Visits(Lion, Dog)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone visits the lion then they are not round.\nFOL:\tall x. (Visits(x, Lion) -> -Round(x))\nTEXT:\tIf someone visits the tiger then they are nice.\nFOL:\tall x. (Visits(x, Tiger) -> Nice(x))\nTEXT:\tIf someone sees the tiger and the tiger does not visit the rabbit then they are not nice.\nFOL:\tall x. (Sees(x, Tiger) & -Visits(Tiger, Rabbit) -> -Nice(x))\nTEXT:\tIf someone visits the dog then the dog is not cold.\nFOL:\tall x. (Visits(x, Dog) -> -Cold(Dog))\nTEXT:\tIf someone is cold and red then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> -Chases(x, Tiger))\nTEXT:\tIf someone is cold then they visit the lion.\nFOL:\tall x. (Cold(x) -> Visits(x, Lion))\nTEXT:\tIf someone is nice then they are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone sees the lion then the lion visits the tiger.\nFOL:\tall x. (Sees(x, Lion) -> Visits(Lion, Tiger))\nTEXT:\tIf someone chases the rabbit then they chase the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> Chases(x, Dog))\nTEXT:\tThe lion visits the lion.\nFOL:\tVisits(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe lion chases the rabbit.\nFOL:\tChases(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe lion does not visit the dog.\nFOL:\t-Visit(Lion, Dog)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisit(Tiger, Dog)\nTEXT:\tIf someone visits the lion then they are not round.\nFOL:\tall x. (Visits(x, Lion) -> -Round(x))\nTEXT:\tIf someone visits the tiger then they are nice.\nFOL:\tall x. (Visits(x, Tiger) -> Nice(x))\nTEXT:\tIf someone sees the tiger and the tiger does not visit the rabbit then they are not nice.\nFOL:\tall x. (Sees(x, Tiger) & -Visit(Tiger, Rabbit) -> -Nice(x))\nTEXT:\tIf someone visits the dog then the dog is not cold.\nFOL:\tall x. (Visits(x, Dog) -> -Cold(Dog))\nTEXT:\tIf someone is cold and red then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> -Chase(x, Tiger))\nTEXT:\tIf someone is cold then they visit the lion.\nFOL:\tall x. (Cold(x) -> Visit(x, Lion))\nTEXT:\tIf someone is nice then they are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone sees the lion then the lion visits the tiger.\nFOL:\tall x. (Sees(x, Lion) -> Visit(Lion, Tiger))\nTEXT:\tIf someone chases the rabbit then they chase the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> Chase(x, Dog))\nTEXT:\tThe lion visits the lion.\nFOL:\tVisit(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe lion chases the rabbit.\nFOL:\tChases(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe lion does not visit the dog.\nFOL:\t-Visit(Lion, Dog)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisit(Tiger, Dog)\nTEXT:\tIf someone visits the lion then they are not round.\nFOL:\tall x. (Visit(x, Lion) -> -Round(x))\nTEXT:\tIf someone visits the tiger then they are nice.\nFOL:\tall x. (Visit(x, Tiger) -> Nice(x))\nTEXT:\tIf someone sees the tiger and the tiger does not visit the rabbit then they are not nice.\nFOL:\tall x. (Sees(x, Tiger) & -Visit(Tiger, Rabbit) -> -Nice(x))\nTEXT:\tIf someone visits the dog then the dog is not cold.\nFOL:\tall x. (Visit(x, Dog) -> -Cold(Dog))\nTEXT:\tIf someone is cold and red then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> -Chase(x, Tiger))\nTEXT:\tIf someone is cold then they visit the lion.\nFOL:\tall x. (Cold(x) -> Visit(x, Lion))\nTEXT:\tIf someone is nice then they are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone sees the lion then the lion visits the tiger.\nFOL:\tall x. (Sees(x, Lion) -> Visit(Lion, Tiger))\nTEXT:\tIf someone chases the rabbit then they chase the dog.\nFOL:\tall x. (Chase(x, Rabbit) -> Chase(x, Dog))\nTEXT:\tThe lion visits the lion.\nFOL:\tVisit(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe lion chases the rabbit.\nFOL:\tChases(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe lion does not visit the dog.\nFOL:\t\u00acVisits(Lion, Dog)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone visits the lion then they are not round.\nFOL:\tall x. (Visits(x, Lion) -> \u00acRound(x))\nTEXT:\tIf someone visits the tiger then they are nice.\nFOL:\tall x. (Visits(x, Tiger) -> Nice(x))\nTEXT:\tIf someone sees the tiger and the tiger does not visit the rabbit then they are not nice.\nFOL:\tall x. ((Sees(x, Tiger) & \u00acVisits(Tiger, Rabbit)) -> \u00acNice(x))\nTEXT:\tIf someone visits the dog then the dog is not cold.\nFOL:\tall x. (Visits(x, Dog) -> \u00acCold(Dog))\nTEXT:\tIf someone is cold and red then they do not chase the tiger.\nFOL:\tall x. ((Cold(x) & Red(x)) -> \u00acChases(x, Tiger))\nTEXT:\tIf someone is cold then they visit the lion.\nFOL:\tall x. (Cold(x) -> Visits(x, Lion))\nTEXT:\tIf someone is nice then they are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone sees the lion then the lion visits the tiger.\nFOL:\tall x. (Sees(x, Lion) -> Visits(Lion, Tiger))\nTEXT:\tIf someone chases the rabbit then they chase the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> Chases(x, Dog))\nTEXT:\tThe lion visits the lion.\nFOL:\tVisits(Lion, Lion)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the bear then it is cold.\nFOL:\tall x. (Sees(x, Bear) -> Cold(x))\nTEXT:\tIf something eats the rabbit then the rabbit is round.\nFOL:\tall x. (Eats(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then the cow eats the bear.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something sees the bear and it chases the dog then the dog eats the bear.\nFOL:\tall x. (Sees(x, Bear) & Chases(x, Dog) -> Eats(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then it is big.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Big(x))\nTEXT:\tIf something sees the dog and the dog eats the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Dog) & Eats(Dog, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something chases the bear then it eats the bear.\nFOL:\tall x. (Chases(x, Bear) -> Eats(x, Bear))\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the bear then it is cold.\nFOL:\tall x. (Sees(x, Bear) -> Cold(x))\nTEXT:\tIf something eats the rabbit then the rabbit is round.\nFOL:\tall x. (Eats(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then the cow eats the bear.\nFOL:\tall x. ((Sees(x, Rabbit) & Chases(Rabbit, Cow)) -> Eats(Cow, Bear))\nTEXT:\tIf something sees the bear and it chases the dog then the dog eats the bear.\nFOL:\tall x. ((Sees(x, Bear) & Chases(x, Dog)) -> Eats(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then it is big.\nFOL:\tall x. ((Sees(x, Rabbit) & Chases(Rabbit, Cow)) -> Big(x))\nTEXT:\tIf something sees the dog and the dog eats the rabbit then the rabbit is round.\nFOL:\tall x. ((Sees(x, Dog) & Eats(Dog, Rabbit)) -> Round(Rabbit))\nTEXT:\tIf something chases the bear then it eats the bear.\nFOL:\tall x. (Chases(x, Bear) -> Eats(x, Bear))\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bear chases the cow.\nFOL:\tChase(Bear, Cow)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEat(Bear, Rabbit)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the cow.\nFOL:\tSee(Bear, Cow)\nTEXT:\tThe bear sees the dog.\nFOL:\tSee(Bear, Dog)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEat(Cow, Rabbit)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChase(Dog, Rabbit)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEat(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChase(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChase(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the bear then it is cold.\nFOL:\tall x. (See(x, Bear) -> Cold(x))\nTEXT:\tIf something eats the rabbit then the rabbit is round.\nFOL:\tall x. (Eat(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then the cow eats the bear.\nFOL:\tall x. ((See(x, Rabbit) & Chase(Rabbit, Cow)) -> Eat(Cow, Bear))\nTEXT:\tIf something sees the bear and it chases the dog then the dog eats the bear.\nFOL:\tall x. ((See(x, Bear) & Chase(x, Dog)) -> Eat(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the rabbit.\nFOL:\tall x. (Eat(x, Bear) -> See(x, Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then it is big.\nFOL:\tall x. ((See(x, Rabbit) & Chase(Rabbit, Cow)) -> Big(x))\nTEXT:\tIf something sees the dog and the dog eats the rabbit then the rabbit is round.\nFOL:\tall x. ((See(x, Dog) & Eat(Dog, Rabbit)) -> Round(Rabbit))\nTEXT:\tIf something chases the bear then it eats the bear.\nFOL:\tall x. (Chase(x, Bear) -> Eat(x, Bear))\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSee(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the bear then it is cold.\nFOL:\tall x. (Sees(x, Bear) -> Cold(x))\nTEXT:\tIf something eats the rabbit then the rabbit is round.\nFOL:\tall x. (Eats(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then the cow eats the bear.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something sees the bear and it chases the dog then the dog eats the bear.\nFOL:\tall x. (Sees(x, Bear) & Chases(x, Dog) -> Eats(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then it is big.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Big(x))\nTEXT:\tIf something sees the dog and the dog eats the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Dog) & Eats(Dog, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something chases the bear then it eats the bear.\nFOL:\tall x. (Chases(x, Bear) -> Eats(x, Bear))\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the bear then it is cold.\nFOL:\tall x. (Sees(x, Bear) -> Cold(x))\nTEXT:\tIf something eats the rabbit then the rabbit is round.\nFOL:\tall x. (Eats(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then the cow eats the bear.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something sees the bear and it chases the dog then the dog eats the bear.\nFOL:\tall x. (Sees(x, Bear) & Chases(x, Dog) -> Eats(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then it is big.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Big(x))\nTEXT:\tIf something sees the dog and the dog eats the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Dog) & Eats(Dog, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something chases the bear then it eats the bear.\nFOL:\tall x. (Chases(x, Bear) -> Eats(x, Bear))\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue, nice things are white.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> White(x))\nTEXT:\tIf Charlie is round and Charlie is rough then Charlie is young.\nFOL:\t(Round(Charlie) & Rough(Charlie)) -> Young(Charlie)\nTEXT:\tAll nice, white things are rough.\nFOL:\tall x. ((Nice(x) & White(x)) -> Rough(x))\nTEXT:\tRound things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something is young then it is red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tAll rough, blue things are round.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Round(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Charlie is red then Charlie is blue.\nFOL:\tRed(Charlie) -> Blue(Charlie)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue, nice things are white.\nFOL:\tall x. (Blue(x) & Nice(x) -> White(x))\nTEXT:\tIf Charlie is round and Charlie is rough then Charlie is young.\nFOL:\t(Round(Charlie) & Rough(Charlie)) -> Young(Charlie)\nTEXT:\tAll nice, white things are rough.\nFOL:\tall x. (Nice(x) & White(x) -> Rough(x))\nTEXT:\tRound things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something is young then it is red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tAll rough, blue things are round.\nFOL:\tall x. (Rough(x) & Blue(x) -> Round(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Charlie is red then Charlie is blue.\nFOL:\tRed(Charlie) -> Blue(Charlie)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue, nice things are white.\nFOL:\tall x. (Blue(x) & Nice(x) -> White(x))\nTEXT:\tIf Charlie is round and Charlie is rough then Charlie is young.\nFOL:\t(Round(Charlie) & Rough(Charlie)) -> Young(Charlie)\nTEXT:\tAll nice, white things are rough.\nFOL:\tall x. (Nice(x) & White(x) -> Rough(x))\nTEXT:\tRound things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something is young then it is red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tAll rough, blue things are round.\nFOL:\tall x. (Rough(x) & Blue(x) -> Round(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Charlie is red then Charlie is blue.\nFOL:\tRed(Charlie) -> Blue(Charlie)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue, nice things are white.\nFOL:\tall x. (Blue(x) & Nice(x) -> White(x))\nTEXT:\tIf Charlie is round and Charlie is rough then Charlie is young.\nFOL:\t(Round(Charlie) & Rough(Charlie) -> Young(Charlie))\nTEXT:\tAll nice, white things are rough.\nFOL:\tall x. (Nice(x) & White(x) -> Rough(x))\nTEXT:\tRound things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something is young then it is red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tAll rough, blue things are round.\nFOL:\tall x. (Rough(x) & Blue(x) -> Round(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Charlie is red then Charlie is blue.\nFOL:\t(Red(Charlie) -> Blue(Charlie))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue, nice things are white.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> White(x))\nTEXT:\tIf Charlie is round and Charlie is rough then Charlie is young.\nFOL:\t((Round(Charlie) & Rough(Charlie)) -> Young(Charlie))\nTEXT:\tAll nice, white things are rough.\nFOL:\tall x. ((Nice(x) & White(x)) -> Rough(x))\nTEXT:\tRound things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something is young then it is red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tAll rough, blue things are round.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Round(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Charlie is red then Charlie is blue.\nFOL:\t(Red(Charlie) -> Blue(Charlie))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll quiet, round people are young.\nFOL:\tall x. (Quiet(x) & Round(x) -> Young(x))\nTEXT:\tAll young, blue people are rough.\nFOL:\tall x. (Young(x) & Blue(x) -> Rough(x))\nTEXT:\tAll round, big people are young.\nFOL:\tall x. (Round(x) & Big(x) -> Young(x))\nTEXT:\tBlue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf someone is quiet and big then they are round.\nFOL:\tall x. (Quiet(x) & Big(x) -> Round(x))\nTEXT:\tIf Charlie is nice and Charlie is big then Charlie is blue.\nFOL:\t(Nice(Charlie) & Big(Charlie) -> Blue(Charlie))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll quiet, round people are young.\nFOL:\tall x. (Quiet(x) & Round(x) -> Young(x))\nTEXT:\tAll young, blue people are rough.\nFOL:\tall x. (Young(x) & Blue(x) -> Rough(x))\nTEXT:\tAll round, big people are young.\nFOL:\tall x. (Round(x) & Big(x) -> Young(x))\nTEXT:\tBlue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf someone is quiet and big then they are round.\nFOL:\tall x. (Quiet(x) & Big(x) -> Round(x))\nTEXT:\tIf Charlie is nice and Charlie is big then Charlie is blue.\nFOL:\t(Nice(Charlie) & Big(Charlie) -> Blue(Charlie))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll quiet, round people are young.\nFOL:\tall x. (Quiet(x) & Round(x) -> Young(x))\nTEXT:\tAll young, blue people are rough.\nFOL:\tall x. (Young(x) & Blue(x) -> Rough(x))\nTEXT:\tAll round, big people are young.\nFOL:\tall x. (Round(x) & Big(x) -> Young(x))\nTEXT:\tBlue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf someone is quiet and big then they are round.\nFOL:\tall x. (Quiet(x) & Big(x) -> Round(x))\nTEXT:\tIf Charlie is nice and Charlie is big then Charlie is blue.\nFOL:\t(Nice(Charlie) & Big(Charlie)) -> Blue(Charlie)\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll quiet, round people are young.\nFOL:\tall x. (Quiet(x) & Round(x) -> Young(x))\nTEXT:\tAll young, blue people are rough.\nFOL:\tall x. (Young(x) & Blue(x) -> Rough(x))\nTEXT:\tAll round, big people are young.\nFOL:\tall x. (Round(x) & Big(x) -> Young(x))\nTEXT:\tBlue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf someone is quiet and big then they are round.\nFOL:\tall x. (Quiet(x) & Big(x) -> Round(x))\nTEXT:\tIf Charlie is nice and Charlie is big then Charlie is blue.\nFOL:\t(Nice(Charlie) & Big(Charlie)) -> Blue(Charlie)\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll quiet, round people are young.\nFOL:\tall x. (Quiet(x) & Round(x) -> Young(x))\nTEXT:\tAll young, blue people are rough.\nFOL:\tall x. (Young(x) & Blue(x) -> Rough(x))\nTEXT:\tAll round, big people are young.\nFOL:\tall x. (Round(x) & Big(x) -> Young(x))\nTEXT:\tBlue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf someone is quiet and big then they are round.\nFOL:\tall x. (Quiet(x) & Big(x) -> Round(x))\nTEXT:\tIf Charlie is nice and Charlie is big then Charlie is blue.\nFOL:\t(Nice(Charlie) & Big(Charlie) -> Blue(Charlie))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the tiger.\nFOL:\t-Needs(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the bear.\nFOL:\tVisits(Mouse, Bear)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the mouse.\nFOL:\t-Needs(Tiger, Mouse)\nTEXT:\tIf someone is rough then they are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf someone needs the bear then they need the mouse.\nFOL:\tall x. (Needs(x, Bear) -> Needs(x, Mouse))\nTEXT:\tIf someone is kind then they need the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the bear then they are rough.\nFOL:\tall x. (Sees(x, Bear) -> Rough(x))\nTEXT:\tIf someone visits the mouse then they see the bear.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(x, Bear))\nTEXT:\tIf someone is kind then they visit the mouse.\nFOL:\tall x. (Kind(x) -> Visits(x, Mouse))\nTEXT:\tIf someone needs the bear then they are kind.\nFOL:\tall x. (Needs(x, Bear) -> Kind(x))\nTEXT:\tIf someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nFOL:\tall x. (Sees(x, Bear) & -Visits(Bear, Cat) -> -Needs(Bear, Mouse))\nTEXT:\tIf someone visits the cat then the cat visits the bear.\nFOL:\tall x. (Visits(x, Cat) -> Visits(Cat, Bear))\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the tiger.\nFOL:\t-Needs(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the bear.\nFOL:\tVisits(Mouse, Bear)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the mouse.\nFOL:\t-Needs(Tiger, Mouse)\nTEXT:\tIf someone is rough then they are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf someone needs the bear then they need the mouse.\nFOL:\tall x. (Needs(x, Bear) -> Needs(x, Mouse))\nTEXT:\tIf someone is kind then they need the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the bear then they are rough.\nFOL:\tall x. (Sees(x, Bear) -> Rough(x))\nTEXT:\tIf someone visits the mouse then they see the bear.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(x, Bear))\nTEXT:\tIf someone is kind then they visit the mouse.\nFOL:\tall x. (Kind(x) -> Visits(x, Mouse))\nTEXT:\tIf someone needs the bear then they are kind.\nFOL:\tall x. (Needs(x, Bear) -> Kind(x))\nTEXT:\tIf someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nFOL:\tall x. (Sees(x, Bear) & -Visits(Bear, Cat) -> -Needs(Bear, Mouse))\nTEXT:\tIf someone visits the cat then the cat visits the bear.\nFOL:\tall x. (Visits(x, Cat) -> Visits(Cat, Bear))\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the tiger.\nFOL:\t-Needs(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the bear.\nFOL:\tVisits(Mouse, Bear)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the mouse.\nFOL:\t-Needs(Tiger, Mouse)\nTEXT:\tIf someone is rough then they are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf someone needs the bear then they need the mouse.\nFOL:\tall x. (Needs(x, Bear) -> Needs(x, Mouse))\nTEXT:\tIf someone is kind then they need the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the bear then they are rough.\nFOL:\tall x. (Sees(x, Bear) -> Rough(x))\nTEXT:\tIf someone visits the mouse then they see the bear.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(x, Bear))\nTEXT:\tIf someone is kind then they visit the mouse.\nFOL:\tall x. (Kind(x) -> Visits(x, Mouse))\nTEXT:\tIf someone needs the bear then they are kind.\nFOL:\tall x. (Needs(x, Bear) -> Kind(x))\nTEXT:\tIf someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nFOL:\tall x. (Sees(x, Bear) & -Visits(Bear, Cat) -> -Needs(Bear, Mouse))\nTEXT:\tIf someone visits the cat then the cat visits the bear.\nFOL:\tall x. (Visits(x, Cat) -> Visits(Cat, Bear))\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the tiger.\nFOL:\t-Needs(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the bear.\nFOL:\tVisits(Mouse, Bear)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the mouse.\nFOL:\t-Needs(Tiger, Mouse)\nTEXT:\tIf someone is rough then they are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf someone needs the bear then they need the mouse.\nFOL:\tall x. (Needs(x, Bear) -> Needs(x, Mouse))\nTEXT:\tIf someone is kind then they need the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the bear then they are rough.\nFOL:\tall x. (Sees(x, Bear) -> Rough(x))\nTEXT:\tIf someone visits the mouse then they see the bear.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(x, Bear))\nTEXT:\tIf someone is kind then they visit the mouse.\nFOL:\tall x. (Kind(x) -> Visits(x, Mouse))\nTEXT:\tIf someone needs the bear then they are kind.\nFOL:\tall x. (Needs(x, Bear) -> Kind(x))\nTEXT:\tIf someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nFOL:\tall x. (Sees(x, Bear) & -Visits(Bear, Cat) -> -Needs(Bear, Mouse))\nTEXT:\tIf someone visits the cat then the cat visits the bear.\nFOL:\tall x. (Visits(x, Cat) -> Visits(Cat, Bear))\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nANSWER:\tFalse", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the tiger.\nFOL:\t-Needs(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the bear.\nFOL:\tVisits(Mouse, Bear)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the mouse.\nFOL:\t-Needs(Tiger, Mouse)\nTEXT:\tIf someone is rough then they are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf someone needs the bear then they need the mouse.\nFOL:\tall x. (Needs(x, Bear) -> Needs(x, Mouse))\nTEXT:\tIf someone is kind then they need the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the bear then they are rough.\nFOL:\tall x. (Sees(x, Bear) -> Rough(x))\nTEXT:\tIf someone visits the mouse then they see the bear.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(x, Bear))\nTEXT:\tIf someone is kind then they visit the mouse.\nFOL:\tall x. (Kind(x) -> Visits(x, Mouse))\nTEXT:\tIf someone needs the bear then they are kind.\nFOL:\tall x. (Needs(x, Bear) -> Kind(x))\nTEXT:\tIf someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nFOL:\tall x. (Sees(x, Bear) & -Visits(Bear, Cat) -> -Needs(Bear, Mouse))\nTEXT:\tIf someone visits the cat then the cat visits the bear.\nFOL:\tall x. (Visits(x, Cat) -> Visits(Cat, Bear))\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle needs the cow.\nFOL:\tNeeds(BaldEagle, Cow)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the squirrel.\nFOL:\tNeeds(BaldEagle, Squirrel)\nTEXT:\tThe cow does not chase the rabbit.\nFOL:\t-Chases(Cow, Rabbit)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tIf someone chases the bald eagle and they are big then they do not like the cow.\nFOL:\tall x. (Chases(x, BaldEagle) & Big(x) -> -Likes(x, Cow))\nTEXT:\tIf someone chases the cow and they are round then they are kind.\nFOL:\tall x. (Chases(x, Cow) & Round(x) -> Kind(x))\nTEXT:\tIf the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nFOL:\t(Likes(Cow, Rabbit) & Likes(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit)\nTEXT:\tIf someone likes the cow then they are green.\nFOL:\tall x. (Likes(x, Cow) -> Green(x))\nTEXT:\tIf someone is big and they need the bald eagle then they chase the cow.\nFOL:\tall x. (Big(x) & Needs(x, BaldEagle) -> Chases(x, Cow))\nTEXT:\tIf someone likes the bald eagle then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, BaldEagle) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the cow.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Cow))\nTEXT:\tIf the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow.\nFOL:\t(Needs(Squirrel, Cow) & Chases(Cow, Squirrel)) -> -Likes(Squirrel, Cow)\nTEXT:\tIf someone is green then they need the bald eagle.\nFOL:\tall x. (Green(x) -> Needs(x, BaldEagle))\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-Likes(BaldEagle, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle needs the cow.\nFOL:\tNeeds(BaldEagle, Cow)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the squirrel.\nFOL:\tNeeds(BaldEagle, Squirrel)\nTEXT:\tThe cow does not chase the rabbit.\nFOL:\t-Chases(Cow, Rabbit)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tIf someone chases the bald eagle and they are big then they do not like the cow.\nFOL:\tall x. ((Chases(x, BaldEagle) & Big(x)) -> -Likes(x, Cow))\nTEXT:\tIf someone chases the cow and they are round then they are kind.\nFOL:\tall x. ((Chases(x, Cow) & Round(x)) -> Kind(x))\nTEXT:\tIf the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nFOL:\t((Likes(Cow, Rabbit) & Likes(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf someone likes the cow then they are green.\nFOL:\tall x. (Likes(x, Cow) -> Green(x))\nTEXT:\tIf someone is big and they need the bald eagle then they chase the cow.\nFOL:\tall x. ((Big(x) & Needs(x, BaldEagle)) -> Chases(x, Cow))\nTEXT:\tIf someone likes the bald eagle then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, BaldEagle) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the cow.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Cow))\nTEXT:\tIf the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow.\nFOL:\t((Needs(Squirrel, Cow) & Chases(Cow, Squirrel)) -> -Likes(Squirrel, Cow))\nTEXT:\tIf someone is green then they need the bald eagle.\nFOL:\tall x. (Green(x) -> Needs(x, BaldEagle))\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-Likes(BaldEagle, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle needs the cow.\nFOL:\tNeeds(BaldEagle, Cow)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the squirrel.\nFOL:\tNeeds(BaldEagle, Squirrel)\nTEXT:\tThe cow does not chase the rabbit.\nFOL:\t-Chases(Cow, Rabbit)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tIf someone chases the bald eagle and they are big then they do not like the cow.\nFOL:\tall x. ((Chases(x, BaldEagle) & Big(x)) -> -Likes(x, Cow))\nTEXT:\tIf someone chases the cow and they are round then they are kind.\nFOL:\tall x. ((Chases(x, Cow) & Round(x)) -> Kind(x))\nTEXT:\tIf the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nFOL:\t((Likes(Cow, Rabbit) & Likes(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf someone likes the cow then they are green.\nFOL:\tall x. (Likes(x, Cow) -> Green(x))\nTEXT:\tIf someone is big and they need the bald eagle then they chase the cow.\nFOL:\tall x. ((Big(x) & Needs(x, BaldEagle)) -> Chases(x, Cow))\nTEXT:\tIf someone likes the bald eagle then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, BaldEagle) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the cow.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Cow))\nTEXT:\tIf the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow.\nFOL:\t(Needs(Squirrel, Cow) & Chases(Cow, Squirrel) -> -Likes(Squirrel, Cow))\nTEXT:\tIf someone is green then they need the bald eagle.\nFOL:\tall x. (Green(x) -> Needs(x, BaldEagle))\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-Likes(BaldEagle, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle needs the cow.\nFOL:\tNeeds(BaldEagle, Cow)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the squirrel.\nFOL:\tNeeds(BaldEagle, Squirrel)\nTEXT:\tThe cow does not chase the rabbit.\nFOL:\t-Chase(Cow, Rabbit)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChase(Cow, Squirrel)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChase(Squirrel, Cow)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChase(Squirrel, Rabbit)\nTEXT:\tIf someone chases the bald eagle and they are big then they do not like the cow.\nFOL:\tall x. ((Chase(x, BaldEagle) & Big(x)) -> -Likes(x, Cow))\nTEXT:\tIf someone chases the cow and they are round then they are kind.\nFOL:\tall x. ((Chase(x, Cow) & Round(x)) -> Kind(x))\nTEXT:\tIf the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nFOL:\t((Likes(Cow, Rabbit) & Likes(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf someone likes the cow then they are green.\nFOL:\tall x. (Likes(x, Cow) -> Green(x))\nTEXT:\tIf someone is big and they need the bald eagle then they chase the cow.\nFOL:\tall x. ((Big(x) & Needs(x, BaldEagle)) -> Chase(x, Cow))\nTEXT:\tIf someone likes the bald eagle then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, BaldEagle) -> -Chase(x, BaldEagle))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the cow.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Cow))\nTEXT:\tIf the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow.\nFOL:\t((Needs(Squirrel, Cow) & Chase(Cow, Squirrel)) -> -Likes(Squirrel, Cow))\nTEXT:\tIf someone is green then they need the bald eagle.\nFOL:\tall x. (Green(x) -> Needs(x, BaldEagle))\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-Likes(BaldEagle, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle needs the cow.\nFOL:\tNeeds(BaldEagle, Cow)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the squirrel.\nFOL:\tNeeds(BaldEagle, Squirrel)\nTEXT:\tThe cow does not chase the rabbit.\nFOL:\t-Chase(Cow, Rabbit)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChase(Cow, Squirrel)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChase(Squirrel, Cow)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChase(Squirrel, Rabbit)\nTEXT:\tIf someone chases the bald eagle and they are big then they do not like the cow.\nFOL:\tall x. ((Chase(x, BaldEagle) & Big(x)) -> -Likes(x, Cow))\nTEXT:\tIf someone chases the cow and they are round then they are kind.\nFOL:\tall x. ((Chase(x, Cow) & Round(x)) -> Kind(x))\nTEXT:\tIf the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nFOL:\t((Likes(Cow, Rabbit) & Likes(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf someone likes the cow then they are green.\nFOL:\tall x. (Likes(x, Cow) -> Green(x))\nTEXT:\tIf someone is big and they need the bald eagle then they chase the cow.\nFOL:\tall x. ((Big(x) & Needs(x, BaldEagle)) -> Chase(x, Cow))\nTEXT:\tIf someone likes the bald eagle then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, BaldEagle) -> -Chase(x, BaldEagle))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the cow.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Cow))\nTEXT:\tIf the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow.\nFOL:\t((Needs(Squirrel, Cow) & Chase(Cow, Squirrel)) -> -Likes(Squirrel, Cow))\nTEXT:\tIf someone is green then they need the bald eagle.\nFOL:\tall x. (Green(x) -> Needs(x, BaldEagle))\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-Likes(BaldEagle, Rabbit)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle is not green.\nFOL:\t-IsGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tIsRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe dog is red.\nFOL:\tIsRed(Dog)\nTEXT:\tThe lion does not chase the dog.\nFOL:\t-Chases(Lion, Dog)\nTEXT:\tThe lion is round.\nFOL:\tIsRound(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-IsYoung(Lion)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tIf something chases the dog then it likes the rabbit.\nFOL:\tall x. (Chases(x, Dog) -> Likes(x, Rabbit))\nTEXT:\tIf something is red and it chases the lion then the lion likes the bald eagle.\nFOL:\tall x. ((IsRed(x) & Chases(x, Lion)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf something is big then it chases the rabbit.\nFOL:\tall x. (IsBig(x) -> Chases(x, Rabbit))\nTEXT:\tIf something is round and it chases the bald eagle then the bald eagle does not like the dog.\nFOL:\tall x. ((IsRound(x) & Chases(x, BaldEagle)) -> -Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the lion then it is red.\nFOL:\tall x. (Likes(x, Lion) -> IsRed(x))\nTEXT:\tIf something is red and round then it does not chase the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsRound(x)) -> -Chases(x, BaldEagle))\nTEXT:\tIf something is red and young then it chases the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsYoung(x)) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and the bald eagle chases the lion then it likes the lion.\nFOL:\tall x. ((Likes(x, BaldEagle) & Chases(BaldEagle, Lion)) -> Likes(x, Lion))\nTEXT:\tIf something eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> IsRed(BaldEagle))\nTEXT:\tThe bald eagle does not chase the bald eagle.\nFOL:\t-Chases(BaldEagle, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle is not green.\nFOL:\t-IsGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tIsRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe dog is red.\nFOL:\tIsRed(Dog)\nTEXT:\tThe lion does not chase the dog.\nFOL:\t-Chases(Lion, Dog)\nTEXT:\tThe lion is round.\nFOL:\tIsRound(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-IsYoung(Lion)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tIf something chases the dog then it likes the rabbit.\nFOL:\tall x. (Chases(x, Dog) -> Likes(x, Rabbit))\nTEXT:\tIf something is red and it chases the lion then the lion likes the bald eagle.\nFOL:\tall x. ((IsRed(x) & Chases(x, Lion)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf something is big then it chases the rabbit.\nFOL:\tall x. (IsBig(x) -> Chases(x, Rabbit))\nTEXT:\tIf something is round and it chases the bald eagle then the bald eagle does not like the dog.\nFOL:\tall x. ((IsRound(x) & Chases(x, BaldEagle)) -> -Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the lion then it is red.\nFOL:\tall x. (Likes(x, Lion) -> IsRed(x))\nTEXT:\tIf something is red and round then it does not chase the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsRound(x)) -> -Chases(x, BaldEagle))\nTEXT:\tIf something is red and young then it chases the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsYoung(x)) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and the bald eagle chases the lion then it likes the lion.\nFOL:\tall x. ((Likes(x, BaldEagle) & Chases(BaldEagle, Lion)) -> Likes(x, Lion))\nTEXT:\tIf something eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> IsRed(BaldEagle))\nTEXT:\tThe bald eagle does not chase the bald eagle.\nFOL:\t-Chases(BaldEagle, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle is not green.\nFOL:\t-Green(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe lion does not chase the dog.\nFOL:\t-Chases(Lion, Dog)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tIf something chases the dog then it likes the rabbit.\nFOL:\tall x. (Chases(x, Dog) -> Likes(x, Rabbit))\nTEXT:\tIf something is red and it chases the lion then the lion likes the bald eagle.\nFOL:\tall x. ((Red(x) & Chases(x, Lion)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf something is big then it chases the rabbit.\nFOL:\tall x. (Big(x) -> Chases(x, Rabbit))\nTEXT:\tIf something is round and it chases the bald eagle then the bald eagle does not like the dog.\nFOL:\tall x. ((Round(x) & Chases(x, BaldEagle)) -> -Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the lion then it is red.\nFOL:\tall x. (Likes(x, Lion) -> Red(x))\nTEXT:\tIf something is red and round then it does not chase the bald eagle.\nFOL:\tall x. ((Red(x) & Round(x)) -> -Chases(x, BaldEagle))\nTEXT:\tIf something is red and young then it chases the bald eagle.\nFOL:\tall x. ((Red(x) & Young(x)) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and the bald eagle chases the lion then it likes the lion.\nFOL:\tall x. ((Likes(x, BaldEagle) & Chases(BaldEagle, Lion)) -> Likes(x, Lion))\nTEXT:\tIf something eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tThe bald eagle does not chase the bald eagle.\nFOL:\t-Chases(BaldEagle, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle is not green.\nFOL:\t-IsGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tIsRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe dog is red.\nFOL:\tIsRed(Dog)\nTEXT:\tThe lion does not chase the dog.\nFOL:\t-Chases(Lion, Dog)\nTEXT:\tThe lion is round.\nFOL:\tIsRound(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-IsYoung(Lion)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tIf something chases the dog then it likes the rabbit.\nFOL:\tall x. (Chases(x, Dog) -> Likes(x, Rabbit))\nTEXT:\tIf something is red and it chases the lion then the lion likes the bald eagle.\nFOL:\tall x. ((IsRed(x) & Chases(x, Lion)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf something is big then it chases the rabbit.\nFOL:\tall x. (IsBig(x) -> Chases(x, Rabbit))\nTEXT:\tIf something is round and it chases the bald eagle then the bald eagle does not like the dog.\nFOL:\tall x. ((IsRound(x) & Chases(x, BaldEagle)) -> -Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the lion then it is red.\nFOL:\tall x. (Likes(x, Lion) -> IsRed(x))\nTEXT:\tIf something is red and round then it does not chase the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsRound(x)) -> -Chases(x, BaldEagle))\nTEXT:\tIf something is red and young then it chases the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsYoung(x)) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and the bald eagle chases the lion then it likes the lion.\nFOL:\tall x. ((Likes(x, BaldEagle) & Chases(BaldEagle, Lion)) -> Likes(x, Lion))\nTEXT:\tIf something eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> IsRed(BaldEagle))\nTEXT:\tThe bald eagle does not chase the bald eagle.\nFOL:\t-Chases(BaldEagle, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle is not green.\nFOL:\t-IsGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tIsRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe dog is red.\nFOL:\tIsRed(Dog)\nTEXT:\tThe lion does not chase the dog.\nFOL:\t-Chases(Lion, Dog)\nTEXT:\tThe lion is round.\nFOL:\tIsRound(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-IsYoung(Lion)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tIf something chases the dog then it likes the rabbit.\nFOL:\tall x. (Chases(x, Dog) -> Likes(x, Rabbit))\nTEXT:\tIf something is red and it chases the lion then the lion likes the bald eagle.\nFOL:\tall x. ((IsRed(x) & Chases(x, Lion)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf something is big then it chases the rabbit.\nFOL:\tall x. (IsBig(x) -> Chases(x, Rabbit))\nTEXT:\tIf something is round and it chases the bald eagle then the bald eagle does not like the dog.\nFOL:\tall x. ((IsRound(x) & Chases(x, BaldEagle)) -> -Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the lion then it is red.\nFOL:\tall x. (Likes(x, Lion) -> IsRed(x))\nTEXT:\tIf something is red and round then it does not chase the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsRound(x)) -> -Chases(x, BaldEagle))\nTEXT:\tIf something is red and young then it chases the bald eagle.\nFOL:\tall x. ((IsRed(x) & IsYoung(x)) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and the bald eagle chases the lion then it likes the lion.\nFOL:\tall x. ((Likes(x, BaldEagle) & Chases(BaldEagle, Lion)) -> Likes(x, Lion))\nTEXT:\tIf something eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> IsRed(BaldEagle))\nTEXT:\tThe bald eagle does not chase the bald eagle.\nFOL:\t-Chases(BaldEagle, BaldEagle)\nANSWER:\tTrue\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tAll red things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll quiet, red things are young.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Young(x))\nTEXT:\tIf something is young then it is nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Bob is big and Bob is young then Bob is furry.\nFOL:\t(Big(Bob) & Young(Bob)) -> Furry(Bob)\nTEXT:\tFurry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tAll red things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll quiet, red things are young.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Young(x))\nTEXT:\tIf something is young then it is nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Bob is big and Bob is young then Bob is furry.\nFOL:\t(Big(Bob) & Young(Bob)) -> Furry(Bob)\nTEXT:\tFurry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tAll red things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll quiet, red things are young.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Young(x))\nTEXT:\tIf something is young then it is nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Bob is big and Bob is young then Bob is furry.\nFOL:\t(Big(Bob) & Young(Bob)) -> Furry(Bob)\nTEXT:\tFurry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tAll red things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll quiet, red things are young.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Young(x))\nTEXT:\tIf something is young then it is nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Bob is big and Bob is young then Bob is furry.\nFOL:\t(Big(Bob) & Young(Bob)) -> Furry(Bob)\nTEXT:\tFurry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tAll red things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll quiet, red things are young.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Young(x))\nTEXT:\tIf something is young then it is nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Bob is big and Bob is young then Bob is furry.\nFOL:\t(Big(Bob) & Young(Bob)) -> Furry(Bob)\nTEXT:\tFurry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll quiet, cold things are young.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Young(x))\nTEXT:\tIf something is smart then it is blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tIf something is quiet and smart then it is nice.\nFOL:\tall x. ((Quiet(x) & Smart(x)) -> Nice(x))\nTEXT:\tSmart, young things are white.\nFOL:\tall x. ((Smart(x) & Young(x)) -> White(x))\nTEXT:\tIf something is nice and blue then it is quiet.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Quiet(x))\nTEXT:\tQuiet, nice things are cold.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> Cold(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll quiet, cold things are young.\nFOL:\tall x. (Quiet(x) & Cold(x) -> Young(x))\nTEXT:\tIf something is smart then it is blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tIf something is quiet and smart then it is nice.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Nice(x))\nTEXT:\tSmart, young things are white.\nFOL:\tall x. (Smart(x) & Young(x) -> White(x))\nTEXT:\tIf something is nice and blue then it is quiet.\nFOL:\tall x. (Nice(x) & Blue(x) -> Quiet(x))\nTEXT:\tQuiet, nice things are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tFalse\n", "TEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll quiet, cold things are young.\nFOL:\tall x. (Quiet(x) & Cold(x) -> Young(x))\nTEXT:\tIf something is smart then it is blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tIf something is quiet and smart then it is nice.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Nice(x))\nTEXT:\tSmart, young things are white.\nFOL:\tall x. (Smart(x) & Young(x) -> White(x))\nTEXT:\tIf something is nice and blue then it is quiet.\nFOL:\tall x. (Nice(x) & Blue(x) -> Quiet(x))\nTEXT:\tQuiet, nice things are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tTrue\n", "TEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll quiet, cold things are young.\nFOL:\tall x. (Quiet(x) & Cold(x) -> Young(x))\nTEXT:\tIf something is smart then it is blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tIf something is quiet and smart then it is nice.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Nice(x))\nTEXT:\tSmart, young things are white.\nFOL:\tall x. (Smart(x) & Young(x) -> White(x))\nTEXT:\tIf something is nice and blue then it is quiet.\nFOL:\tall x. (Nice(x) & Blue(x) -> Quiet(x))\nTEXT:\tQuiet, nice things are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll quiet, cold things are young.\nFOL:\tall x. (Quiet(x) & Cold(x) -> Young(x))\nTEXT:\tIf something is smart then it is blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tIf something is quiet and smart then it is nice.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Nice(x))\nTEXT:\tSmart, young things are white.\nFOL:\tall x. (Smart(x) & Young(x) -> White(x))\nTEXT:\tIf something is nice and blue then it is quiet.\nFOL:\tall x. (Nice(x) & Blue(x) -> Quiet(x))\nTEXT:\tQuiet, nice things are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse does not visit the cow.\nFOL:\t-Visits(Mouse, Cow)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit does not need the cat.\nFOL:\t-Needs(Rabbit, Cat)\nTEXT:\tThe rabbit visits the mouse.\nFOL:\tVisits(Rabbit, Mouse)\nTEXT:\tIf someone eats the cat and they eat the cow then they do not need the mouse.\nFOL:\tall x. ((Eats(x, Cat) & Eats(x, Cow)) -> -Needs(x, Mouse))\nTEXT:\tIf someone visits the cat then the cat eats the cow.\nFOL:\tall x. (Visits(x, Cat) -> Eats(Cat, Cow))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow.\nFOL:\t((Needs(Mouse, Rabbit) & Eats(Mouse, Cat)) -> Eats(Mouse, Cow))\nTEXT:\tIf someone is red and they visit the mouse then the mouse needs the cow.\nFOL:\tall x. ((Red(x) & Visits(x, Mouse)) -> Needs(Mouse, Cow))\nTEXT:\tIf someone needs the cow then the cow visits the cat.\nFOL:\tall x. (Needs(x, Cow) -> Visits(Cow, Cat))\nTEXT:\tAll round people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.\nFOL:\tall x. ((Needs(x, Cat) & Visits(Cat, Rabbit)) -> -Eats(x, Rabbit))\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisit(Cow, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEat(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeed(Mouse, Cat)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeed(Mouse, Rabbit)\nTEXT:\tThe mouse does not visit the cow.\nFOL:\t-Visit(Mouse, Cow)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisit(Mouse, Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit does not need the cat.\nFOL:\t-Need(Rabbit, Cat)\nTEXT:\tThe rabbit visits the mouse.\nFOL:\tVisit(Rabbit, Mouse)\nTEXT:\tIf someone eats the cat and they eat the cow then they do not need the mouse.\nFOL:\tall x. (Eat(x, Cat) & Eat(x, Cow) -> -Need(x, Mouse))\nTEXT:\tIf someone visits the cat then the cat eats the cow.\nFOL:\tall x. (Visit(x, Cat) -> Eat(Cat, Cow))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow.\nFOL:\t(Need(Mouse, Rabbit) & Eat(Mouse, Cat)) -> Eat(Mouse, Cow)\nTEXT:\tIf someone is red and they visit the mouse then the mouse needs the cow.\nFOL:\tall x. (Red(x) & Visit(x, Mouse) -> Need(Mouse, Cow))\nTEXT:\tIf someone needs the cow then the cow visits the cat.\nFOL:\tall x. (Need(x, Cow) -> Visit(Cow, Cat))\nTEXT:\tAll round people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.\nFOL:\tall x. (Need(x, Cat) & Visit(Cat, Rabbit) -> -Eat(x, Rabbit))\nTEXT:\tThe cow visits the cat.\nFOL:\tVisit(Cow, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse does not visit the cow.\nFOL:\t-Visits(Mouse, Cow)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit does not need the cat.\nFOL:\t-Needs(Rabbit, Cat)\nTEXT:\tThe rabbit visits the mouse.\nFOL:\tVisits(Rabbit, Mouse)\nTEXT:\tIf someone eats the cat and they eat the cow then they do not need the mouse.\nFOL:\tall x. ((Eats(x, Cat) & Eats(x, Cow)) -> -Needs(x, Mouse))\nTEXT:\tIf someone visits the cat then the cat eats the cow.\nFOL:\tall x. (Visits(x, Cat) -> Eats(Cat, Cow))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow.\nFOL:\t((Needs(Mouse, Rabbit) & Eats(Mouse, Cat)) -> Eats(Mouse, Cow))\nTEXT:\tIf someone is red and they visit the mouse then the mouse needs the cow.\nFOL:\tall x. ((Red(x) & Visits(x, Mouse)) -> Needs(Mouse, Cow))\nTEXT:\tIf someone needs the cow then the cow visits the cat.\nFOL:\tall x. (Needs(x, Cow) -> Visits(Cow, Cat))\nTEXT:\tAll round people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.\nFOL:\tall x. ((Needs(x, Cat) & Visits(Cat, Rabbit)) -> -Eats(x, Rabbit))\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse does not visit the cow.\nFOL:\t-Visits(Mouse, Cow)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit does not need the cat.\nFOL:\t-Needs(Rabbit, Cat)\nTEXT:\tThe rabbit visits the mouse.\nFOL:\tVisits(Rabbit, Mouse)\nTEXT:\tIf someone eats the cat and they eat the cow then they do not need the mouse.\nFOL:\tall x. ((Eats(x, Cat) & Eats(x, Cow)) -> -Needs(x, Mouse))\nTEXT:\tIf someone visits the cat then the cat eats the cow.\nFOL:\tall x. (Visits(x, Cat) -> Eats(Cat, Cow))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow.\nFOL:\t(Needs(Mouse, Rabbit) & Eats(Mouse, Cat)) -> Eats(Mouse, Cow)\nTEXT:\tIf someone is red and they visit the mouse then the mouse needs the cow.\nFOL:\tall x. ((Red(x) & Visits(x, Mouse)) -> Needs(Mouse, Cow))\nTEXT:\tIf someone needs the cow then the cow visits the cat.\nFOL:\tall x. (Needs(x, Cow) -> Visits(Cow, Cat))\nTEXT:\tAll round people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.\nFOL:\tall x. ((Needs(x, Cat) & Visits(Cat, Rabbit)) -> -Eats(x, Rabbit))\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse does not visit the cow.\nFOL:\t-Visits(Mouse, Cow)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit does not need the cat.\nFOL:\t-Needs(Rabbit, Cat)\nTEXT:\tThe rabbit visits the mouse.\nFOL:\tVisits(Rabbit, Mouse)\nTEXT:\tIf someone eats the cat and they eat the cow then they do not need the mouse.\nFOL:\tall x. (Eats(x, Cat) & Eats(x, Cow) -> -Needs(x, Mouse))\nTEXT:\tIf someone visits the cat then the cat eats the cow.\nFOL:\tall x. (Visits(x, Cat) -> Eats(Cat, Cow))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow.\nFOL:\t(Needs(Mouse, Rabbit) & Eats(Mouse, Cat)) -> Eats(Mouse, Cow)\nTEXT:\tIf someone is red and they visit the mouse then the mouse needs the cow.\nFOL:\tall x. (Red(x) & Visits(x, Mouse) -> Needs(Mouse, Cow))\nTEXT:\tIf someone needs the cow then the cow visits the cat.\nFOL:\tall x. (Needs(x, Cow) -> Visits(Cow, Cat))\nTEXT:\tAll round people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.\nFOL:\tall x. (Needs(x, Cat) & Visits(Cat, Rabbit) -> -Eats(x, Rabbit))\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nANSWER:\tFalse\n"], ["TEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not young.\nFOL:\t-Young(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tIf someone is cold and they like the tiger then the tiger does not like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> -Likes(Tiger, Lion))\nTEXT:\tIf someone chases the tiger then the tiger likes the lion.\nFOL:\tall x. (Chases(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf the tiger is cold then the tiger chases the rabbit.\nFOL:\tCold(Tiger) -> Chases(Tiger, Rabbit)\nTEXT:\tIf the lion chases the cat then the cat chases the tiger.\nFOL:\tChases(Lion, Cat) -> Chases(Cat, Tiger)\nTEXT:\tIf someone eats the tiger then the tiger is cold.\nFOL:\tall x. (Eats(x, Tiger) -> Cold(Tiger))\nTEXT:\tIf someone is young then they chase the tiger.\nFOL:\tall x. (Young(x) -> Chases(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger does not like the rabbit.\nFOL:\tall x. (Chases(x, Tiger) -> -Likes(Tiger, Rabbit))\nTEXT:\tIf the tiger likes the cat and the tiger chases the rabbit then the tiger is young.\nFOL:\t(Likes(Tiger, Cat) & Chases(Tiger, Rabbit) -> Young(Tiger))\nTEXT:\tIf the lion is rough and the lion is not red then the lion does not like the rabbit.\nFOL:\t(Rough(Lion) & -Red(Lion) -> -Likes(Lion, Rabbit))\nTEXT:\tThe tiger does not chase the tiger.\nFOL:\t-Chases(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not young.\nFOL:\t-Young(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tIf someone is cold and they like the tiger then the tiger does not like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> -Likes(Tiger, Lion))\nTEXT:\tIf someone chases the tiger then the tiger likes the lion.\nFOL:\tall x. (Chases(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf the tiger is cold then the tiger chases the rabbit.\nFOL:\tCold(Tiger) -> Chases(Tiger, Rabbit)\nTEXT:\tIf the lion chases the cat then the cat chases the tiger.\nFOL:\tChases(Lion, Cat) -> Chases(Cat, Tiger)\nTEXT:\tIf someone eats the tiger then the tiger is cold.\nFOL:\tall x. (Eats(x, Tiger) -> Cold(Tiger))\nTEXT:\tIf someone is young then they chase the tiger.\nFOL:\tall x. (Young(x) -> Chases(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger does not like the rabbit.\nFOL:\tall x. (Chases(x, Tiger) -> -Likes(Tiger, Rabbit))\nTEXT:\tIf the tiger likes the cat and the tiger chases the rabbit then the tiger is young.\nFOL:\t(Likes(Tiger, Cat) & Chases(Tiger, Rabbit)) -> Young(Tiger)\nTEXT:\tIf the lion is rough and the lion is not red then the lion does not like the rabbit.\nFOL:\t(Rough(Lion) & -Red(Lion)) -> -Likes(Lion, Rabbit)\nTEXT:\tThe tiger does not chase the tiger.\nFOL:\t-Chases(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not young.\nFOL:\t-Young(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tIf someone is cold and they like the tiger then the tiger does not like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> -Likes(Tiger, Lion))\nTEXT:\tIf someone chases the tiger then the tiger likes the lion.\nFOL:\tall x. (Chases(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf the tiger is cold then the tiger chases the rabbit.\nFOL:\tCold(Tiger) -> Chases(Tiger, Rabbit)\nTEXT:\tIf the lion chases the cat then the cat chases the tiger.\nFOL:\tChases(Lion, Cat) -> Chases(Cat, Tiger)\nTEXT:\tIf someone eats the tiger then the tiger is cold.\nFOL:\tall x. (Eats(x, Tiger) -> Cold(Tiger))\nTEXT:\tIf someone is young then they chase the tiger.\nFOL:\tall x. (Young(x) -> Chases(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger does not like the rabbit.\nFOL:\tall x. (Chases(x, Tiger) -> -Likes(Tiger, Rabbit))\nTEXT:\tIf the tiger likes the cat and the tiger chases the rabbit then the tiger is young.\nFOL:\t(Likes(Tiger, Cat) & Chases(Tiger, Rabbit)) -> Young(Tiger)\nTEXT:\tIf the lion is rough and the lion is not red then the lion does not like the rabbit.\nFOL:\t(Rough(Lion) & -Red(Lion)) -> -Likes(Lion, Rabbit)\nTEXT:\tThe tiger does not chase the tiger.\nFOL:\t-Chases(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not young.\nFOL:\t-Young(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tIf someone is cold and they like the tiger then the tiger does not like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> -Likes(Tiger, Lion))\nTEXT:\tIf someone chases the tiger then the tiger likes the lion.\nFOL:\tall x. (Chases(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf the tiger is cold then the tiger chases the rabbit.\nFOL:\tCold(Tiger) -> Chases(Tiger, Rabbit)\nTEXT:\tIf the lion chases the cat then the cat chases the tiger.\nFOL:\tChases(Lion, Cat) -> Chases(Cat, Tiger)\nTEXT:\tIf someone eats the tiger then the tiger is cold.\nFOL:\tall x. (Eats(x, Tiger) -> Cold(Tiger))\nTEXT:\tIf someone is young then they chase the tiger.\nFOL:\tall x. (Young(x) -> Chases(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger does not like the rabbit.\nFOL:\tall x. (Chases(x, Tiger) -> -Likes(Tiger, Rabbit))\nTEXT:\tIf the tiger likes the cat and the tiger chases the rabbit then the tiger is young.\nFOL:\t(Likes(Tiger, Cat) & Chases(Tiger, Rabbit)) -> Young(Tiger)\nTEXT:\tIf the lion is rough and the lion is not red then the lion does not like the rabbit.\nFOL:\t(Rough(Lion) & -Red(Lion)) -> -Likes(Lion, Rabbit)\nTEXT:\tThe tiger does not chase the tiger.\nFOL:\t-Chases(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not young.\nFOL:\t-Young(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tIf someone is cold and they like the tiger then the tiger does not like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> -Likes(Tiger, Lion))\nTEXT:\tIf someone chases the tiger then the tiger likes the lion.\nFOL:\tall x. (Chases(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf the tiger is cold then the tiger chases the rabbit.\nFOL:\tCold(Tiger) -> Chases(Tiger, Rabbit)\nTEXT:\tIf the lion chases the cat then the cat chases the tiger.\nFOL:\tChases(Lion, Cat) -> Chases(Cat, Tiger)\nTEXT:\tIf someone eats the tiger then the tiger is cold.\nFOL:\tall x. (Eats(x, Tiger) -> Cold(Tiger))\nTEXT:\tIf someone is young then they chase the tiger.\nFOL:\tall x. (Young(x) -> Chases(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger does not like the rabbit.\nFOL:\tall x. (Chases(x, Tiger) -> -Likes(Tiger, Rabbit))\nTEXT:\tIf the tiger likes the cat and the tiger chases the rabbit then the tiger is young.\nFOL:\t(Likes(Tiger, Cat) & Chases(Tiger, Rabbit) -> Young(Tiger))\nTEXT:\tIf the lion is rough and the lion is not red then the lion does not like the rabbit.\nFOL:\t(Rough(Lion) & -Red(Lion) -> -Likes(Lion, Rabbit))\nTEXT:\tThe tiger does not chase the tiger.\nFOL:\t-Chases(Tiger, Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tQuiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tQuiet, blue things are green.\nFOL:\tall x. (Quiet(x) & Blue(x) -> Green(x))\nTEXT:\tBlue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tAll nice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll green, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf Anne is red and Anne is blue then Anne is smart.\nFOL:\t(Red(Anne) & Blue(Anne) -> Smart(Anne))\nTEXT:\tAll quiet things are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tQuiet, smart things are blue.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Blue(x))\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tQuiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tQuiet, blue things are green.\nFOL:\tall x. (Quiet(x) & Blue(x) -> Green(x))\nTEXT:\tBlue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tAll nice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll green, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf Anne is red and Anne is blue then Anne is smart.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Smart(Anne)\nTEXT:\tAll quiet things are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tQuiet, smart things are blue.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Blue(x))\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tQuiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tQuiet, blue things are green.\nFOL:\tall x. (Quiet(x) & Blue(x) -> Green(x))\nTEXT:\tBlue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tAll nice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll green, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf Anne is red and Anne is blue then Anne is smart.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Smart(Anne)\nTEXT:\tAll quiet things are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tQuiet, smart things are blue.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Blue(x))\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tQuiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tQuiet, blue things are green.\nFOL:\tall x. (Quiet(x) & Blue(x) -> Green(x))\nTEXT:\tBlue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tAll nice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll green, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf Anne is red and Anne is blue then Anne is smart.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Smart(Anne)\nTEXT:\tAll quiet things are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tQuiet, smart things are blue.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Blue(x))\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tQuiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tQuiet, blue things are green.\nFOL:\tall x. (Quiet(x) & Blue(x) -> Green(x))\nTEXT:\tBlue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tAll nice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll green, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf Anne is red and Anne is blue then Anne is smart.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Smart(Anne)\nTEXT:\tAll quiet things are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tQuiet, smart things are blue.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Blue(x))\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat eats the dog.\nFOL:\tEats(Cat, Dog)\nTEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat does not see the squirrel.\nFOL:\t-Sees(Cat, Squirrel)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone is big then they like the cat.\nFOL:\tall x. (Big(x) -> Likes(x, Cat))\nTEXT:\tIf someone is round then they are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel eats the dog then they eat the dog.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(Squirrel, Dog) -> Eats(x, Dog))\nTEXT:\tIf someone eats the cat then they are round.\nFOL:\tall x. (Eats(x, Cat) -> Round(x))\nTEXT:\tIf the cat is green and the cat eats the rabbit then the cat is big.\nFOL:\t(Green(Cat) & Eats(Cat, Rabbit)) -> Big(Cat)\nTEXT:\tIf someone likes the rabbit and the rabbit sees the cat then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Sees(Rabbit, Cat) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone eats the squirrel and they eat the dog then the dog is red.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(x, Dog) -> Red(Dog))\nTEXT:\tIf someone is big and they see the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Big(x) & Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the cat eats the squirrel then the squirrel does not eat the cat.\nFOL:\tEats(Cat, Squirrel) -> -Eats(Squirrel, Cat)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the dog.\nFOL:\tEats(Cat, Dog)\nTEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat does not see the squirrel.\nFOL:\t-Sees(Cat, Squirrel)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone is big then they like the cat.\nFOL:\tall x. (Big(x) -> Likes(x, Cat))\nTEXT:\tIf someone is round then they are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel eats the dog then they eat the dog.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(Squirrel, Dog) -> Eats(x, Dog))\nTEXT:\tIf someone eats the cat then they are round.\nFOL:\tall x. (Eats(x, Cat) -> Round(x))\nTEXT:\tIf the cat is green and the cat eats the rabbit then the cat is big.\nFOL:\t(Green(Cat) & Eats(Cat, Rabbit) -> Big(Cat))\nTEXT:\tIf someone likes the rabbit and the rabbit sees the cat then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Sees(Rabbit, Cat) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone eats the squirrel and they eat the dog then the dog is red.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(x, Dog) -> Red(Dog))\nTEXT:\tIf someone is big and they see the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Big(x) & Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the cat eats the squirrel then the squirrel does not eat the cat.\nFOL:\tEats(Cat, Squirrel) -> -Eats(Squirrel, Cat)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the dog.\nFOL:\tEats(Cat, Dog)\nTEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat does not see the squirrel.\nFOL:\t-Sees(Cat, Squirrel)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone is big then they like the cat.\nFOL:\tall x. (Big(x) -> Likes(x, Cat))\nTEXT:\tIf someone is round then they are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel eats the dog then they eat the dog.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(Squirrel, Dog) -> Eats(x, Dog))\nTEXT:\tIf someone eats the cat then they are round.\nFOL:\tall x. (Eats(x, Cat) -> Round(x))\nTEXT:\tIf the cat is green and the cat eats the rabbit then the cat is big.\nFOL:\t(Green(Cat) & Eats(Cat, Rabbit) -> Big(Cat))\nTEXT:\tIf someone likes the rabbit and the rabbit sees the cat then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Sees(Rabbit, Cat) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone eats the squirrel and they eat the dog then the dog is red.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(x, Dog) -> Red(Dog))\nTEXT:\tIf someone is big and they see the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Big(x) & Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the cat eats the squirrel then the squirrel does not eat the cat.\nFOL:\t(Eats(Cat, Squirrel) -> -Eats(Squirrel, Cat))\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the dog.\nFOL:\tEats(Cat, Dog)\nTEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat does not see the squirrel.\nFOL:\t-Sees(Cat, Squirrel)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone is big then they like the cat.\nFOL:\tall x. (Big(x) -> Likes(x, Cat))\nTEXT:\tIf someone is round then they are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel eats the dog then they eat the dog.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(Squirrel, Dog) -> Eats(x, Dog))\nTEXT:\tIf someone eats the cat then they are round.\nFOL:\tall x. (Eats(x, Cat) -> Round(x))\nTEXT:\tIf the cat is green and the cat eats the rabbit then the cat is big.\nFOL:\t(Green(Cat) & Eats(Cat, Rabbit) -> Big(Cat))\nTEXT:\tIf someone likes the rabbit and the rabbit sees the cat then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Sees(Rabbit, Cat) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone eats the squirrel and they eat the dog then the dog is red.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(x, Dog) -> Red(Dog))\nTEXT:\tIf someone is big and they see the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Big(x) & Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the cat eats the squirrel then the squirrel does not eat the cat.\nFOL:\t(Eats(Cat, Squirrel) -> -Eats(Squirrel, Cat))\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the dog.\nFOL:\tEats(Cat, Dog)\nTEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat does not see the squirrel.\nFOL:\t-Sees(Cat, Squirrel)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone is big then they like the cat.\nFOL:\tall x. (Big(x) -> Likes(x, Cat))\nTEXT:\tIf someone is round then they are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel eats the dog then they eat the dog.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(Squirrel, Dog) -> Eats(x, Dog))\nTEXT:\tIf someone eats the cat then they are round.\nFOL:\tall x. (Eats(x, Cat) -> Round(x))\nTEXT:\tIf the cat is green and the cat eats the rabbit then the cat is big.\nFOL:\t(Green(Cat) & Eats(Cat, Rabbit)) -> Big(Cat)\nTEXT:\tIf someone likes the rabbit and the rabbit sees the cat then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Sees(Rabbit, Cat) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone eats the squirrel and they eat the dog then the dog is red.\nFOL:\tall x. (Eats(x, Squirrel) & Eats(x, Dog) -> Red(Dog))\nTEXT:\tIf someone is big and they see the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Big(x) & Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the cat eats the squirrel then the squirrel does not eat the cat.\nFOL:\tEats(Cat, Squirrel) -> -Eats(Squirrel, Cat)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is green and furry then it is quiet.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Quiet(x))\nTEXT:\tYoung things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tSmart, nice things are green.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Green(x))\nTEXT:\tAll nice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tAll nice things are not smart.\nFOL:\tall x. (Nice(x) -> -Smart(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tAll green, quiet things are nice.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Nice(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is green and furry then it is quiet.\nFOL:\tall x. (Green(x) & Furry(x) -> Quiet(x))\nTEXT:\tYoung things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tSmart, nice things are green.\nFOL:\tall x. (Smart(x) & Nice(x) -> Green(x))\nTEXT:\tAll nice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tAll nice things are not smart.\nFOL:\tall x. (Nice(x) -> -Smart(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tAll green, quiet things are nice.\nFOL:\tall x. (Green(x) & Quiet(x) -> Nice(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is green and furry then it is quiet.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Quiet(x))\nTEXT:\tYoung things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tSmart, nice things are green.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Green(x))\nTEXT:\tAll nice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tAll nice things are not smart.\nFOL:\tall x. (Nice(x) -> -Smart(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tAll green, quiet things are nice.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Nice(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is green and furry then it is quiet.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Quiet(x))\nTEXT:\tYoung things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tSmart, nice things are green.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Green(x))\nTEXT:\tAll nice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tAll nice things are not smart.\nFOL:\tall x. (Nice(x) -> -Smart(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tAll green, quiet things are nice.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Nice(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is green and furry then it is quiet.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Quiet(x))\nTEXT:\tYoung things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tSmart, nice things are green.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Green(x))\nTEXT:\tAll nice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tAll nice things are not smart.\nFOL:\tall x. (Nice(x) -> -Smart(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tAll green, quiet things are nice.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Nice(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tFalse\n"], ["TEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf something sees the squirrel then the squirrel eats the tiger.\nFOL:\tall x. (Sees(x, Squirrel) -> Eats(Squirrel, Tiger))\nTEXT:\tIf something is cold then it sees the squirrel.\nFOL:\tall x. (Cold(x) -> Sees(x, Squirrel))\nTEXT:\tIf something likes the squirrel then the squirrel likes the dog.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(Squirrel, Dog))\nTEXT:\tIf something sees the mouse then the mouse eats the squirrel.\nFOL:\tall x. (Sees(x, Mouse) -> Eats(Mouse, Squirrel))\nTEXT:\tIf something sees the squirrel then it is kind.\nFOL:\tall x. (Sees(x, Squirrel) -> Kind(x))\nTEXT:\tIf something likes the dog and it eats the mouse then the mouse is cold.\nFOL:\tall x. (Likes(x, Dog) & Eats(x, Mouse) -> Cold(Mouse))\nTEXT:\tIf something eats the dog and the dog eats the mouse then the dog sees the tiger.\nFOL:\tall x. (Eats(x, Dog) & Eats(Dog, Mouse) -> Sees(Dog, Tiger))\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tThe tiger is not kind.\nFOL:\t-Kind(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf something sees the squirrel then the squirrel eats the tiger.\nFOL:\tall x. (Sees(x, Squirrel) -> Eats(Squirrel, Tiger))\nTEXT:\tIf something is cold then it sees the squirrel.\nFOL:\tall x. (Cold(x) -> Sees(x, Squirrel))\nTEXT:\tIf something likes the squirrel then the squirrel likes the dog.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(Squirrel, Dog))\nTEXT:\tIf something sees the mouse then the mouse eats the squirrel.\nFOL:\tall x. (Sees(x, Mouse) -> Eats(Mouse, Squirrel))\nTEXT:\tIf something sees the squirrel then it is kind.\nFOL:\tall x. (Sees(x, Squirrel) -> Kind(x))\nTEXT:\tIf something likes the dog and it eats the mouse then the mouse is cold.\nFOL:\tall x. (Likes(x, Dog) & Eats(x, Mouse) -> Cold(Mouse))\nTEXT:\tIf something eats the dog and the dog eats the mouse then the dog sees the tiger.\nFOL:\tall x. (Eats(x, Dog) & Eats(Dog, Mouse) -> Sees(Dog, Tiger))\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tThe tiger is not kind.\nFOL:\t-Kind(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf something sees the squirrel then the squirrel eats the tiger.\nFOL:\tall x. (Sees(x, Squirrel) -> Eats(Squirrel, Tiger))\nTEXT:\tIf something is cold then it sees the squirrel.\nFOL:\tall x. (Cold(x) -> Sees(x, Squirrel))\nTEXT:\tIf something likes the squirrel then the squirrel likes the dog.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(Squirrel, Dog))\nTEXT:\tIf something sees the mouse then the mouse eats the squirrel.\nFOL:\tall x. (Sees(x, Mouse) -> Eats(Mouse, Squirrel))\nTEXT:\tIf something sees the squirrel then it is kind.\nFOL:\tall x. (Sees(x, Squirrel) -> Kind(x))\nTEXT:\tIf something likes the dog and it eats the mouse then the mouse is cold.\nFOL:\tall x. (Likes(x, Dog) & Eats(x, Mouse) -> Cold(Mouse))\nTEXT:\tIf something eats the dog and the dog eats the mouse then the dog sees the tiger.\nFOL:\tall x. (Eats(x, Dog) & Eats(Dog, Mouse) -> Sees(Dog, Tiger))\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tThe tiger is not kind.\nFOL:\t-Kind(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf something sees the squirrel then the squirrel eats the tiger.\nFOL:\tall x. (Sees(x, Squirrel) -> Eats(Squirrel, Tiger))\nTEXT:\tIf something is cold then it sees the squirrel.\nFOL:\tall x. (Cold(x) -> Sees(x, Squirrel))\nTEXT:\tIf something likes the squirrel then the squirrel likes the dog.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(Squirrel, Dog))\nTEXT:\tIf something sees the mouse then the mouse eats the squirrel.\nFOL:\tall x. (Sees(x, Mouse) -> Eats(Mouse, Squirrel))\nTEXT:\tIf something sees the squirrel then it is kind.\nFOL:\tall x. (Sees(x, Squirrel) -> Kind(x))\nTEXT:\tIf something likes the dog and it eats the mouse then the mouse is cold.\nFOL:\tall x. (Likes(x, Dog) & Eats(x, Mouse) -> Cold(Mouse))\nTEXT:\tIf something eats the dog and the dog eats the mouse then the dog sees the tiger.\nFOL:\tall x. (Eats(x, Dog) & Eats(Dog, Mouse) -> Sees(Dog, Tiger))\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tThe tiger is not kind.\nFOL:\t-Kind(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf something sees the squirrel then the squirrel eats the tiger.\nFOL:\tall x. (Sees(x, Squirrel) -> Eats(Squirrel, Tiger))\nTEXT:\tIf something is cold then it sees the squirrel.\nFOL:\tall x. (Cold(x) -> Sees(x, Squirrel))\nTEXT:\tIf something likes the squirrel then the squirrel likes the dog.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(Squirrel, Dog))\nTEXT:\tIf something sees the mouse then the mouse eats the squirrel.\nFOL:\tall x. (Sees(x, Mouse) -> Eats(Mouse, Squirrel))\nTEXT:\tIf something sees the squirrel then it is kind.\nFOL:\tall x. (Sees(x, Squirrel) -> Kind(x))\nTEXT:\tIf something likes the dog and it eats the mouse then the mouse is cold.\nFOL:\tall x. (Likes(x, Dog) & Eats(x, Mouse) -> Cold(Mouse))\nTEXT:\tIf something eats the dog and the dog eats the mouse then the dog sees the tiger.\nFOL:\tall x. (Eats(x, Dog) & Eats(Dog, Mouse) -> Sees(Dog, Tiger))\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tThe tiger is not kind.\nFOL:\t-Kind(Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the bald eagle.\nFOL:\tNeeds(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the lion.\nFOL:\tVisits(Squirrel, Lion)\nTEXT:\tIf someone is blue and rough then they need the bear.\nFOL:\tall x. (Blue(x) & Rough(x) -> Needs(x, Bear))\nTEXT:\tIf someone needs the bald eagle then they are blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf someone needs the lion then they eat the lion.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Lion))\nTEXT:\tIf someone eats the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Bear) -> Kind(Bear))\nTEXT:\tIf someone is blue then they visit the bear.\nFOL:\tall x. (Blue(x) -> Visits(x, Bear))\nTEXT:\tIf the lion is rough and the lion eats the squirrel then the lion is blue.\nFOL:\t(Rough(Lion) & Eats(Lion, Squirrel) -> Blue(Lion))\nTEXT:\tIf someone is blue and they visit the bear then the bear needs the bald eagle.\nFOL:\tall x. (Blue(x) & Visits(x, Bear) -> Needs(Bear, BaldEagle))\nTEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the bald eagle.\nFOL:\tNeeds(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the lion.\nFOL:\tVisits(Squirrel, Lion)\nTEXT:\tIf someone is blue and rough then they need the bear.\nFOL:\tall x. (Blue(x) & Rough(x) -> Needs(x, Bear))\nTEXT:\tIf someone needs the bald eagle then they are blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf someone needs the lion then they eat the lion.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Lion))\nTEXT:\tIf someone eats the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Bear) -> Kind(Bear))\nTEXT:\tIf someone is blue then they visit the bear.\nFOL:\tall x. (Blue(x) -> Visits(x, Bear))\nTEXT:\tIf the lion is rough and the lion eats the squirrel then the lion is blue.\nFOL:\tRough(Lion) & Eats(Lion, Squirrel) -> Blue(Lion)\nTEXT:\tIf someone is blue and they visit the bear then the bear needs the bald eagle.\nFOL:\tall x. (Blue(x) & Visits(x, Bear) -> Needs(Bear, BaldEagle))\nTEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the bald eagle.\nFOL:\tNeeds(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the lion.\nFOL:\tVisits(Squirrel, Lion)\nTEXT:\tIf someone is blue and rough then they need the bear.\nFOL:\tall x. (Blue(x) & Rough(x) -> Needs(x, Bear))\nTEXT:\tIf someone needs the bald eagle then they are blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf someone needs the lion then they eat the lion.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Lion))\nTEXT:\tIf someone eats the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Bear) -> Kind(Bear))\nTEXT:\tIf someone is blue then they visit the bear.\nFOL:\tall x. (Blue(x) -> Visits(x, Bear))\nTEXT:\tIf the lion is rough and the lion eats the squirrel then the lion is blue.\nFOL:\t(Rough(Lion) & Eats(Lion, Squirrel) -> Blue(Lion))\nTEXT:\tIf someone is blue and they visit the bear then the bear needs the bald eagle.\nFOL:\tall x. (Blue(x) & Visits(x, Bear) -> Needs(Bear, BaldEagle))\nTEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the bald eagle.\nFOL:\tNeeds(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the lion.\nFOL:\tVisits(Squirrel, Lion)\nTEXT:\tIf someone is blue and rough then they need the bear.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Needs(x, Bear))\nTEXT:\tIf someone needs the bald eagle then they are blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf someone needs the lion then they eat the lion.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Lion))\nTEXT:\tIf someone eats the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Bear) -> Kind(Bear))\nTEXT:\tIf someone is blue then they visit the bear.\nFOL:\tall x. (Blue(x) -> Visits(x, Bear))\nTEXT:\tIf the lion is rough and the lion eats the squirrel then the lion is blue.\nFOL:\t((Rough(Lion) & Eats(Lion, Squirrel)) -> Blue(Lion))\nTEXT:\tIf someone is blue and they visit the bear then the bear needs the bald eagle.\nFOL:\tall x. ((Blue(x) & Visits(x, Bear)) -> Needs(Bear, BaldEagle))\nTEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the bald eagle.\nFOL:\tNeeds(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the lion.\nFOL:\tVisits(Squirrel, Lion)\nTEXT:\tIf someone is blue and rough then they need the bear.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Needs(x, Bear))\nTEXT:\tIf someone needs the bald eagle then they are blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf someone needs the lion then they eat the lion.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Lion))\nTEXT:\tIf someone eats the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Bear) -> Kind(Bear))\nTEXT:\tIf someone is blue then they visit the bear.\nFOL:\tall x. (Blue(x) -> Visits(x, Bear))\nTEXT:\tIf the lion is rough and the lion eats the squirrel then the lion is blue.\nFOL:\t(Rough(Lion) & Eats(Lion, Squirrel)) -> Blue(Lion)\nTEXT:\tIf someone is blue and they visit the bear then the bear needs the bald eagle.\nFOL:\tall x. ((Blue(x) & Visits(x, Bear)) -> Needs(Bear, BaldEagle))\nTEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nANSWER:\tFalse\n"], ["TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tGreen, nice things are quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tRound, rough things are green.\nFOL:\tall x. (Round(x) & Rough(x) -> Green(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll quiet things are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, nice things are quiet.\nFOL:\tall x. (Rough(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll quiet, green things are rough.\nFOL:\tall x. (Quiet(x) & Green(x) -> Rough(x))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Blue(x))\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tGreen, nice things are quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tRound, rough things are green.\nFOL:\tall x. (Round(x) & Rough(x) -> Green(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll quiet things are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, nice things are quiet.\nFOL:\tall x. (Rough(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll quiet, green things are rough.\nFOL:\tall x. (Quiet(x) & Green(x) -> Rough(x))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Blue(x))\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nANSWER:\tTrue\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tGreen, nice things are quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tRound, rough things are green.\nFOL:\tall x. (Round(x) & Rough(x) -> Green(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll quiet things are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, nice things are quiet.\nFOL:\tall x. (Rough(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll quiet, green things are rough.\nFOL:\tall x. (Quiet(x) & Green(x) -> Rough(x))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Blue(x))\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nANSWER:\tTrue\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tGreen, nice things are quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tRound, rough things are green.\nFOL:\tall x. (Round(x) & Rough(x) -> Green(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll quiet things are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, nice things are quiet.\nFOL:\tall x. (Rough(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll quiet, green things are rough.\nFOL:\tall x. (Quiet(x) & Green(x) -> Rough(x))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Blue(x))\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nANSWER:\tTrue\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tGreen, nice things are quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tRound, rough things are green.\nFOL:\tall x. (Round(x) & Rough(x) -> Green(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll quiet things are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, nice things are quiet.\nFOL:\tall x. (Rough(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll quiet, green things are rough.\nFOL:\tall x. (Quiet(x) & Green(x) -> Rough(x))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Blue(x))\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tWhite, kind things are nice.\nFOL:\tall x. ((White(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is smart and kind then it is green.\nFOL:\tall x. ((Smart(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is round and kind then it is white.\nFOL:\tall x. ((Round(x) & Kind(x)) -> White(x))\nTEXT:\tSmart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tNice, white things are kind.\nFOL:\tall x. ((Nice(x) & White(x)) -> Kind(x))\nTEXT:\tRound things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is nice then it is smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Charlie is green then Charlie is white.\nFOL:\t(Green(Charlie) -> White(Charlie))\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tWhite, kind things are nice.\nFOL:\tall x. (White(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is smart and kind then it is green.\nFOL:\tall x. (Smart(x) & Kind(x) -> Green(x))\nTEXT:\tIf something is round and kind then it is white.\nFOL:\tall x. (Round(x) & Kind(x) -> White(x))\nTEXT:\tSmart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tNice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tRound things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is nice then it is smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Charlie is green then Charlie is white.\nFOL:\tGreen(Charlie) -> White(Charlie)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tWhite, kind things are nice.\nFOL:\tall x. (White(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is smart and kind then it is green.\nFOL:\tall x. (Smart(x) & Kind(x) -> Green(x))\nTEXT:\tIf something is round and kind then it is white.\nFOL:\tall x. (Round(x) & Kind(x) -> White(x))\nTEXT:\tSmart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tNice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tRound things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is nice then it is smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Charlie is green then Charlie is white.\nFOL:\tGreen(Charlie) -> White(Charlie)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tWhite, kind things are nice.\nFOL:\tall x. ((White(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is smart and kind then it is green.\nFOL:\tall x. ((Smart(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is round and kind then it is white.\nFOL:\tall x. ((Round(x) & Kind(x)) -> White(x))\nTEXT:\tSmart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tNice, white things are kind.\nFOL:\tall x. ((Nice(x) & White(x)) -> Kind(x))\nTEXT:\tRound things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is nice then it is smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Charlie is green then Charlie is white.\nFOL:\tGreen(Charlie) -> White(Charlie)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tWhite, kind things are nice.\nFOL:\tall x. (White(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is smart and kind then it is green.\nFOL:\tall x. (Smart(x) & Kind(x) -> Green(x))\nTEXT:\tIf something is round and kind then it is white.\nFOL:\tall x. (Round(x) & Kind(x) -> White(x))\nTEXT:\tSmart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tNice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tRound things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is nice then it is smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Charlie is green then Charlie is white.\nFOL:\tGreen(Charlie) -> White(Charlie)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf Gary is rough and Gary is young then Gary is quiet.\nFOL:\tRough(Gary) & Young(Gary) -> Quiet(Gary)\nTEXT:\tAll quiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tYoung, blue things are red.\nFOL:\tall x. (Young(x) & Blue(x) -> Red(x))\nTEXT:\tFurry, rough things are red.\nFOL:\tall x. (Furry(x) & Rough(x) -> Red(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll young, rough things are cold.\nFOL:\tall x. (Young(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is rough and not young then it is cold.\nFOL:\tall x. (Rough(x) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tAll young things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf Gary is rough and Gary is young then Gary is quiet.\nFOL:\t(Rough(Gary) & Young(Gary)) -> Quiet(Gary)\nTEXT:\tAll quiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tYoung, blue things are red.\nFOL:\tall x. ((Young(x) & Blue(x)) -> Red(x))\nTEXT:\tFurry, rough things are red.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Red(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll young, rough things are cold.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Cold(x))\nTEXT:\tIf something is rough and not young then it is cold.\nFOL:\tall x. ((Rough(x) & -Young(x)) -> Cold(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tAll young things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf Gary is rough and Gary is young then Gary is quiet.\nFOL:\tRough(Gary) & Young(Gary) -> Quiet(Gary)\nTEXT:\tAll quiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tYoung, blue things are red.\nFOL:\tall x. (Young(x) & Blue(x) -> Red(x))\nTEXT:\tFurry, rough things are red.\nFOL:\tall x. (Furry(x) & Rough(x) -> Red(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll young, rough things are cold.\nFOL:\tall x. (Young(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is rough and not young then it is cold.\nFOL:\tall x. (Rough(x) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tAll young things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf Gary is rough and Gary is young then Gary is quiet.\nFOL:\t(Rough(Gary) & Young(Gary)) -> Quiet(Gary)\nTEXT:\tAll quiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tYoung, blue things are red.\nFOL:\tall x. (Young(x) & Blue(x) -> Red(x))\nTEXT:\tFurry, rough things are red.\nFOL:\tall x. (Furry(x) & Rough(x) -> Red(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll young, rough things are cold.\nFOL:\tall x. (Young(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is rough and not young then it is cold.\nFOL:\tall x. (Rough(x) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tAll young things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf Gary is rough and Gary is young then Gary is quiet.\nFOL:\t(Rough(Gary) & Young(Gary)) -> Quiet(Gary)\nTEXT:\tAll quiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tYoung, blue things are red.\nFOL:\tall x. (Young(x) & Blue(x) -> Red(x))\nTEXT:\tFurry, rough things are red.\nFOL:\tall x. (Furry(x) & Rough(x) -> Red(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll young, rough things are cold.\nFOL:\tall x. (Young(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is rough and not young then it is cold.\nFOL:\tall x. (Rough(x) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tAll young things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tAll red, rough things are nice.\nFOL:\tall x. (Red(x) & Rough(x) -> Nice(x))\nTEXT:\tIf something chases the cow and the cow chases the bear then the bear is big.\nFOL:\tall x. (Chases(x, Cow) & Chases(Cow, Bear) -> Big(Bear))\nTEXT:\tIf something sees the mouse then the mouse is nice.\nFOL:\tall x. (Sees(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf something chases the cow then it is red.\nFOL:\tall x. (Chases(x, Cow) -> Red(x))\nTEXT:\tIf the cow needs the rabbit then the rabbit is rough.\nFOL:\t(Needs(Cow, Rabbit) -> Rough(Rabbit))\nTEXT:\tIf something chases the cow then the cow chases the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(Cow, Bear))\nTEXT:\tIf something needs the bear and the bear is rough then it sees the bear.\nFOL:\tall x. (Needs(x, Bear) & Rough(Bear) -> Sees(x, Bear))\nTEXT:\tIf something is nice then it sees the mouse.\nFOL:\tall x. (Nice(x) -> Sees(x, Mouse))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nANSWER:\tFalse\n", "TEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tAll red, rough things are nice.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Nice(x))\nTEXT:\tIf something chases the cow and the cow chases the bear then the bear is big.\nFOL:\tall x. ((Chases(x, Cow) & Chases(Cow, Bear)) -> Big(Bear))\nTEXT:\tIf something sees the mouse then the mouse is nice.\nFOL:\tall x. (Sees(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf something chases the cow then it is red.\nFOL:\tall x. (Chases(x, Cow) -> Red(x))\nTEXT:\tIf the cow needs the rabbit then the rabbit is rough.\nFOL:\t(Needs(Cow, Rabbit) -> Rough(Rabbit))\nTEXT:\tIf something chases the cow then the cow chases the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(Cow, Bear))\nTEXT:\tIf something needs the bear and the bear is rough then it sees the bear.\nFOL:\tall x. ((Needs(x, Bear) & Rough(Bear)) -> Sees(x, Bear))\nTEXT:\tIf something is nice then it sees the mouse.\nFOL:\tall x. (Nice(x) -> Sees(x, Mouse))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tAll red, rough things are nice.\nFOL:\tall x. (Red(x) & Rough(x) -> Nice(x))\nTEXT:\tIf something chases the cow and the cow chases the bear then the bear is big.\nFOL:\tall x. (Chases(x, Cow) & Chases(Cow, Bear) -> Big(Bear))\nTEXT:\tIf something sees the mouse then the mouse is nice.\nFOL:\tall x. (Sees(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf something chases the cow then it is red.\nFOL:\tall x. (Chases(x, Cow) -> Red(x))\nTEXT:\tIf the cow needs the rabbit then the rabbit is rough.\nFOL:\t(Needs(Cow, Rabbit) -> Rough(Rabbit))\nTEXT:\tIf something chases the cow then the cow chases the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(Cow, Bear))\nTEXT:\tIf something needs the bear and the bear is rough then it sees the bear.\nFOL:\tall x. (Needs(x, Bear) & Rough(Bear) -> Sees(x, Bear))\nTEXT:\tIf something is nice then it sees the mouse.\nFOL:\tall x. (Nice(x) -> Sees(x, Mouse))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tAll red, rough things are nice.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Nice(x))\nTEXT:\tIf something chases the cow and the cow chases the bear then the bear is big.\nFOL:\tall x. ((Chases(x, Cow) & Chases(Cow, Bear)) -> Big(Bear))\nTEXT:\tIf something sees the mouse then the mouse is nice.\nFOL:\tall x. (Sees(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf something chases the cow then it is red.\nFOL:\tall x. (Chases(x, Cow) -> Red(x))\nTEXT:\tIf the cow needs the rabbit then the rabbit is rough.\nFOL:\t(Needs(Cow, Rabbit) -> Rough(Rabbit))\nTEXT:\tIf something chases the cow then the cow chases the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(Cow, Bear))\nTEXT:\tIf something needs the bear and the bear is rough then it sees the bear.\nFOL:\tall x. ((Needs(x, Bear) & Rough(Bear)) -> Sees(x, Bear))\nTEXT:\tIf something is nice then it sees the mouse.\nFOL:\tall x. (Nice(x) -> Sees(x, Mouse))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tAll red, rough things are nice.\nFOL:\tall x. (Red(x) & Rough(x) -> Nice(x))\nTEXT:\tIf something chases the cow and the cow chases the bear then the bear is big.\nFOL:\tall x. (Chases(x, Cow) & Chases(Cow, Bear) -> Big(Bear))\nTEXT:\tIf something sees the mouse then the mouse is nice.\nFOL:\tall x. (Sees(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf something chases the cow then it is red.\nFOL:\tall x. (Chases(x, Cow) -> Red(x))\nTEXT:\tIf the cow needs the rabbit then the rabbit is rough.\nFOL:\tall x. (Needs(x, Rabbit) -> Rough(Rabbit))\nTEXT:\tIf something chases the cow then the cow chases the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(Cow, Bear))\nTEXT:\tIf something needs the bear and the bear is rough then it sees the bear.\nFOL:\tall x. (Needs(x, Bear) & Rough(Bear) -> Sees(x, Bear))\nTEXT:\tIf something is nice then it sees the mouse.\nFOL:\tall x. (Nice(x) -> Sees(x, Mouse))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nANSWER:\tTrue\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tIf Charlie is kind and Charlie is young then Charlie is furry.\nFOL:\t(Kind(Charlie) & Young(Charlie)) -> Furry(Charlie)\nTEXT:\tIf someone is furry and rough then they are big.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young and furry then they are rough.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is furry and big then they are nice.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Nice(x))\nTEXT:\tIf someone is kind and nice then they are not cold.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> -Cold(x))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tIf Charlie is kind and Charlie is young then Charlie is furry.\nFOL:\t(Kind(Charlie) & Young(Charlie)) -> Furry(Charlie)\nTEXT:\tIf someone is furry and rough then they are big.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young and furry then they are rough.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is furry and big then they are nice.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Nice(x))\nTEXT:\tIf someone is kind and nice then they are not cold.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> -Cold(x))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tIf Charlie is kind and Charlie is young then Charlie is furry.\nFOL:\tKind(Charlie) & Young(Charlie) -> Furry(Charlie)\nTEXT:\tIf someone is furry and rough then they are big.\nFOL:\tall x. (Furry(x) & Rough(x) -> Big(x))\nTEXT:\tIf someone is young and furry then they are rough.\nFOL:\tall x. (Young(x) & Furry(x) -> Rough(x))\nTEXT:\tIf someone is furry and big then they are nice.\nFOL:\tall x. (Furry(x) & Big(x) -> Nice(x))\nTEXT:\tIf someone is kind and nice then they are not cold.\nFOL:\tall x. (Kind(x) & Nice(x) -> -Cold(x))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tIf Charlie is kind and Charlie is young then Charlie is furry.\nFOL:\t(Kind(Charlie) & Young(Charlie)) -> Furry(Charlie)\nTEXT:\tIf someone is furry and rough then they are big.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young and furry then they are rough.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is furry and big then they are nice.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Nice(x))\nTEXT:\tIf someone is kind and nice then they are not cold.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> -Cold(x))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tIf Charlie is kind and Charlie is young then Charlie is furry.\nFOL:\tKind(Charlie) & Young(Charlie) -> Furry(Charlie)\nTEXT:\tIf someone is furry and rough then they are big.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young and furry then they are rough.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is furry and big then they are nice.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Nice(x))\nTEXT:\tIf someone is kind and nice then they are not cold.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> -Cold(x))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tNice, smart things are quiet.\nFOL:\tall x. (Nice(x) & Smart(x) -> Quiet(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart things are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf Bob is furry and Bob is smart then Bob is red.\nFOL:\t(Furry(Bob) & Smart(Bob) -> Red(Bob))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tIf something is red then it is nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tNice, smart things are quiet.\nFOL:\tall x. (Nice(x) & Smart(x) -> Quiet(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart things are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf Bob is furry and Bob is smart then Bob is red.\nFOL:\t(Furry(Bob) & Smart(Bob)) -> Red(Bob)\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tIf something is red then it is nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tNice, smart things are quiet.\nFOL:\tall x. (Nice(x) & Smart(x) -> Quiet(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart things are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf Bob is furry and Bob is smart then Bob is red.\nFOL:\t(Furry(Bob) & Smart(Bob) -> Red(Bob))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tIf something is red then it is nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tNice, smart things are quiet.\nFOL:\tall x. (Nice(x) & Smart(x) -> Quiet(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart things are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf Bob is furry and Bob is smart then Bob is red.\nFOL:\t(Furry(Bob) & Smart(Bob)) -> Red(Bob)\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tIf something is red then it is nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tNice, smart things are quiet.\nFOL:\tall x. ((Nice(x) & Smart(x)) -> Quiet(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart things are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf Bob is furry and Bob is smart then Bob is red.\nFOL:\t(Furry(Bob) & Smart(Bob)) -> Red(Bob)\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tIf something is red then it is nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll round, quiet things are cold.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Cold(x))\nTEXT:\tAll big, round things are green.\nFOL:\tall x. ((Big(x) & Round(x)) -> Green(x))\nTEXT:\tIf something is big and quiet then it is round.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Round(x))\nTEXT:\tIf something is rough and quiet then it is green.\nFOL:\tall x. ((Rough(x) & Quiet(x)) -> Green(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll green things are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll round, quiet things are cold.\nFOL:\tall x. (Round(x) & Quiet(x) -> Cold(x))\nTEXT:\tAll big, round things are green.\nFOL:\tall x. (Big(x) & Round(x) -> Green(x))\nTEXT:\tIf something is big and quiet then it is round.\nFOL:\tall x. (Big(x) & Quiet(x) -> Round(x))\nTEXT:\tIf something is rough and quiet then it is green.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Green(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll green things are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll round, quiet things are cold.\nFOL:\tall x. (Round(x) & Quiet(x) -> Cold(x))\nTEXT:\tAll big, round things are green.\nFOL:\tall x. (Big(x) & Round(x) -> Green(x))\nTEXT:\tIf something is big and quiet then it is round.\nFOL:\tall x. (Big(x) & Quiet(x) -> Round(x))\nTEXT:\tIf something is rough and quiet then it is green.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Green(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll green things are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll round, quiet things are cold.\nFOL:\tall x. (Round(x) & Quiet(x) -> Cold(x))\nTEXT:\tAll big, round things are green.\nFOL:\tall x. (Big(x) & Round(x) -> Green(x))\nTEXT:\tIf something is big and quiet then it is round.\nFOL:\tall x. (Big(x) & Quiet(x) -> Round(x))\nTEXT:\tIf something is rough and quiet then it is green.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Green(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll green things are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll round, quiet things are cold.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Cold(x))\nTEXT:\tAll big, round things are green.\nFOL:\tall x. ((Big(x) & Round(x)) -> Green(x))\nTEXT:\tIf something is big and quiet then it is round.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Round(x))\nTEXT:\tIf something is rough and quiet then it is green.\nFOL:\tall x. ((Rough(x) & Quiet(x)) -> Green(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll green things are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll young things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tWhite, red things are quiet.\nFOL:\tall x. (White(x) & Red(x) -> Quiet(x))\nTEXT:\tAll furry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tWhite things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll big, red things are furry.\nFOL:\tall x. (Big(x) & Red(x) -> Furry(x))\nTEXT:\tIf something is smart then it is furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nANSWER:\tFalse\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll young things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tWhite, red things are quiet.\nFOL:\tall x. (White(x) & Red(x) -> Quiet(x))\nTEXT:\tAll furry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tWhite things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll big, red things are furry.\nFOL:\tall x. (Big(x) & Red(x) -> Furry(x))\nTEXT:\tIf something is smart then it is furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nANSWER:\tFalse\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll young things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tWhite, red things are quiet.\nFOL:\tall x. (White(x) & Red(x) -> Quiet(x))\nTEXT:\tAll furry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tWhite things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll big, red things are furry.\nFOL:\tall x. (Big(x) & Red(x) -> Furry(x))\nTEXT:\tIf something is smart then it is furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nANSWER:\tFalse\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll young things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tWhite, red things are quiet.\nFOL:\tall x. ((White(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll furry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tWhite things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll big, red things are furry.\nFOL:\tall x. ((Big(x) & Red(x)) -> Furry(x))\nTEXT:\tIf something is smart then it is furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nANSWER:\tFalse\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll young things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tWhite, red things are quiet.\nFOL:\tall x. (White(x) & Red(x) -> Quiet(x))\nTEXT:\tAll furry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tWhite things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll big, red things are furry.\nFOL:\tall x. (Big(x) & Red(x) -> Furry(x))\nTEXT:\tIf something is smart then it is furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion chases the cat.\nFOL:\tChases(Lion, Cat)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tIf something needs the lion then the lion chases the cat.\nFOL:\tall x. (Needs(x, Lion) -> Chases(Lion, Cat))\nTEXT:\tIf something chases the cat then the cat is cold.\nFOL:\tall x. (Chases(x, Cat) -> Cold(Cat))\nTEXT:\tIf something is big then it is young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf something needs the lion then the lion is big.\nFOL:\tall x. (Needs(x, Lion) -> Big(Lion))\nTEXT:\tIf something sees the lion then it does not see the bear.\nFOL:\tall x. (Sees(x, Lion) -> -Sees(x, Bear))\nTEXT:\tIf something chases the mouse then the mouse sees the cat.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf something sees the cat and it is kind then it is cold.\nFOL:\tall x. (Sees(x, Cat) & Kind(x) -> Cold(x))\nTEXT:\tIf something needs the bear and it is not young then it is cold.\nFOL:\tall x. (Needs(x, Bear) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tThe lion does not chase the mouse.\nFOL:\t-Chases(Lion, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion chases the cat.\nFOL:\tChases(Lion, Cat)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tIf something needs the lion then the lion chases the cat.\nFOL:\tall x. (Needs(x, Lion) -> Chases(Lion, Cat))\nTEXT:\tIf something chases the cat then the cat is cold.\nFOL:\tall x. (Chases(x, Cat) -> Cold(Cat))\nTEXT:\tIf something is big then it is young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf something needs the lion then the lion is big.\nFOL:\tall x. (Needs(x, Lion) -> Big(Lion))\nTEXT:\tIf something sees the lion then it does not see the bear.\nFOL:\tall x. (Sees(x, Lion) -> -Sees(x, Bear))\nTEXT:\tIf something chases the mouse then the mouse sees the cat.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf something sees the cat and it is kind then it is cold.\nFOL:\tall x. ((Sees(x, Cat) & Kind(x)) -> Cold(x))\nTEXT:\tIf something needs the bear and it is not young then it is cold.\nFOL:\tall x. ((Needs(x, Bear) & -Young(x)) -> Cold(x))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tThe lion does not chase the mouse.\nFOL:\t-Chases(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion chases the cat.\nFOL:\tChases(Lion, Cat)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tIf something needs the lion then the lion chases the cat.\nFOL:\tall x. (Needs(x, Lion) -> Chases(Lion, Cat))\nTEXT:\tIf something chases the cat then the cat is cold.\nFOL:\tall x. (Chases(x, Cat) -> Cold(Cat))\nTEXT:\tIf something is big then it is young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf something needs the lion then the lion is big.\nFOL:\tall x. (Needs(x, Lion) -> Big(Lion))\nTEXT:\tIf something sees the lion then it does not see the bear.\nFOL:\tall x. (Sees(x, Lion) -> -Sees(x, Bear))\nTEXT:\tIf something chases the mouse then the mouse sees the cat.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf something sees the cat and it is kind then it is cold.\nFOL:\tall x. ((Sees(x, Cat) & Kind(x)) -> Cold(x))\nTEXT:\tIf something needs the bear and it is not young then it is cold.\nFOL:\tall x. ((Needs(x, Bear) & -Young(x)) -> Cold(x))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tThe lion does not chase the mouse.\nFOL:\t-Chases(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion chases the cat.\nFOL:\tChases(Lion, Cat)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tIf something needs the lion then the lion chases the cat.\nFOL:\tall x. (Needs(x, Lion) -> Chases(Lion, Cat))\nTEXT:\tIf something chases the cat then the cat is cold.\nFOL:\tall x. (Chases(x, Cat) -> Cold(Cat))\nTEXT:\tIf something is big then it is young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf something needs the lion then the lion is big.\nFOL:\tall x. (Needs(x, Lion) -> Big(Lion))\nTEXT:\tIf something sees the lion then it does not see the bear.\nFOL:\tall x. (Sees(x, Lion) -> -Sees(x, Bear))\nTEXT:\tIf something chases the mouse then the mouse sees the cat.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf something sees the cat and it is kind then it is cold.\nFOL:\tall x. (Sees(x, Cat) & Kind(x) -> Cold(x))\nTEXT:\tIf something needs the bear and it is not young then it is cold.\nFOL:\tall x. (Needs(x, Bear) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tThe lion does not chase the mouse.\nFOL:\t-Chases(Lion, Mouse)\nANSWER:\tUncertain", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(bear, cat)\nTEXT:\tThe bear is round.\nFOL:\tRound(bear)\nTEXT:\tThe cat is round.\nFOL:\tRound(cat)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(lion, bear)\nTEXT:\tThe lion chases the cat.\nFOL:\tChases(lion, cat)\nTEXT:\tThe lion is kind.\nFOL:\tKind(lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(lion, bear)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(lion, mouse)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(mouse, cat)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(mouse, bear)\nTEXT:\tIf something needs the lion then the lion chases the cat.\nFOL:\tall x. (Needs(x, lion) -> Chases(lion, cat))\nTEXT:\tIf something chases the cat then the cat is cold.\nFOL:\tall x. (Chases(x, cat) -> Cold(cat))\nTEXT:\tIf something is big then it is young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf something needs the lion then the lion is big.\nFOL:\tall x. (Needs(x, lion) -> Big(lion))\nTEXT:\tIf something sees the lion then it does not see the bear.\nFOL:\tall x. (Sees(x, lion) -> -Sees(x, bear))\nTEXT:\tIf something chases the mouse then the mouse sees the cat.\nFOL:\tall x. (Chases(x, mouse) -> Sees(mouse, cat))\nTEXT:\tIf something sees the cat and it is kind then it is cold.\nFOL:\tall x. (Sees(x, cat) & Kind(x) -> Cold(x))\nTEXT:\tIf something needs the bear and it is not young then it is cold.\nFOL:\tall x. (Needs(x, bear) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, mouse))\nTEXT:\tThe lion does not chase the mouse.\nFOL:\t-Chases(lion, mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll white, green things are cold.\nFOL:\tall x. ((White(x) & Green(x)) -> Cold(x))\nTEXT:\tWhite things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tRed, smart things are not blue.\nFOL:\tall x. ((Red(x) & Smart(x)) -> -Blue(x))\nTEXT:\tAll red things are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tGreen, white things are quiet.\nFOL:\tall x. ((Green(x) & White(x)) -> Quiet(x))\nTEXT:\tSmart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tIf Charlie is quiet then Charlie is red.\nFOL:\tQuiet(Charlie) -> Red(Charlie)\nTEXT:\tIf something is blue and cold then it is smart.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Smart(x))\nTEXT:\tAll white, cold things are smart.\nFOL:\tall x. ((White(x) & Cold(x)) -> Smart(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll white, green things are cold.\nFOL:\tall x. ((White(x) & Green(x)) -> Cold(x))\nTEXT:\tWhite things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tRed, smart things are not blue.\nFOL:\tall x. ((Red(x) & Smart(x)) -> -Blue(x))\nTEXT:\tAll red things are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tGreen, white things are quiet.\nFOL:\tall x. ((Green(x) & White(x)) -> Quiet(x))\nTEXT:\tSmart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tIf Charlie is quiet then Charlie is red.\nFOL:\t(Quiet(Charlie) -> Red(Charlie))\nTEXT:\tIf something is blue and cold then it is smart.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Smart(x))\nTEXT:\tAll white, cold things are smart.\nFOL:\tall x. ((White(x) & Cold(x)) -> Smart(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tFalse\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll white, green things are cold.\nFOL:\tall x. ((White(x) & Green(x)) -> Cold(x))\nTEXT:\tWhite things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tRed, smart things are not blue.\nFOL:\tall x. ((Red(x) & Smart(x)) -> -Blue(x))\nTEXT:\tAll red things are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tGreen, white things are quiet.\nFOL:\tall x. ((Green(x) & White(x)) -> Quiet(x))\nTEXT:\tSmart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tIf Charlie is quiet then Charlie is red.\nFOL:\t(Quiet(Charlie) -> Red(Charlie))\nTEXT:\tIf something is blue and cold then it is smart.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Smart(x))\nTEXT:\tAll white, cold things are smart.\nFOL:\tall x. ((White(x) & Cold(x)) -> Smart(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll white, green things are cold.\nFOL:\tall x. (White(x) & Green(x) -> Cold(x))\nTEXT:\tWhite things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tRed, smart things are not blue.\nFOL:\tall x. (Red(x) & Smart(x) -> -Blue(x))\nTEXT:\tAll red things are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tGreen, white things are quiet.\nFOL:\tall x. (Green(x) & White(x) -> Quiet(x))\nTEXT:\tSmart, white things are red.\nFOL:\tall x. (Smart(x) & White(x) -> Red(x))\nTEXT:\tIf Charlie is quiet then Charlie is red.\nFOL:\tQuiet(Charlie) -> Red(Charlie)\nTEXT:\tIf something is blue and cold then it is smart.\nFOL:\tall x. (Blue(x) & Cold(x) -> Smart(x))\nTEXT:\tAll white, cold things are smart.\nFOL:\tall x. (White(x) & Cold(x) -> Smart(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll white, green things are cold.\nFOL:\tall x. ((White(x) & Green(x)) -> Cold(x))\nTEXT:\tWhite things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tRed, smart things are not blue.\nFOL:\tall x. ((Red(x) & Smart(x)) -> -Blue(x))\nTEXT:\tAll red things are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tGreen, white things are quiet.\nFOL:\tall x. ((Green(x) & White(x)) -> Quiet(x))\nTEXT:\tSmart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tIf Charlie is quiet then Charlie is red.\nFOL:\tQuiet(Charlie) -> Red(Charlie)\nTEXT:\tIf something is blue and cold then it is smart.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Smart(x))\nTEXT:\tAll white, cold things are smart.\nFOL:\tall x. ((White(x) & Cold(x)) -> Smart(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is blue and white then they are young.\nFOL:\tall x. (Blue(x) & White(x) -> Young(x))\nTEXT:\tBlue, big people are young.\nFOL:\tall x. (Blue(x) & Big(x) -> Young(x))\nTEXT:\tBlue, white people are round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tWhite, big people are blue.\nFOL:\tall x. (White(x) & Big(x) -> Blue(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tKind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll big, blue people are young.\nFOL:\tall x. (Big(x) & Blue(x) -> Young(x))\nTEXT:\tAnne is not blue.\nFOL:\t-Blue(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is blue and white then they are young.\nFOL:\tall x. (Blue(x) & White(x) -> Young(x))\nTEXT:\tBlue, big people are young.\nFOL:\tall x. (Blue(x) & Big(x) -> Young(x))\nTEXT:\tBlue, white people are round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tWhite, big people are blue.\nFOL:\tall x. (White(x) & Big(x) -> Blue(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tKind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll big, blue people are young.\nFOL:\tall x. (Big(x) & Blue(x) -> Young(x))\nTEXT:\tAnne is not blue.\nFOL:\t-Blue(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is blue and white then they are young.\nFOL:\tall x. ((Blue(x) & White(x)) -> Young(x))\nTEXT:\tBlue, big people are young.\nFOL:\tall x. ((Blue(x) & Big(x)) -> Young(x))\nTEXT:\tBlue, white people are round.\nFOL:\tall x. ((Blue(x) & White(x)) -> Round(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tWhite, big people are blue.\nFOL:\tall x. ((White(x) & Big(x)) -> Blue(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tKind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll big, blue people are young.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Young(x))\nTEXT:\tAnne is not blue.\nFOL:\t-Blue(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is blue and white then they are young.\nFOL:\tall x. ((Blue(x) & White(x)) -> Young(x))\nTEXT:\tBlue, big people are young.\nFOL:\tall x. ((Blue(x) & Big(x)) -> Young(x))\nTEXT:\tBlue, white people are round.\nFOL:\tall x. ((Blue(x) & White(x)) -> Round(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tWhite, big people are blue.\nFOL:\tall x. ((White(x) & Big(x)) -> Blue(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tKind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll big, blue people are young.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Young(x))\nTEXT:\tAnne is not blue.\nFOL:\t-Blue(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is blue and white then they are young.\nFOL:\tall x. ((Blue(x) & White(x)) -> Young(x))\nTEXT:\tBlue, big people are young.\nFOL:\tall x. ((Blue(x) & Big(x)) -> Young(x))\nTEXT:\tBlue, white people are round.\nFOL:\tall x. ((Blue(x) & White(x)) -> Round(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tWhite, big people are blue.\nFOL:\tall x. ((White(x) & Big(x)) -> Blue(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tKind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll big, blue people are young.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Young(x))\nTEXT:\tAnne is not blue.\nFOL:\t-Blue(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog does not visit the bald eagle.\nFOL:\t\u00acVisits(Dog, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tIf something sees the bear then the bear sees the lion.\nFOL:\tall x. (Sees(x, Bear) -> Sees(Bear, Lion))\nTEXT:\tIf the bear does not see the lion then the lion visits the bear.\nFOL:\t\u00acSees(Bear, Lion) -> Visits(Lion, Bear)\nTEXT:\tYoung things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf something is kind then it does not visit the lion.\nFOL:\tall x. (Kind(x) -> \u00acVisits(x, Lion))\nTEXT:\tIf something visits the lion and it is young then it does not chase the bald eagle.\nFOL:\tall x. ((Visits(x, Lion) & Young(x)) -> \u00acChases(x, BaldEagle))\nTEXT:\tIf something chases the bear then the bear is young.\nFOL:\tall x. (Chases(x, Bear) -> Young(Bear))\nTEXT:\tIf something visits the bear then the bear chases the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Chases(Bear, BaldEagle))\nTEXT:\tIf something chases the bear then it visits the bald eagle.\nFOL:\tall x. (Chases(x, Bear) -> Visits(x, BaldEagle))\nTEXT:\tIf something chases the bald eagle then the bald eagle chases the bear.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(BaldEagle, Bear))\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog does not visit the bald eagle.\nFOL:\t-Visits(Dog, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tIf something sees the bear then the bear sees the lion.\nFOL:\tall x. (Sees(x, Bear) -> Sees(Bear, Lion))\nTEXT:\tIf the bear does not see the lion then the lion visits the bear.\nFOL:\t-Sees(Bear, Lion) -> Visits(Lion, Bear)\nTEXT:\tYoung things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf something is kind then it does not visit the lion.\nFOL:\tall x. (Kind(x) -> -Visits(x, Lion))\nTEXT:\tIf something visits the lion and it is young then it does not chase the bald eagle.\nFOL:\tall x. (Visits(x, Lion) & Young(x) -> -Chases(x, BaldEagle))\nTEXT:\tIf something chases the bear then the bear is young.\nFOL:\tall x. (Chases(x, Bear) -> Young(Bear))\nTEXT:\tIf something visits the bear then the bear chases the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Chases(Bear, BaldEagle))\nTEXT:\tIf something chases the bear then it visits the bald eagle.\nFOL:\tall x. (Chases(x, Bear) -> Visits(x, BaldEagle))\nTEXT:\tIf something chases the bald eagle then the bald eagle chases the bear.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(BaldEagle, Bear))\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog does not visit the bald eagle.\nFOL:\t-Visits(Dog, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tIf something sees the bear then the bear sees the lion.\nFOL:\tall x. (Sees(x, Bear) -> Sees(Bear, Lion))\nTEXT:\tIf the bear does not see the lion then the lion visits the bear.\nFOL:\t-Sees(Bear, Lion) -> Visits(Lion, Bear)\nTEXT:\tYoung things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf something is kind then it does not visit the lion.\nFOL:\tall x. (Kind(x) -> -Visits(x, Lion))\nTEXT:\tIf something visits the lion and it is young then it does not chase the bald eagle.\nFOL:\tall x. ((Visits(x, Lion) & Young(x)) -> -Chases(x, BaldEagle))\nTEXT:\tIf something chases the bear then the bear is young.\nFOL:\tall x. (Chases(x, Bear) -> Young(Bear))\nTEXT:\tIf something visits the bear then the bear chases the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Chases(Bear, BaldEagle))\nTEXT:\tIf something chases the bear then it visits the bald eagle.\nFOL:\tall x. (Chases(x, Bear) -> Visits(x, BaldEagle))\nTEXT:\tIf something chases the bald eagle then the bald eagle chases the bear.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(BaldEagle, Bear))\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog does not visit the bald eagle.\nFOL:\t-Visits(Dog, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tIf something sees the bear then the bear sees the lion.\nFOL:\tall x. (Sees(x, Bear) -> Sees(Bear, Lion))\nTEXT:\tIf the bear does not see the lion then the lion visits the bear.\nFOL:\t-Sees(Bear, Lion) -> Visits(Lion, Bear)\nTEXT:\tYoung things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf something is kind then it does not visit the lion.\nFOL:\tall x. (Kind(x) -> -Visits(x, Lion))\nTEXT:\tIf something visits the lion and it is young then it does not chase the bald eagle.\nFOL:\tall x. (Young(x) & Visits(x, Lion) -> -Chases(x, BaldEagle))\nTEXT:\tIf something chases the bear then the bear is young.\nFOL:\tall x. (Chases(x, Bear) -> Young(Bear))\nTEXT:\tIf something visits the bear then the bear chases the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Chases(Bear, BaldEagle))\nTEXT:\tIf something chases the bear then it visits the bald eagle.\nFOL:\tall x. (Chases(x, Bear) -> Visits(x, BaldEagle))\nTEXT:\tIf something chases the bald eagle then the bald eagle chases the bear.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(BaldEagle, Bear))\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog does not visit the bald eagle.\nFOL:\t-Visits(Dog, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tIf something sees the bear then the bear sees the lion.\nFOL:\tall x. (Sees(x, Bear) -> Sees(Bear, Lion))\nTEXT:\tIf the bear does not see the lion then the lion visits the bear.\nFOL:\t-Sees(Bear, Lion) -> Visits(Lion, Bear)\nTEXT:\tYoung things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf something is kind then it does not visit the lion.\nFOL:\tall x. (Kind(x) -> -Visits(x, Lion))\nTEXT:\tIf something visits the lion and it is young then it does not chase the bald eagle.\nFOL:\tall x. (Visits(x, Lion) & Young(x) -> -Chases(x, BaldEagle))\nTEXT:\tIf something chases the bear then the bear is young.\nFOL:\tall x. (Chases(x, Bear) -> Young(Bear))\nTEXT:\tIf something visits the bear then the bear chases the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Chases(Bear, BaldEagle))\nTEXT:\tIf something chases the bear then it visits the bald eagle.\nFOL:\tall x. (Chases(x, Bear) -> Visits(x, BaldEagle))\nTEXT:\tIf something chases the bald eagle then the bald eagle chases the bear.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(BaldEagle, Bear))\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is not big.\nFOL:\t-Big(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll rough things are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is quiet and not young then it is round.\nFOL:\tall x. (Quiet(x) & -Young(x) -> Round(x))\nTEXT:\tBlue things are not round.\nFOL:\tall x. (Blue(x) -> -Round(x))\nTEXT:\tIf something is rough and not young then it is big.\nFOL:\tall x. (Rough(x) & -Young(x) -> Big(x))\nTEXT:\tIf something is round and cold then it is blue.\nFOL:\tall x. (Round(x) & Cold(x) -> Blue(x))\nTEXT:\tRound, rough things are blue.\nFOL:\tall x. (Round(x) & Rough(x) -> Blue(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is not big.\nFOL:\t-Big(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll rough things are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is quiet and not young then it is round.\nFOL:\tall x. ((Quiet(x) & -Young(x)) -> Round(x))\nTEXT:\tBlue things are not round.\nFOL:\tall x. (Blue(x) -> -Round(x))\nTEXT:\tIf something is rough and not young then it is big.\nFOL:\tall x. ((Rough(x) & -Young(x)) -> Big(x))\nTEXT:\tIf something is round and cold then it is blue.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Blue(x))\nTEXT:\tRound, rough things are blue.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nANSWER:\tTrue\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is not big.\nFOL:\t-Big(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll rough things are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is quiet and not young then it is round.\nFOL:\tall x. ((Quiet(x) & -Young(x)) -> Round(x))\nTEXT:\tBlue things are not round.\nFOL:\tall x. (Blue(x) -> -Round(x))\nTEXT:\tIf something is rough and not young then it is big.\nFOL:\tall x. ((Rough(x) & -Young(x)) -> Big(x))\nTEXT:\tIf something is round and cold then it is blue.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Blue(x))\nTEXT:\tRound, rough things are blue.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is not big.\nFOL:\t\u00acBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not big.\nFOL:\t\u00acBig(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll rough things are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is quiet and not young then it is round.\nFOL:\tall x. ((Quiet(x) & \u00acYoung(x)) -> Round(x))\nTEXT:\tBlue things are not round.\nFOL:\tall x. (Blue(x) -> \u00acRound(x))\nTEXT:\tIf something is rough and not young then it is big.\nFOL:\tall x. ((Rough(x) & \u00acYoung(x)) -> Big(x))\nTEXT:\tIf something is round and cold then it is blue.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Blue(x))\nTEXT:\tRound, rough things are blue.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tGary is not blue.\nFOL:\t\u00acBlue(Gary)\nANSWER:\tTrue\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is not big.\nFOL:\t-Big(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll rough things are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is quiet and not young then it is round.\nFOL:\tall x. (Quiet(x) & -Young(x) -> Round(x))\nTEXT:\tBlue things are not round.\nFOL:\tall x. (Blue(x) -> -Round(x))\nTEXT:\tIf something is rough and not young then it is big.\nFOL:\tall x. (Rough(x) & -Young(x) -> Big(x))\nTEXT:\tIf something is round and cold then it is blue.\nFOL:\tall x. (Round(x) & Cold(x) -> Blue(x))\nTEXT:\tRound, rough things are blue.\nFOL:\tall x. (Round(x) & Rough(x) -> Blue(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf something visits the tiger and the tiger is green then it is green.\nFOL:\tall x. ((Visits(x, Tiger) & Green(Tiger)) -> Green(x))\nTEXT:\tIf something likes the cat and the cat visits the cow then the cow is red.\nFOL:\tall x. ((Likes(x, Cat) & Visits(Cat, Cow)) -> Red(Cow))\nTEXT:\tIf something is rough and it likes the mouse then the mouse visits the cow.\nFOL:\tall x. ((Rough(x) & Likes(x, Mouse)) -> Visits(Mouse, Cow))\nTEXT:\tIf the cat visits the tiger and the tiger likes the cat then the cat visits the cow.\nFOL:\t((Visits(Cat, Tiger) & Likes(Tiger, Cat)) -> Visits(Cat, Cow))\nTEXT:\tIf something needs the tiger then it likes the cat.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Cat))\nTEXT:\tIf something visits the cow and the cow likes the mouse then the cow likes the tiger.\nFOL:\tall x. ((Visits(x, Cow) & Likes(Cow, Mouse)) -> Likes(Cow, Tiger))\nTEXT:\tIf something is red then it needs the tiger.\nFOL:\tall x. (Red(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the cow then it is blue.\nFOL:\tall x. (Likes(x, Cow) -> Blue(x))\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf something visits the tiger and the tiger is green then it is green.\nFOL:\tall x. ((Visits(x, Tiger) & Green(Tiger)) -> Green(x))\nTEXT:\tIf something likes the cat and the cat visits the cow then the cow is red.\nFOL:\tall x. ((Likes(x, Cat) & Visits(Cat, Cow)) -> Red(Cow))\nTEXT:\tIf something is rough and it likes the mouse then the mouse visits the cow.\nFOL:\tall x. ((Rough(x) & Likes(x, Mouse)) -> Visits(Mouse, Cow))\nTEXT:\tIf the cat visits the tiger and the tiger likes the cat then the cat visits the cow.\nFOL:\t(Visits(Cat, Tiger) & Likes(Tiger, Cat)) -> Visits(Cat, Cow)\nTEXT:\tIf something needs the tiger then it likes the cat.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Cat))\nTEXT:\tIf something visits the cow and the cow likes the mouse then the cow likes the tiger.\nFOL:\tall x. ((Visits(x, Cow) & Likes(Cow, Mouse)) -> Likes(Cow, Tiger))\nTEXT:\tIf something is red then it needs the tiger.\nFOL:\tall x. (Red(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the cow then it is blue.\nFOL:\tall x. (Likes(x, Cow) -> Blue(x))\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf something visits the tiger and the tiger is green then it is green.\nFOL:\tall x. (Visits(x, Tiger) & Green(Tiger) -> Green(x))\nTEXT:\tIf something likes the cat and the cat visits the cow then the cow is red.\nFOL:\tall x. (Likes(x, Cat) & Visits(Cat, Cow) -> Red(Cow))\nTEXT:\tIf something is rough and it likes the mouse then the mouse visits the cow.\nFOL:\tall x. (Rough(x) & Likes(x, Mouse) -> Visits(Mouse, Cow))\nTEXT:\tIf the cat visits the tiger and the tiger likes the cat then the cat visits the cow.\nFOL:\t(Visits(Cat, Tiger) & Likes(Tiger, Cat) -> Visits(Cat, Cow))\nTEXT:\tIf something needs the tiger then it likes the cat.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Cat))\nTEXT:\tIf something visits the cow and the cow likes the mouse then the cow likes the tiger.\nFOL:\tall x. (Visits(x, Cow) & Likes(Cow, Mouse) -> Likes(Cow, Tiger))\nTEXT:\tIf something is red then it needs the tiger.\nFOL:\tall x. (Red(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the cow then it is blue.\nFOL:\tall x. (Likes(x, Cow) -> Blue(x))\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf something visits the tiger and the tiger is green then it is green.\nFOL:\tall x. ((Visits(x, Tiger) & Green(Tiger)) -> Green(x))\nTEXT:\tIf something likes the cat and the cat visits the cow then the cow is red.\nFOL:\tall x. ((Likes(x, Cat) & Visits(Cat, Cow)) -> Red(Cow))\nTEXT:\tIf something is rough and it likes the mouse then the mouse visits the cow.\nFOL:\tall x. ((Rough(x) & Likes(x, Mouse)) -> Visits(Mouse, Cow))\nTEXT:\tIf the cat visits the tiger and the tiger likes the cat then the cat visits the cow.\nFOL:\t((Visits(Cat, Tiger) & Likes(Tiger, Cat)) -> Visits(Cat, Cow))\nTEXT:\tIf something needs the tiger then it likes the cat.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Cat))\nTEXT:\tIf something visits the cow and the cow likes the mouse then the cow likes the tiger.\nFOL:\tall x. ((Visits(x, Cow) & Likes(Cow, Mouse)) -> Likes(Cow, Tiger))\nTEXT:\tIf something is red then it needs the tiger.\nFOL:\tall x. (Red(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the cow then it is blue.\nFOL:\tall x. (Likes(x, Cow) -> Blue(x))\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf something visits the tiger and the tiger is green then it is green.\nFOL:\tall x. ((Visits(x, Tiger) & Green(Tiger)) -> Green(x))\nTEXT:\tIf something likes the cat and the cat visits the cow then the cow is red.\nFOL:\tall x. ((Likes(x, Cat) & Visits(Cat, Cow)) -> Red(Cow))\nTEXT:\tIf something is rough and it likes the mouse then the mouse visits the cow.\nFOL:\tall x. ((Rough(x) & Likes(x, Mouse)) -> Visits(Mouse, Cow))\nTEXT:\tIf the cat visits the tiger and the tiger likes the cat then the cat visits the cow.\nFOL:\t((Visits(Cat, Tiger) & Likes(Tiger, Cat)) -> Visits(Cat, Cow))\nTEXT:\tIf something needs the tiger then it likes the cat.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Cat))\nTEXT:\tIf something visits the cow and the cow likes the mouse then the cow likes the tiger.\nFOL:\tall x. ((Visits(x, Cow) & Likes(Cow, Mouse)) -> Likes(Cow, Tiger))\nTEXT:\tIf something is red then it needs the tiger.\nFOL:\tall x. (Red(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the cow then it is blue.\nFOL:\tall x. (Likes(x, Cow) -> Blue(x))\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFurry, smart things are big.\nFOL:\tall x. (Furry(x) & Smart(x) -> Big(x))\nTEXT:\tWhite, big things are green.\nFOL:\tall x. (White(x) & Big(x) -> Green(x))\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is smart.\nFOL:\tall x. (Nice(x) & Furry(x) -> Smart(x))\nTEXT:\tIf something is furry and green then it is white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tYoung, big things are white.\nFOL:\tall x. (Young(x) & Big(x) -> White(x))\nTEXT:\tIf Erin is young then Erin is furry.\nFOL:\tYoung(Erin) -> Furry(Erin)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFurry, smart things are big.\nFOL:\tall x. ((Furry(x) & Smart(x)) -> Big(x))\nTEXT:\tWhite, big things are green.\nFOL:\tall x. ((White(x) & Big(x)) -> Green(x))\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is smart.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Smart(x))\nTEXT:\tIf something is furry and green then it is white.\nFOL:\tall x. ((Furry(x) & Green(x)) -> White(x))\nTEXT:\tYoung, big things are white.\nFOL:\tall x. ((Young(x) & Big(x)) -> White(x))\nTEXT:\tIf Erin is young then Erin is furry.\nFOL:\tYoung(Erin) -> Furry(Erin)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFurry, smart things are big.\nFOL:\tall x. (Furry(x) & Smart(x) -> Big(x))\nTEXT:\tWhite, big things are green.\nFOL:\tall x. (White(x) & Big(x) -> Green(x))\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is smart.\nFOL:\tall x. (Nice(x) & Furry(x) -> Smart(x))\nTEXT:\tIf something is furry and green then it is white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tYoung, big things are white.\nFOL:\tall x. (Young(x) & Big(x) -> White(x))\nTEXT:\tIf Erin is young then Erin is furry.\nFOL:\t(Young(Erin) -> Furry(Erin))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFurry, smart things are big.\nFOL:\tall x. (Furry(x) & Smart(x) -> Big(x))\nTEXT:\tWhite, big things are green.\nFOL:\tall x. (White(x) & Big(x) -> Green(x))\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is smart.\nFOL:\tall x. (Nice(x) & Furry(x) -> Smart(x))\nTEXT:\tIf something is furry and green then it is white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tYoung, big things are white.\nFOL:\tall x. (Young(x) & Big(x) -> White(x))\nTEXT:\tIf Erin is young then Erin is furry.\nFOL:\tYoung(Erin) -> Furry(Erin)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFurry, smart things are big.\nFOL:\tall x. ((Furry(x) & Smart(x)) -> Big(x))\nTEXT:\tWhite, big things are green.\nFOL:\tall x. ((White(x) & Big(x)) -> Green(x))\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is smart.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Smart(x))\nTEXT:\tIf something is furry and green then it is white.\nFOL:\tall x. ((Furry(x) & Green(x)) -> White(x))\nTEXT:\tYoung, big things are white.\nFOL:\tall x. ((Young(x) & Big(x)) -> White(x))\nTEXT:\tIf Erin is young then Erin is furry.\nFOL:\t(Young(Erin) -> Furry(Erin))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is kind and round then it is quiet.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf something is white and round then it is kind.\nFOL:\tall x. ((White(x) & Round(x)) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is white.\nFOL:\tCold(Erin) -> White(Erin)\nTEXT:\tIf Dave is quiet then Dave is cold.\nFOL:\tQuiet(Dave) -> Cold(Dave)\nTEXT:\tIf something is round then it is smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll quiet things are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Anne is quiet then Anne is smart.\nFOL:\tQuiet(Anne) -> Smart(Anne)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is kind and round then it is quiet.\nFOL:\tall x. (Kind(x) & Round(x) -> Quiet(x))\nTEXT:\tIf something is white and round then it is kind.\nFOL:\tall x. (White(x) & Round(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is white.\nFOL:\tCold(Erin) -> White(Erin)\nTEXT:\tIf Dave is quiet then Dave is cold.\nFOL:\tQuiet(Dave) -> Cold(Dave)\nTEXT:\tIf something is round then it is smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll quiet things are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Anne is quiet then Anne is smart.\nFOL:\tQuiet(Anne) -> Smart(Anne)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is kind and round then it is quiet.\nFOL:\tall x. (Kind(x) & Round(x) -> Quiet(x))\nTEXT:\tIf something is white and round then it is kind.\nFOL:\tall x. (White(x) & Round(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is white.\nFOL:\tCold(Erin) -> White(Erin)\nTEXT:\tIf Dave is quiet then Dave is cold.\nFOL:\tQuiet(Dave) -> Cold(Dave)\nTEXT:\tIf something is round then it is smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll quiet things are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Anne is quiet then Anne is smart.\nFOL:\tQuiet(Anne) -> Smart(Anne)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is kind and round then it is quiet.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf something is white and round then it is kind.\nFOL:\tall x. ((White(x) & Round(x)) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is white.\nFOL:\tCold(Erin) -> White(Erin)\nTEXT:\tIf Dave is quiet then Dave is cold.\nFOL:\tQuiet(Dave) -> Cold(Dave)\nTEXT:\tIf something is round then it is smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll quiet things are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Anne is quiet then Anne is smart.\nFOL:\tQuiet(Anne) -> Smart(Anne)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is kind and round then it is quiet.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf something is white and round then it is kind.\nFOL:\tall x. ((White(x) & Round(x)) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is white.\nFOL:\tCold(Erin) -> White(Erin)\nTEXT:\tIf Dave is quiet then Dave is cold.\nFOL:\tQuiet(Dave) -> Cold(Dave)\nTEXT:\tIf something is round then it is smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll quiet things are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Anne is quiet then Anne is smart.\nFOL:\tQuiet(Anne) -> Smart(Anne)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll smart people are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tFurry, green people are white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tIf someone is nice and white then they are furry.\nFOL:\tall x. (Nice(x) & White(x) -> Furry(x))\nTEXT:\tAll young people are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and young then they are nice.\nFOL:\tall x. (Furry(x) & Young(x) -> Nice(x))\nTEXT:\tIf someone is nice and not young then they are green.\nFOL:\tall x. (Nice(x) & -Young(x) -> Green(x))\nTEXT:\tNice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll smart people are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tFurry, green people are white.\nFOL:\tall x. ((Furry(x) & Green(x)) -> White(x))\nTEXT:\tIf someone is nice and white then they are furry.\nFOL:\tall x. ((Nice(x) & White(x)) -> Furry(x))\nTEXT:\tAll young people are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and young then they are nice.\nFOL:\tall x. ((Furry(x) & Young(x)) -> Nice(x))\nTEXT:\tIf someone is nice and not young then they are green.\nFOL:\tall x. ((Nice(x) & -Young(x)) -> Green(x))\nTEXT:\tNice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll smart people are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tFurry, green people are white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tIf someone is nice and white then they are furry.\nFOL:\tall x. (Nice(x) & White(x) -> Furry(x))\nTEXT:\tAll young people are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and young then they are nice.\nFOL:\tall x. (Furry(x) & Young(x) -> Nice(x))\nTEXT:\tIf someone is nice and not young then they are green.\nFOL:\tall x. (Nice(x) & -Young(x) -> Green(x))\nTEXT:\tNice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll smart people are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tFurry, green people are white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tIf someone is nice and white then they are furry.\nFOL:\tall x. (Nice(x) & White(x) -> Furry(x))\nTEXT:\tAll young people are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and young then they are nice.\nFOL:\tall x. (Furry(x) & Young(x) -> Nice(x))\nTEXT:\tIf someone is nice and not young then they are green.\nFOL:\tall x. (Nice(x) & -Young(x) -> Green(x))\nTEXT:\tNice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll smart people are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tFurry, green people are white.\nFOL:\tall x. ((Furry(x) & Green(x)) -> White(x))\nTEXT:\tIf someone is nice and white then they are furry.\nFOL:\tall x. ((Nice(x) & White(x)) -> Furry(x))\nTEXT:\tAll young people are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and young then they are nice.\nFOL:\tall x. ((Furry(x) & Young(x)) -> Nice(x))\nTEXT:\tIf someone is nice and not young then they are green.\nFOL:\tall x. ((Nice(x) & -Young(x)) -> Green(x))\nTEXT:\tNice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Charlie is round and Charlie is big then Charlie is smart.\nFOL:\t(Round(Charlie) & Big(Charlie)) -> Smart(Charlie)\nTEXT:\tIf something is smart and not red then it is round.\nFOL:\tall x. ((Smart(x) & -Red(x)) -> Round(x))\nTEXT:\tAll red, young things are round.\nFOL:\tall x. ((Red(x) & Young(x)) -> Round(x))\nTEXT:\tBig things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tRed things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll round, red things are cold.\nFOL:\tall x. ((Round(x) & Red(x)) -> Cold(x))\nTEXT:\tAll round, green things are cold.\nFOL:\tall x. ((Round(x) & Green(x)) -> Cold(x))\nTEXT:\tIf something is red and cold then it is green.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Green(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Charlie is round and Charlie is big then Charlie is smart.\nFOL:\t(Round(Charlie) & Big(Charlie)) -> Smart(Charlie)\nTEXT:\tIf something is smart and not red then it is round.\nFOL:\tall x. (Smart(x) & -Red(x)) -> Round(x)\nTEXT:\tAll red, young things are round.\nFOL:\tall x. (Red(x) & Young(x)) -> Round(x)\nTEXT:\tBig things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tRed things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll round, red things are cold.\nFOL:\tall x. (Round(x) & Red(x)) -> Cold(x)\nTEXT:\tAll round, green things are cold.\nFOL:\tall x. (Round(x) & Green(x)) -> Cold(x)\nTEXT:\tIf something is red and cold then it is green.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Green(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Charlie is round and Charlie is big then Charlie is smart.\nFOL:\t(Round(Charlie) & Big(Charlie)) -> Smart(Charlie)\nTEXT:\tIf something is smart and not red then it is round.\nFOL:\tall x. ((Smart(x) & -Red(x)) -> Round(x))\nTEXT:\tAll red, young things are round.\nFOL:\tall x. ((Red(x) & Young(x)) -> Round(x))\nTEXT:\tBig things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tRed things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll round, red things are cold.\nFOL:\tall x. ((Round(x) & Red(x)) -> Cold(x))\nTEXT:\tAll round, green things are cold.\nFOL:\tall x. ((Round(x) & Green(x)) -> Cold(x))\nTEXT:\tIf something is red and cold then it is green.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Green(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Charlie is round and Charlie is big then Charlie is smart.\nFOL:\t(Round(Charlie) & Big(Charlie)) -> Smart(Charlie)\nTEXT:\tIf something is smart and not red then it is round.\nFOL:\tall x. ((Smart(x) & -Red(x)) -> Round(x))\nTEXT:\tAll red, young things are round.\nFOL:\tall x. ((Red(x) & Young(x)) -> Round(x))\nTEXT:\tBig things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tRed things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll round, red things are cold.\nFOL:\tall x. ((Round(x) & Red(x)) -> Cold(x))\nTEXT:\tAll round, green things are cold.\nFOL:\tall x. ((Round(x) & Green(x)) -> Cold(x))\nTEXT:\tIf something is red and cold then it is green.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Green(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Charlie is round and Charlie is big then Charlie is smart.\nFOL:\t(Round(Charlie) & Big(Charlie)) -> Smart(Charlie)\nTEXT:\tIf something is smart and not red then it is round.\nFOL:\tall x. ((Smart(x) & -Red(x)) -> Round(x))\nTEXT:\tAll red, young things are round.\nFOL:\tall x. ((Red(x) & Young(x)) -> Round(x))\nTEXT:\tBig things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tRed things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll round, red things are cold.\nFOL:\tall x. ((Round(x) & Red(x)) -> Cold(x))\nTEXT:\tAll round, green things are cold.\nFOL:\tall x. ((Round(x) & Green(x)) -> Cold(x))\nTEXT:\tIf something is red and cold then it is green.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Green(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n"], ["TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf something is kind then it likes the bear.\nFOL:\tall x. (Kind(x) -> Likes(x, Bear))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something eats the lion then it does not like the tiger.\nFOL:\tall x. (Eats(x, Lion) -> -Likes(x, Tiger))\nTEXT:\tIf the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red.\nFOL:\t(Likes(BaldEagle, Lion) & Sees(BaldEagle, Tiger)) -> Red(Lion)\nTEXT:\tIf something eats the bald eagle then the bald eagle does not see the bear.\nFOL:\tall x. (Eats(x, BaldEagle) -> -Sees(BaldEagle, Bear))\nTEXT:\tIf something sees the tiger then the tiger likes the lion.\nFOL:\tall x. (Sees(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf something eats the bear and it is round then it is nice.\nFOL:\tall x. ((Eats(x, Bear) & Round(x)) -> Nice(x))\nTEXT:\tIf something eats the tiger and it likes the bear then the bear is kind.\nFOL:\tall x. ((Eats(x, Tiger) & Likes(x, Bear)) -> Kind(Bear))\nTEXT:\tIf something likes the lion then the lion is kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(Lion))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf something is kind then it likes the bear.\nFOL:\tall x. (Kind(x) -> Likes(x, Bear))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something eats the lion then it does not like the tiger.\nFOL:\tall x. (Eats(x, Lion) -> -Likes(x, Tiger))\nTEXT:\tIf the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red.\nFOL:\t((Likes(BaldEagle, Lion) & Sees(BaldEagle, Tiger)) -> Red(Lion))\nTEXT:\tIf something eats the bald eagle then the bald eagle does not see the bear.\nFOL:\tall x. (Eats(x, BaldEagle) -> -Sees(BaldEagle, Bear))\nTEXT:\tIf something sees the tiger then the tiger likes the lion.\nFOL:\tall x. (Sees(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf something eats the bear and it is round then it is nice.\nFOL:\tall x. ((Eats(x, Bear) & Round(x)) -> Nice(x))\nTEXT:\tIf something eats the tiger and it likes the bear then the bear is kind.\nFOL:\tall x. ((Eats(x, Tiger) & Likes(x, Bear)) -> Kind(Bear))\nTEXT:\tIf something likes the lion then the lion is kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(Lion))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear,Tiger)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear,BaldEagle)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear,Lion)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion,Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion,Tiger)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger,BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger,BaldEagle)\nTEXT:\tIf something is kind then it likes the bear.\nFOL:\tall x. (Kind(x) -> Likes(x, Bear))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something eats the lion then it does not like the tiger.\nFOL:\tall x. (Eats(x, Lion) -> -Likes(x, Tiger))\nTEXT:\tIf the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red.\nFOL:\t(Likes(BaldEagle, Lion) & Sees(BaldEagle, Tiger)) -> Red(Lion)\nTEXT:\tIf something eats the bald eagle then the bald eagle does not see the bear.\nFOL:\tall x. (Eats(x, BaldEagle) -> -Sees(BaldEagle, Bear))\nTEXT:\tIf something sees the tiger then the tiger likes the lion.\nFOL:\tall x. (Sees(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf something eats the bear and it is round then it is nice.\nFOL:\tall x. (Eats(x, Bear) & Round(x) -> Nice(x))\nTEXT:\tIf something eats the tiger and it likes the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Tiger) & Likes(x, Bear) -> Kind(Bear))\nTEXT:\tIf something likes the lion then the lion is kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(Lion))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf something is kind then it likes the bear.\nFOL:\tall x. (Kind(x) -> Likes(x, Bear))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something eats the lion then it does not like the tiger.\nFOL:\tall x. (Eats(x, Lion) -> -Likes(x, Tiger))\nTEXT:\tIf the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red.\nFOL:\t(Likes(BaldEagle, Lion) & Sees(BaldEagle, Tiger)) -> Red(Lion)\nTEXT:\tIf something eats the bald eagle then the bald eagle does not see the bear.\nFOL:\tall x. (Eats(x, BaldEagle) -> -Sees(BaldEagle, Bear))\nTEXT:\tIf something sees the tiger then the tiger likes the lion.\nFOL:\tall x. (Sees(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf something eats the bear and it is round then it is nice.\nFOL:\tall x. (Eats(x, Bear) & Round(x) -> Nice(x))\nTEXT:\tIf something eats the tiger and it likes the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Tiger) & Likes(x, Bear) -> Kind(Bear))\nTEXT:\tIf something likes the lion then the lion is kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(Lion))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf something is kind then it likes the bear.\nFOL:\tall x. (Kind(x) -> Likes(x, Bear))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something eats the lion then it does not like the tiger.\nFOL:\tall x. (Eats(x, Lion) -> -Likes(x, Tiger))\nTEXT:\tIf the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red.\nFOL:\t(Likes(BaldEagle, Lion) & Sees(BaldEagle, Tiger)) -> Red(Lion)\nTEXT:\tIf something eats the bald eagle then the bald eagle does not see the bear.\nFOL:\tall x. (Eats(x, BaldEagle) -> -Sees(BaldEagle, Bear))\nTEXT:\tIf something sees the tiger then the tiger likes the lion.\nFOL:\tall x. (Sees(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf something eats the bear and it is round then it is nice.\nFOL:\tall x. (Eats(x, Bear) & Round(x) -> Nice(x))\nTEXT:\tIf something eats the tiger and it likes the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Tiger) & Likes(x, Bear) -> Kind(Bear))\nTEXT:\tIf something likes the lion then the lion is kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(Lion))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tQuiet, round people are red.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> Red(x))\nTEXT:\tIf Harry is cold then Harry is quiet.\nFOL:\tCold(Harry) -> Quiet(Harry)\nTEXT:\tAll red, round people are cold.\nFOL:\tall x. ((Red(x) & Round(x)) -> Cold(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and nice then they are round.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Round(x))\nTEXT:\tCold people are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll red people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart, furry people are nice.\nFOL:\tall x. ((Smart(x) & Furry(x)) -> Nice(x))\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tQuiet, round people are red.\nFOL:\tall x. (Quiet(x) & Round(x) -> Red(x))\nTEXT:\tIf Harry is cold then Harry is quiet.\nFOL:\tCold(Harry) -> Quiet(Harry)\nTEXT:\tAll red, round people are cold.\nFOL:\tall x. (Red(x) & Round(x) -> Cold(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and nice then they are round.\nFOL:\tall x. (Smart(x) & Nice(x) -> Round(x))\nTEXT:\tCold people are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll red people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tQuiet, round people are red.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> Red(x))\nTEXT:\tIf Harry is cold then Harry is quiet.\nFOL:\tCold(Harry) -> Quiet(Harry)\nTEXT:\tAll red, round people are cold.\nFOL:\tall x. ((Red(x) & Round(x)) -> Cold(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and nice then they are round.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Round(x))\nTEXT:\tCold people are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll red people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart, furry people are nice.\nFOL:\tall x. ((Smart(x) & Furry(x)) -> Nice(x))\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tQuiet, round people are red.\nFOL:\tall x. (Quiet(x) & Round(x) -> Red(x))\nTEXT:\tIf Harry is cold then Harry is quiet.\nFOL:\tCold(Harry) -> Quiet(Harry)\nTEXT:\tAll red, round people are cold.\nFOL:\tall x. (Red(x) & Round(x) -> Cold(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and nice then they are round.\nFOL:\tall x. (Smart(x) & Nice(x) -> Round(x))\nTEXT:\tCold people are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll red people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tQuiet, round people are red.\nFOL:\tall x. (Quiet(x) & Round(x) -> Red(x))\nTEXT:\tIf Harry is cold then Harry is quiet.\nFOL:\tCold(Harry) -> Quiet(Harry)\nTEXT:\tAll red, round people are cold.\nFOL:\tall x. (Red(x) & Round(x) -> Cold(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and nice then they are round.\nFOL:\tall x. (Smart(x) & Nice(x) -> Round(x))\nTEXT:\tCold people are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll red people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone eats the lion then they are young.\nFOL:\tall x. (Eats(x, Lion) -> Young(x))\nTEXT:\tIf someone eats the bear then they eat the lion.\nFOL:\tall x. (Eats(x, Bear) -> Eats(x, Lion))\nTEXT:\tIf someone is nice and they chase the lion then they like the bear.\nFOL:\tall x. (Nice(x) & Chases(x, Lion) -> Likes(x, Bear))\nTEXT:\tIf someone eats the lion then the lion eats the bear.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tThe lion does not eat the lion.\nFOL:\t-Eats(Lion, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone eats the lion then they are young.\nFOL:\tall x. (Eats(x, Lion) -> Young(x))\nTEXT:\tIf someone eats the bear then they eat the lion.\nFOL:\tall x. (Eats(x, Bear) -> Eats(x, Lion))\nTEXT:\tIf someone is nice and they chase the lion then they like the bear.\nFOL:\tall x. ((Nice(x) & Chases(x, Lion)) -> Likes(x, Bear))\nTEXT:\tIf someone eats the lion then the lion eats the bear.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tThe lion does not eat the lion.\nFOL:\t-Eats(Lion, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone eats the lion then they are young.\nFOL:\tall x. (Eats(x, Lion) -> Young(x))\nTEXT:\tIf someone eats the bear then they eat the lion.\nFOL:\tall x. (Eats(x, Bear) -> Eats(x, Lion))\nTEXT:\tIf someone is nice and they chase the lion then they like the bear.\nFOL:\tall x. ((Nice(x) & Chases(x, Lion)) -> Likes(x, Bear))\nTEXT:\tIf someone eats the lion then the lion eats the bear.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tThe lion does not eat the lion.\nFOL:\t-Eats(Lion, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone eats the lion then they are young.\nFOL:\tall x. (Eats(x, Lion) -> Young(x))\nTEXT:\tIf someone eats the bear then they eat the lion.\nFOL:\tall x. (Eats(x, Bear) -> Eats(x, Lion))\nTEXT:\tIf someone is nice and they chase the lion then they like the bear.\nFOL:\tall x. ((Nice(x) & Chases(x, Lion)) -> Likes(x, Bear))\nTEXT:\tIf someone eats the lion then the lion eats the bear.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tThe lion does not eat the lion.\nFOL:\t\u00acEats(Lion, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone eats the lion then they are young.\nFOL:\tall x. (Eats(x, Lion) -> Young(x))\nTEXT:\tIf someone eats the bear then they eat the lion.\nFOL:\tall x. (Eats(x, Bear) -> Eats(x, Lion))\nTEXT:\tIf someone is nice and they chase the lion then they like the bear.\nFOL:\tall x. (Nice(x) & Chases(x, Lion) -> Likes(x, Bear))\nTEXT:\tIf someone eats the lion then the lion eats the bear.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tThe lion does not eat the lion.\nFOL:\t-Eats(Lion, Lion)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is white then they are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tRound people are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tKind people are not rough.\nFOL:\tall x. (Kind(x) -> -Rough(x))\nTEXT:\tIf someone is rough and big then they are round.\nFOL:\tall x. (Rough(x) & Big(x) -> Round(x))\nTEXT:\tBlue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf someone is cold then they are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tAll white people are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tIf Charlie is blue and Charlie is cold then Charlie is white.\nFOL:\t(Blue(Charlie) & Cold(Charlie) -> White(Charlie))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is white then they are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tRound people are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tKind people are not rough.\nFOL:\tall x. (Kind(x) -> -Rough(x))\nTEXT:\tIf someone is rough and big then they are round.\nFOL:\tall x. (Rough(x) & Big(x) -> Round(x))\nTEXT:\tBlue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf someone is cold then they are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tAll white people are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tIf Charlie is blue and Charlie is cold then Charlie is white.\nFOL:\t(Blue(Charlie) & Cold(Charlie) -> White(Charlie))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is white then they are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tRound people are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tKind people are not rough.\nFOL:\tall x. (Kind(x) -> -Rough(x))\nTEXT:\tIf someone is rough and big then they are round.\nFOL:\tall x. (Rough(x) & Big(x) -> Round(x))\nTEXT:\tBlue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf someone is cold then they are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tAll white people are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tIf Charlie is blue and Charlie is cold then Charlie is white.\nFOL:\t(Blue(Charlie) & Cold(Charlie) -> White(Charlie))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is white then they are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tRound people are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tKind people are not rough.\nFOL:\tall x. (Kind(x) -> -Rough(x))\nTEXT:\tIf someone is rough and big then they are round.\nFOL:\tall x. (Rough(x) & Big(x) -> Round(x))\nTEXT:\tBlue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf someone is cold then they are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tAll white people are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tIf Charlie is blue and Charlie is cold then Charlie is white.\nFOL:\t(Blue(Charlie) & Cold(Charlie) -> White(Charlie))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is white then they are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tRound people are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tKind people are not rough.\nFOL:\tall x. (Kind(x) -> -Rough(x))\nTEXT:\tIf someone is rough and big then they are round.\nFOL:\tall x. (Rough(x) & Big(x) -> Round(x))\nTEXT:\tBlue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf someone is cold then they are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tAll white people are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tIf Charlie is blue and Charlie is cold then Charlie is white.\nFOL:\t(Blue(Charlie) & Cold(Charlie) -> White(Charlie))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is not blue.\nFOL:\t-Blue(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not see the dog.\nFOL:\t-Sees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf someone needs the bald eagle and the bald eagle sees the tiger then they are rough.\nFOL:\tall x. (Needs(x, BaldEagle) & Sees(BaldEagle, Tiger) -> Rough(x))\nTEXT:\tIf someone needs the dog and they like the dog then they need the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Dog) -> Needs(x, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone is rough and they like the dog then the dog needs the tiger.\nFOL:\tall x. (Rough(x) & Likes(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone likes the dog and the dog is blue then they see the tiger.\nFOL:\tall x. (Likes(x, Dog) & Blue(Dog) -> Sees(x, Tiger))\nTEXT:\tIf someone needs the tiger and they do not see the dog then the tiger needs the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) & -Sees(x, Dog) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the bald eagle then they like the bald eagle.\nFOL:\tall x. (Needs(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tThe tiger does not need the rabbit.\nFOL:\t-Needs(Tiger, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not blue.\nFOL:\t-Blue(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not see the dog.\nFOL:\t-Sees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf someone needs the bald eagle and the bald eagle sees the tiger then they are rough.\nFOL:\tall x. ((Needs(x, BaldEagle) & Sees(BaldEagle, Tiger)) -> Rough(x))\nTEXT:\tIf someone needs the dog and they like the dog then they need the bald eagle.\nFOL:\tall x. ((Needs(x, Dog) & Likes(x, Dog)) -> Needs(x, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone is rough and they like the dog then the dog needs the tiger.\nFOL:\tall x. ((Rough(x) & Likes(x, Dog)) -> Needs(Dog, Tiger))\nTEXT:\tIf someone likes the dog and the dog is blue then they see the tiger.\nFOL:\tall x. ((Likes(x, Dog) & Blue(Dog)) -> Sees(x, Tiger))\nTEXT:\tIf someone needs the tiger and they do not see the dog then the tiger needs the bald eagle.\nFOL:\tall x. ((Needs(x, Tiger) & -Sees(x, Dog)) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the bald eagle then they like the bald eagle.\nFOL:\tall x. (Needs(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tThe tiger does not need the rabbit.\nFOL:\t-Needs(Tiger, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not blue.\nFOL:\t-Blue(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not see the dog.\nFOL:\t-Sees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf someone needs the bald eagle and the bald eagle sees the tiger then they are rough.\nFOL:\tall x. (Needs(x, BaldEagle) & Sees(BaldEagle, Tiger) -> Rough(x))\nTEXT:\tIf someone needs the dog and they like the dog then they need the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Dog) -> Needs(x, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone is rough and they like the dog then the dog needs the tiger.\nFOL:\tall x. (Rough(x) & Likes(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone likes the dog and the dog is blue then they see the tiger.\nFOL:\tall x. (Likes(x, Dog) & Blue(Dog) -> Sees(x, Tiger))\nTEXT:\tIf someone needs the tiger and they do not see the dog then the tiger needs the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) & -Sees(x, Dog) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the bald eagle then they like the bald eagle.\nFOL:\tall x. (Needs(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tThe tiger does not need the rabbit.\nFOL:\t-Needs(Tiger, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not blue.\nFOL:\t-Blue(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not see the dog.\nFOL:\t-Sees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf someone needs the bald eagle and the bald eagle sees the tiger then they are rough.\nFOL:\tall x. (Needs(x, BaldEagle) & Sees(BaldEagle, Tiger) -> Rough(x))\nTEXT:\tIf someone needs the dog and they like the dog then they need the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Dog) -> Needs(x, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone is rough and they like the dog then the dog needs the tiger.\nFOL:\tall x. (Rough(x) & Likes(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone likes the dog and the dog is blue then they see the tiger.\nFOL:\tall x. (Likes(x, Dog) & Blue(Dog) -> Sees(x, Tiger))\nTEXT:\tIf someone needs the tiger and they do not see the dog then the tiger needs the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) & -Sees(x, Dog) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the bald eagle then they like the bald eagle.\nFOL:\tall x. (Needs(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tThe tiger does not need the rabbit.\nFOL:\t-Needs(Tiger, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not blue.\nFOL:\t-Blue(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not see the dog.\nFOL:\t-Sees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf someone needs the bald eagle and the bald eagle sees the tiger then they are rough.\nFOL:\tall x. (Needs(x, BaldEagle) & Sees(BaldEagle, Tiger) -> Rough(x))\nTEXT:\tIf someone needs the dog and they like the dog then they need the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Dog) -> Needs(x, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone is rough and they like the dog then the dog needs the tiger.\nFOL:\tall x. (Rough(x) & Likes(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone likes the dog and the dog is blue then they see the tiger.\nFOL:\tall x. (Likes(x, Dog) & Blue(Dog) -> Sees(x, Tiger))\nTEXT:\tIf someone needs the tiger and they do not see the dog then the tiger needs the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) & -Sees(x, Dog) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the bald eagle then they like the bald eagle.\nFOL:\tall x. (Needs(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tThe tiger does not need the rabbit.\nFOL:\t-Needs(Tiger, Rabbit)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle does not see the bear.\nFOL:\t-See(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSee(BaldEagle, Cat)\nTEXT:\tThe bear does not eat the cat.\nFOL:\t-Eat(Bear, Cat)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLike(Bear, BaldEagle)\nTEXT:\tThe cat eats the lion.\nFOL:\tEat(Cat, Lion)\nTEXT:\tThe cat sees the bear.\nFOL:\tSee(Cat, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEat(Lion, Cat)\nTEXT:\tIf someone sees the cat and they eat the cat then they are not red.\nFOL:\tall x. ((See(x, Cat) & Eat(x, Cat)) -> -Red(x))\nTEXT:\tIf someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion.\nFOL:\tall x. ((See(x, BaldEagle) & Nice(BaldEagle)) -> -See(BaldEagle, Lion))\nTEXT:\tIf someone eats the bald eagle and they are green then the bald eagle sees the bear.\nFOL:\tall x. ((Eat(x, BaldEagle) & Green(x)) -> See(BaldEagle, Bear))\nTEXT:\tIf someone sees the cat then they are green.\nFOL:\tall x. (See(x, Cat) -> Green(x))\nTEXT:\tIf the cat eats the bear and the bear is nice then the bear is not young.\nFOL:\t(Eat(Cat, Bear) & Nice(Bear)) -> -Young(Bear)\nTEXT:\tIf someone sees the bear and they are green then the bear eats the lion.\nFOL:\tall x. ((See(x, Bear) & Green(x)) -> Eat(Bear, Lion))\nTEXT:\tIf someone eats the lion then they see the cat.\nFOL:\tall x. (Eat(x, Lion) -> See(x, Cat))\nTEXT:\tThe bear eats the lion.\nFOL:\tEat(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle does not see the bear.\nFOL:\t-See(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSee(BaldEagle, Cat)\nTEXT:\tThe bear does not eat the cat.\nFOL:\t-Eat(Bear, Cat)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLike(Bear, BaldEagle)\nTEXT:\tThe cat eats the lion.\nFOL:\tEat(Cat, Lion)\nTEXT:\tThe cat sees the bear.\nFOL:\tSee(Cat, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEat(Lion, Cat)\nTEXT:\tIf someone sees the cat and they eat the cat then they are not red.\nFOL:\tall x. (See(x, Cat) & Eat(x, Cat) -> -Red(x))\nTEXT:\tIf someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion.\nFOL:\tall x. (See(x, BaldEagle) & Nice(BaldEagle) -> -See(BaldEagle, Lion))\nTEXT:\tIf someone eats the bald eagle and they are green then the bald eagle sees the bear.\nFOL:\tall x. (Eat(x, BaldEagle) & Green(x) -> See(BaldEagle, Bear))\nTEXT:\tIf someone sees the cat then they are green.\nFOL:\tall x. (See(x, Cat) -> Green(x))\nTEXT:\tIf the cat eats the bear and the bear is nice then the bear is not young.\nFOL:\t(Eat(Cat, Bear) & Nice(Bear) -> -Young(Bear))\nTEXT:\tIf someone sees the bear and they are green then the bear eats the lion.\nFOL:\tall x. (See(x, Bear) & Green(x) -> Eat(Bear, Lion))\nTEXT:\tIf someone eats the lion then they see the cat.\nFOL:\tall x. (Eat(x, Lion) -> See(x, Cat))\nTEXT:\tThe bear eats the lion.\nFOL:\tEat(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle does not see the bear.\nFOL:\t-See(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSee(BaldEagle, Cat)\nTEXT:\tThe bear does not eat the cat.\nFOL:\t-Eat(Bear, Cat)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLike(Bear, BaldEagle)\nTEXT:\tThe cat eats the lion.\nFOL:\tEat(Cat, Lion)\nTEXT:\tThe cat sees the bear.\nFOL:\tSee(Cat, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEat(Lion, Cat)\nTEXT:\tIf someone sees the cat and they eat the cat then they are not red.\nFOL:\tall x. (See(x, Cat) & Eat(x, Cat) -> -Red(x))\nTEXT:\tIf someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion.\nFOL:\tall x. (See(x, BaldEagle) & Nice(BaldEagle) -> -See(BaldEagle, Lion))\nTEXT:\tIf someone eats the bald eagle and they are green then the bald eagle sees the bear.\nFOL:\tall x. (Eat(x, BaldEagle) & Green(x) -> See(BaldEagle, Bear))\nTEXT:\tIf someone sees the cat then they are green.\nFOL:\tall x. (See(x, Cat) -> Green(x))\nTEXT:\tIf the cat eats the bear and the bear is nice then the bear is not young.\nFOL:\t(Eat(Cat, Bear) & Nice(Bear) -> -Young(Bear))\nTEXT:\tIf someone sees the bear and they are green then the bear eats the lion.\nFOL:\tall x. (See(x, Bear) & Green(x) -> Eat(Bear, Lion))\nTEXT:\tIf someone eats the lion then they see the cat.\nFOL:\tall x. (Eat(x, Lion) -> See(x, Cat))\nTEXT:\tThe bear eats the lion.\nFOL:\tEat(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle does not see the bear.\nFOL:\t-Sees(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bear does not eat the cat.\nFOL:\t-Eats(Bear, Cat)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe cat eats the lion.\nFOL:\tEats(Cat, Lion)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tIf someone sees the cat and they eat the cat then they are not red.\nFOL:\tall x. (Sees(x, Cat) & Eats(x, Cat) -> -Red(x))\nTEXT:\tIf someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(BaldEagle) -> -Sees(BaldEagle, Lion))\nTEXT:\tIf someone eats the bald eagle and they are green then the bald eagle sees the bear.\nFOL:\tall x. (Eats(x, BaldEagle) & Green(x) -> Sees(BaldEagle, Bear))\nTEXT:\tIf someone sees the cat then they are green.\nFOL:\tall x. (Sees(x, Cat) -> Green(x))\nTEXT:\tIf the cat eats the bear and the bear is nice then the bear is not young.\nFOL:\t(Eats(Cat, Bear) & Nice(Bear) -> -Young(Bear))\nTEXT:\tIf someone sees the bear and they are green then the bear eats the lion.\nFOL:\tall x. (Sees(x, Bear) & Green(x) -> Eats(Bear, Lion))\nTEXT:\tIf someone eats the lion then they see the cat.\nFOL:\tall x. (Eats(x, Lion) -> Sees(x, Cat))\nTEXT:\tThe bear eats the lion.\nFOL:\tEats(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle does not see the bear.\nFOL:\t-Sees(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bear does not eat the cat.\nFOL:\t-Eats(Bear, Cat)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe cat eats the lion.\nFOL:\tEats(Cat, Lion)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tIf someone sees the cat and they eat the cat then they are not red.\nFOL:\tall x. ((Sees(x, Cat) & Eats(x, Cat)) -> -Red(x))\nTEXT:\tIf someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion.\nFOL:\tall x. ((Sees(x, BaldEagle) & Nice(BaldEagle)) -> -Sees(BaldEagle, Lion))\nTEXT:\tIf someone eats the bald eagle and they are green then the bald eagle sees the bear.\nFOL:\tall x. ((Eats(x, BaldEagle) & Green(x)) -> Sees(BaldEagle, Bear))\nTEXT:\tIf someone sees the cat then they are green.\nFOL:\tall x. (Sees(x, Cat) -> Green(x))\nTEXT:\tIf the cat eats the bear and the bear is nice then the bear is not young.\nFOL:\t(Eats(Cat, Bear) & Nice(Bear)) -> -Young(Bear)\nTEXT:\tIf someone sees the bear and they are green then the bear eats the lion.\nFOL:\tall x. ((Sees(x, Bear) & Green(x)) -> Eats(Bear, Lion))\nTEXT:\tIf someone eats the lion then they see the cat.\nFOL:\tall x. (Eats(x, Lion) -> Sees(x, Cat))\nTEXT:\tThe bear eats the lion.\nFOL:\tEats(Bear, Lion)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone chases the cow and they chase the mouse then the mouse is blue.\nFOL:\tall x. (Chases(x, Cow) & Chases(x, Mouse) -> Blue(Mouse))\nTEXT:\tIf someone eats the cat then they are nice.\nFOL:\tall x. (Eats(x, Cat) -> Nice(x))\nTEXT:\tIf the cat eats the mouse then the mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tIf someone chases the mouse and they are round then they are big.\nFOL:\tall x. (Chases(x, Mouse) & Round(x) -> Big(x))\nTEXT:\tIf someone chases the tiger and the tiger chases the cat then the tiger is round.\nFOL:\tall x. (Chases(x, Tiger) & Chases(Tiger, Cat) -> Round(Tiger))\nTEXT:\tIf someone eats the tiger and they like the cat then the cat likes the cow.\nFOL:\tall x. (Eats(x, Tiger) & Likes(x, Cat) -> Likes(Cat, Cow))\nTEXT:\tIf the mouse likes the cow and the mouse chases the cow then the cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tIf someone eats the cow and they eat the cat then they chase the tiger.\nFOL:\tall x. (Eats(x, Cow) & Eats(x, Cat) -> Chases(x, Tiger))\nTEXT:\tIf someone eats the tiger and they eat the cat then the tiger eats the cat.\nFOL:\tall x. (Eats(x, Tiger) & Eats(x, Cat) -> Eats(Tiger, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone chases the cow and they chase the mouse then the mouse is blue.\nFOL:\tall x. ((Chases(x, Cow) & Chases(x, Mouse)) -> Blue(Mouse))\nTEXT:\tIf someone eats the cat then they are nice.\nFOL:\tall x. (Eats(x, Cat) -> Nice(x))\nTEXT:\tIf the cat eats the mouse then the mouse likes the cow.\nFOL:\t(Eats(Cat, Mouse) -> Likes(Mouse, Cow))\nTEXT:\tIf someone chases the mouse and they are round then they are big.\nFOL:\tall x. ((Chases(x, Mouse) & Round(x)) -> Big(x))\nTEXT:\tIf someone chases the tiger and the tiger chases the cat then the tiger is round.\nFOL:\tall x. ((Chases(x, Tiger) & Chases(Tiger, Cat)) -> Round(Tiger))\nTEXT:\tIf someone eats the tiger and they like the cat then the cat likes the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Likes(x, Cat)) -> Likes(Cat, Cow))\nTEXT:\tIf the mouse likes the cow and the mouse chases the cow then the cow eats the cat.\nFOL:\t((Likes(Mouse, Cow) & Chases(Mouse, Cow)) -> Eats(Cow, Cat))\nTEXT:\tIf someone eats the cow and they eat the cat then they chase the tiger.\nFOL:\tall x. ((Eats(x, Cow) & Eats(x, Cat)) -> Chases(x, Tiger))\nTEXT:\tIf someone eats the tiger and they eat the cat then the tiger eats the cat.\nFOL:\tall x. ((Eats(x, Tiger) & Eats(x, Cat)) -> Eats(Tiger, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone chases the cow and they chase the mouse then the mouse is blue.\nFOL:\tall x. (Chases(x, Cow) & Chases(x, Mouse) -> Blue(Mouse))\nTEXT:\tIf someone eats the cat then they are nice.\nFOL:\tall x. (Eats(x, Cat) -> Nice(x))\nTEXT:\tIf the cat eats the mouse then the mouse likes the cow.\nFOL:\tEats(Cat, Mouse) -> Likes(Mouse, Cow)\nTEXT:\tIf someone chases the mouse and they are round then they are big.\nFOL:\tall x. (Chases(x, Mouse) & Round(x) -> Big(x))\nTEXT:\tIf someone chases the tiger and the tiger chases the cat then the tiger is round.\nFOL:\tall x. (Chases(x, Tiger) & Chases(Tiger, Cat) -> Round(Tiger))\nTEXT:\tIf someone eats the tiger and they like the cat then the cat likes the cow.\nFOL:\tall x. (Eats(x, Tiger) & Likes(x, Cat) -> Likes(Cat, Cow))\nTEXT:\tIf the mouse likes the cow and the mouse chases the cow then the cow eats the cat.\nFOL:\tLikes(Mouse, Cow) & Chases(Mouse, Cow) -> Eats(Cow, Cat)\nTEXT:\tIf someone eats the cow and they eat the cat then they chase the tiger.\nFOL:\tall x. (Eats(x, Cow) & Eats(x, Cat) -> Chases(x, Tiger))\nTEXT:\tIf someone eats the tiger and they eat the cat then the tiger eats the cat.\nFOL:\tall x. (Eats(x, Tiger) & Eats(x, Cat) -> Eats(Tiger, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is green.\nFOL:\tIsGreen(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tIsRound(Mouse)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone chases the cow and they chase the mouse then the mouse is blue.\nFOL:\tall x. ((Chases(x, Cow) & Chases(x, Mouse)) -> IsBlue(Mouse))\nTEXT:\tIf someone eats the cat then they are nice.\nFOL:\tall x. (Eats(x, Cat) -> IsNice(x))\nTEXT:\tIf the cat eats the mouse then the mouse likes the cow.\nFOL:\t(Eats(Cat, Mouse) -> Likes(Mouse, Cow))\nTEXT:\tIf someone chases the mouse and they are round then they are big.\nFOL:\tall x. ((Chases(x, Mouse) & IsRound(x)) -> IsBig(x))\nTEXT:\tIf someone chases the tiger and the tiger chases the cat then the tiger is round.\nFOL:\tall x. ((Chases(x, Tiger) & Chases(Tiger, Cat)) -> IsRound(Tiger))\nTEXT:\tIf someone eats the tiger and they like the cat then the cat likes the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Likes(x, Cat)) -> Likes(Cat, Cow))\nTEXT:\tIf the mouse likes the cow and the mouse chases the cow then the cow eats the cat.\nFOL:\t((Likes(Mouse, Cow) & Chases(Mouse, Cow)) -> Eats(Cow, Cat))\nTEXT:\tIf someone eats the cow and they eat the cat then they chase the tiger.\nFOL:\tall x. ((Eats(x, Cow) & Eats(x, Cat)) -> Chases(x, Tiger))\nTEXT:\tIf someone eats the tiger and they eat the cat then the tiger eats the cat.\nFOL:\tall x. ((Eats(x, Tiger) & Eats(x, Cat)) -> Eats(Tiger, Cat))\nTEXT:\tThe cow is big.\nFOL:\tIsBig(Cow)\nANSWER:\tFalse\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone chases the cow and they chase the mouse then the mouse is blue.\nFOL:\tall x. (Chases(x, Cow) & Chases(x, Mouse) -> Blue(Mouse))\nTEXT:\tIf someone eats the cat then they are nice.\nFOL:\tall x. (Eats(x, Cat) -> Nice(x))\nTEXT:\tIf the cat eats the mouse then the mouse likes the cow.\nFOL:\t(Eats(Cat, Mouse) -> Likes(Mouse, Cow))\nTEXT:\tIf someone chases the mouse and they are round then they are big.\nFOL:\tall x. (Chases(x, Mouse) & Round(x) -> Big(x))\nTEXT:\tIf someone chases the tiger and the tiger chases the cat then the tiger is round.\nFOL:\tall x. (Chases(x, Tiger) & Chases(Tiger, Cat) -> Round(Tiger))\nTEXT:\tIf someone eats the tiger and they like the cat then the cat likes the cow.\nFOL:\tall x. (Eats(x, Tiger) & Likes(x, Cat) -> Likes(Cat, Cow))\nTEXT:\tIf the mouse likes the cow and the mouse chases the cow then the cow eats the cat.\nFOL:\t(Likes(Mouse, Cow) & Chases(Mouse, Cow) -> Eats(Cow, Cat))\nTEXT:\tIf someone eats the cow and they eat the cat then they chase the tiger.\nFOL:\tall x. (Eats(x, Cow) & Eats(x, Cat) -> Chases(x, Tiger))\nTEXT:\tIf someone eats the tiger and they eat the cat then the tiger eats the cat.\nFOL:\tall x. (Eats(x, Tiger) & Eats(x, Cat) -> Eats(Tiger, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll green things are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tIf something is blue and furry then it is green.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Green(x))\nTEXT:\tBlue things are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is furry.\nFOL:\t(Kind(Fiona) -> Furry(Fiona))\nTEXT:\tAll kind, furry things are blue.\nFOL:\tall x. ((Kind(x) & Furry(x)) -> Blue(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll green things are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tIf something is blue and furry then it is green.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Green(x))\nTEXT:\tBlue things are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is furry.\nFOL:\tKind(Fiona) -> Furry(Fiona)\nTEXT:\tAll kind, furry things are blue.\nFOL:\tall x. ((Kind(x) & Furry(x)) -> Blue(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll green things are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tIf something is blue and furry then it is green.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Green(x))\nTEXT:\tBlue things are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is furry.\nFOL:\t(Kind(Fiona) -> Furry(Fiona))\nTEXT:\tAll kind, furry things are blue.\nFOL:\tall x. ((Kind(x) & Furry(x)) -> Blue(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll green things are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tIf something is blue and furry then it is green.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Green(x))\nTEXT:\tBlue things are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is furry.\nFOL:\tKind(Fiona) -> Furry(Fiona)\nTEXT:\tAll kind, furry things are blue.\nFOL:\tall x. ((Kind(x) & Furry(x)) -> Blue(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll green things are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tIf something is blue and furry then it is green.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Green(x))\nTEXT:\tBlue things are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is furry.\nFOL:\t(Kind(Fiona) -> Furry(Fiona))\nTEXT:\tAll kind, furry things are blue.\nFOL:\tall x. ((Kind(x) & Furry(x)) -> Blue(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the dog.\nFOL:\tLikes(Cat, Dog)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the cat.\nFOL:\tLikes(Dog, Cat)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf something likes the dog then the dog eats the cat.\nFOL:\tall x. (Likes(x, Dog) -> Eats(Dog, Cat))\nTEXT:\tIf the dog is rough then the dog eats the cat.\nFOL:\tRough(Dog) -> Eats(Dog, Cat)\nTEXT:\tIf something eats the cat and the cat likes the rabbit then it is big.\nFOL:\tall x. ((Eats(x, Cat) & Likes(Cat, Rabbit)) -> Big(x))\nTEXT:\tIf something is kind then it likes the cat.\nFOL:\tall x. (Kind(x) -> Likes(x, Cat))\nTEXT:\tIf something likes the rabbit and the rabbit eats the cat then the cat is big.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(Rabbit, Cat)) -> Big(Cat))\nTEXT:\tIf the rabbit is big then the rabbit eats the cat.\nFOL:\tBig(Rabbit) -> Eats(Rabbit, Cat)\nTEXT:\tIf something needs the cat then it is round.\nFOL:\tall x. (Needs(x, Cat) -> Round(x))\nTEXT:\tIf something is big then it likes the rabbit.\nFOL:\tall x. (Big(x) -> Likes(x, Rabbit))\nTEXT:\tIf something likes the rabbit then it is rough.\nFOL:\tall x. (Likes(x, Rabbit) -> Rough(x))\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the dog.\nFOL:\tLikes(Cat, Dog)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the cat.\nFOL:\tLikes(Dog, Cat)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf something likes the dog then the dog eats the cat.\nFOL:\tall x. (Likes(x, Dog) -> Eats(Dog, Cat))\nTEXT:\tIf the dog is rough then the dog eats the cat.\nFOL:\t(Rough(Dog) -> Eats(Dog, Cat))\nTEXT:\tIf something eats the cat and the cat likes the rabbit then it is big.\nFOL:\tall x. ((Eats(x, Cat) & Likes(Cat, Rabbit)) -> Big(x))\nTEXT:\tIf something is kind then it likes the cat.\nFOL:\tall x. (Kind(x) -> Likes(x, Cat))\nTEXT:\tIf something likes the rabbit and the rabbit eats the cat then the cat is big.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(Rabbit, Cat)) -> Big(Cat))\nTEXT:\tIf the rabbit is big then the rabbit eats the cat.\nFOL:\t(Big(Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf something needs the cat then it is round.\nFOL:\tall x. (Needs(x, Cat) -> Round(x))\nTEXT:\tIf something is big then it likes the rabbit.\nFOL:\tall x. (Big(x) -> Likes(x, Rabbit))\nTEXT:\tIf something likes the rabbit then it is rough.\nFOL:\tall x. (Likes(x, Rabbit) -> Rough(x))\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the dog.\nFOL:\tLikes(Cat, Dog)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the cat.\nFOL:\tLikes(Dog, Cat)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf something likes the dog then the dog eats the cat.\nFOL:\tall x. (Likes(x, Dog) -> Eats(Dog, Cat))\nTEXT:\tIf the dog is rough then the dog eats the cat.\nFOL:\tRough(Dog) -> Eats(Dog, Cat)\nTEXT:\tIf something eats the cat and the cat likes the rabbit then it is big.\nFOL:\tall x. ((Eats(x, Cat) & Likes(Cat, Rabbit)) -> Big(x))\nTEXT:\tIf something is kind then it likes the cat.\nFOL:\tall x. (Kind(x) -> Likes(x, Cat))\nTEXT:\tIf something likes the rabbit and the rabbit eats the cat then the cat is big.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(Rabbit, Cat)) -> Big(Cat))\nTEXT:\tIf the rabbit is big then the rabbit eats the cat.\nFOL:\tBig(Rabbit) -> Eats(Rabbit, Cat)\nTEXT:\tIf something needs the cat then it is round.\nFOL:\tall x. (Needs(x, Cat) -> Round(x))\nTEXT:\tIf something is big then it likes the rabbit.\nFOL:\tall x. (Big(x) -> Likes(x, Rabbit))\nTEXT:\tIf something likes the rabbit then it is rough.\nFOL:\tall x. (Likes(x, Rabbit) -> Rough(x))\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the dog.\nFOL:\tLikes(Cat, Dog)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the cat.\nFOL:\tLikes(Dog, Cat)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf something likes the dog then the dog eats the cat.\nFOL:\tall x. (Likes(x, Dog) -> Eats(Dog, Cat))\nTEXT:\tIf the dog is rough then the dog eats the cat.\nFOL:\tRough(Dog) -> Eats(Dog, Cat)\nTEXT:\tIf something eats the cat and the cat likes the rabbit then it is big.\nFOL:\tall x. (Eats(x, Cat) & Likes(Cat, Rabbit) -> Big(x))\nTEXT:\tIf something is kind then it likes the cat.\nFOL:\tall x. (Kind(x) -> Likes(x, Cat))\nTEXT:\tIf something likes the rabbit and the rabbit eats the cat then the cat is big.\nFOL:\tall x. (Likes(x, Rabbit) & Eats(Rabbit, Cat) -> Big(Cat))\nTEXT:\tIf the rabbit is big then the rabbit eats the cat.\nFOL:\tBig(Rabbit) -> Eats(Rabbit, Cat)\nTEXT:\tIf something needs the cat then it is round.\nFOL:\tall x. (Needs(x, Cat) -> Round(x))\nTEXT:\tIf something is big then it likes the rabbit.\nFOL:\tall x. (Big(x) -> Likes(x, Rabbit))\nTEXT:\tIf something likes the rabbit then it is rough.\nFOL:\tall x. (Likes(x, Rabbit) -> Rough(x))\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the dog.\nFOL:\tLikes(Cat, Dog)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the cat.\nFOL:\tLikes(Dog, Cat)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf something likes the dog then the dog eats the cat.\nFOL:\tall x. (Likes(x, Dog) -> Eats(Dog, Cat))\nTEXT:\tIf the dog is rough then the dog eats the cat.\nFOL:\tRough(Dog) -> Eats(Dog, Cat)\nTEXT:\tIf something eats the cat and the cat likes the rabbit then it is big.\nFOL:\tall x. ((Eats(x, Cat) & Likes(Cat, Rabbit)) -> Big(x))\nTEXT:\tIf something is kind then it likes the cat.\nFOL:\tall x. (Kind(x) -> Likes(x, Cat))\nTEXT:\tIf something likes the rabbit and the rabbit eats the cat then the cat is big.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(Rabbit, Cat)) -> Big(Cat))\nTEXT:\tIf the rabbit is big then the rabbit eats the cat.\nFOL:\tBig(Rabbit) -> Eats(Rabbit, Cat)\nTEXT:\tIf something needs the cat then it is round.\nFOL:\tall x. (Needs(x, Cat) -> Round(x))\nTEXT:\tIf something is big then it likes the rabbit.\nFOL:\tall x. (Big(x) -> Likes(x, Rabbit))\nTEXT:\tIf something likes the rabbit then it is rough.\nFOL:\tall x. (Likes(x, Rabbit) -> Rough(x))\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is kind then it is not green.\nFOL:\tall x. (Kind(x) -> -Green(x))\nTEXT:\tAll cold things are not green.\nFOL:\tall x. (Cold(x) -> -Green(x))\nTEXT:\tAll quiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf something is white and not young then it is furry.\nFOL:\tall x. (White(x) & -Young(x) -> Furry(x))\nTEXT:\tAll young things are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tFurry, kind things are white.\nFOL:\tall x. (Furry(x) & Kind(x) -> White(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is kind then it is not green.\nFOL:\tall x. (Kind(x) -> -Green(x))\nTEXT:\tAll cold things are not green.\nFOL:\tall x. (Cold(x) -> -Green(x))\nTEXT:\tAll quiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf something is white and not young then it is furry.\nFOL:\tall x. (White(x) & -Young(x) -> Furry(x))\nTEXT:\tAll young things are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tFurry, kind things are white.\nFOL:\tall x. (Furry(x) & Kind(x) -> White(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is kind then it is not green.\nFOL:\tall x. (Kind(x) -> -Green(x))\nTEXT:\tAll cold things are not green.\nFOL:\tall x. (Cold(x) -> -Green(x))\nTEXT:\tAll quiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf something is white and not young then it is furry.\nFOL:\tall x. ((White(x) & -Young(x)) -> Furry(x))\nTEXT:\tAll young things are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tFurry, kind things are white.\nFOL:\tall x. ((Furry(x) & Kind(x)) -> White(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is kind then it is not green.\nFOL:\tall x. (Kind(x) -> -Green(x))\nTEXT:\tAll cold things are not green.\nFOL:\tall x. (Cold(x) -> -Green(x))\nTEXT:\tAll quiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf something is white and not young then it is furry.\nFOL:\tall x. (White(x) & -Young(x) -> Furry(x))\nTEXT:\tAll young things are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tFurry, kind things are white.\nFOL:\tall x. (Furry(x) & Kind(x) -> White(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is kind then it is not green.\nFOL:\tall x. (Kind(x) -> -Green(x))\nTEXT:\tAll cold things are not green.\nFOL:\tall x. (Cold(x) -> -Green(x))\nTEXT:\tAll quiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf something is white and not young then it is furry.\nFOL:\tall x. (White(x) & -Young(x) -> Furry(x))\nTEXT:\tAll young things are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tFurry, kind things are white.\nFOL:\tall x. (Furry(x) & Kind(x) -> White(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf the dog is cold and the dog visits the mouse then the dog needs the tiger.\nFOL:\tall x. (Cold(x) & Visits(x, Mouse) -> Needs(x, Tiger))\nTEXT:\tIf something chases the dog then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(Dog))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tRed things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something chases the tiger and it is kind then it visits the tiger.\nFOL:\tall x. (Chases(x, Tiger) & Kind(x) -> Visits(x, Tiger))\nTEXT:\tIf something is cold and it visits the tiger then the tiger is red.\nFOL:\tall x. (Cold(x) & Visits(x, Tiger) -> Red(Tiger))\nTEXT:\tIf the mouse is kind then the mouse is rough.\nFOL:\tKind(Mouse) -> Rough(Mouse)\nTEXT:\tIf something visits the dog and the dog chases the bear then the bear is cold.\nFOL:\tall x. (Visits(x, Dog) & Chases(Dog, Bear) -> Cold(Bear))\nTEXT:\tIf something is rough then it needs the mouse.\nFOL:\tall x. (Rough(x) -> Needs(x, Mouse))\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf the dog is cold and the dog visits the mouse then the dog needs the tiger.\nFOL:\tall x. (Dog(x) & Cold(x) & Visits(x, Mouse) -> Needs(x, Tiger))\nTEXT:\tIf something chases the dog then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(Dog))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tRed things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something chases the tiger and it is kind then it visits the tiger.\nFOL:\tall x. (Chases(x, Tiger) & Kind(x) -> Visits(x, Tiger))\nTEXT:\tIf something is cold and it visits the tiger then the tiger is red.\nFOL:\tall x. (Cold(x) & Visits(x, Tiger) -> Red(Tiger))\nTEXT:\tIf the mouse is kind then the mouse is rough.\nFOL:\tall x. (Mouse(x) & Kind(x) -> Rough(x))\nTEXT:\tIf something visits the dog and the dog chases the bear then the bear is cold.\nFOL:\tall x. (Visits(x, Dog) & Chases(Dog, Bear) -> Cold(Bear))\nTEXT:\tIf something is rough then it needs the mouse.\nFOL:\tall x. (Rough(x) -> Needs(x, Mouse))\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf the dog is cold and the dog visits the mouse then the dog needs the tiger.\nFOL:\tall x. ((Cold(x) & Visits(x, Mouse)) -> Needs(x, Tiger))\nTEXT:\tIf something chases the dog then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(Dog))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tRed things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something chases the tiger and it is kind then it visits the tiger.\nFOL:\tall x. ((Chases(x, Tiger) & Kind(x)) -> Visits(x, Tiger))\nTEXT:\tIf something is cold and it visits the tiger then the tiger is red.\nFOL:\tall x. ((Cold(x) & Visits(x, Tiger)) -> Red(Tiger))\nTEXT:\tIf the mouse is kind then the mouse is rough.\nFOL:\tall x. (Kind(Mouse) -> Rough(Mouse))\nTEXT:\tIf something visits the dog and the dog chases the bear then the bear is cold.\nFOL:\tall x. ((Visits(x, Dog) & Chases(Dog, Bear)) -> Cold(Bear))\nTEXT:\tIf something is rough then it needs the mouse.\nFOL:\tall x. (Rough(x) -> Needs(x, Mouse))\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf the dog is cold and the dog visits the mouse then the dog needs the tiger.\nFOL:\tall x. (Dog(x) & Cold(x) & Visits(x, Mouse) -> Needs(x, Tiger))\nTEXT:\tIf something chases the dog then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(Dog))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tRed things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something chases the tiger and it is kind then it visits the tiger.\nFOL:\tall x. (Chases(x, Tiger) & Kind(x) -> Visits(x, Tiger))\nTEXT:\tIf something is cold and it visits the tiger then the tiger is red.\nFOL:\tall x. (Cold(x) & Visits(x, Tiger) -> Red(Tiger))\nTEXT:\tIf the mouse is kind then the mouse is rough.\nFOL:\tall x. (Mouse(x) & Kind(x) -> Rough(x))\nTEXT:\tIf something visits the dog and the dog chases the bear then the bear is cold.\nFOL:\tall x. (Visits(x, Dog) & Chases(Dog, Bear) -> Cold(Bear))\nTEXT:\tIf something is rough then it needs the mouse.\nFOL:\tall x. (Rough(x) -> Needs(x, Mouse))\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf the dog is cold and the dog visits the mouse then the dog needs the tiger.\nFOL:\tall x. (Cold(x) & Dog(x) & Visits(x, Mouse) -> Needs(x, Tiger))\nTEXT:\tIf something chases the dog then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(Dog))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tRed things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something chases the tiger and it is kind then it visits the tiger.\nFOL:\tall x. (Chases(x, Tiger) & Kind(x) -> Visits(x, Tiger))\nTEXT:\tIf something is cold and it visits the tiger then the tiger is red.\nFOL:\tall x. (Cold(x) & Visits(x, Tiger) -> Red(Tiger))\nTEXT:\tIf the mouse is kind then the mouse is rough.\nFOL:\tall x. (Mouse(x) & Kind(x) -> Rough(x))\nTEXT:\tIf something visits the dog and the dog chases the bear then the bear is cold.\nFOL:\tall x. (Visits(x, Dog) & Chases(Dog, Bear) -> Cold(Bear))\nTEXT:\tIf something is rough then it needs the mouse.\nFOL:\tall x. (Rough(x) -> Needs(x, Mouse))\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tFurry, blue people are big.\nFOL:\tall x. ((Furry(x) & Blue(x)) -> Big(x))\nTEXT:\tAll big, cold people are green.\nFOL:\tall x. ((Big(x) & Cold(x)) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are blue.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Blue(x))\nTEXT:\tFurry, quiet people are white.\nFOL:\tall x. ((Furry(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is quiet and furry then they are green.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Green(x))\nTEXT:\tIf Gary is white then Gary is quiet.\nFOL:\t(White(Gary) -> Quiet(Gary))\nTEXT:\tIf Bob is green and Bob is white then Bob is furry.\nFOL:\t((Green(Bob) & White(Bob)) -> Furry(Bob))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tFurry, blue people are big.\nFOL:\tall x. ((Furry(x) & Blue(x)) -> Big(x))\nTEXT:\tAll big, cold people are green.\nFOL:\tall x. ((Big(x) & Cold(x)) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are blue.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Blue(x))\nTEXT:\tFurry, quiet people are white.\nFOL:\tall x. ((Furry(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is quiet and furry then they are green.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Green(x))\nTEXT:\tIf Gary is white then Gary is quiet.\nFOL:\t(White(Gary) -> Quiet(Gary))\nTEXT:\tIf Bob is green and Bob is white then Bob is furry.\nFOL:\t((Green(Bob) & White(Bob)) -> Furry(Bob))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tFurry, blue people are big.\nFOL:\tall x. (Furry(x) & Blue(x) -> Big(x))\nTEXT:\tAll big, cold people are green.\nFOL:\tall x. (Big(x) & Cold(x) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are blue.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Blue(x))\nTEXT:\tFurry, quiet people are white.\nFOL:\tall x. (Furry(x) & Quiet(x) -> White(x))\nTEXT:\tIf someone is quiet and furry then they are green.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Green(x))\nTEXT:\tIf Gary is white then Gary is quiet.\nFOL:\tWhite(Gary) -> Quiet(Gary)\nTEXT:\tIf Bob is green and Bob is white then Bob is furry.\nFOL:\t(Green(Bob) & White(Bob)) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tFurry, blue people are big.\nFOL:\tall x. (Furry(x) & Blue(x) -> Big(x))\nTEXT:\tAll big, cold people are green.\nFOL:\tall x. (Big(x) & Cold(x) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are blue.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Blue(x))\nTEXT:\tFurry, quiet people are white.\nFOL:\tall x. (Furry(x) & Quiet(x) -> White(x))\nTEXT:\tIf someone is quiet and furry then they are green.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Green(x))\nTEXT:\tIf Gary is white then Gary is quiet.\nFOL:\tWhite(Gary) -> Quiet(Gary)\nTEXT:\tIf Bob is green and Bob is white then Bob is furry.\nFOL:\t(Green(Bob) & White(Bob)) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tFurry, blue people are big.\nFOL:\tall x. ((Furry(x) & Blue(x)) -> Big(x))\nTEXT:\tAll big, cold people are green.\nFOL:\tall x. ((Big(x) & Cold(x)) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are blue.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Blue(x))\nTEXT:\tFurry, quiet people are white.\nFOL:\tall x. ((Furry(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is quiet and furry then they are green.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Green(x))\nTEXT:\tIf Gary is white then Gary is quiet.\nFOL:\tWhite(Gary) -> Quiet(Gary)\nTEXT:\tIf Bob is green and Bob is white then Bob is furry.\nFOL:\t(Green(Bob) & White(Bob)) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is red then they are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf Fiona is red then Fiona is smart.\nFOL:\tRed(Fiona) -> Smart(Fiona)\nTEXT:\tIf Erin is red and Erin is cold then Erin is not young.\nFOL:\tRed(Erin) & Cold(Erin) -> -Young(Erin)\nTEXT:\tIf Bob is cold then Bob is smart.\nFOL:\tCold(Bob) -> Smart(Bob)\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf Erin is red and Erin is not young then Erin is not kind.\nFOL:\tRed(Erin) & -Young(Erin) -> -Kind(Erin)\nTEXT:\tIf Erin is red and Erin is not furry then Erin is quiet.\nFOL:\tRed(Erin) & -Furry(Erin) -> Quiet(Erin)\nTEXT:\tErin is not young.\nFOL:\t-Young(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is red then they are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf Fiona is red then Fiona is smart.\nFOL:\tRed(Fiona) -> Smart(Fiona)\nTEXT:\tIf Erin is red and Erin is cold then Erin is not young.\nFOL:\t(Red(Erin) & Cold(Erin)) -> -Young(Erin)\nTEXT:\tIf Bob is cold then Bob is smart.\nFOL:\tCold(Bob) -> Smart(Bob)\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf Erin is red and Erin is not young then Erin is not kind.\nFOL:\t(Red(Erin) & -Young(Erin)) -> -Kind(Erin)\nTEXT:\tIf Erin is red and Erin is not furry then Erin is quiet.\nFOL:\t(Red(Erin) & -Furry(Erin)) -> Quiet(Erin)\nTEXT:\tErin is not young.\nFOL:\t-Young(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is red then they are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf Fiona is red then Fiona is smart.\nFOL:\tRed(Fiona) -> Smart(Fiona)\nTEXT:\tIf Erin is red and Erin is cold then Erin is not young.\nFOL:\tRed(Erin) & Cold(Erin) -> -Young(Erin)\nTEXT:\tIf Bob is cold then Bob is smart.\nFOL:\tCold(Bob) -> Smart(Bob)\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf Erin is red and Erin is not young then Erin is not kind.\nFOL:\tRed(Erin) & -Young(Erin) -> -Kind(Erin)\nTEXT:\tIf Erin is red and Erin is not furry then Erin is quiet.\nFOL:\tRed(Erin) & -Furry(Erin) -> Quiet(Erin)\nTEXT:\tErin is not young.\nFOL:\t-Young(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is red then they are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf Fiona is red then Fiona is smart.\nFOL:\tRed(Fiona) -> Smart(Fiona)\nTEXT:\tIf Erin is red and Erin is cold then Erin is not young.\nFOL:\tRed(Erin) & Cold(Erin) -> -Young(Erin)\nTEXT:\tIf Bob is cold then Bob is smart.\nFOL:\tCold(Bob) -> Smart(Bob)\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf Erin is red and Erin is not young then Erin is not kind.\nFOL:\tRed(Erin) & -Young(Erin) -> -Kind(Erin)\nTEXT:\tIf Erin is red and Erin is not furry then Erin is quiet.\nFOL:\tRed(Erin) & -Furry(Erin) -> Quiet(Erin)\nTEXT:\tErin is not young.\nFOL:\t-Young(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is red then they are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf Fiona is red then Fiona is smart.\nFOL:\t(Red(Fiona) -> Smart(Fiona))\nTEXT:\tIf Erin is red and Erin is cold then Erin is not young.\nFOL:\t(Red(Erin) & Cold(Erin) -> -Young(Erin))\nTEXT:\tIf Bob is cold then Bob is smart.\nFOL:\t(Cold(Bob) -> Smart(Bob))\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf Erin is red and Erin is not young then Erin is not kind.\nFOL:\t(Red(Erin) & -Young(Erin) -> -Kind(Erin))\nTEXT:\tIf Erin is red and Erin is not furry then Erin is quiet.\nFOL:\t(Red(Erin) & -Furry(Erin) -> Quiet(Erin))\nTEXT:\tErin is not young.\nFOL:\t-Young(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the cow.\nFOL:\tChase(BaldEagle, Cow)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeed(BaldEagle, Rabbit)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChase(Cow, Rabbit)\nTEXT:\tThe cow is cold.\nFOL:\tCold(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe rabbit does not chase the bald eagle.\nFOL:\t-Chase(Rabbit, BaldEagle)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChase(Rabbit, Cow)\nTEXT:\tThe rabbit does not eat the bald eagle.\nFOL:\t-Eat(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEat(Rabbit, Cow)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEat(Squirrel, Cow)\nTEXT:\tThe squirrel does not eat the rabbit.\nFOL:\t-Eat(Squirrel, Rabbit)\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Need(x, BaldEagle) -> Chase(BaldEagle, Rabbit))\nTEXT:\tIf the squirrel is rough and the squirrel is not kind then the squirrel is green.\nFOL:\t(Rough(Squirrel) & -Kind(Squirrel)) -> Green(Squirrel)\nTEXT:\tIf something chases the bald eagle then it needs the squirrel.\nFOL:\tall x. (Chase(x, BaldEagle) -> Need(x, Squirrel))\nTEXT:\tIf something needs the rabbit then it chases the bald eagle.\nFOL:\tall x. (Need(x, Rabbit) -> Chase(x, BaldEagle))\nTEXT:\tIf something chases the cow then the cow eats the bald eagle.\nFOL:\tall x. (Chase(x, Cow) -> Eat(Cow, BaldEagle))\nTEXT:\tIf something chases the bald eagle and it does not need the bald eagle then it is red.\nFOL:\tall x. ((Chase(x, BaldEagle) & -Need(x, BaldEagle)) -> Red(x))\nTEXT:\tIf something needs the squirrel then the squirrel needs the rabbit.\nFOL:\tall x. (Need(x, Squirrel) -> Need(Squirrel, Rabbit))\nTEXT:\tThe cow does not chase the bald eagle.\nFOL:\t-Chase(Cow, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is cold.\nFOL:\tCold(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe rabbit does not chase the bald eagle.\nFOL:\t-Chases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit does not eat the bald eagle.\nFOL:\t-Eats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel does not eat the rabbit.\nFOL:\t-Eats(Squirrel, Rabbit)\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tIf the squirrel is rough and the squirrel is not kind then the squirrel is green.\nFOL:\t(Rough(Squirrel) & -Kind(Squirrel)) -> Green(Squirrel)\nTEXT:\tIf something chases the bald eagle then it needs the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the rabbit then it chases the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Chases(x, BaldEagle))\nTEXT:\tIf something chases the cow then the cow eats the bald eagle.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, BaldEagle))\nTEXT:\tIf something chases the bald eagle and it does not need the bald eagle then it is red.\nFOL:\tall x. ((Chases(x, BaldEagle) & -Needs(x, BaldEagle)) -> Red(x))\nTEXT:\tIf something needs the squirrel then the squirrel needs the rabbit.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(Squirrel, Rabbit))\nTEXT:\tThe cow does not chase the bald eagle.\nFOL:\t-Chases(Cow, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is cold.\nFOL:\tCold(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe rabbit does not chase the bald eagle.\nFOL:\t-Chases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit does not eat the bald eagle.\nFOL:\t-Eat(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel does not eat the rabbit.\nFOL:\t-Eat(Squirrel, Rabbit)\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tIf the squirrel is rough and the squirrel is not kind then the squirrel is green.\nFOL:\t(Rough(Squirrel) & -Kind(Squirrel)) -> Green(Squirrel)\nTEXT:\tIf something chases the bald eagle then it needs the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the rabbit then it chases the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Chases(x, BaldEagle))\nTEXT:\tIf something chases the cow then the cow eats the bald eagle.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, BaldEagle))\nTEXT:\tIf something chases the bald eagle and it does not need the bald eagle then it is red.\nFOL:\tall x. ((Chases(x, BaldEagle) & -Needs(x, BaldEagle)) -> Red(x))\nTEXT:\tIf something needs the squirrel then the squirrel needs the rabbit.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(Squirrel, Rabbit))\nTEXT:\tThe cow does not chase the bald eagle.\nFOL:\t-Chases(Cow, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is cold.\nFOL:\tCold(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe rabbit does not chase the bald eagle.\nFOL:\t-Chases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit does not eat the bald eagle.\nFOL:\t-Eats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel does not eat the rabbit.\nFOL:\t-Eats(Squirrel, Rabbit)\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tIf the squirrel is rough and the squirrel is not kind then the squirrel is green.\nFOL:\tRough(Squirrel) & -Kind(Squirrel) -> Green(Squirrel)\nTEXT:\tIf something chases the bald eagle then it needs the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the rabbit then it chases the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Chases(x, BaldEagle))\nTEXT:\tIf something chases the cow then the cow eats the bald eagle.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, BaldEagle))\nTEXT:\tIf something chases the bald eagle and it does not need the bald eagle then it is red.\nFOL:\tall x. (Chases(x, BaldEagle) & -Needs(x, BaldEagle) -> Red(x))\nTEXT:\tIf something needs the squirrel then the squirrel needs the rabbit.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(Squirrel, Rabbit))\nTEXT:\tThe cow does not chase the bald eagle.\nFOL:\t-Chases(Cow, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is cold.\nFOL:\tCold(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe rabbit does not chase the bald eagle.\nFOL:\t-Chases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit does not eat the bald eagle.\nFOL:\t-Eats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel does not eat the rabbit.\nFOL:\t-Eats(Squirrel, Rabbit)\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tIf the squirrel is rough and the squirrel is not kind then the squirrel is green.\nFOL:\t(Rough(Squirrel) & -Kind(Squirrel)) -> Green(Squirrel)\nTEXT:\tIf something chases the bald eagle then it needs the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the rabbit then it chases the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Chases(x, BaldEagle))\nTEXT:\tIf something chases the cow then the cow eats the bald eagle.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, BaldEagle))\nTEXT:\tIf something chases the bald eagle and it does not need the bald eagle then it is red.\nFOL:\tall x. ((Chases(x, BaldEagle) & -Needs(x, BaldEagle)) -> Red(x))\nTEXT:\tIf something needs the squirrel then the squirrel needs the rabbit.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(Squirrel, Rabbit))\nTEXT:\tThe cow does not chase the bald eagle.\nFOL:\t-Chases(Cow, BaldEagle)\nANSWER:\tTrue\n"], ["TEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tIf something needs the dog and the dog needs the squirrel then the squirrel is nice.\nFOL:\tall x. ((Needs(x, Dog) & Needs(Dog, Squirrel)) -> Nice(Squirrel))\nTEXT:\tIf something is green and nice then it needs the cow.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Needs(x, Cow))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it chases the cow.\nFOL:\tall x. (Green(x) -> Chases(x, Cow))\nTEXT:\tIf something needs the cow then it sees the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something is kind and it sees the dog then the dog needs the cow.\nFOL:\tall x. ((Kind(x) & Sees(x, Dog)) -> Needs(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it needs the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the cow then it needs the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Needs(x, Squirrel))\nTEXT:\tThe squirrel sees the squirrel.\nFOL:\tSees(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tIf something needs the dog and the dog needs the squirrel then the squirrel is nice.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Squirrel) -> Nice(Squirrel))\nTEXT:\tIf something is green and nice then it needs the cow.\nFOL:\tall x. (Green(x) & Nice(x) -> Needs(x, Cow))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it chases the cow.\nFOL:\tall x. (Green(x) -> Chases(x, Cow))\nTEXT:\tIf something needs the cow then it sees the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something is kind and it sees the dog then the dog needs the cow.\nFOL:\tall x. (Kind(x) & Sees(x, Dog) -> Needs(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it needs the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the cow then it needs the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Needs(x, Squirrel))\nTEXT:\tThe squirrel sees the squirrel.\nFOL:\tSees(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tIf something needs the dog and the dog needs the squirrel then the squirrel is nice.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Squirrel) -> Nice(Squirrel))\nTEXT:\tIf something is green and nice then it needs the cow.\nFOL:\tall x. (Green(x) & Nice(x) -> Needs(x, Cow))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it chases the cow.\nFOL:\tall x. (Green(x) -> Chases(x, Cow))\nTEXT:\tIf something needs the cow then it sees the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something is kind and it sees the dog then the dog needs the cow.\nFOL:\tall x. (Kind(x) & Sees(x, Dog) -> Needs(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it needs the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the cow then it needs the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Needs(x, Squirrel))\nTEXT:\tThe squirrel sees the squirrel.\nFOL:\tSees(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tIf something needs the dog and the dog needs the squirrel then the squirrel is nice.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Squirrel) -> Nice(Squirrel))\nTEXT:\tIf something is green and nice then it needs the cow.\nFOL:\tall x. (Green(x) & Nice(x) -> Needs(x, Cow))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it chases the cow.\nFOL:\tall x. (Green(x) -> Chases(x, Cow))\nTEXT:\tIf something needs the cow then it sees the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something is kind and it sees the dog then the dog needs the cow.\nFOL:\tall x. (Kind(x) & Sees(x, Dog) -> Needs(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it needs the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the cow then it needs the squirrel.\nFOL:\tall x. (Needs(x, Cow) -> Needs(x, Squirrel))\nTEXT:\tThe squirrel sees the squirrel.\nFOL:\tSees(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the rabbit.\nFOL:\tChase(Cow, Rabbit)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeed(Cow, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChase(Dog, Rabbit)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeed(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSee(Dog, Cow)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChase(Rabbit, Cow)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChase(Rabbit, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeed(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeed(Rabbit, Dog)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeed(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSee(Rabbit, Dog)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChase(Squirrel, Rabbit)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeed(Squirrel, Rabbit)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSee(Squirrel, Dog)\nTEXT:\tIf something needs the dog and the dog needs the squirrel then the squirrel is nice.\nFOL:\tall x. (Need(x, Dog) & Need(Dog, Squirrel) -> Nice(Squirrel))\nTEXT:\tIf something is green and nice then it needs the cow.\nFOL:\tall x. (Green(x) & Nice(x) -> Need(x, Cow))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it chases the cow.\nFOL:\tall x. (Green(x) -> Chase(x, Cow))\nTEXT:\tIf something needs the cow then it sees the squirrel.\nFOL:\tall x. (Need(x, Cow) -> See(x, Squirrel))\nTEXT:\tIf something is kind and it sees the dog then the dog needs the cow.\nFOL:\tall x. (Kind(x) & See(x, Dog) -> Need(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it needs the squirrel.\nFOL:\tall x. (See(x, Rabbit) -> Need(x, Squirrel))\nTEXT:\tIf something needs the cow then it needs the squirrel.\nFOL:\tall x. (Need(x, Cow) -> Need(x, Squirrel))\nTEXT:\tThe squirrel sees the squirrel.\nFOL:\tSee(Squirrel, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger visits the bear.\nFOL:\tVisits(Tiger, Bear)\nTEXT:\tIf someone is blue then they are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf someone chases the bear then they chase the lion.\nFOL:\tall x. (Chases(x, Bear) -> Chases(x, Lion))\nTEXT:\tIf someone visits the mouse then they are rough.\nFOL:\tall x. (Visits(x, Mouse) -> Rough(x))\nTEXT:\tIf someone chases the lion then the lion is nice.\nFOL:\tall x. (Chases(x, Lion) -> Nice(Lion))\nTEXT:\tIf someone is nice then they chase the bear.\nFOL:\tall x. (Nice(x) -> Chases(x, Bear))\nTEXT:\tIf someone chases the lion then they visit the mouse.\nFOL:\tall x. (Chases(x, Lion) -> Visits(x, Mouse))\nTEXT:\tThe lion is not round.\nFOL:\t-Round(Lion)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger visits the bear.\nFOL:\tVisits(Tiger, Bear)\nTEXT:\tIf someone is blue then they are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf someone chases the bear then they chase the lion.\nFOL:\tall x. (Chases(x, Bear) -> Chases(x, Lion))\nTEXT:\tIf someone visits the mouse then they are rough.\nFOL:\tall x. (Visits(x, Mouse) -> Rough(x))\nTEXT:\tIf someone chases the lion then the lion is nice.\nFOL:\tall x. (Chases(x, Lion) -> Nice(Lion))\nTEXT:\tIf someone is nice then they chase the bear.\nFOL:\tall x. (Nice(x) -> Chases(x, Bear))\nTEXT:\tIf someone chases the lion then they visit the mouse.\nFOL:\tall x. (Chases(x, Lion) -> Visits(x, Mouse))\nTEXT:\tThe lion is not round.\nFOL:\t-Round(Lion)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger visits the bear.\nFOL:\tVisits(Tiger, Bear)\nTEXT:\tIf someone is blue then they are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf someone chases the bear then they chase the lion.\nFOL:\tall x. (Chases(x, Bear) -> Chases(x, Lion))\nTEXT:\tIf someone visits the mouse then they are rough.\nFOL:\tall x. (Visits(x, Mouse) -> Rough(x))\nTEXT:\tIf someone chases the lion then the lion is nice.\nFOL:\tall x. (Chases(x, Lion) -> Nice(Lion))\nTEXT:\tIf someone is nice then they chase the bear.\nFOL:\tall x. (Nice(x) -> Chases(x, Bear))\nTEXT:\tIf someone chases the lion then they visit the mouse.\nFOL:\tall x. (Chases(x, Lion) -> Visits(x, Mouse))\nTEXT:\tThe lion is not round.\nFOL:\t-Round(Lion)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger visits the bear.\nFOL:\tVisits(Tiger, Bear)\nTEXT:\tIf someone is blue then they are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf someone chases the bear then they chase the lion.\nFOL:\tall x. (Chases(x, Bear) -> Chases(x, Lion))\nTEXT:\tIf someone visits the mouse then they are rough.\nFOL:\tall x. (Visits(x, Mouse) -> Rough(x))\nTEXT:\tIf someone chases the lion then the lion is nice.\nFOL:\tall x. (Chases(x, Lion) -> Nice(Lion))\nTEXT:\tIf someone is nice then they chase the bear.\nFOL:\tall x. (Nice(x) -> Chases(x, Bear))\nTEXT:\tIf someone chases the lion then they visit the mouse.\nFOL:\tall x. (Chases(x, Lion) -> Visits(x, Mouse))\nTEXT:\tThe lion is not round.\nFOL:\t-Round(Lion)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger visits the bear.\nFOL:\tVisits(Tiger, Bear)\nTEXT:\tIf someone is blue then they are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf someone chases the bear then they chase the lion.\nFOL:\tall x. (Chases(x, Bear) -> Chases(x, Lion))\nTEXT:\tIf someone visits the mouse then they are rough.\nFOL:\tall x. (Visits(x, Mouse) -> Rough(x))\nTEXT:\tIf someone chases the lion then the lion is nice.\nFOL:\tall x. (Chases(x, Lion) -> Nice(Lion))\nTEXT:\tIf someone is nice then they chase the bear.\nFOL:\tall x. (Nice(x) -> Chases(x, Bear))\nTEXT:\tIf someone chases the lion then they visit the mouse.\nFOL:\tall x. (Chases(x, Lion) -> Visits(x, Mouse))\nTEXT:\tThe lion is not round.\nFOL:\t-Round(Lion)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nTEXT:\tIf someone is green then they are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red and not big then they are green.\nFOL:\tall x. (Red(x) & -Big(x) -> Green(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll cold, big people are quiet.\nFOL:\tall x. (Cold(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is green and big then they are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf someone is white and green then they are rough.\nFOL:\tall x. (White(x) & Green(x) -> Rough(x))\nTEXT:\tIf someone is red and not big then they are cold.\nFOL:\tall x. (Red(x) & -Big(x) -> Cold(x))\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nTEXT:\tIf someone is green then they are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red and not big then they are green.\nFOL:\tall x. (Red(x) & -Big(x) -> Green(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll cold, big people are quiet.\nFOL:\tall x. (Cold(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is green and big then they are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf someone is white and green then they are rough.\nFOL:\tall x. (White(x) & Green(x) -> Rough(x))\nTEXT:\tIf someone is red and not big then they are cold.\nFOL:\tall x. (Red(x) & -Big(x) -> Cold(x))\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nTEXT:\tIf someone is green then they are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red and not big then they are green.\nFOL:\tall x. (Red(x) & -Big(x) -> Green(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll cold, big people are quiet.\nFOL:\tall x. (Cold(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is green and big then they are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf someone is white and green then they are rough.\nFOL:\tall x. (White(x) & Green(x) -> Rough(x))\nTEXT:\tIf someone is red and not big then they are cold.\nFOL:\tall x. (Red(x) & -Big(x) -> Cold(x))\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nTEXT:\tIf someone is green then they are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red and not big then they are green.\nFOL:\tall x. ((Red(x) & -Big(x)) -> Green(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll cold, big people are quiet.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Quiet(x))\nTEXT:\tIf someone is green and big then they are quiet.\nFOL:\tall x. ((Green(x) & Big(x)) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf someone is white and green then they are rough.\nFOL:\tall x. ((White(x) & Green(x)) -> Rough(x))\nTEXT:\tIf someone is red and not big then they are cold.\nFOL:\tall x. ((Red(x) & -Big(x)) -> Cold(x))\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\nTEXT:\tIf someone is green then they are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red and not big then they are green.\nFOL:\tall x. (Red(x) & -Big(x) -> Green(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll cold, big people are quiet.\nFOL:\tall x. (Cold(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is green and big then they are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf someone is white and green then they are rough.\nFOL:\tall x. (White(x) & Green(x) -> Rough(x))\nTEXT:\tIf someone is red and not big then they are cold.\nFOL:\tall x. (Red(x) & -Big(x) -> Cold(x))\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is smart then they are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tAll young, rough people are smart.\nFOL:\tall x. (Young(x) & Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf Fiona is smart and Fiona is kind then Fiona is green.\nFOL:\t(Smart(Fiona) & Kind(Fiona)) -> Green(Fiona)\nTEXT:\tIf Anne is round then Anne is quiet.\nFOL:\tRound(Anne) -> Quiet(Anne)\nTEXT:\tRound, rough people are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll kind people are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is smart then they are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tAll young, rough people are smart.\nFOL:\tall x. (Young(x) & Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf Fiona is smart and Fiona is kind then Fiona is green.\nFOL:\t(Smart(Fiona) & Kind(Fiona)) -> Green(Fiona)\nTEXT:\tIf Anne is round then Anne is quiet.\nFOL:\tRound(Anne) -> Quiet(Anne)\nTEXT:\tRound, rough people are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll kind people are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nANSWER:\tFalse\n", "TEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is smart then they are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tAll young, rough people are smart.\nFOL:\tall x. (Young(x) & Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf Fiona is smart and Fiona is kind then Fiona is green.\nFOL:\t(Smart(Fiona) & Kind(Fiona)) -> Green(Fiona)\nTEXT:\tIf Anne is round then Anne is quiet.\nFOL:\tRound(Anne) -> Quiet(Anne)\nTEXT:\tRound, rough people are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll kind people are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is smart then they are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tAll young, rough people are smart.\nFOL:\tall x. (Young(x) & Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf Fiona is smart and Fiona is kind then Fiona is green.\nFOL:\t(Smart(Fiona) & Kind(Fiona) -> Green(Fiona))\nTEXT:\tIf Anne is round then Anne is quiet.\nFOL:\t(Round(Anne) -> Quiet(Anne))\nTEXT:\tRound, rough people are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll kind people are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is smart then they are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tAll young, rough people are smart.\nFOL:\tall x. (Young(x) & Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf Fiona is smart and Fiona is kind then Fiona is green.\nFOL:\t(Smart(Fiona) & Kind(Fiona)) -> Green(Fiona)\nTEXT:\tIf Anne is round then Anne is quiet.\nFOL:\tRound(Anne) -> Quiet(Anne)\nTEXT:\tRound, rough people are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll kind people are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle does not eat the cat.\nFOL:\t-Eats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe cat does not chase the bald eagle.\nFOL:\t-Chases(Cat, BaldEagle)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the tiger.\nFOL:\tSees(Cat, Tiger)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tIf something is young then it does not chase the cat.\nFOL:\tall x. (Young(x) -> -Chases(x, Cat))\nTEXT:\tIf the cat chases the tiger then the tiger is nice.\nFOL:\tall x. (Chases(Cat, x) & Tiger(x) -> Nice(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something chases the dog and the dog eats the bald eagle then it is nice.\nFOL:\tall x. (Chases(x, Dog) & Eats(Dog, BaldEagle) -> Nice(x))\nTEXT:\tIf something is big and it chases the cat then the cat chases the dog.\nFOL:\tall x. (Big(x) & Chases(x, Cat) -> Chases(Cat, Dog))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle does not eat the cat.\nFOL:\t-Eats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe cat does not chase the bald eagle.\nFOL:\t-Chases(Cat, BaldEagle)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the tiger.\nFOL:\tSees(Cat, Tiger)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tIf something is young then it does not chase the cat.\nFOL:\tall x. (Young(x) -> -Chases(x, Cat))\nTEXT:\tIf the cat chases the tiger then the tiger is nice.\nFOL:\tChases(Cat, Tiger) -> Nice(Tiger)\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something chases the dog and the dog eats the bald eagle then it is nice.\nFOL:\tall x. ((Chases(x, Dog) & Eats(Dog, BaldEagle)) -> Nice(x))\nTEXT:\tIf something is big and it chases the cat then the cat chases the dog.\nFOL:\tall x. ((Big(x) & Chases(x, Cat)) -> Chases(Cat, Dog))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle does not eat the cat.\nFOL:\t-Eats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe cat does not chase the bald eagle.\nFOL:\t-Chases(Cat, BaldEagle)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the tiger.\nFOL:\tSees(Cat, Tiger)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tIf something is young then it does not chase the cat.\nFOL:\tall x. (Young(x) -> -Chases(x, Cat))\nTEXT:\tIf the cat chases the tiger then the tiger is nice.\nFOL:\tif (Chases(Cat, Tiger)) then (Nice(Tiger))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something chases the dog and the dog eats the bald eagle then it is nice.\nFOL:\tall x. ((Chases(x, Dog) & Eats(Dog, BaldEagle)) -> Nice(x))\nTEXT:\tIf something is big and it chases the cat then the cat chases the dog.\nFOL:\tall x. ((Big(x) & Chases(x, Cat)) -> Chases(Cat, Dog))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle does not eat the cat.\nFOL:\t\u00acEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe cat does not chase the bald eagle.\nFOL:\t\u00acChases(Cat, BaldEagle)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the tiger.\nFOL:\tSees(Cat, Tiger)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tIf something is young then it does not chase the cat.\nFOL:\tall x. (Young(x) -> \u00acChases(x, Cat))\nTEXT:\tIf the cat chases the tiger then the tiger is nice.\nFOL:\tChases(Cat, Tiger) -> Nice(Tiger)\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something chases the dog and the dog eats the bald eagle then it is nice.\nFOL:\tall x. (Chases(x, Dog) & Eats(Dog, BaldEagle) -> Nice(x))\nTEXT:\tIf something is big and it chases the cat then the cat chases the dog.\nFOL:\tall x. (Big(x) & Chases(x, Cat) -> Chases(Cat, Dog))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t\u00acChases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle does not eat the cat.\nFOL:\t-Eats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe cat does not chase the bald eagle.\nFOL:\t-Chases(Cat, BaldEagle)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the tiger.\nFOL:\tSees(Cat, Tiger)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tIf something is young then it does not chase the cat.\nFOL:\tall x. (Young(x) -> -Chases(x, Cat))\nTEXT:\tIf the cat chases the tiger then the tiger is nice.\nFOL:\t(Chases(Cat, Tiger) -> Nice(Tiger))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something chases the dog and the dog eats the bald eagle then it is nice.\nFOL:\tall x. ((Chases(x, Dog) & Eats(Dog, BaldEagle)) -> Nice(x))\nTEXT:\tIf something is big and it chases the cat then the cat chases the dog.\nFOL:\tall x. ((Big(x) & Chases(x, Cat)) -> Chases(Cat, Dog))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tIf someone is nice then they chase the cow.\nFOL:\tall x. (Nice(x) -> Chases(x, Cow))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf the cow needs the bald eagle and the cow is cold then the bald eagle is nice.\nFOL:\t(Needs(Cow, BaldEagle) & Cold(Cow)) -> Nice(BaldEagle)\nTEXT:\tIf someone is blue then they need the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(BaldEagle))\nTEXT:\tAll nice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold, nice people are big.\nFOL:\tall x. ((Nice(x) & Cold(x)) -> Big(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf someone visits the cow then the cow visits the dog.\nFOL:\tall x. (Visits(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tIf someone is nice then they chase the cow.\nFOL:\tall x. (Nice(x) -> Chases(x, Cow))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf the cow needs the bald eagle and the cow is cold then the bald eagle is nice.\nFOL:\t(Needs(Cow, BaldEagle) & Cold(Cow)) -> Nice(BaldEagle)\nTEXT:\tIf someone is blue then they need the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(BaldEagle))\nTEXT:\tAll nice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold, nice people are big.\nFOL:\tall x. (Cold(x) & Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf someone visits the cow then the cow visits the dog.\nFOL:\tall x. (Visits(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tIf someone is nice then they chase the cow.\nFOL:\tall x. (Nice(x) -> Chases(x, Cow))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf the cow needs the bald eagle and the cow is cold then the bald eagle is nice.\nFOL:\t(Needs(Cow, BaldEagle) & Cold(Cow)) -> Nice(BaldEagle)\nTEXT:\tIf someone is blue then they need the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(BaldEagle))\nTEXT:\tAll nice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold, nice people are big.\nFOL:\tall x. (Cold(x) & Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf someone visits the cow then the cow visits the dog.\nFOL:\tall x. (Visits(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tIf someone is nice then they chase the cow.\nFOL:\tall x. (Nice(x) -> Chases(x, Cow))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf the cow needs the bald eagle and the cow is cold then the bald eagle is nice.\nFOL:\t(Needs(Cow, BaldEagle) & Cold(Cow)) -> Nice(BaldEagle)\nTEXT:\tIf someone is blue then they need the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(BaldEagle))\nTEXT:\tAll nice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold, nice people are big.\nFOL:\tall x. ((Cold(x) & Nice(x)) -> Big(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf someone visits the cow then the cow visits the dog.\nFOL:\tall x. (Visits(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tIf someone is nice then they chase the cow.\nFOL:\tall x. (Nice(x) -> Chases(x, Cow))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf the cow needs the bald eagle and the cow is cold then the bald eagle is nice.\nFOL:\t(Needs(Cow, BaldEagle) & Cold(Cow)) -> Nice(BaldEagle)\nTEXT:\tIf someone is blue then they need the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(BaldEagle))\nTEXT:\tAll nice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold, nice people are big.\nFOL:\tall x. (Cold(x) & Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf someone visits the cow then the cow visits the dog.\nFOL:\tall x. (Visits(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tIf the bear is cold then the bear is red.\nFOL:\tall x. (Bear(x) & Cold(x) -> Red(x))\nTEXT:\tIf someone likes the rabbit and they are red then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Red(x) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone sees the dog and they need the bear then they are red.\nFOL:\tall x. (Sees(x, Dog) & Needs(x, Bear) -> Red(x))\nTEXT:\tGreen people are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red then they need the cow.\nFOL:\tall x. (Red(x) -> Needs(x, Cow))\nTEXT:\tIf someone sees the cow and they need the cow then they like the bear.\nFOL:\tall x. (Sees(x, Cow) & Needs(x, Cow) -> Likes(x, Bear))\nTEXT:\tAll cold, kind people are green.\nFOL:\tall x. (Cold(x) & Kind(x) -> Green(x))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear needs the rabbit.\nFOL:\tall x. (Sees(x, Bear) & Cold(Bear) -> Needs(Bear, Rabbit))\nTEXT:\tIf someone sees the dog and the dog likes the bear then the bear is cold.\nFOL:\tall x. (Sees(x, Dog) & Likes(Dog, Bear) -> Cold(Bear))\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tIf the bear is cold then the bear is red.\nFOL:\tall x. (Bear(x) & Cold(x) -> Red(x))\nTEXT:\tIf someone likes the rabbit and they are red then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Red(x) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone sees the dog and they need the bear then they are red.\nFOL:\tall x. (Sees(x, Dog) & Needs(x, Bear) -> Red(x))\nTEXT:\tGreen people are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red then they need the cow.\nFOL:\tall x. (Red(x) -> Needs(x, Cow))\nTEXT:\tIf someone sees the cow and they need the cow then they like the bear.\nFOL:\tall x. (Sees(x, Cow) & Needs(x, Cow) -> Likes(x, Bear))\nTEXT:\tAll cold, kind people are green.\nFOL:\tall x. (Cold(x) & Kind(x) -> Green(x))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear needs the rabbit.\nFOL:\tall x. (Sees(x, Bear) & Cold(Bear) -> Needs(Bear, Rabbit))\nTEXT:\tIf someone sees the dog and the dog likes the bear then the bear is cold.\nFOL:\tall x. (Sees(x, Dog) & Likes(Dog, Bear) -> Cold(Bear))\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tIf the bear is cold then the bear is red.\nFOL:\tall x. (Bear(x) & Cold(x) -> Red(x))\nTEXT:\tIf someone likes the rabbit and they are red then the rabbit likes the dog.\nFOL:\tall x. ((Likes(x, Rabbit) & Red(x)) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone sees the dog and they need the bear then they are red.\nFOL:\tall x. ((Sees(x, Dog) & Needs(x, Bear)) -> Red(x))\nTEXT:\tGreen people are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red then they need the cow.\nFOL:\tall x. (Red(x) -> Needs(x, Cow))\nTEXT:\tIf someone sees the cow and they need the cow then they like the bear.\nFOL:\tall x. ((Sees(x, Cow) & Needs(x, Cow)) -> Likes(x, Bear))\nTEXT:\tAll cold, kind people are green.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> Green(x))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear needs the rabbit.\nFOL:\tall x. ((Sees(x, Bear) & Cold(Bear)) -> Needs(Bear, Rabbit))\nTEXT:\tIf someone sees the dog and the dog likes the bear then the bear is cold.\nFOL:\tall x. ((Sees(x, Dog) & Likes(Dog, Bear)) -> Cold(Bear))\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear sees the rabbit.\nFOL:\tSee(Bear, Rabbit)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLike(Cow, Rabbit)\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeed(Cow, Rabbit)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSee(Cow, Rabbit)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLike(Dog, Cow)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLike(Dog, Rabbit)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeed(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSee(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSee(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeed(Rabbit, Bear)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeed(Rabbit, Cow)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSee(Rabbit, Dog)\nTEXT:\tIf the bear is cold then the bear is red.\nFOL:\tall x. (Bear(x) & Cold(x) -> Red(x))\nTEXT:\tIf someone likes the rabbit and they are red then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Red(x) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone sees the dog and they need the bear then they are red.\nFOL:\tall x. (See(x, Dog) & Need(x, Bear) -> Red(x))\nTEXT:\tGreen people are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red then they need the cow.\nFOL:\tall x. (Red(x) -> Need(x, Cow))\nTEXT:\tIf someone sees the cow and they need the cow then they like the bear.\nFOL:\tall x. (See(x, Cow) & Need(x, Cow) -> Like(x, Bear))\nTEXT:\tAll cold, kind people are green.\nFOL:\tall x. (Cold(x) & Kind(x) -> Green(x))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear needs the rabbit.\nFOL:\tall x. (See(x, Bear) & Cold(Bear) -> Need(Bear, Rabbit))\nTEXT:\tIf someone sees the dog and the dog likes the bear then the bear is cold.\nFOL:\tall x. (See(x, Dog) & Like(Dog, Bear) -> Cold(Bear))\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeed(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tIf the bear is cold then the bear is red.\nFOL:\tall x. (Bear(x) & Cold(x) -> Red(x))\nTEXT:\tIf someone likes the rabbit and they are red then the rabbit likes the dog.\nFOL:\tall x. (Likes(x, Rabbit) & Red(x) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone sees the dog and they need the bear then they are red.\nFOL:\tall x. (Sees(x, Dog) & Needs(x, Bear) -> Red(x))\nTEXT:\tGreen people are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf someone is red then they need the cow.\nFOL:\tall x. (Red(x) -> Needs(x, Cow))\nTEXT:\tIf someone sees the cow and they need the cow then they like the bear.\nFOL:\tall x. (Sees(x, Cow) & Needs(x, Cow) -> Likes(x, Bear))\nTEXT:\tAll cold, kind people are green.\nFOL:\tall x. (Cold(x) & Kind(x) -> Green(x))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear needs the rabbit.\nFOL:\tall x. (Sees(x, Bear) & Cold(Bear) -> Needs(Bear, Rabbit))\nTEXT:\tIf someone sees the dog and the dog likes the bear then the bear is cold.\nFOL:\tall x. (Sees(x, Dog) & Likes(Dog, Bear) -> Cold(Bear))\nTEXT:\tThe cow needs the rabbit.\nFOL:\tNeeds(Cow, Rabbit)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll kind, smart things are round.\nFOL:\tall x. (Kind(x) & Smart(x) -> Round(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. (Young(x) & Kind(x) -> Blue(x))\nTEXT:\tAll nice, young things are smart.\nFOL:\tall x. (Nice(x) & Young(x) -> Smart(x))\nTEXT:\tIf something is big then it is kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf Anne is nice and Anne is kind then Anne is smart.\nFOL:\t(Nice(Anne) & Kind(Anne) -> Smart(Anne))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\t(Nice(Gary) -> Young(Gary))\nTEXT:\tIf something is round and big then it is blue.\nFOL:\tall x. (Round(x) & Big(x) -> Blue(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll kind, smart things are round.\nFOL:\tall x. ((Kind(x) & Smart(x)) -> Round(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Blue(x))\nTEXT:\tAll nice, young things are smart.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Smart(x))\nTEXT:\tIf something is big then it is kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf Anne is nice and Anne is kind then Anne is smart.\nFOL:\t((Nice(Anne) & Kind(Anne)) -> Smart(Anne))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\t(Nice(Gary) -> Young(Gary))\nTEXT:\tIf something is round and big then it is blue.\nFOL:\tall x. ((Round(x) & Big(x)) -> Blue(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll kind, smart things are round.\nFOL:\tall x. ((Kind(x) & Smart(x)) -> Round(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Blue(x))\nTEXT:\tAll nice, young things are smart.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Smart(x))\nTEXT:\tIf something is big then it is kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf Anne is nice and Anne is kind then Anne is smart.\nFOL:\t((Nice(Anne) & Kind(Anne)) -> Smart(Anne))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\t(Nice(Gary) -> Young(Gary))\nTEXT:\tIf something is round and big then it is blue.\nFOL:\tall x. ((Round(x) & Big(x)) -> Blue(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll kind, smart things are round.\nFOL:\tall x. ((Kind(x) & Smart(x)) -> Round(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Blue(x))\nTEXT:\tAll nice, young things are smart.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Smart(x))\nTEXT:\tIf something is big then it is kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf Anne is nice and Anne is kind then Anne is smart.\nFOL:\t((Nice(Anne) & Kind(Anne)) -> Smart(Anne))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\t(Nice(Gary) -> Young(Gary))\nTEXT:\tIf something is round and big then it is blue.\nFOL:\tall x. ((Round(x) & Big(x)) -> Blue(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll kind, smart things are round.\nFOL:\tall x. ((Kind(x) & Smart(x)) -> Round(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Blue(x))\nTEXT:\tAll nice, young things are smart.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Smart(x))\nTEXT:\tIf something is big then it is kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf Anne is nice and Anne is kind then Anne is smart.\nFOL:\t(Nice(Anne) & Kind(Anne)) -> Smart(Anne)\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\tNice(Gary) -> Young(Gary)\nTEXT:\tIf something is round and big then it is blue.\nFOL:\tall x. ((Round(x) & Big(x)) -> Blue(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the dog.\nFOL:\tEats(Lion, Dog)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf something eats the cow then the cow is kind.\nFOL:\tall x. (Eats(x, Cow) -> Kind(Cow))\nTEXT:\tIf the lion is round then the lion sees the tiger.\nFOL:\t(Round(Lion) -> Sees(Lion, Tiger))\nTEXT:\tIf something is kind and it visits the lion then it visits the dog.\nFOL:\tall x. ((Kind(x) & Visits(x, Lion)) -> Visits(x, Dog))\nTEXT:\tIf something eats the dog then it is round.\nFOL:\tall x. (Eats(x, Dog) -> Round(x))\nTEXT:\tIf something is round and it sees the tiger then the tiger sees the dog.\nFOL:\tall x. ((Round(x) & Sees(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something visits the tiger then it is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tIf something sees the dog then it is blue.\nFOL:\tall x. (Sees(x, Dog) -> Blue(x))\nTEXT:\tThe tiger does not visit the cow.\nFOL:\t-Visits(Tiger, Cow)\nANSWER:\tFalse\n", "TEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the dog.\nFOL:\tEats(Lion, Dog)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf something eats the cow then the cow is kind.\nFOL:\tall x. (Eats(x, Cow) -> Kind(Cow))\nTEXT:\tIf the lion is round then the lion sees the tiger.\nFOL:\tRound(Lion) -> Sees(Lion, Tiger)\nTEXT:\tIf something is kind and it visits the lion then it visits the dog.\nFOL:\tall x. ((Kind(x) & Visits(x, Lion)) -> Visits(x, Dog))\nTEXT:\tIf something eats the dog then it is round.\nFOL:\tall x. (Eats(x, Dog) -> Round(x))\nTEXT:\tIf something is round and it sees the tiger then the tiger sees the dog.\nFOL:\tall x. ((Round(x) & Sees(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something visits the tiger then it is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tIf something sees the dog then it is blue.\nFOL:\tall x. (Sees(x, Dog) -> Blue(x))\nTEXT:\tThe tiger does not visit the cow.\nFOL:\t-Visits(Tiger, Cow)\nANSWER:\tFalse\n", "TEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the dog.\nFOL:\tEats(Lion, Dog)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf something eats the cow then the cow is kind.\nFOL:\tall x. (Eats(x, Cow) -> Kind(Cow))\nTEXT:\tIf the lion is round then the lion sees the tiger.\nFOL:\tRound(Lion) -> Sees(Lion, Tiger)\nTEXT:\tIf something is kind and it visits the lion then it visits the dog.\nFOL:\tall x. ((Kind(x) & Visits(x, Lion)) -> Visits(x, Dog))\nTEXT:\tIf something eats the dog then it is round.\nFOL:\tall x. (Eats(x, Dog) -> Round(x))\nTEXT:\tIf something is round and it sees the tiger then the tiger sees the dog.\nFOL:\tall x. ((Round(x) & Sees(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something visits the tiger then it is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tIf something sees the dog then it is blue.\nFOL:\tall x. (Sees(x, Dog) -> Blue(x))\nTEXT:\tThe tiger does not visit the cow.\nFOL:\t-Visits(Tiger, Cow)\nANSWER:\tFalse\n", "TEXT:\tThe cow sees the lion.\nFOL:\tSees(cow, lion)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(cow, tiger)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(cow, lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(dog, lion)\nTEXT:\tThe dog is kind.\nFOL:\tKind(dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(dog)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(dog, cow)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(lion, cow)\nTEXT:\tThe lion eats the dog.\nFOL:\tEats(lion, dog)\nTEXT:\tThe lion is kind.\nFOL:\tKind(lion)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(lion, cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(lion, dog)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(lion, tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(tiger, lion)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(tiger)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(tiger, cow)\nTEXT:\tIf something eats the cow then the cow is kind.\nFOL:\tall x. (Eats(x, cow) -> Kind(cow))\nTEXT:\tIf the lion is round then the lion sees the tiger.\nFOL:\tRound(lion) -> Sees(lion, tiger)\nTEXT:\tIf something is kind and it visits the lion then it visits the dog.\nFOL:\tall x. ((Kind(x) & Visits(x, lion)) -> Visits(x, dog))\nTEXT:\tIf something eats the dog then it is round.\nFOL:\tall x. (Eats(x, dog) -> Round(x))\nTEXT:\tIf something is round and it sees the tiger then the tiger sees the dog.\nFOL:\tall x. ((Round(x) & Sees(x, tiger)) -> Sees(tiger, dog))\nTEXT:\tIf something visits the tiger then it is blue.\nFOL:\tall x. (Visits(x, tiger) -> Blue(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tIf something sees the dog then it is blue.\nFOL:\tall x. (Sees(x, dog) -> Blue(x))\nTEXT:\tThe tiger does not visit the cow.\nFOL:\t-Visits(tiger, cow)\nANSWER:\tFalse\n", "TEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the dog.\nFOL:\tEats(Lion, Dog)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf something eats the cow then the cow is kind.\nFOL:\tall x. (Eats(x, Cow) -> Kind(Cow))\nTEXT:\tIf the lion is round then the lion sees the tiger.\nFOL:\tRound(Lion) -> Sees(Lion, Tiger)\nTEXT:\tIf something is kind and it visits the lion then it visits the dog.\nFOL:\tall x. ((Kind(x) & Visits(x, Lion)) -> Visits(x, Dog))\nTEXT:\tIf something eats the dog then it is round.\nFOL:\tall x. (Eats(x, Dog) -> Round(x))\nTEXT:\tIf something is round and it sees the tiger then the tiger sees the dog.\nFOL:\tall x. ((Round(x) & Sees(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something visits the tiger then it is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tIf something sees the dog then it is blue.\nFOL:\tall x. (Sees(x, Dog) -> Blue(x))\nTEXT:\tThe tiger does not visit the cow.\nFOL:\t-Visits(Tiger, Cow)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cat.\nFOL:\tChases(Rabbit, Cat)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSees(Rabbit, Bear)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tIf someone chases the bear then the bear is round.\nFOL:\tall x. (Chases(x, Bear) -> Round(Bear))\nTEXT:\tIf someone visits the rabbit and they chase the lion then they are green.\nFOL:\tall x. ((Visits(x, Rabbit) & Chases(x, Lion)) -> Green(x))\nTEXT:\tIf someone visits the bear and they chase the rabbit then the bear is kind.\nFOL:\tall x. ((Visits(x, Bear) & Chases(x, Rabbit)) -> Kind(Bear))\nTEXT:\tIf the bear is round then the bear visits the lion.\nFOL:\tRound(Bear) -> Visits(Bear, Lion)\nTEXT:\tIf someone sees the bear and the bear is round then they visit the rabbit.\nFOL:\tall x. ((Sees(x, Bear) & Round(Bear)) -> Visits(x, Rabbit))\nTEXT:\tIf someone visits the lion then they see the bear.\nFOL:\tall x. (Visits(x, Lion) -> Sees(x, Bear))\nTEXT:\tIf someone visits the rabbit then they chase the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Chases(x, Rabbit))\nTEXT:\tIf the bear sees the lion and the lion is round then the bear chases the cat.\nFOL:\tall x. ((Sees(Bear, x) & Round(x)) -> Chases(Bear, Cat))\nTEXT:\tThe rabbit chases the rabbit.\nFOL:\tChases(Rabbit, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChase(Bear, Cat)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChase(Cat, Rabbit)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisit(Cat, Bear)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisit(Lion, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChase(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cat.\nFOL:\tChase(Rabbit, Cat)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChase(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSee(Rabbit, Bear)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisit(Rabbit, Bear)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisit(Rabbit, Cat)\nTEXT:\tIf someone chases the bear then the bear is round.\nFOL:\tall x. (Chase(x, Bear) -> Round(Bear))\nTEXT:\tIf someone visits the rabbit and they chase the lion then they are green.\nFOL:\tall x. ((Visit(x, Rabbit) & Chase(x, Lion)) -> Green(x))\nTEXT:\tIf someone visits the bear and they chase the rabbit then the bear is kind.\nFOL:\tall x. ((Visit(x, Bear) & Chase(x, Rabbit)) -> Kind(Bear))\nTEXT:\tIf the bear is round then the bear visits the lion.\nFOL:\tRound(Bear) -> Visit(Bear, Lion)\nTEXT:\tIf someone sees the bear and the bear is round then they visit the rabbit.\nFOL:\tall x. ((See(x, Bear) & Round(Bear)) -> Visit(x, Rabbit))\nTEXT:\tIf someone visits the lion then they see the bear.\nFOL:\tall x. (Visit(x, Lion) -> See(x, Bear))\nTEXT:\tIf someone visits the rabbit then they chase the rabbit.\nFOL:\tall x. (Visit(x, Rabbit) -> Chase(x, Rabbit))\nTEXT:\tIf the bear sees the lion and the lion is round then the bear chases the cat.\nFOL:\t(See(Bear, Lion) & Round(Lion)) -> Chase(Bear, Cat)\nTEXT:\tThe rabbit chases the rabbit.\nFOL:\tChase(Rabbit, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cat.\nFOL:\tChases(Rabbit, Cat)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSees(Rabbit, Bear)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tIf someone chases the bear then the bear is round.\nFOL:\tall x. (Chases(x, Bear) -> Round(Bear))\nTEXT:\tIf someone visits the rabbit and they chase the lion then they are green.\nFOL:\tall x. ((Visits(x, Rabbit) & Chases(x, Lion)) -> Green(x))\nTEXT:\tIf someone visits the bear and they chase the rabbit then the bear is kind.\nFOL:\tall x. ((Visits(x, Bear) & Chases(x, Rabbit)) -> Kind(Bear))\nTEXT:\tIf the bear is round then the bear visits the lion.\nFOL:\t(Round(Bear) -> Visits(Bear, Lion))\nTEXT:\tIf someone sees the bear and the bear is round then they visit the rabbit.\nFOL:\tall x. ((Sees(x, Bear) & Round(Bear)) -> Visits(x, Rabbit))\nTEXT:\tIf someone visits the lion then they see the bear.\nFOL:\tall x. (Visits(x, Lion) -> Sees(x, Bear))\nTEXT:\tIf someone visits the rabbit then they chase the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Chases(x, Rabbit))\nTEXT:\tIf the bear sees the lion and the lion is round then the bear chases the cat.\nFOL:\t(Sees(Bear, Lion) & Round(Lion) -> Chases(Bear, Cat))\nTEXT:\tThe rabbit chases the rabbit.\nFOL:\tChases(Rabbit, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cat.\nFOL:\tChases(Rabbit, Cat)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSees(Rabbit, Bear)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tIf someone chases the bear then the bear is round.\nFOL:\tall x. (Chases(x, Bear) -> Round(Bear))\nTEXT:\tIf someone visits the rabbit and they chase the lion then they are green.\nFOL:\tall x. ((Visits(x, Rabbit) & Chases(x, Lion)) -> Green(x))\nTEXT:\tIf someone visits the bear and they chase the rabbit then the bear is kind.\nFOL:\tall x. ((Visits(x, Bear) & Chases(x, Rabbit)) -> Kind(Bear))\nTEXT:\tIf the bear is round then the bear visits the lion.\nFOL:\tRound(Bear) -> Visits(Bear, Lion)\nTEXT:\tIf someone sees the bear and the bear is round then they visit the rabbit.\nFOL:\tall x. ((Sees(x, Bear) & Round(Bear)) -> Visits(x, Rabbit))\nTEXT:\tIf someone visits the lion then they see the bear.\nFOL:\tall x. (Visits(x, Lion) -> Sees(x, Bear))\nTEXT:\tIf someone visits the rabbit then they chase the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Chases(x, Rabbit))\nTEXT:\tIf the bear sees the lion and the lion is round then the bear chases the cat.\nFOL:\t(Sees(Bear, Lion) & Round(Lion)) -> Chases(Bear, Cat)\nTEXT:\tThe rabbit chases the rabbit.\nFOL:\tChases(Rabbit, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cat.\nFOL:\tChases(Rabbit, Cat)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSees(Rabbit, Bear)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tIf someone chases the bear then the bear is round.\nFOL:\tall x. (Chases(x, Bear) -> Round(Bear))\nTEXT:\tIf someone visits the rabbit and they chase the lion then they are green.\nFOL:\tall x. (Visits(x, Rabbit) & Chases(x, Lion) -> Green(x))\nTEXT:\tIf someone visits the bear and they chase the rabbit then the bear is kind.\nFOL:\tall x. (Visits(x, Bear) & Chases(x, Rabbit) -> Kind(Bear))\nTEXT:\tIf the bear is round then the bear visits the lion.\nFOL:\tRound(Bear) -> Visits(Bear, Lion)\nTEXT:\tIf someone sees the bear and the bear is round then they visit the rabbit.\nFOL:\tall x. (Sees(x, Bear) & Round(Bear) -> Visits(x, Rabbit))\nTEXT:\tIf someone visits the lion then they see the bear.\nFOL:\tall x. (Visits(x, Lion) -> Sees(x, Bear))\nTEXT:\tIf someone visits the rabbit then they chase the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Chases(x, Rabbit))\nTEXT:\tIf the bear sees the lion and the lion is round then the bear chases the cat.\nFOL:\tSees(Bear, Lion) & Round(Lion) -> Chases(Bear, Cat)\nTEXT:\tThe rabbit chases the rabbit.\nFOL:\tChases(Rabbit, Rabbit)\nANSWER:\tTrue\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is white then it is green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tAll rough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is cold.\nFOL:\tall x. (Green(x) & Smart(x) -> Cold(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll quiet things are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tAll white things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tQuiet, green things are smart.\nFOL:\tall x. (Quiet(x) & Green(x) -> Smart(x))\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is white then it is green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tAll rough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is cold.\nFOL:\tall x. (Green(x) & Smart(x) -> Cold(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll quiet things are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tAll white things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tQuiet, green things are smart.\nFOL:\tall x. (Quiet(x) & Green(x) -> Smart(x))\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is white then it is green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tAll rough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is cold.\nFOL:\tall x. (Green(x) & Smart(x) -> Cold(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll quiet things are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tAll white things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tQuiet, green things are smart.\nFOL:\tall x. (Quiet(x) & Green(x) -> Smart(x))\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is white then it is green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tAll rough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is cold.\nFOL:\tall x. (Green(x) & Smart(x) -> Cold(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll quiet things are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tAll white things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tQuiet, green things are smart.\nFOL:\tall x. (Quiet(x) & Green(x) -> Smart(x))\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is white then it is green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tAll rough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is cold.\nFOL:\tall x. (Green(x) & Smart(x) -> Cold(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll quiet things are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tAll white things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tQuiet, green things are smart.\nFOL:\tall x. (Quiet(x) & Green(x) -> Smart(x))\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is nice.\nFOL:\tNice(bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(bear)\nTEXT:\tThe bear does not need the mouse.\nFOL:\t-Needs(bear, mouse)\nTEXT:\tThe cat chases the bear.\nFOL:\tChases(cat, bear)\nTEXT:\tThe cat chases the mouse.\nFOL:\tChases(cat, mouse)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(lion, bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(lion, cat)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(lion, bear)\nTEXT:\tThe lion needs the cat.\nFOL:\tNeeds(lion, cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(mouse, lion)\nTEXT:\tIf someone eats the mouse then the mouse chases the bear.\nFOL:\tall x. (Eats(x, mouse) -> Chases(mouse, bear))\nTEXT:\tIf the mouse chases the bear then the bear eats the cat.\nFOL:\tChases(mouse, bear) -> Eats(bear, cat)\nTEXT:\tIf someone needs the cat and the cat is red then they eat the bear.\nFOL:\tall x. ((Needs(x, cat) & Red(cat)) -> Eats(x, bear))\nTEXT:\tIf someone chases the bear then they do not eat the bear.\nFOL:\tall x. (Chases(x, bear) -> -Eats(x, bear))\nTEXT:\tIf someone is nice then they do not eat the bear.\nFOL:\tall x. (Nice(x) -> -Eats(x, bear))\nTEXT:\tIf someone eats the cat then they do not chase the cat.\nFOL:\tall x. (Eats(x, cat) -> -Chases(x, cat))\nTEXT:\tIf someone chases the lion and they need the lion then they do not eat the mouse.\nFOL:\tall x. ((Chases(x, lion) & Needs(x, lion)) -> -Eats(x, mouse))\nTEXT:\tIf someone needs the lion then they eat the mouse.\nFOL:\tall x. (Needs(x, lion) -> Eats(x, mouse))\nTEXT:\tIf someone chases the bear then the bear needs the lion.\nFOL:\tall x. (Chases(x, bear) -> Needs(bear, lion))\nTEXT:\tThe lion does not eat the mouse.\nFOL:\t-Eats(lion, mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear does not need the mouse.\nFOL:\t-Needs(Bear, Mouse)\nTEXT:\tThe cat chases the bear.\nFOL:\tChases(Cat, Bear)\nTEXT:\tThe cat chases the mouse.\nFOL:\tChases(Cat, Mouse)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe lion needs the cat.\nFOL:\tNeeds(Lion, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tIf someone eats the mouse then the mouse chases the bear.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(Mouse, Bear))\nTEXT:\tIf the mouse chases the bear then the bear eats the cat.\nFOL:\t(Chases(Mouse, Bear) -> Eats(Bear, Cat))\nTEXT:\tIf someone needs the cat and the cat is red then they eat the bear.\nFOL:\tall x. ((Needs(x, Cat) & Red(Cat)) -> Eats(x, Bear))\nTEXT:\tIf someone chases the bear then they do not eat the bear.\nFOL:\tall x. (Chases(x, Bear) -> -Eats(x, Bear))\nTEXT:\tIf someone is nice then they do not eat the bear.\nFOL:\tall x. (Nice(x) -> -Eats(x, Bear))\nTEXT:\tIf someone eats the cat then they do not chase the cat.\nFOL:\tall x. (Eats(x, Cat) -> -Chases(x, Cat))\nTEXT:\tIf someone chases the lion and they need the lion then they do not eat the mouse.\nFOL:\tall x. ((Chases(x, Lion) & Needs(x, Lion)) -> -Eats(x, Mouse))\nTEXT:\tIf someone needs the lion then they eat the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Mouse))\nTEXT:\tIf someone chases the bear then the bear needs the lion.\nFOL:\tall x. (Chases(x, Bear) -> Needs(Bear, Lion))\nTEXT:\tThe lion does not eat the mouse.\nFOL:\t-Eats(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear does not need the mouse.\nFOL:\t-Needs(Bear, Mouse)\nTEXT:\tThe cat chases the bear.\nFOL:\tChases(Cat, Bear)\nTEXT:\tThe cat chases the mouse.\nFOL:\tChases(Cat, Mouse)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe lion needs the cat.\nFOL:\tNeeds(Lion, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tIf someone eats the mouse then the mouse chases the bear.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(Mouse, Bear))\nTEXT:\tIf the mouse chases the bear then the bear eats the cat.\nFOL:\t(Chases(Mouse, Bear) -> Eats(Bear, Cat))\nTEXT:\tIf someone needs the cat and the cat is red then they eat the bear.\nFOL:\tall x. ((Needs(x, Cat) & Red(Cat)) -> Eats(x, Bear))\nTEXT:\tIf someone chases the bear then they do not eat the bear.\nFOL:\tall x. (Chases(x, Bear) -> -Eats(x, Bear))\nTEXT:\tIf someone is nice then they do not eat the bear.\nFOL:\tall x. (Nice(x) -> -Eats(x, Bear))\nTEXT:\tIf someone eats the cat then they do not chase the cat.\nFOL:\tall x. (Eats(x, Cat) -> -Chases(x, Cat))\nTEXT:\tIf someone chases the lion and they need the lion then they do not eat the mouse.\nFOL:\tall x. ((Chases(x, Lion) & Needs(x, Lion)) -> -Eats(x, Mouse))\nTEXT:\tIf someone needs the lion then they eat the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Mouse))\nTEXT:\tIf someone chases the bear then the bear needs the lion.\nFOL:\tall x. (Chases(x, Bear) -> Needs(Bear, Lion))\nTEXT:\tThe lion does not eat the mouse.\nFOL:\t-Eats(Lion, Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear does not need the mouse.\nFOL:\t-Need(Bear, Mouse)\nTEXT:\tThe cat chases the bear.\nFOL:\tChase(Cat, Bear)\nTEXT:\tThe cat chases the mouse.\nFOL:\tChase(Cat, Mouse)\nTEXT:\tThe lion eats the bear.\nFOL:\tEat(Lion, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEat(Lion, Cat)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeed(Lion, Bear)\nTEXT:\tThe lion needs the cat.\nFOL:\tNeed(Lion, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEat(Mouse, Lion)\nTEXT:\tIf someone eats the mouse then the mouse chases the bear.\nFOL:\tall x. (Eat(x, Mouse) -> Chase(Mouse, Bear))\nTEXT:\tIf the mouse chases the bear then the bear eats the cat.\nFOL:\t(Chase(Mouse, Bear) -> Eat(Bear, Cat))\nTEXT:\tIf someone needs the cat and the cat is red then they eat the bear.\nFOL:\tall x. ((Need(x, Cat) & Red(Cat)) -> Eat(x, Bear))\nTEXT:\tIf someone chases the bear then they do not eat the bear.\nFOL:\tall x. (Chase(x, Bear) -> -Eat(x, Bear))\nTEXT:\tIf someone is nice then they do not eat the bear.\nFOL:\tall x. (Nice(x) -> -Eat(x, Bear))\nTEXT:\tIf someone eats the cat then they do not chase the cat.\nFOL:\tall x. (Eat(x, Cat) -> -Chase(x, Cat))\nTEXT:\tIf someone chases the lion and they need the lion then they do not eat the mouse.\nFOL:\tall x. ((Chase(x, Lion) & Need(x, Lion)) -> -Eat(x, Mouse))\nTEXT:\tIf someone needs the lion then they eat the mouse.\nFOL:\tall x. (Need(x, Lion) -> Eat(x, Mouse))\nTEXT:\tIf someone chases the bear then the bear needs the lion.\nFOL:\tall x. (Chase(x, Bear) -> Need(Bear, Lion))\nTEXT:\tThe lion does not eat the mouse.\nFOL:\t-Eat(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear does not need the mouse.\nFOL:\t-Need(Bear, Mouse)\nTEXT:\tThe cat chases the bear.\nFOL:\tChases(Cat, Bear)\nTEXT:\tThe cat chases the mouse.\nFOL:\tChases(Cat, Mouse)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeed(Lion, Bear)\nTEXT:\tThe lion needs the cat.\nFOL:\tNeed(Lion, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tIf someone eats the mouse then the mouse chases the bear.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(Mouse, Bear))\nTEXT:\tIf the mouse chases the bear then the bear eats the cat.\nFOL:\t(Chases(Mouse, Bear) -> Eats(Bear, Cat))\nTEXT:\tIf someone needs the cat and the cat is red then they eat the bear.\nFOL:\tall x. ((Need(x, Cat) & Red(Cat)) -> Eats(x, Bear))\nTEXT:\tIf someone chases the bear then they do not eat the bear.\nFOL:\tall x. (Chases(x, Bear) -> -Eats(x, Bear))\nTEXT:\tIf someone is nice then they do not eat the bear.\nFOL:\tall x. (Nice(x) -> -Eats(x, Bear))\nTEXT:\tIf someone eats the cat then they do not chase the cat.\nFOL:\tall x. (Eats(x, Cat) -> -Chases(x, Cat))\nTEXT:\tIf someone chases the lion and they need the lion then they do not eat the mouse.\nFOL:\tall x. ((Chases(x, Lion) & Need(x, Lion)) -> -Eats(x, Mouse))\nTEXT:\tIf someone needs the lion then they eat the mouse.\nFOL:\tall x. (Need(x, Lion) -> Eats(x, Mouse))\nTEXT:\tIf someone chases the bear then the bear needs the lion.\nFOL:\tall x. (Chases(x, Bear) -> Need(Bear, Lion))\nTEXT:\tThe lion does not eat the mouse.\nFOL:\t-Eats(Lion, Mouse)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll white things are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tIf Anne is big then Anne is not white.\nFOL:\tBig(Anne) -> -White(Anne)\nTEXT:\tIf Charlie is cold and Charlie is blue then Charlie is white.\nFOL:\t(Cold(Charlie) & Blue(Charlie)) -> White(Charlie)\nTEXT:\tAll big things are not smart.\nFOL:\tall x. (Big(x) -> -Smart(x))\nTEXT:\tIf something is cold then it is big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Fiona is blue then Fiona is green.\nFOL:\tBlue(Fiona) -> Green(Fiona)\nTEXT:\tIf something is smart and cold then it is green.\nFOL:\tall x. ((Smart(x) & Cold(x)) -> Green(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll white things are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tIf Anne is big then Anne is not white.\nFOL:\tBig(Anne) -> -White(Anne)\nTEXT:\tIf Charlie is cold and Charlie is blue then Charlie is white.\nFOL:\t(Cold(Charlie) & Blue(Charlie)) -> White(Charlie)\nTEXT:\tAll big things are not smart.\nFOL:\tall x. (Big(x) -> -Smart(x))\nTEXT:\tIf something is cold then it is big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Fiona is blue then Fiona is green.\nFOL:\tBlue(Fiona) -> Green(Fiona)\nTEXT:\tIf something is smart and cold then it is green.\nFOL:\tall x. (Smart(x) & Cold(x) -> Green(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll white things are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tIf Anne is big then Anne is not white.\nFOL:\tBig(Anne) -> -White(Anne)\nTEXT:\tIf Charlie is cold and Charlie is blue then Charlie is white.\nFOL:\tCold(Charlie) & Blue(Charlie) -> White(Charlie)\nTEXT:\tAll big things are not smart.\nFOL:\tall x. (Big(x) -> -Smart(x))\nTEXT:\tIf something is cold then it is big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Fiona is blue then Fiona is green.\nFOL:\tBlue(Fiona) -> Green(Fiona)\nTEXT:\tIf something is smart and cold then it is green.\nFOL:\tall x. (Smart(x) & Cold(x) -> Green(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll white things are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tIf Anne is big then Anne is not white.\nFOL:\tBig(Anne) -> -White(Anne)\nTEXT:\tIf Charlie is cold and Charlie is blue then Charlie is white.\nFOL:\t(Cold(Charlie) & Blue(Charlie)) -> White(Charlie)\nTEXT:\tAll big things are not smart.\nFOL:\tall x. (Big(x) -> -Smart(x))\nTEXT:\tIf something is cold then it is big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Fiona is blue then Fiona is green.\nFOL:\tBlue(Fiona) -> Green(Fiona)\nTEXT:\tIf something is smart and cold then it is green.\nFOL:\tall x. (Smart(x) & Cold(x) -> Green(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll white things are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tIf Anne is big then Anne is not white.\nFOL:\tBig(Anne) -> -White(Anne)\nTEXT:\tIf Charlie is cold and Charlie is blue then Charlie is white.\nFOL:\tCold(Charlie) & Blue(Charlie) -> White(Charlie)\nTEXT:\tAll big things are not smart.\nFOL:\tall x. (Big(x) -> -Smart(x))\nTEXT:\tIf something is cold then it is big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Fiona is blue then Fiona is green.\nFOL:\tBlue(Fiona) -> Green(Fiona)\nTEXT:\tIf something is smart and cold then it is green.\nFOL:\tall x. (Smart(x) & Cold(x) -> Green(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tIf someone eats the tiger and the tiger sees the bald eagle then the tiger eats the cat.\nFOL:\tall x. ((Eats(x, Tiger) & Sees(Tiger, BaldEagle)) -> Eats(Tiger, Cat))\nTEXT:\tIf someone is nice then they see the tiger.\nFOL:\tall x. (Nice(x) -> Sees(x, Tiger))\nTEXT:\tAll young, round people are nice.\nFOL:\tall x. ((Young(x) & Round(x)) -> Nice(x))\nTEXT:\tIf someone chases the bald eagle then they eat the mouse.\nFOL:\tall x. (Chases(x, BaldEagle) -> Eats(x, Mouse))\nTEXT:\tIf the tiger eats the mouse and the tiger is green then the tiger is young.\nFOL:\t((Eats(Tiger, Mouse) & Green(Tiger)) -> Young(Tiger))\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone eats the mouse and the mouse sees the bald eagle then they chase the mouse.\nFOL:\tall x. ((Eats(x, Mouse) & Sees(Mouse, BaldEagle)) -> Chases(x, Mouse))\nTEXT:\tIf someone chases the cat then they eat the cat.\nFOL:\tall x. (Chases(x, Cat) -> Eats(x, Cat))\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tIf someone eats the tiger and the tiger sees the bald eagle then the tiger eats the cat.\nFOL:\tall x. (Eats(x, Tiger) & Sees(Tiger, BaldEagle) -> Eats(Tiger, Cat))\nTEXT:\tIf someone is nice then they see the tiger.\nFOL:\tall x. (Nice(x) -> Sees(x, Tiger))\nTEXT:\tAll young, round people are nice.\nFOL:\tall x. (Young(x) & Round(x) -> Nice(x))\nTEXT:\tIf someone chases the bald eagle then they eat the mouse.\nFOL:\tall x. (Chases(x, BaldEagle) -> Eats(x, Mouse))\nTEXT:\tIf the tiger eats the mouse and the tiger is green then the tiger is young.\nFOL:\t(Eats(Tiger, Mouse) & Green(Tiger) -> Young(Tiger))\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone eats the mouse and the mouse sees the bald eagle then they chase the mouse.\nFOL:\tall x. (Eats(x, Mouse) & Sees(Mouse, BaldEagle) -> Chases(x, Mouse))\nTEXT:\tIf someone chases the cat then they eat the cat.\nFOL:\tall x. (Chases(x, Cat) -> Eats(x, Cat))\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tIf someone eats the tiger and the tiger sees the bald eagle then the tiger eats the cat.\nFOL:\tall x. (Eats(x, Tiger) & Sees(Tiger, BaldEagle) -> Eats(Tiger, Cat))\nTEXT:\tIf someone is nice then they see the tiger.\nFOL:\tall x. (Nice(x) -> Sees(x, Tiger))\nTEXT:\tAll young, round people are nice.\nFOL:\tall x. (Young(x) & Round(x) -> Nice(x))\nTEXT:\tIf someone chases the bald eagle then they eat the mouse.\nFOL:\tall x. (Chases(x, BaldEagle) -> Eats(x, Mouse))\nTEXT:\tIf someone is nice then they see the tiger.\nFOL:\tall x. (Nice(x) -> Sees(x, Tiger))\nTEXT:\tIf the tiger eats the mouse and the tiger is green then the tiger is young.\nFOL:\t(Eats(Tiger, Mouse) & Green(Tiger) -> Young(Tiger))\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone eats the mouse and the mouse sees the bald eagle then they chase the mouse.\nFOL:\tall x. (Eats(x, Mouse) & Sees(Mouse, BaldEagle) -> Chases(x, Mouse))\nTEXT:\tIf someone chases the cat then they eat the cat.\nFOL:\tall x. (Chases(x, Cat) -> Eats(x, Cat))\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tIf someone eats the tiger and the tiger sees the bald eagle then the tiger eats the cat.\nFOL:\tall x. (Eats(x, Tiger) & Sees(Tiger, BaldEagle) -> Eats(Tiger, Cat))\nTEXT:\tIf someone is nice then they see the tiger.\nFOL:\tall x. (Nice(x) -> Sees(x, Tiger))\nTEXT:\tAll young, round people are nice.\nFOL:\tall x. (Young(x) & Round(x) -> Nice(x))\nTEXT:\tIf someone chases the bald eagle then they eat the mouse.\nFOL:\tall x. (Chases(x, BaldEagle) -> Eats(x, Mouse))\nTEXT:\tIf someone is nice then they see the tiger.\nFOL:\tall x. (Nice(x) -> Sees(x, Tiger))\nTEXT:\tIf the tiger eats the mouse and the tiger is green then the tiger is young.\nFOL:\tEats(Tiger, Mouse) & Green(Tiger) -> Young(Tiger)\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone eats the mouse and the mouse sees the bald eagle then they chase the mouse.\nFOL:\tall x. (Eats(x, Mouse) & Sees(Mouse, BaldEagle) -> Chases(x, Mouse))\nTEXT:\tIf someone chases the cat then they eat the cat.\nFOL:\tall x. (Chases(x, Cat) -> Eats(x, Cat))\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse sees the tiger.\nFOL:\tSees(Mouse, Tiger)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tIf someone eats the tiger and the tiger sees the bald eagle then the tiger eats the cat.\nFOL:\tall x. (Eats(x, Tiger) & Sees(Tiger, BaldEagle) -> Eats(Tiger, Cat))\nTEXT:\tIf someone is nice then they see the tiger.\nFOL:\tall x. (Nice(x) -> Sees(x, Tiger))\nTEXT:\tAll young, round people are nice.\nFOL:\tall x. ((Young(x) & Round(x)) -> Nice(x))\nTEXT:\tIf someone chases the bald eagle then they eat the mouse.\nFOL:\tall x. (Chases(x, BaldEagle) -> Eats(x, Mouse))\nTEXT:\tIf the tiger eats the mouse and the tiger is green then the tiger is young.\nFOL:\tall x. (Eats(Tiger, Mouse) & Green(Tiger) -> Young(Tiger))\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone eats the mouse and the mouse sees the bald eagle then they chase the mouse.\nFOL:\tall x. (Eats(x, Mouse) & Sees(Mouse, BaldEagle) -> Chases(x, Mouse))\nTEXT:\tIf someone chases the cat then they eat the cat.\nFOL:\tall x. (Chases(x, Cat) -> Eats(x, Cat))\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe squirrel eats the dog.\nFOL:\tEats(Squirrel, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf someone chases the tiger then the tiger is kind.\nFOL:\tall x. (Chases(x, Tiger) -> Kind(Tiger))\nTEXT:\tIf someone is kind then they chase the tiger.\nFOL:\tall x. (Kind(x) -> Chases(x, Tiger))\nTEXT:\tIf someone is cold then they chase the tiger.\nFOL:\tall x. (Cold(x) -> Chases(x, Tiger))\nTEXT:\tIf the dog chases the squirrel then the squirrel needs the tiger.\nFOL:\t(Chases(Dog, Squirrel) -> Needs(Squirrel, Tiger))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the squirrel.\nFOL:\tall x. (Cold(x) & Needs(x, Dog) -> -Chases(x, Squirrel))\nTEXT:\tIf someone eats the cow then they are big.\nFOL:\tall x. (Eats(x, Cow) -> Big(x))\nTEXT:\tIf someone chases the cow and they are kind then they are big.\nFOL:\tall x. (Chases(x, Cow) & Kind(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel needs the tiger then they need the squirrel.\nFOL:\tall x. (Eats(x, Squirrel) & Needs(Squirrel, Tiger) -> Needs(x, Squirrel))\nTEXT:\tIf someone chases the tiger then they chase the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Chases(x, Cow))\nTEXT:\tThe squirrel needs the squirrel.\nFOL:\tNeeds(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is big.\nFOL:\tIsBig(Dog)\nTEXT:\tThe dog is cold.\nFOL:\tIsCold(Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe squirrel eats the dog.\nFOL:\tEats(Squirrel, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tIsCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf someone chases the tiger then the tiger is kind.\nFOL:\tall x. (Chases(x, Tiger) -> IsKind(Tiger))\nTEXT:\tIf someone is kind then they chase the tiger.\nFOL:\tall x. (IsKind(x) -> Chases(x, Tiger))\nTEXT:\tIf someone is cold then they chase the tiger.\nFOL:\tall x. (IsCold(x) -> Chases(x, Tiger))\nTEXT:\tIf the dog chases the squirrel then the squirrel needs the tiger.\nFOL:\t(Chases(Dog, Squirrel) -> Needs(Squirrel, Tiger))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the squirrel.\nFOL:\tall x. (IsCold(x) & Needs(x, Dog) -> -Chases(x, Squirrel))\nTEXT:\tIf someone eats the cow then they are big.\nFOL:\tall x. (Eats(x, Cow) -> IsBig(x))\nTEXT:\tIf someone chases the cow and they are kind then they are big.\nFOL:\tall x. (Chases(x, Cow) & IsKind(x) -> IsBig(x))\nTEXT:\tIf someone eats the squirrel and the squirrel needs the tiger then they need the squirrel.\nFOL:\tall x. (Eats(x, Squirrel) & Needs(Squirrel, Tiger) -> Needs(x, Squirrel))\nTEXT:\tIf someone chases the tiger then they chase the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Chases(x, Cow))\nTEXT:\tThe squirrel needs the squirrel.\nFOL:\tNeeds(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe squirrel eats the dog.\nFOL:\tEats(Squirrel, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf someone chases the tiger then the tiger is kind.\nFOL:\tall x. (Chases(x, Tiger) -> Kind(Tiger))\nTEXT:\tIf someone is kind then they chase the tiger.\nFOL:\tall x. (Kind(x) -> Chases(x, Tiger))\nTEXT:\tIf someone is cold then they chase the tiger.\nFOL:\tall x. (Cold(x) -> Chases(x, Tiger))\nTEXT:\tIf the dog chases the squirrel then the squirrel needs the tiger.\nFOL:\t(Chases(Dog, Squirrel) -> Needs(Squirrel, Tiger))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the squirrel.\nFOL:\tall x. (Cold(x) & Needs(x, Dog) -> -Chases(x, Squirrel))\nTEXT:\tIf someone eats the cow then they are big.\nFOL:\tall x. (Eats(x, Cow) -> Big(x))\nTEXT:\tIf someone chases the cow and they are kind then they are big.\nFOL:\tall x. (Chases(x, Cow) & Kind(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel needs the tiger then they need the squirrel.\nFOL:\tall x. (Eats(x, Squirrel) & Needs(Squirrel, Tiger) -> Needs(x, Squirrel))\nTEXT:\tIf someone chases the tiger then they chase the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Chases(x, Cow))\nTEXT:\tThe squirrel needs the squirrel.\nFOL:\tNeeds(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe squirrel eats the dog.\nFOL:\tEats(Squirrel, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf someone chases the tiger then the tiger is kind.\nFOL:\tall x. (Chases(x, Tiger) -> Kind(Tiger))\nTEXT:\tIf someone is kind then they chase the tiger.\nFOL:\tall x. (Kind(x) -> Chases(x, Tiger))\nTEXT:\tIf someone is cold then they chase the tiger.\nFOL:\tall x. (Cold(x) -> Chases(x, Tiger))\nTEXT:\tIf the dog chases the squirrel then the squirrel needs the tiger.\nFOL:\t(Chases(Dog, Squirrel) -> Needs(Squirrel, Tiger))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the squirrel.\nFOL:\tall x. ((Cold(x) & Needs(x, Dog)) -> -Chases(x, Squirrel))\nTEXT:\tIf someone eats the cow then they are big.\nFOL:\tall x. (Eats(x, Cow) -> Big(x))\nTEXT:\tIf someone chases the cow and they are kind then they are big.\nFOL:\tall x. ((Chases(x, Cow) & Kind(x)) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel needs the tiger then they need the squirrel.\nFOL:\tall x. ((Eats(x, Squirrel) & Needs(Squirrel, Tiger)) -> Needs(x, Squirrel))\nTEXT:\tIf someone chases the tiger then they chase the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Chases(x, Cow))\nTEXT:\tThe squirrel needs the squirrel.\nFOL:\tNeeds(Squirrel, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow needs the squirrel.\nFOL:\tNeeds(Cow, Squirrel)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe squirrel eats the dog.\nFOL:\tEats(Squirrel, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf someone chases the tiger then the tiger is kind.\nFOL:\tall x. (Chases(x, Tiger) -> Kind(Tiger))\nTEXT:\tIf someone is kind then they chase the tiger.\nFOL:\tall x. (Kind(x) -> Chases(x, Tiger))\nTEXT:\tIf someone is cold then they chase the tiger.\nFOL:\tall x. (Cold(x) -> Chases(x, Tiger))\nTEXT:\tIf the dog chases the squirrel then the squirrel needs the tiger.\nFOL:\tChases(Dog, Squirrel) -> Needs(Squirrel, Tiger)\nTEXT:\tIf someone is cold and they need the dog then they do not chase the squirrel.\nFOL:\tall x. ((Cold(x) & Needs(x, Dog)) -> -Chases(x, Squirrel))\nTEXT:\tIf someone eats the cow then they are big.\nFOL:\tall x. (Eats(x, Cow) -> Big(x))\nTEXT:\tIf someone chases the cow and they are kind then they are big.\nFOL:\tall x. ((Chases(x, Cow) & Kind(x)) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel needs the tiger then they need the squirrel.\nFOL:\tall x. ((Eats(x, Squirrel) & Needs(Squirrel, Tiger)) -> Needs(x, Squirrel))\nTEXT:\tIf someone chases the tiger then they chase the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Chases(x, Cow))\nTEXT:\tThe squirrel needs the squirrel.\nFOL:\tNeeds(Squirrel, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is quiet then Gary is red.\nFOL:\tQuiet(Gary) -> Red(Gary)\nTEXT:\tIf something is quiet and kind then it is round.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Round(x))\nTEXT:\tAll white, quiet things are kind.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Kind(x))\nTEXT:\tWhite things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf something is round and cold then it is nice.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Nice(x))\nTEXT:\tIf something is round and not kind then it is not cold.\nFOL:\tall x. ((Round(x) & -Kind(x)) -> -Cold(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is quiet then Gary is red.\nFOL:\tQuiet(Gary) -> Red(Gary)\nTEXT:\tIf something is quiet and kind then it is round.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Round(x))\nTEXT:\tAll white, quiet things are kind.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Kind(x))\nTEXT:\tWhite things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf something is round and cold then it is nice.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Nice(x))\nTEXT:\tIf something is round and not kind then it is not cold.\nFOL:\tall x. ((Round(x) & -Kind(x)) -> -Cold(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is quiet then Gary is red.\nFOL:\tQuiet(Gary) -> Red(Gary)\nTEXT:\tIf something is quiet and kind then it is round.\nFOL:\tall x. (Quiet(x) & Kind(x) -> Round(x))\nTEXT:\tAll white, quiet things are kind.\nFOL:\tall x. (White(x) & Quiet(x) -> Kind(x))\nTEXT:\tWhite things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf something is round and cold then it is nice.\nFOL:\tall x. (Round(x) & Cold(x) -> Nice(x))\nTEXT:\tIf something is round and not kind then it is not cold.\nFOL:\tall x. (Round(x) & -Kind(x) -> -Cold(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is quiet then Gary is red.\nFOL:\tQuiet(Gary) -> Red(Gary)\nTEXT:\tIf something is quiet and kind then it is round.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Round(x))\nTEXT:\tAll white, quiet things are kind.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Kind(x))\nTEXT:\tWhite things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf something is round and cold then it is nice.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Nice(x))\nTEXT:\tIf something is round and not kind then it is not cold.\nFOL:\tall x. ((Round(x) & -Kind(x)) -> -Cold(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is quiet then Gary is red.\nFOL:\tQuiet(Gary) -> Red(Gary)\nTEXT:\tIf something is quiet and kind then it is round.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Round(x))\nTEXT:\tAll white, quiet things are kind.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Kind(x))\nTEXT:\tWhite things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf something is round and cold then it is nice.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Nice(x))\nTEXT:\tIf something is round and not kind then it is not cold.\nFOL:\tall x. ((Round(x) & -Kind(x)) -> -Cold(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the cow.\nFOL:\t-Chases(Mouse, Cow)\nTEXT:\tThe mouse does not need the cow.\nFOL:\t-Needs(Mouse, Cow)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something sees the mouse then it is blue.\nFOL:\tall x. (Sees(x, Mouse) -> Blue(x))\nTEXT:\tIf something chases the mouse and it sees the cat then the cat does not see the cow.\nFOL:\tall x. (Chases(x, Mouse) & Sees(x, Cat) -> -Sees(Cat, Cow))\nTEXT:\tIf something is nice and it needs the mouse then it chases the cow.\nFOL:\tall x. (Nice(x) & Needs(x, Mouse) -> Chases(x, Cow))\nTEXT:\tIf something sees the cat then the cat is kind.\nFOL:\tall x. (Sees(x, Cat) -> Kind(Cat))\nTEXT:\tIf something chases the cow and it needs the bald eagle then the bald eagle sees the cow.\nFOL:\tall x. (Chases(x, Cow) & Needs(x, BaldEagle) -> Sees(BaldEagle, Cow))\nTEXT:\tIf the bald eagle is cold then the bald eagle does not see the cow.\nFOL:\tCold(BaldEagle) -> -Sees(BaldEagle, Cow)\nTEXT:\tIf the cat is cold and the cat needs the bald eagle then the cat needs the cow.\nFOL:\tCold(Cat) & Needs(Cat, BaldEagle) -> Needs(Cat, Cow)\nTEXT:\tThe cat does not need the cow.\nFOL:\t-Needs(Cat, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the cow.\nFOL:\t-Chases(Mouse, Cow)\nTEXT:\tThe mouse does not need the cow.\nFOL:\t-Needs(Mouse, Cow)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something sees the mouse then it is blue.\nFOL:\tall x. (Sees(x, Mouse) -> Blue(x))\nTEXT:\tIf something chases the mouse and it sees the cat then the cat does not see the cow.\nFOL:\tall x. ((Chases(x, Mouse) & Sees(x, Cat)) -> -Sees(Cat, Cow))\nTEXT:\tIf something is nice and it needs the mouse then it chases the cow.\nFOL:\tall x. ((Nice(x) & Needs(x, Mouse)) -> Chases(x, Cow))\nTEXT:\tIf something sees the cat then the cat is kind.\nFOL:\tall x. (Sees(x, Cat) -> Kind(Cat))\nTEXT:\tIf something chases the cow and it needs the bald eagle then the bald eagle sees the cow.\nFOL:\tall x. ((Chases(x, Cow) & Needs(x, BaldEagle)) -> Sees(BaldEagle, Cow))\nTEXT:\tIf the bald eagle is cold then the bald eagle does not see the cow.\nFOL:\tCold(BaldEagle) -> -Sees(BaldEagle, Cow)\nTEXT:\tIf the cat is cold and the cat needs the bald eagle then the cat needs the cow.\nFOL:\t(Cold(Cat) & Needs(Cat, BaldEagle)) -> Needs(Cat, Cow)\nTEXT:\tThe cat does not need the cow.\nFOL:\t-Needs(Cat, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the cow.\nFOL:\t-Chases(Mouse, Cow)\nTEXT:\tThe mouse does not need the cow.\nFOL:\t-Needs(Mouse, Cow)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something sees the mouse then it is blue.\nFOL:\tall x. (Sees(x, Mouse) -> Blue(x))\nTEXT:\tIf something chases the mouse and it sees the cat then the cat does not see the cow.\nFOL:\tall x. ((Chases(x, Mouse) & Sees(x, Cat)) -> -Sees(Cat, Cow))\nTEXT:\tIf something is nice and it needs the mouse then it chases the cow.\nFOL:\tall x. ((Nice(x) & Needs(x, Mouse)) -> Chases(x, Cow))\nTEXT:\tIf something sees the cat then the cat is kind.\nFOL:\tall x. (Sees(x, Cat) -> Kind(Cat))\nTEXT:\tIf something chases the cow and it needs the bald eagle then the bald eagle sees the cow.\nFOL:\tall x. ((Chases(x, Cow) & Needs(x, BaldEagle)) -> Sees(BaldEagle, Cow))\nTEXT:\tIf the bald eagle is cold then the bald eagle does not see the cow.\nFOL:\t(Cold(BaldEagle) -> -Sees(BaldEagle, Cow))\nTEXT:\tIf the cat is cold and the cat needs the bald eagle then the cat needs the cow.\nFOL:\t((Cold(Cat) & Needs(Cat, BaldEagle)) -> Needs(Cat, Cow))\nTEXT:\tThe cat does not need the cow.\nFOL:\t-Needs(Cat, Cow)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the cow.\nFOL:\t-Chases(Mouse, Cow)\nTEXT:\tThe mouse does not need the cow.\nFOL:\t-Needs(Mouse, Cow)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something sees the mouse then it is blue.\nFOL:\tall x. (Sees(x, Mouse) -> Blue(x))\nTEXT:\tIf something chases the mouse and it sees the cat then the cat does not see the cow.\nFOL:\tall x. (Chases(x, Mouse) & Sees(x, Cat) -> -Sees(Cat, Cow))\nTEXT:\tIf something is nice and it needs the mouse then it chases the cow.\nFOL:\tall x. (Nice(x) & Needs(x, Mouse) -> Chases(x, Cow))\nTEXT:\tIf something sees the cat then the cat is kind.\nFOL:\tall x. (Sees(x, Cat) -> Kind(Cat))\nTEXT:\tIf something chases the cow and it needs the bald eagle then the bald eagle sees the cow.\nFOL:\tall x. (Chases(x, Cow) & Needs(x, BaldEagle) -> Sees(BaldEagle, Cow))\nTEXT:\tIf the bald eagle is cold then the bald eagle does not see the cow.\nFOL:\t(Cold(BaldEagle) -> -Sees(BaldEagle, Cow))\nTEXT:\tIf the cat is cold and the cat needs the bald eagle then the cat needs the cow.\nFOL:\t(Cold(Cat) & Needs(Cat, BaldEagle) -> Needs(Cat, Cow))\nTEXT:\tThe cat does not need the cow.\nFOL:\t-Needs(Cat, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the cow.\nFOL:\t-Chases(Mouse, Cow)\nTEXT:\tThe mouse does not need the cow.\nFOL:\t-Needs(Mouse, Cow)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something sees the mouse then it is blue.\nFOL:\tall x. (Sees(x, Mouse) -> Blue(x))\nTEXT:\tIf something chases the mouse and it sees the cat then the cat does not see the cow.\nFOL:\tall x. ((Chases(x, Mouse) & Sees(x, Cat)) -> -Sees(Cat, Cow))\nTEXT:\tIf something is nice and it needs the mouse then it chases the cow.\nFOL:\tall x. ((Nice(x) & Needs(x, Mouse)) -> Chases(x, Cow))\nTEXT:\tIf something sees the cat then the cat is kind.\nFOL:\tall x. (Sees(x, Cat) -> Kind(Cat))\nTEXT:\tIf something chases the cow and it needs the bald eagle then the bald eagle sees the cow.\nFOL:\tall x. ((Chases(x, Cow) & Needs(x, BaldEagle)) -> Sees(BaldEagle, Cow))\nTEXT:\tIf the bald eagle is cold then the bald eagle does not see the cow.\nFOL:\tCold(BaldEagle) -> -Sees(BaldEagle, Cow)\nTEXT:\tIf the cat is cold and the cat needs the bald eagle then the cat needs the cow.\nFOL:\t(Cold(Cat) & Needs(Cat, BaldEagle)) -> Needs(Cat, Cow)\nTEXT:\tThe cat does not need the cow.\nFOL:\t-Needs(Cat, Cow)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tIf someone sees the cat then the cat is green.\nFOL:\tall x. (Sees(x, Cat) -> Green(Cat))\nTEXT:\tIf someone is kind and blue then they need the mouse.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Needs(x, Mouse))\nTEXT:\tIf someone visits the bear and they visit the squirrel then the bear needs the mouse.\nFOL:\tall x. ((Visits(x, Bear) & Visits(x, Squirrel)) -> Needs(Bear, Mouse))\nTEXT:\tIf someone needs the mouse then they are nice.\nFOL:\tall x. (Needs(x, Mouse) -> Nice(x))\nTEXT:\tIf someone needs the bear and they need the cat then the cat sees the bear.\nFOL:\tall x. ((Needs(x, Bear) & Needs(x, Cat)) -> Sees(Cat, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel visits the bear then the squirrel needs the mouse.\nFOL:\tall x. (Needs(x, Squirrel) -> (Visits(Squirrel, Bear) -> Needs(Squirrel, Mouse)))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf the mouse visits the cat then the cat visits the bear.\nFOL:\t(Visits(Mouse, Cat) -> Visits(Cat, Bear))\nTEXT:\tIf someone needs the squirrel then they need the bear.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tThe cat does not see the bear.\nFOL:\t- Sees(Cat, Bear)\nANSWER:\tFalse", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tIf someone sees the cat then the cat is green.\nFOL:\tall x. (Sees(x, Cat) -> Green(Cat))\nTEXT:\tIf someone is kind and blue then they need the mouse.\nFOL:\tall x. (Kind(x) & Blue(x) -> Needs(x, Mouse))\nTEXT:\tIf someone visits the bear and they visit the squirrel then the bear needs the mouse.\nFOL:\tall x. (Visits(x, Bear) & Visits(x, Squirrel) -> Needs(Bear, Mouse))\nTEXT:\tIf someone needs the mouse then they are nice.\nFOL:\tall x. (Needs(x, Mouse) -> Nice(x))\nTEXT:\tIf someone needs the bear and they need the cat then the cat sees the bear.\nFOL:\tall x. (Needs(x, Bear) & Needs(x, Cat) -> Sees(Cat, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel visits the bear then the squirrel needs the mouse.\nFOL:\tall x. (Needs(x, Squirrel) & Visits(Squirrel, Bear) -> Needs(Squirrel, Mouse))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf the mouse visits the cat then the cat visits the bear.\nFOL:\t(Visits(Mouse, Cat) -> Visits(Cat, Bear))\nTEXT:\tIf someone needs the squirrel then they need the bear.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tThe cat does not see the bear.\nFOL:\t-Sees(Cat, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tIf someone sees the cat then the cat is green.\nFOL:\tall x. (Sees(x, Cat) -> Green(Cat))\nTEXT:\tIf someone is kind and blue then they need the mouse.\nFOL:\tall x. (Kind(x) & Blue(x) -> Needs(x, Mouse))\nTEXT:\tIf someone visits the bear and they visit the squirrel then the bear needs the mouse.\nFOL:\tall x. (Visits(x, Bear) & Visits(x, Squirrel) -> Needs(Bear, Mouse))\nTEXT:\tIf someone needs the mouse then they are nice.\nFOL:\tall x. (Needs(x, Mouse) -> Nice(x))\nTEXT:\tIf someone needs the bear and they need the cat then the cat sees the bear.\nFOL:\tall x. (Needs(x, Bear) & Needs(x, Cat) -> Sees(Cat, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel visits the bear then the squirrel needs the mouse.\nFOL:\tall x. (Needs(x, Squirrel) & Visits(Squirrel, Bear) -> Needs(Squirrel, Mouse))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf the mouse visits the cat then the cat visits the bear.\nFOL:\tVisits(Mouse, Cat) -> Visits(Cat, Bear)\nTEXT:\tIf someone needs the squirrel then they need the bear.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tThe cat does not see the bear.\nFOL:\t-Sees(Cat, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tIf someone sees the cat then the cat is green.\nFOL:\tall x. (Sees(x, Cat) -> Green(Cat))\nTEXT:\tIf someone is kind and blue then they need the mouse.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Needs(x, Mouse))\nTEXT:\tIf someone visits the bear and they visit the squirrel then the bear needs the mouse.\nFOL:\tall x. ((Visits(x, Bear) & Visits(x, Squirrel)) -> Needs(Bear, Mouse))\nTEXT:\tIf someone needs the mouse then they are nice.\nFOL:\tall x. (Needs(x, Mouse) -> Nice(x))\nTEXT:\tIf someone needs the bear and they need the cat then the cat sees the bear.\nFOL:\tall x. ((Needs(x, Bear) & Needs(x, Cat)) -> Sees(Cat, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel visits the bear then the squirrel needs the mouse.\nFOL:\tall x. ((Needs(x, Squirrel) & Visits(Squirrel, Bear)) -> Needs(Squirrel, Mouse))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf the mouse visits the cat then the cat visits the bear.\nFOL:\tall x. (Visits(Mouse, Cat) -> Visits(Cat, Bear))\nTEXT:\tIf someone needs the squirrel then they need the bear.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tThe cat does not see the bear.\nFOL:\t-Sees(Cat, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the mouse.\nFOL:\tSees(Bear, Mouse)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tIf someone sees the cat then the cat is green.\nFOL:\tall x. (Sees(x, Cat) -> Green(Cat))\nTEXT:\tIf someone is kind and blue then they need the mouse.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Needs(x, Mouse))\nTEXT:\tIf someone visits the bear and they visit the squirrel then the bear needs the mouse.\nFOL:\tall x. ((Visits(x, Bear) & Visits(x, Squirrel)) -> Needs(Bear, Mouse))\nTEXT:\tIf someone needs the mouse then they are nice.\nFOL:\tall x. (Needs(x, Mouse) -> Nice(x))\nTEXT:\tIf someone needs the bear and they need the cat then the cat sees the bear.\nFOL:\tall x. ((Needs(x, Bear) & Needs(x, Cat)) -> Sees(Cat, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel visits the bear then the squirrel needs the mouse.\nFOL:\tall x. ((Needs(x, Squirrel) & Visits(Squirrel, Bear)) -> Needs(Squirrel, Mouse))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf the mouse visits the cat then the cat visits the bear.\nFOL:\t(Visits(Mouse, Cat) -> Visits(Cat, Bear))\nTEXT:\tIf someone needs the squirrel then they need the bear.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tThe cat does not see the bear.\nFOL:\t-Sees(Cat, Bear)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tWhite, furry people are big.\nFOL:\tall x. ((White(x) & Furry(x)) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is quiet and furry then they are white.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> White(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll big, furry people are round.\nFOL:\tall x. ((Big(x) & Furry(x)) -> Round(x))\nTEXT:\tIf someone is quiet then they are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Erin is round then Erin is quiet.\nFOL:\tRound(Erin) -> Quiet(Erin)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tWhite, furry people are big.\nFOL:\tall x. ((White(x) & Furry(x)) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is quiet and furry then they are white.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> White(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll big, furry people are round.\nFOL:\tall x. ((Big(x) & Furry(x)) -> Round(x))\nTEXT:\tIf someone is quiet then they are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Erin is round then Erin is quiet.\nFOL:\tRound(Erin) -> Quiet(Erin)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tWhite, furry people are big.\nFOL:\tall x. ((White(x) & Furry(x)) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is quiet and furry then they are white.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> White(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll big, furry people are round.\nFOL:\tall x. ((Big(x) & Furry(x)) -> Round(x))\nTEXT:\tIf someone is quiet then they are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Erin is round then Erin is quiet.\nFOL:\tRound(Erin) -> Quiet(Erin)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tWhite, furry people are big.\nFOL:\tall x. ((White(x) & Furry(x)) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is quiet and furry then they are white.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> White(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll big, furry people are round.\nFOL:\tall x. ((Big(x) & Furry(x)) -> Round(x))\nTEXT:\tIf someone is quiet then they are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Erin is round then Erin is quiet.\nFOL:\tRound(Erin) -> Quiet(Erin)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tWhite, furry people are big.\nFOL:\tall x. (White(x) & Furry(x) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is quiet and furry then they are white.\nFOL:\tall x. (Quiet(x) & Furry(x) -> White(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll big, furry people are round.\nFOL:\tall x. (Big(x) & Furry(x) -> Round(x))\nTEXT:\tIf someone is quiet then they are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Erin is round then Erin is quiet.\nFOL:\tRound(Erin) -> Quiet(Erin)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the cat.\nFOL:\tLikes(Squirrel, Cat)\nTEXT:\tIf something is blue and it likes the cat then it sees the cat.\nFOL:\tall x. ((Blue(x) & Likes(x, Cat)) -> Sees(x, Cat))\nTEXT:\tIf the cat sees the bear then the bear sees the rabbit.\nFOL:\t(Sees(Cat, Bear) -> Sees(Bear, Rabbit))\nTEXT:\tIf something eats the squirrel then the squirrel sees the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(Squirrel, Cat))\nTEXT:\tIf something likes the bear then the bear eats the rabbit.\nFOL:\tall x. (Likes(x, Bear) -> Eats(Bear, Rabbit))\nTEXT:\tIf the cat is round then the cat likes the bear.\nFOL:\t(Round(Cat) -> Likes(Cat, Bear))\nTEXT:\tIf something eats the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the rabbit sees the cat and the rabbit eats the squirrel then the rabbit likes the cat.\nFOL:\t((Sees(Rabbit, Cat) & Eats(Rabbit, Squirrel)) -> Likes(Rabbit, Cat))\nTEXT:\tIf something eats the cat and it is not nice then it eats the bear.\nFOL:\tall x. ((Eats(x, Cat) & -Nice(x)) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then the bear likes the cat.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Cat))\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the cat.\nFOL:\tLikes(Squirrel, Cat)\nTEXT:\tIf something is blue and it likes the cat then it sees the cat.\nFOL:\tall x. ((Blue(x) & Likes(x, Cat)) -> Sees(x, Cat))\nTEXT:\tIf the cat sees the bear then the bear sees the rabbit.\nFOL:\tSees(Cat, Bear) -> Sees(Bear, Rabbit)\nTEXT:\tIf something eats the squirrel then the squirrel sees the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(Squirrel, Cat))\nTEXT:\tIf something likes the bear then the bear eats the rabbit.\nFOL:\tall x. (Likes(x, Bear) -> Eats(Bear, Rabbit))\nTEXT:\tIf the cat is round then the cat likes the bear.\nFOL:\tRound(Cat) -> Likes(Cat, Bear)\nTEXT:\tIf something eats the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the rabbit sees the cat and the rabbit eats the squirrel then the rabbit likes the cat.\nFOL:\t(Sees(Rabbit, Cat) & Eats(Rabbit, Squirrel)) -> Likes(Rabbit, Cat)\nTEXT:\tIf something eats the cat and it is not nice then it eats the bear.\nFOL:\tall x. ((Eats(x, Cat) & -Nice(x)) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then the bear likes the cat.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Cat))\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t- Nice(Rabbit)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the cat.\nFOL:\tLikes(Squirrel, Cat)\nTEXT:\tIf something is blue and it likes the cat then it sees the cat.\nFOL:\tall x. ((Blue(x) & Likes(x, Cat)) -> Sees(x, Cat))\nTEXT:\tIf the cat sees the bear then the bear sees the rabbit.\nFOL:\tSees(Cat, Bear) -> Sees(Bear, Rabbit)\nTEXT:\tIf something eats the squirrel then the squirrel sees the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(Squirrel, Cat))\nTEXT:\tIf something likes the bear then the bear eats the rabbit.\nFOL:\tall x. (Likes(x, Bear) -> Eats(Bear, Rabbit))\nTEXT:\tIf the cat is round then the cat likes the bear.\nFOL:\tRound(Cat) -> Likes(Cat, Bear)\nTEXT:\tIf something eats the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the rabbit sees the cat and the rabbit eats the squirrel then the rabbit likes the cat.\nFOL:\t(Sees(Rabbit, Cat) & Eats(Rabbit, Squirrel)) -> Likes(Rabbit, Cat)\nTEXT:\tIf something eats the cat and it is not nice then it eats the bear.\nFOL:\tall x. ((Eats(x, Cat) & -Nice(x)) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then the bear likes the cat.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Cat))\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the cat.\nFOL:\tLikes(Squirrel, Cat)\nTEXT:\tIf something is blue and it likes the cat then it sees the cat.\nFOL:\tall x. ((Blue(x) & Likes(x, Cat)) -> Sees(x, Cat))\nTEXT:\tIf the cat sees the bear then the bear sees the rabbit.\nFOL:\t(Sees(Cat, Bear) -> Sees(Bear, Rabbit))\nTEXT:\tIf something eats the squirrel then the squirrel sees the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(Squirrel, Cat))\nTEXT:\tIf something likes the bear then the bear eats the rabbit.\nFOL:\tall x. (Likes(x, Bear) -> Eats(Bear, Rabbit))\nTEXT:\tIf the cat is round then the cat likes the bear.\nFOL:\t(Round(Cat) -> Likes(Cat, Bear))\nTEXT:\tIf something eats the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the rabbit sees the cat and the rabbit eats the squirrel then the rabbit likes the cat.\nFOL:\t((Sees(Rabbit, Cat) & Eats(Rabbit, Squirrel)) -> Likes(Rabbit, Cat))\nTEXT:\tIf something eats the cat and it is not nice then it eats the bear.\nFOL:\tall x. ((Eats(x, Cat) & -Nice(x)) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then the bear likes the cat.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Cat))\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t- Nice(Rabbit)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the cat.\nFOL:\tLikes(Squirrel, Cat)\nTEXT:\tIf something is blue and it likes the cat then it sees the cat.\nFOL:\tall x. ((Blue(x) & Likes(x, Cat)) -> Sees(x, Cat))\nTEXT:\tIf the cat sees the bear then the bear sees the rabbit.\nFOL:\t(Sees(Cat, Bear) -> Sees(Bear, Rabbit))\nTEXT:\tIf something eats the squirrel then the squirrel sees the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(Squirrel, Cat))\nTEXT:\tIf something likes the bear then the bear eats the rabbit.\nFOL:\tall x. (Likes(x, Bear) -> Eats(Bear, Rabbit))\nTEXT:\tIf the cat is round then the cat likes the bear.\nFOL:\t(Round(Cat) -> Likes(Cat, Bear))\nTEXT:\tIf something eats the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf the rabbit sees the cat and the rabbit eats the squirrel then the rabbit likes the cat.\nFOL:\t(Sees(Rabbit, Cat) & Eats(Rabbit, Squirrel) -> Likes(Rabbit, Cat))\nTEXT:\tIf something eats the cat and it is not nice then it eats the bear.\nFOL:\tall x. ((Eats(x, Cat) & -Nice(x)) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then the bear likes the cat.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Cat))\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle does not eat the bear.\nFOL:\t-Eats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is not red.\nFOL:\t-Red(BaldEagle)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe squirrel does not chase the mouse.\nFOL:\t-Chases(Squirrel, Mouse)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tIf something is big and it chases the bald eagle then it eats the bear.\nFOL:\tall x. ((Big(x) & Chases(x, BaldEagle)) -> Eats(x, Bear))\nTEXT:\tIf something eats the mouse then the mouse likes the squirrel.\nFOL:\tall x. (Eats(x, Mouse) -> Likes(Mouse, Squirrel))\nTEXT:\tIf something likes the squirrel then it is round.\nFOL:\tall x. (Likes(x, Squirrel) -> Round(x))\nTEXT:\tIf the bear eats the squirrel and the squirrel chases the mouse then the squirrel does not like the bald eagle.\nFOL:\t(Eats(Bear, Squirrel) & Chases(Squirrel, Mouse)) -> -Likes(Squirrel, BaldEagle)\nTEXT:\tIf something is round then it chases the bald eagle.\nFOL:\tall x. (Round(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the squirrel and the squirrel eats the bald eagle then the bald eagle chases the squirrel.\nFOL:\tall x. ((Likes(x, Squirrel) & Eats(Squirrel, BaldEagle)) -> Chases(BaldEagle, Squirrel))\nTEXT:\tIf something eats the mouse and the mouse chases the bear then it eats the bald eagle.\nFOL:\tall x. ((Eats(x, Mouse) & Chases(Mouse, Bear)) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the bear and it likes the bald eagle then it eats the mouse.\nFOL:\tall x. ((Eats(x, Bear) & Likes(x, BaldEagle)) -> Eats(x, Mouse))\nTEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not eat the bear.\nFOL:\t-Eat(BaldEagle, Bear)\nTEXT:\tThe bald eagle is not red.\nFOL:\t-Red(BaldEagle)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe squirrel does not chase the mouse.\nFOL:\t-Chases(Squirrel, Mouse)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tIf something is big and it chases the bald eagle then it eats the bear.\nFOL:\tall x. ((Big(x) & Chases(x, BaldEagle)) -> Eats(x, Bear))\nTEXT:\tIf something eats the mouse then the mouse likes the squirrel.\nFOL:\tall x. (Eats(x, Mouse) -> Likes(Mouse, Squirrel))\nTEXT:\tIf something likes the squirrel then it is round.\nFOL:\tall x. (Likes(x, Squirrel) -> Round(x))\nTEXT:\tIf the bear eats the squirrel and the squirrel chases the mouse then the squirrel does not like the bald eagle.\nFOL:\t((Eats(Bear, Squirrel) & Chases(Squirrel, Mouse)) -> -Likes(Squirrel, BaldEagle))\nTEXT:\tIf something is round then it chases the bald eagle.\nFOL:\tall x. (Round(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the squirrel and the squirrel eats the bald eagle then the bald eagle chases the squirrel.\nFOL:\tall x. ((Likes(x, Squirrel) & Eats(Squirrel, BaldEagle)) -> Chases(BaldEagle, Squirrel))\nTEXT:\tIf something eats the mouse and the mouse chases the bear then it eats the bald eagle.\nFOL:\tall x. ((Eats(x, Mouse) & Chases(Mouse, Bear)) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the bear and it likes the bald eagle then it eats the mouse.\nFOL:\tall x. ((Eats(x, Bear) & Likes(x, BaldEagle)) -> Eats(x, Mouse))\nTEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not eat the bear.\nFOL:\t-Eats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is not red.\nFOL:\t-Red(BaldEagle)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe squirrel does not chase the mouse.\nFOL:\t-Chases(Squirrel, Mouse)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tIf something is big and it chases the bald eagle then it eats the bear.\nFOL:\tall x. ((Big(x) & Chases(x, BaldEagle)) -> Eats(x, Bear))\nTEXT:\tIf something eats the mouse then the mouse likes the squirrel.\nFOL:\tall x. (Eats(x, Mouse) -> Likes(Mouse, Squirrel))\nTEXT:\tIf something likes the squirrel then it is round.\nFOL:\tall x. (Likes(x, Squirrel) -> Round(x))\nTEXT:\tIf the bear eats the squirrel and the squirrel chases the mouse then the squirrel does not like the bald eagle.\nFOL:\t(Eats(Bear, Squirrel) & Chases(Squirrel, Mouse)) -> -Likes(Squirrel, BaldEagle)\nTEXT:\tIf something is round then it chases the bald eagle.\nFOL:\tall x. (Round(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the squirrel and the squirrel eats the bald eagle then the bald eagle chases the squirrel.\nFOL:\tall x. ((Likes(x, Squirrel) & Eats(Squirrel, BaldEagle)) -> Chases(BaldEagle, Squirrel))\nTEXT:\tIf something eats the mouse and the mouse chases the bear then it eats the bald eagle.\nFOL:\tall x. ((Eats(x, Mouse) & Chases(Mouse, Bear)) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the bear and it likes the bald eagle then it eats the mouse.\nFOL:\tall x. ((Eats(x, Bear) & Likes(x, BaldEagle)) -> Eats(x, Mouse))\nTEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not eat the bear.\nFOL:\t-Eat(BaldEagle, Bear)\nTEXT:\tThe bald eagle is not red.\nFOL:\t-Red(BaldEagle)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChase(Mouse, Bear)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe squirrel does not chase the mouse.\nFOL:\t-Chase(Squirrel, Mouse)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tIf something is big and it chases the bald eagle then it eats the bear.\nFOL:\tall x. ((Big(x) & Chase(x, BaldEagle)) -> Eat(x, Bear))\nTEXT:\tIf something eats the mouse then the mouse likes the squirrel.\nFOL:\tall x. (Eat(x, Mouse) -> Likes(Mouse, Squirrel))\nTEXT:\tIf something likes the squirrel then it is round.\nFOL:\tall x. (Likes(x, Squirrel) -> Round(x))\nTEXT:\tIf the bear eats the squirrel and the squirrel chases the mouse then the squirrel does not like the bald eagle.\nFOL:\t(Eat(Bear, Squirrel) & Chase(Squirrel, Mouse)) -> -Likes(Squirrel, BaldEagle)\nTEXT:\tIf something is round then it chases the bald eagle.\nFOL:\tall x. (Round(x) -> Chase(x, BaldEagle))\nTEXT:\tIf something likes the squirrel and the squirrel eats the bald eagle then the bald eagle chases the squirrel.\nFOL:\tall x. ((Likes(x, Squirrel) & Eat(Squirrel, BaldEagle)) -> Chase(BaldEagle, Squirrel))\nTEXT:\tIf something eats the mouse and the mouse chases the bear then it eats the bald eagle.\nFOL:\tall x. ((Eat(x, Mouse) & Chase(Mouse, Bear)) -> Eat(x, BaldEagle))\nTEXT:\tIf something eats the bear and it likes the bald eagle then it eats the mouse.\nFOL:\tall x. ((Eat(x, Bear) & Likes(x, BaldEagle)) -> Eat(x, Mouse))\nTEXT:\tThe bald eagle eats the mouse.\nFOL:\tEat(BaldEagle, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not eat the bear.\nFOL:\t\u00acEats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is not red.\nFOL:\t\u00acRed(BaldEagle)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear likes the squirrel.\nFOL:\tLikes(Bear, Squirrel)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe squirrel does not chase the mouse.\nFOL:\t\u00acChases(Squirrel, Mouse)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tIf something is big and it chases the bald eagle then it eats the bear.\nFOL:\tall x. ((Big(x) & Chases(x, BaldEagle)) -> Eats(x, Bear))\nTEXT:\tIf something eats the mouse then the mouse likes the squirrel.\nFOL:\tall x. (Eats(x, Mouse) -> Likes(Mouse, Squirrel))\nTEXT:\tIf something likes the squirrel then it is round.\nFOL:\tall x. (Likes(x, Squirrel) -> Round(x))\nTEXT:\tIf the bear eats the squirrel and the squirrel chases the mouse then the squirrel does not like the bald eagle.\nFOL:\t(Eats(Bear, Squirrel) & Chases(Squirrel, Mouse)) -> \u00acLikes(Squirrel, BaldEagle)\nTEXT:\tIf something is round then it chases the bald eagle.\nFOL:\tall x. (Round(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something likes the squirrel and the squirrel eats the bald eagle then the bald eagle chases the squirrel.\nFOL:\tall x. ((Likes(x, Squirrel) & Eats(Squirrel, BaldEagle)) -> Chases(BaldEagle, Squirrel))\nTEXT:\tIf something eats the mouse and the mouse chases the bear then it eats the bald eagle.\nFOL:\tall x. ((Eats(x, Mouse) & Chases(Mouse, Bear)) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the bear and it likes the bald eagle then it eats the mouse.\nFOL:\tall x. ((Eats(x, Bear) & Likes(x, BaldEagle)) -> Eats(x, Mouse))\nTEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle eats the cow.\nFOL:\tEats(BaldEagle, Cow)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tIf something is round then it sees the cow.\nFOL:\tall x. (Round(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf something chases the cow and it eats the rabbit then it is big.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Rabbit)) -> Big(x))\nTEXT:\tIf something eats the cat and it chases the bald eagle then the cat chases the bald eagle.\nFOL:\tall x. ((Eats(x, Cat) & Chases(x, BaldEagle)) -> Chases(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it eats the cat.\nFOL:\tall x. (Sees(x, BaldEagle) -> Eats(x, Cat))\nTEXT:\tIf something sees the bald eagle and it is big then the bald eagle eats the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Big(x)) -> Eats(BaldEagle, Cat))\nTEXT:\tIf something chases the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tThe cat eats the cat.\nFOL:\tEats(Cat, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the cow.\nFOL:\tEats(BaldEagle, Cow)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tIf something is round then it sees the cow.\nFOL:\tall x. (Round(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf something chases the cow and it eats the rabbit then it is big.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Rabbit)) -> Big(x))\nTEXT:\tIf something eats the cat and it chases the bald eagle then the cat chases the bald eagle.\nFOL:\tall x. ((Eats(x, Cat) & Chases(x, BaldEagle)) -> Chases(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it eats the cat.\nFOL:\tall x. (Sees(x, BaldEagle) -> Eats(x, Cat))\nTEXT:\tIf something sees the bald eagle and it is big then the bald eagle eats the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Big(x)) -> Eats(BaldEagle, Cat))\nTEXT:\tIf something chases the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tThe cat eats the cat.\nFOL:\tEats(Cat, Cat)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the cow.\nFOL:\tEats(BaldEagle, Cow)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tIf something is round then it sees the cow.\nFOL:\tall x. (Round(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf something chases the cow and it eats the rabbit then it is big.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Rabbit)) -> Big(x))\nTEXT:\tIf something eats the cat and it chases the bald eagle then the cat chases the bald eagle.\nFOL:\tall x. ((Eats(x, Cat) & Chases(x, BaldEagle)) -> Chases(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it eats the cat.\nFOL:\tall x. (Sees(x, BaldEagle) -> Eats(x, Cat))\nTEXT:\tIf something sees the bald eagle and it is big then the bald eagle eats the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Big(x)) -> Eats(BaldEagle, Cat))\nTEXT:\tIf something chases the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tThe cat eats the cat.\nFOL:\tEats(Cat, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the cow.\nFOL:\tEats(BaldEagle, Cow)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tIf something is round then it sees the cow.\nFOL:\tall x. (Round(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf something chases the cow and it eats the rabbit then it is big.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Rabbit)) -> Big(x))\nTEXT:\tIf something eats the cat and it chases the bald eagle then the cat chases the bald eagle.\nFOL:\tall x. ((Eats(x, Cat) & Chases(x, BaldEagle)) -> Chases(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it eats the cat.\nFOL:\tall x. (Sees(x, BaldEagle) -> Eats(x, Cat))\nTEXT:\tIf something sees the bald eagle and it is big then the bald eagle eats the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Big(x)) -> Eats(BaldEagle, Cat))\nTEXT:\tIf something chases the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tThe cat eats the cat.\nFOL:\tEats(Cat, Cat)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the cow.\nFOL:\tEats(BaldEagle, Cow)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tIf something is round then it sees the cow.\nFOL:\tall x. (Round(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then the rabbit eats the cat.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Cat))\nTEXT:\tIf something chases the cow and it eats the rabbit then it is big.\nFOL:\tall x. (Chases(x, Cow) & Eats(x, Rabbit) -> Big(x))\nTEXT:\tIf something eats the cat and it chases the bald eagle then the cat chases the bald eagle.\nFOL:\tall x. (Eats(x, Cat) & Chases(x, BaldEagle) -> Chases(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it eats the cat.\nFOL:\tall x. (Sees(x, BaldEagle) -> Eats(x, Cat))\nTEXT:\tIf something sees the bald eagle and it is big then the bald eagle eats the cat.\nFOL:\tall x. (Sees(x, BaldEagle) & Big(x) -> Eats(BaldEagle, Cat))\nTEXT:\tIf something chases the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tThe cat eats the cat.\nFOL:\tEats(Cat, Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf something is cold and not nice then it is blue.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Blue(x))\nTEXT:\tAll furry things are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf something is big then it is not blue.\nFOL:\tall x. (Big(x) -> -Blue(x))\nTEXT:\tAll big things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tCold, blue things are green.\nFOL:\tall x. (Cold(x) & Blue(x) -> Green(x))\nTEXT:\tCold things are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf something is cold and not nice then it is blue.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Blue(x))\nTEXT:\tAll furry things are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf something is big then it is not blue.\nFOL:\tall x. (Big(x) -> -Blue(x))\nTEXT:\tAll big things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tCold, blue things are green.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> Green(x))\nTEXT:\tCold things are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf something is cold and not nice then it is blue.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Blue(x))\nTEXT:\tAll furry things are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf something is big then it is not blue.\nFOL:\tall x. (Big(x) -> -Blue(x))\nTEXT:\tAll big things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tCold, blue things are green.\nFOL:\tall x. (Cold(x) & Blue(x) -> Green(x))\nTEXT:\tCold things are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf something is cold and not nice then it is blue.\nFOL:\tall x. ((Cold(x) & -Nice(x)) -> Blue(x))\nTEXT:\tAll furry things are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf something is big then it is not blue.\nFOL:\tall x. (Big(x) -> -Blue(x))\nTEXT:\tAll big things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tCold, blue things are green.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> Green(x))\nTEXT:\tCold things are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf something is cold and not nice then it is blue.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Blue(x))\nTEXT:\tAll furry things are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf something is big then it is not blue.\nFOL:\tall x. (Big(x) -> -Blue(x))\nTEXT:\tAll big things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tCold, blue things are green.\nFOL:\tall x. (Cold(x) & Blue(x) -> Green(x))\nTEXT:\tCold things are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is smart and green then they are big.\nFOL:\tall x. (Smart(x) & Green(x) -> Big(x))\nTEXT:\tIf someone is young and round then they are big.\nFOL:\tall x. (Young(x) & Round(x) -> Big(x))\nTEXT:\tRound people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is big then Anne is not round.\nFOL:\tBig(Anne) -> -Round(Anne)\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is round and blue then they are green.\nFOL:\tall x. (Round(x) & Blue(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Anne is young and Anne is round then Anne is green.\nFOL:\t(Young(Anne) & Round(Anne)) -> Green(Anne)\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is smart and green then they are big.\nFOL:\tall x. (Smart(x) & Green(x) -> Big(x))\nTEXT:\tIf someone is young and round then they are big.\nFOL:\tall x. (Young(x) & Round(x) -> Big(x))\nTEXT:\tRound people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is big then Anne is not round.\nFOL:\tBig(Anne) -> -Round(Anne)\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is round and blue then they are green.\nFOL:\tall x. (Round(x) & Blue(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Anne is young and Anne is round then Anne is green.\nFOL:\t(Young(Anne) & Round(Anne)) -> Green(Anne)\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is smart and green then they are big.\nFOL:\tall x. (Smart(x) & Green(x) -> Big(x))\nTEXT:\tIf someone is young and round then they are big.\nFOL:\tall x. (Young(x) & Round(x) -> Big(x))\nTEXT:\tRound people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is big then Anne is not round.\nFOL:\t(Big(Anne) -> -Round(Anne))\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is round and blue then they are green.\nFOL:\tall x. (Round(x) & Blue(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Anne is young and Anne is round then Anne is green.\nFOL:\t(Young(Anne) & Round(Anne) -> Green(Anne))\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is smart and green then they are big.\nFOL:\tall x. (Smart(x) & Green(x) -> Big(x))\nTEXT:\tIf someone is young and round then they are big.\nFOL:\tall x. (Young(x) & Round(x) -> Big(x))\nTEXT:\tRound people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is big then Anne is not round.\nFOL:\tBig(Anne) -> -Round(Anne)\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is round and blue then they are green.\nFOL:\tall x. (Round(x) & Blue(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Anne is young and Anne is round then Anne is green.\nFOL:\tYoung(Anne) & Round(Anne) -> Green(Anne)\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is smart and green then they are big.\nFOL:\tall x. (Smart(x) & Green(x) -> Big(x))\nTEXT:\tIf someone is young and round then they are big.\nFOL:\tall x. (Young(x) & Round(x) -> Big(x))\nTEXT:\tRound people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is big then Anne is not round.\nFOL:\t(Big(Anne) -> -Round(Anne))\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is round and blue then they are green.\nFOL:\tall x. (Round(x) & Blue(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Anne is young and Anne is round then Anne is green.\nFOL:\t(Young(Anne) & Round(Anne) -> Green(Anne))\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. (Furry(x) & Big(x) -> Red(x))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice then it is furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is rough then it is blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tIf something is nice and furry then it is green.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Green(x))\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Red(x))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice then it is furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is rough then it is blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tIf something is nice and furry then it is green.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Green(x))\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. (Furry(x) & Big(x) -> Red(x))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice then it is furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is rough then it is blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tIf something is nice and furry then it is green.\nFOL:\tall x. (Nice(x) & Furry(x) -> Green(x))\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. (Furry(x) & Big(x) -> Red(x))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice then it is furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is rough then it is blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tIf something is nice and furry then it is green.\nFOL:\tall x. (Nice(x) & Furry(x) -> Green(x))\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. (Furry(x) & Big(x) -> Red(x))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice then it is furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is rough then it is blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tIf something is nice and furry then it is green.\nFOL:\tall x. (Nice(x) & Furry(x) -> Green(x))\nTEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the dog.\nFOL:\tChase(BaldEagle, Dog)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEat(BaldEagle, Dog)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle likes the bear.\nFOL:\tLike(BaldEagle, Bear)\nTEXT:\tThe bear eats the dog.\nFOL:\tEat(Bear, Dog)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChase(Dog, Tiger)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEat(Dog, BaldEagle)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChase(Tiger, Bear)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEat(Tiger, Bear)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chase(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear likes the tiger then they eat the bald eagle.\nFOL:\tall x. (Chase(x, Bear) & Like(Bear, Tiger) -> Eat(x, BaldEagle))\nTEXT:\tIf someone is kind then they eat the bald eagle.\nFOL:\tall x. (Kind(x) -> Eat(x, BaldEagle))\nTEXT:\tIf someone likes the dog then they like the tiger.\nFOL:\tall x. (Like(x, Dog) -> Like(x, Tiger))\nTEXT:\tIf someone likes the tiger then they are young.\nFOL:\tall x. (Like(x, Tiger) -> Young(x))\nTEXT:\tIf someone eats the dog then the dog is big.\nFOL:\tall x. (Eat(x, Dog) -> Big(Dog))\nTEXT:\tIf someone eats the bald eagle then they like the dog.\nFOL:\tall x. (Eat(x, BaldEagle) -> Like(x, Dog))\nTEXT:\tIf someone likes the dog and they do not chase the tiger then the dog chases the bald eagle.\nFOL:\tall x. (Like(x, Dog) & -Chase(x, Tiger) -> Chase(Dog, BaldEagle))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t-Like(Dog, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle likes the bear.\nFOL:\tLikes(BaldEagle, Bear)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear likes the tiger then they eat the bald eagle.\nFOL:\tall x. ((Chases(x, Bear) & Likes(Bear, Tiger)) -> Eats(x, BaldEagle))\nTEXT:\tIf someone is kind then they eat the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone likes the dog then they like the tiger.\nFOL:\tall x. (Likes(x, Dog) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they are young.\nFOL:\tall x. (Likes(x, Tiger) -> Young(x))\nTEXT:\tIf someone eats the dog then the dog is big.\nFOL:\tall x. (Eats(x, Dog) -> Big(Dog))\nTEXT:\tIf someone eats the bald eagle then they like the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and they do not chase the tiger then the dog chases the bald eagle.\nFOL:\tall x. ((Likes(x, Dog) & -Chases(x, Tiger)) -> Chases(Dog, BaldEagle))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t-Likes(Dog, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChase(BaldEagle, Dog)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEat(BaldEagle, Dog)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle likes the bear.\nFOL:\tLike(BaldEagle, Bear)\nTEXT:\tThe bear eats the dog.\nFOL:\tEat(Bear, Dog)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChase(Dog, Tiger)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEat(Dog, BaldEagle)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChase(Tiger, Bear)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEat(Tiger, Bear)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chase(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear likes the tiger then they eat the bald eagle.\nFOL:\tall x. ((Chase(x, Bear) & Like(Bear, Tiger)) -> Eat(x, BaldEagle))\nTEXT:\tIf someone is kind then they eat the bald eagle.\nFOL:\tall x. (Kind(x) -> Eat(x, BaldEagle))\nTEXT:\tIf someone likes the dog then they like the tiger.\nFOL:\tall x. (Like(x, Dog) -> Like(x, Tiger))\nTEXT:\tIf someone likes the tiger then they are young.\nFOL:\tall x. (Like(x, Tiger) -> Young(x))\nTEXT:\tIf someone eats the dog then the dog is big.\nFOL:\tall x. (Eat(x, Dog) -> Big(Dog))\nTEXT:\tIf someone eats the bald eagle then they like the dog.\nFOL:\tall x. (Eat(x, BaldEagle) -> Like(x, Dog))\nTEXT:\tIf someone likes the dog and they do not chase the tiger then the dog chases the bald eagle.\nFOL:\tall x. ((Like(x, Dog) & -Chase(x, Tiger)) -> Chase(Dog, BaldEagle))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t-Like(Dog, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle likes the bear.\nFOL:\tLikes(BaldEagle, Bear)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear likes the tiger then they eat the bald eagle.\nFOL:\tall x. (Chases(x, Bear) & Likes(Bear, Tiger) -> Eats(x, BaldEagle))\nTEXT:\tIf someone is kind then they eat the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone likes the dog then they like the tiger.\nFOL:\tall x. (Likes(x, Dog) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they are young.\nFOL:\tall x. (Likes(x, Tiger) -> Young(x))\nTEXT:\tIf someone eats the dog then the dog is big.\nFOL:\tall x. (Eats(x, Dog) -> Big(Dog))\nTEXT:\tIf someone eats the bald eagle then they like the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and they do not chase the tiger then the dog chases the bald eagle.\nFOL:\tall x. (Likes(x, Dog) & -Chases(x, Tiger) -> Chases(Dog, BaldEagle))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t-Likes(Dog, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle likes the bear.\nFOL:\tLikes(BaldEagle, Bear)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear likes the tiger then they eat the bald eagle.\nFOL:\tall x. (Chases(x, Bear) & Likes(Bear, Tiger) -> Eats(x, BaldEagle))\nTEXT:\tIf someone is kind then they eat the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone likes the dog then they like the tiger.\nFOL:\tall x. (Likes(x, Dog) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they are young.\nFOL:\tall x. (Likes(x, Tiger) -> Young(x))\nTEXT:\tIf someone eats the dog then the dog is big.\nFOL:\tall x. (Eats(x, Dog) -> Big(Dog))\nTEXT:\tIf someone eats the bald eagle then they like the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and they do not chase the tiger then the dog chases the bald eagle.\nFOL:\tall x. (Likes(x, Dog) & -Chases(x, Tiger) -> Chases(Dog, BaldEagle))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t-Likes(Dog, Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the cow.\nFOL:\tLikes(BaldEagle, Cow)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tIf something sees the cow and it chases the bald eagle then the cow chases the dog.\nFOL:\tall x. (Sees(x, Cow) & Chases(x, BaldEagle) -> Chases(Cow, Dog))\nTEXT:\tIf something is young then it likes the cow.\nFOL:\tall x. (Young(x) -> Likes(x, Cow))\nTEXT:\tIf something likes the cow and it sees the cow then the cow likes the bear.\nFOL:\tall x. (Likes(x, Cow) & Sees(x, Cow) -> Likes(Cow, Bear))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the bear then the bear is young.\nFOL:\tall x. (Sees(x, Bear) -> Young(Bear))\nTEXT:\tIf something chases the dog then the dog sees the bear.\nFOL:\tall x. (Chases(x, Dog) -> Sees(Dog, Bear))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the cow.\nFOL:\tLikes(BaldEagle, Cow)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tIf something sees the cow and it chases the bald eagle then the cow chases the dog.\nFOL:\tall x. ((Sees(x, Cow) & Chases(x, BaldEagle)) -> Chases(Cow, Dog))\nTEXT:\tIf something is young then it likes the cow.\nFOL:\tall x. (Young(x) -> Likes(x, Cow))\nTEXT:\tIf something likes the cow and it sees the cow then the cow likes the bear.\nFOL:\tall x. ((Likes(x, Cow) & Sees(x, Cow)) -> Likes(Cow, Bear))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the bear then the bear is young.\nFOL:\tall x. (Sees(x, Bear) -> Young(Bear))\nTEXT:\tIf something chases the dog then the dog sees the bear.\nFOL:\tall x. (Chases(x, Dog) -> Sees(Dog, Bear))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the cow.\nFOL:\tLikes(BaldEagle, Cow)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tIf something sees the cow and it chases the bald eagle then the cow chases the dog.\nFOL:\tall x. ((Sees(x, Cow) & Chases(x, BaldEagle)) -> Chases(Cow, Dog))\nTEXT:\tIf something is young then it likes the cow.\nFOL:\tall x. (Young(x) -> Likes(x, Cow))\nTEXT:\tIf something likes the cow and it sees the cow then the cow likes the bear.\nFOL:\tall x. ((Likes(x, Cow) & Sees(x, Cow)) -> Likes(Cow, Bear))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the bear then the bear is young.\nFOL:\tall x. (Sees(x, Bear) -> Young(Bear))\nTEXT:\tIf something chases the dog then the dog sees the bear.\nFOL:\tall x. (Chases(x, Dog) -> Sees(Dog, Bear))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the cow.\nFOL:\tLikes(BaldEagle, Cow)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tIf something sees the cow and it chases the bald eagle then the cow chases the dog.\nFOL:\tall x. (Sees(x, Cow) & Chases(x, BaldEagle) -> Chases(Cow, Dog))\nTEXT:\tIf something is young then it likes the cow.\nFOL:\tall x. (Young(x) -> Likes(x, Cow))\nTEXT:\tIf something likes the cow and it sees the cow then the cow likes the bear.\nFOL:\tall x. (Likes(x, Cow) & Sees(x, Cow) -> Likes(Cow, Bear))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the bear then the bear is young.\nFOL:\tall x. (Sees(x, Bear) -> Young(Bear))\nTEXT:\tIf something chases the dog then the dog sees the bear.\nFOL:\tall x. (Chases(x, Dog) -> Sees(Dog, Bear))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the cow.\nFOL:\tLikes(BaldEagle, Cow)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tIf something sees the cow and it chases the bald eagle then the cow chases the dog.\nFOL:\tall x. ((Sees(x, Cow) & Chases(x, BaldEagle)) -> Chases(Cow, Dog))\nTEXT:\tIf something is young then it likes the cow.\nFOL:\tall x. (Young(x) -> Likes(x, Cow))\nTEXT:\tIf something likes the cow and it sees the cow then the cow likes the bear.\nFOL:\tall x. ((Likes(x, Cow) & Sees(x, Cow)) -> Likes(Cow, Bear))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tIf something sees the bear then the bear is young.\nFOL:\tall x. (Sees(x, Bear) -> Young(Bear))\nTEXT:\tIf something chases the dog then the dog sees the bear.\nFOL:\tall x. (Chases(x, Dog) -> Sees(Dog, Bear))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nANSWER:\tTrue\n"], ["TEXT:\tThe dog chases the lion.\nFOL:\tChases(Dog, Lion)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the dog.\nFOL:\tLikes(Mouse, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tIf something is round and it sees the lion then it chases the lion.\nFOL:\tall x. (Round(x) & Sees(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf something likes the mouse then it is cold.\nFOL:\tall x. (Likes(x, Mouse) -> Cold(x))\nTEXT:\tIf something chases the mouse then it sees the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(x, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something is big and round then it chases the rabbit.\nFOL:\tall x. (Big(x) & Round(x) -> Chases(x, Rabbit))\nTEXT:\tIf the mouse is blue then the mouse likes the lion.\nFOL:\tBlue(Mouse) -> Likes(Mouse, Lion)\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tIf the rabbit is cold and the rabbit chases the lion then the rabbit chases the mouse.\nFOL:\tCold(Rabbit) & Chases(Rabbit, Lion) -> Chases(Rabbit, Mouse)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe dog chases the lion.\nFOL:\tChases(Dog, Lion)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the dog.\nFOL:\tLikes(Mouse, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tIf something is round and it sees the lion then it chases the lion.\nFOL:\tall x. ((Round(x) & Sees(x, Lion)) -> Chases(x, Lion))\nTEXT:\tIf something likes the mouse then it is cold.\nFOL:\tall x. (Likes(x, Mouse) -> Cold(x))\nTEXT:\tIf something chases the mouse then it sees the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(x, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something is big and round then it chases the rabbit.\nFOL:\tall x. ((Big(x) & Round(x)) -> Chases(x, Rabbit))\nTEXT:\tIf the mouse is blue then the mouse likes the lion.\nFOL:\t(Blue(Mouse) -> Likes(Mouse, Lion))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tIf the rabbit is cold and the rabbit chases the lion then the rabbit chases the mouse.\nFOL:\t((Cold(Rabbit) & Chases(Rabbit, Lion)) -> Chases(Rabbit, Mouse))\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nANSWER:\tTrue", "TEXT:\tThe dog chases the lion.\nFOL:\tChases(Dog, Lion)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the dog.\nFOL:\tLikes(Mouse, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tIf something is round and it sees the lion then it chases the lion.\nFOL:\tall x. ((Round(x) & Sees(x, Lion)) -> Chases(x, Lion))\nTEXT:\tIf something likes the mouse then it is cold.\nFOL:\tall x. (Likes(x, Mouse) -> Cold(x))\nTEXT:\tIf something chases the mouse then it sees the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(x, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something is big and round then it chases the rabbit.\nFOL:\tall x. ((Big(x) & Round(x)) -> Chases(x, Rabbit))\nTEXT:\tIf the mouse is blue then the mouse likes the lion.\nFOL:\t(Blue(Mouse) -> Likes(Mouse, Lion))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tIf the rabbit is cold and the rabbit chases the lion then the rabbit chases the mouse.\nFOL:\t(Cold(Rabbit) & Chases(Rabbit, Lion) -> Chases(Rabbit, Mouse))\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe dog chases the lion.\nFOL:\tChases(Dog, Lion)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the dog.\nFOL:\tLikes(Mouse, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tIf something is round and it sees the lion then it chases the lion.\nFOL:\tall x. ((Round(x) & Sees(x, Lion)) -> Chases(x, Lion))\nTEXT:\tIf something likes the mouse then it is cold.\nFOL:\tall x. (Likes(x, Mouse) -> Cold(x))\nTEXT:\tIf something chases the mouse then it sees the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(x, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something is big and round then it chases the rabbit.\nFOL:\tall x. ((Big(x) & Round(x)) -> Chases(x, Rabbit))\nTEXT:\tIf the mouse is blue then the mouse likes the lion.\nFOL:\t(Blue(Mouse) -> Likes(Mouse, Lion))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tIf the rabbit is cold and the rabbit chases the lion then the rabbit chases the mouse.\nFOL:\t((Cold(Rabbit) & Chases(Rabbit, Lion)) -> Chases(Rabbit, Mouse))\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog chases the lion.\nFOL:\tChases(Dog, Lion)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the dog.\nFOL:\tLikes(Mouse, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tIf something is round and it sees the lion then it chases the lion.\nFOL:\tall x. ((Round(x) & Sees(x, Lion)) -> Chases(x, Lion))\nTEXT:\tIf something likes the mouse then it is cold.\nFOL:\tall x. (Likes(x, Mouse) -> Cold(x))\nTEXT:\tIf something chases the mouse then it sees the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(x, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something is big and round then it chases the rabbit.\nFOL:\tall x. ((Big(x) & Round(x)) -> Chases(x, Rabbit))\nTEXT:\tIf the mouse is blue then the mouse likes the lion.\nFOL:\t(Blue(Mouse) -> Likes(Mouse, Lion))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tIf the rabbit is cold and the rabbit chases the lion then the rabbit chases the mouse.\nFOL:\t((Cold(Rabbit) & Chases(Rabbit, Lion)) -> Chases(Rabbit, Mouse))\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is quiet and furry then it is green.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Green(x))\nTEXT:\tAll smart, white things are quiet.\nFOL:\tall x. ((Smart(x) & White(x)) -> Quiet(x))\nTEXT:\tFurry things are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is green and white then it is young.\nFOL:\tall x. ((Green(x) & White(x)) -> Young(x))\nTEXT:\tIf Gary is white and Gary is young then Gary is round.\nFOL:\t(White(Gary) & Young(Gary)) -> Round(Gary)\nTEXT:\tBob is not smart.\nFOL:\t-Smart(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is quiet and furry then it is green.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Green(x))\nTEXT:\tAll smart, white things are quiet.\nFOL:\tall x. (Smart(x) & White(x) -> Quiet(x))\nTEXT:\tFurry things are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is green and white then it is young.\nFOL:\tall x. (Green(x) & White(x) -> Young(x))\nTEXT:\tIf Gary is white and Gary is young then Gary is round.\nFOL:\t(White(Gary) & Young(Gary)) -> Round(Gary)\nTEXT:\tBob is not smart.\nFOL:\t-Smart(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is quiet and furry then it is green.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Green(x))\nTEXT:\tAll smart, white things are quiet.\nFOL:\tall x. (Smart(x) & White(x) -> Quiet(x))\nTEXT:\tFurry things are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is green and white then it is young.\nFOL:\tall x. (Green(x) & White(x) -> Young(x))\nTEXT:\tIf Gary is white and Gary is young then Gary is round.\nFOL:\tWhite(Gary) & Young(Gary) -> Round(Gary)\nTEXT:\tBob is not smart.\nFOL:\t-Smart(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is quiet and furry then it is green.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Green(x))\nTEXT:\tAll smart, white things are quiet.\nFOL:\tall x. ((Smart(x) & White(x)) -> Quiet(x))\nTEXT:\tFurry things are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is green and white then it is young.\nFOL:\tall x. ((Green(x) & White(x)) -> Young(x))\nTEXT:\tIf Gary is white and Gary is young then Gary is round.\nFOL:\t((White(Gary) & Young(Gary)) -> Round(Gary))\nTEXT:\tBob is not smart.\nFOL:\t-Smart(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is quiet and furry then it is green.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Green(x))\nTEXT:\tAll smart, white things are quiet.\nFOL:\tall x. ((Smart(x) & White(x)) -> Quiet(x))\nTEXT:\tFurry things are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is green and white then it is young.\nFOL:\tall x. ((Green(x) & White(x)) -> Young(x))\nTEXT:\tIf Gary is white and Gary is young then Gary is round.\nFOL:\t((White(Gary) & Young(Gary)) -> Round(Gary))\nTEXT:\tBob is not smart.\nFOL:\t-Smart(Bob)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-Sees(Bear, Squirrel)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is not kind.\nFOL:\t-Kind(Cat)\nTEXT:\tThe cat does not see the cow.\nFOL:\t-Sees(Cat, Cow)\nTEXT:\tThe cow does not chase the cat.\nFOL:\t-Chases(Cow, Cat)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf something eats the bear then the bear sees the cow.\nFOL:\tall x. (Eats(x, Bear) -> Sees(Bear, Cow))\nTEXT:\tIf something is kind then it eats the bear.\nFOL:\tall x. (Kind(x) -> Eats(x, Bear))\nTEXT:\tIf the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel.\nFOL:\t(Chases(Cow, Bear) & -Chases(Cat, Cow)) -> Sees(Cow, Squirrel)\nTEXT:\tIf something sees the squirrel then it is rough.\nFOL:\tall x. (Sees(x, Squirrel) -> Rough(x))\nTEXT:\tIf something eats the bear and it does not chase the cat then the cat sees the bear.\nFOL:\tall x. ((Eats(x, Bear) & -Chases(x, Cat)) -> Sees(Cat, Bear))\nTEXT:\tIf something sees the cow then it is kind.\nFOL:\tall x. (Sees(x, Cow) -> Kind(x))\nTEXT:\tIf something eats the squirrel then it eats the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Eats(x, Cat))\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-Sees(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-See(Bear, Squirrel)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is not kind.\nFOL:\t-Kind(Cat)\nTEXT:\tThe cat does not see the cow.\nFOL:\t-See(Cat, Cow)\nTEXT:\tThe cow does not chase the cat.\nFOL:\t-Chases(Cow, Cat)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSee(Squirrel, Cow)\nTEXT:\tIf something eats the bear then the bear sees the cow.\nFOL:\tall x. (Eats(x, Bear) -> See(Bear, Cow))\nTEXT:\tIf something is kind then it eats the bear.\nFOL:\tall x. (Kind(x) -> Eats(x, Bear))\nTEXT:\tIf the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel.\nFOL:\t(Chases(Cow, Bear) & -Chases(Cat, Cow)) -> See(Cow, Squirrel)\nTEXT:\tIf something sees the squirrel then it is rough.\nFOL:\tall x. (See(x, Squirrel) -> Rough(x))\nTEXT:\tIf something eats the bear and it does not chase the cat then the cat sees the bear.\nFOL:\tall x. (Eats(x, Bear) & -Chases(x, Cat)) -> See(Cat, Bear)\nTEXT:\tIf something sees the cow then it is kind.\nFOL:\tall x. (See(x, Cow) -> Kind(x))\nTEXT:\tIf something eats the squirrel then it eats the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Eats(x, Cat))\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-See(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-Sees(Bear, Squirrel)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is not kind.\nFOL:\t-Kind(Cat)\nTEXT:\tThe cat does not see the cow.\nFOL:\t-Sees(Cat, Cow)\nTEXT:\tThe cow does not chase the cat.\nFOL:\t-Chases(Cow, Cat)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf something eats the bear then the bear sees the cow.\nFOL:\tall x. (Eats(x, Bear) -> Sees(Bear, Cow))\nTEXT:\tIf something is kind then it eats the bear.\nFOL:\tall x. (Kind(x) -> Eats(x, Bear))\nTEXT:\tIf the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel.\nFOL:\t(Chases(Cow, Bear) & -Chases(Cat, Cow)) -> Sees(Cow, Squirrel)\nTEXT:\tIf something sees the squirrel then it is rough.\nFOL:\tall x. (Sees(x, Squirrel) -> Rough(x))\nTEXT:\tIf something eats the bear and it does not chase the cat then the cat sees the bear.\nFOL:\tall x. ((Eats(x, Bear) & -Chases(x, Cat)) -> Sees(Cat, Bear))\nTEXT:\tIf something sees the cow then it is kind.\nFOL:\tall x. (Sees(x, Cow) -> Kind(x))\nTEXT:\tIf something eats the squirrel then it eats the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Eats(x, Cat))\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-Sees(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-See(Bear, Squirrel)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is not kind.\nFOL:\t-Kind(Cat)\nTEXT:\tThe cat does not see the cow.\nFOL:\t-See(Cat, Cow)\nTEXT:\tThe cow does not chase the cat.\nFOL:\t-Chase(Cow, Cat)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChase(Cow, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChase(Squirrel, Bear)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSee(Squirrel, Cow)\nTEXT:\tIf something eats the bear then the bear sees the cow.\nFOL:\tall x. (Eats(x, Bear) -> See(Bear, Cow))\nTEXT:\tIf something is kind then it eats the bear.\nFOL:\tall x. (Kind(x) -> Eats(x, Bear))\nTEXT:\tIf the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel.\nFOL:\t(Chase(Cow, Bear) & -Chase(Cat, Cow)) -> See(Cow, Squirrel)\nTEXT:\tIf something sees the squirrel then it is rough.\nFOL:\tall x. (See(x, Squirrel) -> Rough(x))\nTEXT:\tIf something eats the bear and it does not chase the cat then the cat sees the bear.\nFOL:\tall x. (Eats(x, Bear) & -Chase(x, Cat)) -> See(Cat, Bear)\nTEXT:\tIf something sees the cow then it is kind.\nFOL:\tall x. (See(x, Cow) -> Kind(x))\nTEXT:\tIf something eats the squirrel then it eats the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Eats(x, Cat))\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-See(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-Sees(Bear, Squirrel)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is not kind.\nFOL:\t-Kind(Cat)\nTEXT:\tThe cat does not see the cow.\nFOL:\t-Sees(Cat, Cow)\nTEXT:\tThe cow does not chase the cat.\nFOL:\t-Chases(Cow, Cat)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel eats the cat.\nFOL:\tEats(Squirrel, Cat)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf something eats the bear then the bear sees the cow.\nFOL:\tall x. (Eats(x, Bear) -> Sees(Bear, Cow))\nTEXT:\tIf something is kind then it eats the bear.\nFOL:\tall x. (Kind(x) -> Eats(x, Bear))\nTEXT:\tIf the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel.\nFOL:\t(Chases(Cow, Bear) & -Chases(Cat, Cow)) -> Sees(Cow, Squirrel)\nTEXT:\tIf something sees the squirrel then it is rough.\nFOL:\tall x. (Sees(x, Squirrel) -> Rough(x))\nTEXT:\tIf something eats the bear and it does not chase the cat then the cat sees the bear.\nFOL:\tall x. (Eats(x, Bear) & -Chases(x, Cat)) -> Sees(Cat, Bear)\nTEXT:\tIf something sees the cow then it is kind.\nFOL:\tall x. (Sees(x, Cow) -> Kind(x))\nTEXT:\tIf something eats the squirrel then it eats the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Eats(x, Cat))\nTEXT:\tThe bear does not see the squirrel.\nFOL:\t-Sees(Bear, Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf something is green and white then it is round.\nFOL:\tall x. (Green(x) & White(x) -> Round(x))\nTEXT:\tAll kind, white things are quiet.\nFOL:\tall x. (Kind(x) & White(x) -> Quiet(x))\nTEXT:\tRound, quiet things are white.\nFOL:\tall x. (Round(x) & Quiet(x) -> White(x))\nTEXT:\tGreen, young things are white.\nFOL:\tall x. (Green(x) & Young(x) -> White(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is round and kind then it is green.\nFOL:\tall x. (Round(x) & Kind(x) -> Green(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf something is green and white then it is round.\nFOL:\tall x. (Green(x) & White(x) -> Round(x))\nTEXT:\tAll kind, white things are quiet.\nFOL:\tall x. (Kind(x) & White(x) -> Quiet(x))\nTEXT:\tRound, quiet things are white.\nFOL:\tall x. (Round(x) & Quiet(x) -> White(x))\nTEXT:\tGreen, young things are white.\nFOL:\tall x. (Green(x) & Young(x) -> White(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is round and kind then it is green.\nFOL:\tall x. (Round(x) & Kind(x) -> Green(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf something is green and white then it is round.\nFOL:\tall x. ((Green(x) & White(x)) -> Round(x))\nTEXT:\tAll kind, white things are quiet.\nFOL:\tall x. ((Kind(x) & White(x)) -> Quiet(x))\nTEXT:\tRound, quiet things are white.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> White(x))\nTEXT:\tGreen, young things are white.\nFOL:\tall x. ((Green(x) & Young(x)) -> White(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is round and kind then it is green.\nFOL:\tall x. ((Round(x) & Kind(x)) -> Green(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf something is green and white then it is round.\nFOL:\tall x. ((Green(x) & White(x)) -> Round(x))\nTEXT:\tAll kind, white things are quiet.\nFOL:\tall x. ((Kind(x) & White(x)) -> Quiet(x))\nTEXT:\tRound, quiet things are white.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> White(x))\nTEXT:\tGreen, young things are white.\nFOL:\tall x. ((Green(x) & Young(x)) -> White(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is round and kind then it is green.\nFOL:\tall x. ((Round(x) & Kind(x)) -> Green(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is not green.\nFOL:\t-Green(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf something is green and white then it is round.\nFOL:\tall x. (Green(x) & White(x) -> Round(x))\nTEXT:\tAll kind, white things are quiet.\nFOL:\tall x. (Kind(x) & White(x) -> Quiet(x))\nTEXT:\tRound, quiet things are white.\nFOL:\tall x. (Round(x) & Quiet(x) -> White(x))\nTEXT:\tGreen, young things are white.\nFOL:\tall x. (Green(x) & Young(x) -> White(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is round and kind then it is green.\nFOL:\tall x. (Round(x) & Kind(x) -> Green(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tRed, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is red then Gary is rough.\nFOL:\t((Smart(Gary) & Red(Gary)) -> Rough(Gary))\nTEXT:\tYoung, smart people are kind.\nFOL:\tall x. ((Young(x) & Smart(x)) -> Kind(x))\nTEXT:\tIf Gary is rough and Gary is nice then Gary is young.\nFOL:\t((Rough(Gary) & Nice(Gary)) -> Young(Gary))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tRed, nice people are smart.\nFOL:\tall x. (Red(x) & Nice(x) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is red then Gary is rough.\nFOL:\t(Smart(Gary) & Red(Gary)) -> Rough(Gary)\nTEXT:\tYoung, smart people are kind.\nFOL:\tall x. (Young(x) & Smart(x) -> Kind(x))\nTEXT:\tIf Gary is rough and Gary is nice then Gary is young.\nFOL:\t(Rough(Gary) & Nice(Gary)) -> Young(Gary)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tRed, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is red then Gary is rough.\nFOL:\t(Smart(Gary) & Red(Gary)) -> Rough(Gary)\nTEXT:\tYoung, smart people are kind.\nFOL:\tall x. ((Young(x) & Smart(x)) -> Kind(x))\nTEXT:\tIf Gary is rough and Gary is nice then Gary is young.\nFOL:\t(Rough(Gary) & Nice(Gary)) -> Young(Gary)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tRed, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is red then Gary is rough.\nFOL:\t(Smart(Gary) & Red(Gary)) -> Rough(Gary)\nTEXT:\tYoung, smart people are kind.\nFOL:\tall x. ((Young(x) & Smart(x)) -> Kind(x))\nTEXT:\tIf Gary is rough and Gary is nice then Gary is young.\nFOL:\t(Rough(Gary) & Nice(Gary)) -> Young(Gary)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tRed, nice people are smart.\nFOL:\tall x. (Red(x) & Nice(x) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is red then Gary is rough.\nFOL:\t(Smart(Gary) & Red(Gary)) -> Rough(Gary)\nTEXT:\tYoung, smart people are kind.\nFOL:\tall x. (Young(x) & Smart(x) -> Kind(x))\nTEXT:\tIf Gary is rough and Gary is nice then Gary is young.\nFOL:\t(Rough(Gary) & Nice(Gary)) -> Young(Gary)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is cold and round then it sees the mouse.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Sees(x, Mouse))\nTEXT:\tIf something eats the squirrel and the squirrel sees the mouse then the mouse eats the bald eagle.\nFOL:\tall x. ((Eats(x, Squirrel) & Sees(Squirrel, Mouse)) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf something eats the bald eagle then the bald eagle needs the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(BaldEagle, Tiger))\nTEXT:\tIf something eats the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tIf something needs the tiger then it sees the mouse.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Mouse))\nTEXT:\tIf the squirrel eats the mouse and the mouse eats the squirrel then the squirrel needs the tiger.\nFOL:\t(Eats(Squirrel, Mouse) & Eats(Mouse, Squirrel)) -> Needs(Squirrel, Tiger)\nTEXT:\tIf the squirrel sees the bald eagle and the squirrel eats the mouse then the squirrel is cold.\nFOL:\t(Sees(Squirrel, BaldEagle) & Eats(Squirrel, Mouse)) -> Cold(Squirrel)\nTEXT:\tThe squirrel does not need the tiger.\nFOL:\t-Needs(Squirrel, Tiger)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is cold and round then it sees the mouse.\nFOL:\tall x. (Cold(x) & Round(x) -> Sees(x, Mouse))\nTEXT:\tIf something eats the squirrel and the squirrel sees the mouse then the mouse eats the bald eagle.\nFOL:\tall x. (Eats(x, Squirrel) & Sees(Squirrel, Mouse) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf something eats the bald eagle then the bald eagle needs the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(BaldEagle, Tiger))\nTEXT:\tIf something eats the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tIf something needs the tiger then it sees the mouse.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Mouse))\nTEXT:\tIf the squirrel eats the mouse and the mouse eats the squirrel then the squirrel needs the tiger.\nFOL:\t(Eats(Squirrel, Mouse) & Eats(Mouse, Squirrel) -> Needs(Squirrel, Tiger))\nTEXT:\tIf the squirrel sees the bald eagle and the squirrel eats the mouse then the squirrel is cold.\nFOL:\t(Sees(Squirrel, BaldEagle) & Eats(Squirrel, Mouse) -> Cold(Squirrel))\nTEXT:\tThe squirrel does not need the tiger.\nFOL:\t-Needs(Squirrel, Tiger)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is cold and round then it sees the mouse.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Sees(x, Mouse))\nTEXT:\tIf something eats the squirrel and the squirrel sees the mouse then the mouse eats the bald eagle.\nFOL:\tall x. ((Eats(x, Squirrel) & Sees(Squirrel, Mouse)) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf something eats the bald eagle then the bald eagle needs the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(BaldEagle, Tiger))\nTEXT:\tIf something eats the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tIf something needs the tiger then it sees the mouse.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Mouse))\nTEXT:\tIf the squirrel eats the mouse and the mouse eats the squirrel then the squirrel needs the tiger.\nFOL:\t((Eats(Squirrel, Mouse) & Eats(Mouse, Squirrel)) -> Needs(Squirrel, Tiger))\nTEXT:\tIf the squirrel sees the bald eagle and the squirrel eats the mouse then the squirrel is cold.\nFOL:\t((Sees(Squirrel, BaldEagle) & Eats(Squirrel, Mouse)) -> Cold(Squirrel))\nTEXT:\tThe squirrel does not need the tiger.\nFOL:\t-Needs(Squirrel, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is cold and round then it sees the mouse.\nFOL:\tall x. (Cold(x) & Round(x) -> Sees(x, Mouse))\nTEXT:\tIf something eats the squirrel and the squirrel sees the mouse then the mouse eats the bald eagle.\nFOL:\tall x. (Eats(x, Squirrel) & Sees(Squirrel, Mouse) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf something eats the bald eagle then the bald eagle needs the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(BaldEagle, Tiger))\nTEXT:\tIf something eats the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tIf something needs the tiger then it sees the mouse.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Mouse))\nTEXT:\tIf the squirrel eats the mouse and the mouse eats the squirrel then the squirrel needs the tiger.\nFOL:\t(Eats(Squirrel, Mouse) & Eats(Mouse, Squirrel) -> Needs(Squirrel, Tiger))\nTEXT:\tIf the squirrel sees the bald eagle and the squirrel eats the mouse then the squirrel is cold.\nFOL:\t(Sees(Squirrel, BaldEagle) & Eats(Squirrel, Mouse) -> Cold(Squirrel))\nTEXT:\tThe squirrel does not need the tiger.\nFOL:\t-Needs(Squirrel, Tiger)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is cold and round then it sees the mouse.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Sees(x, Mouse))\nTEXT:\tIf something eats the squirrel and the squirrel sees the mouse then the mouse eats the bald eagle.\nFOL:\tall x. ((Eats(x, Squirrel) & Sees(Squirrel, Mouse)) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf something eats the bald eagle then the bald eagle needs the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(BaldEagle, Tiger))\nTEXT:\tIf something eats the bald eagle then it sees the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Sees(x, BaldEagle))\nTEXT:\tIf something needs the tiger then it sees the mouse.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Mouse))\nTEXT:\tIf the squirrel eats the mouse and the mouse eats the squirrel then the squirrel needs the tiger.\nFOL:\t((Eats(Squirrel, Mouse) & Eats(Mouse, Squirrel)) -> Needs(Squirrel, Tiger))\nTEXT:\tIf the squirrel sees the bald eagle and the squirrel eats the mouse then the squirrel is cold.\nFOL:\t((Sees(Squirrel, BaldEagle) & Eats(Squirrel, Mouse)) -> Cold(Squirrel))\nTEXT:\tThe squirrel does not need the tiger.\nFOL:\t-Needs(Squirrel, Tiger)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf Dave is cold and Dave is young then Dave is furry.\nFOL:\t(Cold(Dave) & Young(Dave)) -> Furry(Dave)\nTEXT:\tIf Fiona is rough and Fiona is kind then Fiona is red.\nFOL:\t(Rough(Fiona) & Kind(Fiona)) -> Red(Fiona)\nTEXT:\tKind, rough things are red.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Red(x))\nTEXT:\tYoung, big things are rough.\nFOL:\tall x. ((Young(x) & Big(x)) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf something is cold and rough then it is red.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Red(x))\nTEXT:\tAll furry, rough things are kind.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Kind(x))\nTEXT:\tYoung, cold things are kind.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Kind(x))\nTEXT:\tYoung things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf Dave is cold and Dave is young then Dave is furry.\nFOL:\t(Cold(Dave) & Young(Dave)) -> Furry(Dave)\nTEXT:\tIf Fiona is rough and Fiona is kind then Fiona is red.\nFOL:\t(Rough(Fiona) & Kind(Fiona)) -> Red(Fiona)\nTEXT:\tKind, rough things are red.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Red(x))\nTEXT:\tYoung, big things are rough.\nFOL:\tall x. ((Young(x) & Big(x)) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf something is cold and rough then it is red.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Red(x))\nTEXT:\tAll furry, rough things are kind.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Kind(x))\nTEXT:\tYoung, cold things are kind.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Kind(x))\nTEXT:\tYoung things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf Dave is cold and Dave is young then Dave is furry.\nFOL:\t(Cold(Dave) & Young(Dave) -> Furry(Dave))\nTEXT:\tIf Fiona is rough and Fiona is kind then Fiona is red.\nFOL:\t(Rough(Fiona) & Kind(Fiona) -> Red(Fiona))\nTEXT:\tKind, rough things are red.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Red(x))\nTEXT:\tYoung, big things are rough.\nFOL:\tall x. ((Young(x) & Big(x)) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf something is cold and rough then it is red.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Red(x))\nTEXT:\tAll furry, rough things are kind.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Kind(x))\nTEXT:\tYoung, cold things are kind.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Kind(x))\nTEXT:\tYoung things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf Dave is cold and Dave is young then Dave is furry.\nFOL:\t(Cold(Dave) & Young(Dave) -> Furry(Dave))\nTEXT:\tIf Fiona is rough and Fiona is kind then Fiona is red.\nFOL:\t(Rough(Fiona) & Kind(Fiona) -> Red(Fiona))\nTEXT:\tKind, rough things are red.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Red(x))\nTEXT:\tYoung, big things are rough.\nFOL:\tall x. ((Young(x) & Big(x)) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf something is cold and rough then it is red.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Red(x))\nTEXT:\tAll furry, rough things are kind.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Kind(x))\nTEXT:\tYoung, cold things are kind.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Kind(x))\nTEXT:\tYoung things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf Dave is cold and Dave is young then Dave is furry.\nFOL:\t(Cold(Dave) & Young(Dave)) -> Furry(Dave)\nTEXT:\tIf Fiona is rough and Fiona is kind then Fiona is red.\nFOL:\t(Rough(Fiona) & Kind(Fiona)) -> Red(Fiona)\nTEXT:\tKind, rough things are red.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Red(x))\nTEXT:\tYoung, big things are rough.\nFOL:\tall x. ((Young(x) & Big(x)) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf something is cold and rough then it is red.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Red(x))\nTEXT:\tAll furry, rough things are kind.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Kind(x))\nTEXT:\tYoung, cold things are kind.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Kind(x))\nTEXT:\tYoung things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow likes the mouse.\nFOL:\tLikes(Cow, Mouse)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf someone visits the cow then they eat the mouse.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Mouse))\nTEXT:\tIf someone likes the mouse then they visit the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone visits the cow then they eat the cow.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf someone visits the squirrel and the squirrel is blue then the squirrel likes the cow.\nFOL:\tall x. (Visits(x, Squirrel) & Blue(Squirrel) -> Likes(Squirrel, Cow))\nTEXT:\tIf someone is cold then they eat the cow.\nFOL:\tall x. (Cold(x) -> Eats(x, Cow))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf someone is big and green then they like the lion.\nFOL:\tall x. (Big(x) & Green(x) -> Likes(x, Lion))\nTEXT:\tIf someone likes the lion then they are cold.\nFOL:\tall x. (Likes(x, Lion) -> Cold(x))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow likes the mouse.\nFOL:\tLikes(Cow, Mouse)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf someone visits the cow then they eat the mouse.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Mouse))\nTEXT:\tIf someone likes the mouse then they visit the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone visits the cow then they eat the cow.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf someone visits the squirrel and the squirrel is blue then the squirrel likes the cow.\nFOL:\tall x. (Visits(x, Squirrel) & Blue(Squirrel) -> Likes(Squirrel, Cow))\nTEXT:\tIf someone is cold then they eat the cow.\nFOL:\tall x. (Cold(x) -> Eats(x, Cow))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf someone is big and green then they like the lion.\nFOL:\tall x. (Big(x) & Green(x) -> Likes(x, Lion))\nTEXT:\tIf someone likes the lion then they are cold.\nFOL:\tall x. (Likes(x, Lion) -> Cold(x))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow likes the mouse.\nFOL:\tLikes(Cow, Mouse)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is green.\nFOL:\tIsGreen(Lion)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe mouse is blue.\nFOL:\tIsBlue(Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf someone visits the cow then they eat the mouse.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Mouse))\nTEXT:\tIf someone likes the mouse then they visit the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone visits the cow then they eat the cow.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf someone visits the squirrel and the squirrel is blue then the squirrel likes the cow.\nFOL:\tall x. (Visits(x, Squirrel) & IsBlue(Squirrel) -> Likes(Squirrel, Cow))\nTEXT:\tIf someone is cold then they eat the cow.\nFOL:\tall x. (IsCold(x) -> Eats(x, Cow))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (IsGreen(x) -> IsBig(x))\nTEXT:\tIf someone is big and green then they like the lion.\nFOL:\tall x. (IsBig(x) & IsGreen(x) -> Likes(x, Lion))\nTEXT:\tIf someone likes the lion then they are cold.\nFOL:\tall x. (Likes(x, Lion) -> IsCold(x))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tThe mouse is cold.\nFOL:\tIsCold(Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow likes the mouse.\nFOL:\tLikes(Cow, Mouse)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf someone visits the cow then they eat the mouse.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Mouse))\nTEXT:\tIf someone likes the mouse then they visit the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone visits the cow then they eat the cow.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf someone visits the squirrel and the squirrel is blue then the squirrel likes the cow.\nFOL:\tall x. (Visits(x, Squirrel) & Blue(Squirrel) -> Likes(Squirrel, Cow))\nTEXT:\tIf someone is cold then they eat the cow.\nFOL:\tall x. (Cold(x) -> Eats(x, Cow))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf someone is big and green then they like the lion.\nFOL:\tall x. (Big(x) & Green(x) -> Likes(x, Lion))\nTEXT:\tIf someone likes the lion then they are cold.\nFOL:\tall x. (Likes(x, Lion) -> Cold(x))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow likes the mouse.\nFOL:\tLikes(Cow, Mouse)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is green.\nFOL:\tIsGreen(Lion)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe mouse is blue.\nFOL:\tIsBlue(Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf someone visits the cow then they eat the mouse.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Mouse))\nTEXT:\tIf someone likes the mouse then they visit the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone visits the cow then they eat the cow.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf someone visits the squirrel and the squirrel is blue then the squirrel likes the cow.\nFOL:\tall x. (Visits(x, Squirrel) & IsBlue(Squirrel) -> Likes(Squirrel, Cow))\nTEXT:\tIf someone is cold then they eat the cow.\nFOL:\tall x. (IsCold(x) -> Eats(x, Cow))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (IsGreen(x) -> IsBig(x))\nTEXT:\tIf someone is big and green then they like the lion.\nFOL:\tall x. (IsBig(x) & IsGreen(x) -> Likes(x, Lion))\nTEXT:\tIf someone likes the lion then they are cold.\nFOL:\tall x. (Likes(x, Lion) -> IsCold(x))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tThe mouse is cold.\nFOL:\tIsCold(Mouse)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll cold, kind things are not furry.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> -Furry(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is rough and cold then it is kind.\nFOL:\tall x. ((Rough(x) & Cold(x)) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is rough.\nFOL:\tKind(Fiona) -> Rough(Fiona)\nTEXT:\tAll furry, smart things are green.\nFOL:\tall x. ((Furry(x) & Smart(x)) -> Green(x))\nTEXT:\tIf something is cold and not furry then it is green.\nFOL:\tall x. ((Cold(x) & -Furry(x)) -> Green(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tTrue", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll cold, kind things are not furry.\nFOL:\tall x. (Cold(x) & Kind(x) -> -Furry(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is rough and cold then it is kind.\nFOL:\tall x. (Rough(x) & Cold(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is rough.\nFOL:\tKind(Fiona) -> Rough(Fiona)\nTEXT:\tAll furry, smart things are green.\nFOL:\tall x. (Furry(x) & Smart(x) -> Green(x))\nTEXT:\tIf something is cold and not furry then it is green.\nFOL:\tall x. (Cold(x) & -Furry(x) -> Green(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll cold, kind things are not furry.\nFOL:\tall x. (Cold(x) & Kind(x) -> -Furry(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is rough and cold then it is kind.\nFOL:\tall x. (Rough(x) & Cold(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is rough.\nFOL:\tKind(Fiona) -> Rough(Fiona)\nTEXT:\tAll furry, smart things are green.\nFOL:\tall x. (Furry(x) & Smart(x) -> Green(x))\nTEXT:\tIf something is cold and not furry then it is green.\nFOL:\tall x. ((Cold(x) & -Furry(x)) -> Green(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll cold, kind things are not furry.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> -Furry(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is rough and cold then it is kind.\nFOL:\tall x. ((Rough(x) & Cold(x)) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is rough.\nFOL:\tKind(Fiona) -> Rough(Fiona)\nTEXT:\tAll furry, smart things are green.\nFOL:\tall x. ((Furry(x) & Smart(x)) -> Green(x))\nTEXT:\tIf something is cold and not furry then it is green.\nFOL:\tall x. ((Cold(x) & -Furry(x)) -> Green(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll cold, kind things are not furry.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> -Furry(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is rough and cold then it is kind.\nFOL:\tall x. ((Rough(x) & Cold(x)) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is rough.\nFOL:\tKind(Fiona) -> Rough(Fiona)\nTEXT:\tAll furry, smart things are green.\nFOL:\tall x. ((Furry(x) & Smart(x)) -> Green(x))\nTEXT:\tIf something is cold and not furry then it is green.\nFOL:\tall x. ((Cold(x) & -Furry(x)) -> Green(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tIf something needs the mouse then it sees the squirrel.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Squirrel))\nTEXT:\tIf something visits the cow and the cow visits the mouse then it needs the mouse.\nFOL:\tall x. ((Visits(x, Cow) & Visits(Cow, Mouse)) -> Needs(x, Mouse))\nTEXT:\tIf something needs the cow then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the bald eagle and it sees the cow then it is young.\nFOL:\tall x. ((Visits(x, BaldEagle) & Sees(x, Cow)) -> Young(x))\nTEXT:\tIf something is cold then it sees the cow.\nFOL:\tall x. (Cold(x) -> Sees(x, Cow))\nTEXT:\tIf the mouse is kind then the mouse needs the squirrel.\nFOL:\t(Kind(Mouse) -> Needs(Mouse, Squirrel))\nTEXT:\tIf something visits the bald eagle and it needs the bald eagle then it visits the cow.\nFOL:\tall x. ((Visits(x, BaldEagle) & Needs(x, BaldEagle)) -> Visits(x, Cow))\nTEXT:\tIf something is young then it needs the bald eagle.\nFOL:\tall x. (Young(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the cow is round then the cow is cold.\nFOL:\t(Round(Cow) -> Cold(Cow))\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tIf something needs the mouse then it sees the squirrel.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Squirrel))\nTEXT:\tIf something visits the cow and the cow visits the mouse then it needs the mouse.\nFOL:\tall x. (Visits(x, Cow) & Visits(Cow, Mouse) -> Needs(x, Mouse))\nTEXT:\tIf something needs the cow then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the bald eagle and it sees the cow then it is young.\nFOL:\tall x. (Visits(x, BaldEagle) & Sees(x, Cow) -> Young(x))\nTEXT:\tIf something is cold then it sees the cow.\nFOL:\tall x. (Cold(x) -> Sees(x, Cow))\nTEXT:\tIf the mouse is kind then the mouse needs the squirrel.\nFOL:\tKind(Mouse) -> Needs(Mouse, Squirrel)\nTEXT:\tIf something visits the bald eagle and it needs the bald eagle then it visits the cow.\nFOL:\tall x. (Visits(x, BaldEagle) & Needs(x, BaldEagle) -> Visits(x, Cow))\nTEXT:\tIf something is young then it needs the bald eagle.\nFOL:\tall x. (Young(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the cow is round then the cow is cold.\nFOL:\tRound(Cow) -> Cold(Cow)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nANSWER:\tFalse", "TEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tIf something needs the mouse then it sees the squirrel.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Squirrel))\nTEXT:\tIf something visits the cow and the cow visits the mouse then it needs the mouse.\nFOL:\tall x. (Visits(x, Cow) & Visits(Cow, Mouse) -> Needs(x, Mouse))\nTEXT:\tIf something needs the cow then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the bald eagle and it sees the cow then it is young.\nFOL:\tall x. (Visits(x, BaldEagle) & Sees(x, Cow) -> Young(x))\nTEXT:\tIf something is cold then it sees the cow.\nFOL:\tall x. (Cold(x) -> Sees(x, Cow))\nTEXT:\tIf the mouse is kind then the mouse needs the squirrel.\nFOL:\tKind(Mouse) -> Needs(Mouse, Squirrel)\nTEXT:\tIf something visits the bald eagle and it needs the bald eagle then it visits the cow.\nFOL:\tall x. (Visits(x, BaldEagle) & Needs(x, BaldEagle) -> Visits(x, Cow))\nTEXT:\tIf something is young then it needs the bald eagle.\nFOL:\tall x. (Young(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the cow is round then the cow is cold.\nFOL:\tRound(Cow) -> Cold(Cow)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tIf something needs the mouse then it sees the squirrel.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Squirrel))\nTEXT:\tIf something visits the cow and the cow visits the mouse then it needs the mouse.\nFOL:\tall x. (Visits(x, Cow) & Visits(Cow, Mouse) -> Needs(x, Mouse))\nTEXT:\tIf something needs the cow then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the bald eagle and it sees the cow then it is young.\nFOL:\tall x. (Visits(x, BaldEagle) & Sees(x, Cow) -> Young(x))\nTEXT:\tIf something is cold then it sees the cow.\nFOL:\tall x. (Cold(x) -> Sees(x, Cow))\nTEXT:\tIf the mouse is kind then the mouse needs the squirrel.\nFOL:\tKind(Mouse) -> Needs(Mouse, Squirrel)\nTEXT:\tIf something visits the bald eagle and it needs the bald eagle then it visits the cow.\nFOL:\tall x. (Visits(x, BaldEagle) & Needs(x, BaldEagle) -> Visits(x, Cow))\nTEXT:\tIf something is young then it needs the bald eagle.\nFOL:\tall x. (Young(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the cow is round then the cow is cold.\nFOL:\tRound(Cow) -> Cold(Cow)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tIf something needs the mouse then it sees the squirrel.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Squirrel))\nTEXT:\tIf something visits the cow and the cow visits the mouse then it needs the mouse.\nFOL:\tall x. ((Visits(x, Cow) & Visits(Cow, Mouse)) -> Needs(x, Mouse))\nTEXT:\tIf something needs the cow then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the bald eagle and it sees the cow then it is young.\nFOL:\tall x. ((Visits(x, BaldEagle) & Sees(x, Cow)) -> Young(x))\nTEXT:\tIf something is cold then it sees the cow.\nFOL:\tall x. (Cold(x) -> Sees(x, Cow))\nTEXT:\tIf the mouse is kind then the mouse needs the squirrel.\nFOL:\tKind(Mouse) -> Needs(Mouse, Squirrel)\nTEXT:\tIf something visits the bald eagle and it needs the bald eagle then it visits the cow.\nFOL:\tall x. ((Visits(x, BaldEagle) & Needs(x, BaldEagle)) -> Visits(x, Cow))\nTEXT:\tIf something is young then it needs the bald eagle.\nFOL:\tall x. (Young(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the cow is round then the cow is cold.\nFOL:\tRound(Cow) -> Cold(Cow)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nANSWER:\tFalse\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, round things are furry.\nFOL:\tall x. (White(x) & Round(x) -> Furry(x))\nTEXT:\tAll blue, young things are big.\nFOL:\tall x. (Blue(x) & Young(x) -> Big(x))\nTEXT:\tIf something is white and young then it is blue.\nFOL:\tall x. (White(x) & Young(x) -> Blue(x))\nTEXT:\tIf Dave is round then Dave is white.\nFOL:\tRound(Dave) -> White(Dave)\nTEXT:\tIf something is blue and white then it is round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tIf Harry is big and Harry is white then Harry is red.\nFOL:\t(Big(Harry) & White(Harry)) -> Red(Harry)\nTEXT:\tAll furry, red things are young.\nFOL:\tall x. (Furry(x) & Red(x) -> Young(x))\nTEXT:\tRed things are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is blue then it is red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, round things are furry.\nFOL:\tall x. (White(x) & Round(x) -> Furry(x))\nTEXT:\tAll blue, young things are big.\nFOL:\tall x. (Blue(x) & Young(x) -> Big(x))\nTEXT:\tIf something is white and young then it is blue.\nFOL:\tall x. (White(x) & Young(x) -> Blue(x))\nTEXT:\tIf Dave is round then Dave is white.\nFOL:\tRound(Dave) -> White(Dave)\nTEXT:\tIf something is blue and white then it is round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tIf Harry is big and Harry is white then Harry is red.\nFOL:\t(Big(Harry) & White(Harry)) -> Red(Harry)\nTEXT:\tAll furry, red things are young.\nFOL:\tall x. (Furry(x) & Red(x) -> Young(x))\nTEXT:\tRed things are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is blue then it is red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, round things are furry.\nFOL:\tall x. (White(x) & Round(x) -> Furry(x))\nTEXT:\tAll blue, young things are big.\nFOL:\tall x. (Blue(x) & Young(x) -> Big(x))\nTEXT:\tIf something is white and young then it is blue.\nFOL:\tall x. (White(x) & Young(x) -> Blue(x))\nTEXT:\tIf Dave is round then Dave is white.\nFOL:\tRound(Dave) -> White(Dave)\nTEXT:\tIf something is blue and white then it is round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tIf Harry is big and Harry is white then Harry is red.\nFOL:\t(Big(Harry) & White(Harry)) -> Red(Harry)\nTEXT:\tAll furry, red things are young.\nFOL:\tall x. (Furry(x) & Red(x) -> Young(x))\nTEXT:\tRed things are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is blue then it is red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, round things are furry.\nFOL:\tall x. (White(x) & Round(x) -> Furry(x))\nTEXT:\tAll blue, young things are big.\nFOL:\tall x. (Blue(x) & Young(x) -> Big(x))\nTEXT:\tIf something is white and young then it is blue.\nFOL:\tall x. (White(x) & Young(x) -> Blue(x))\nTEXT:\tIf Dave is round then Dave is white.\nFOL:\tRound(Dave) -> White(Dave)\nTEXT:\tIf something is blue and white then it is round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tIf Harry is big and Harry is white then Harry is red.\nFOL:\t(Big(Harry) & White(Harry)) -> Red(Harry)\nTEXT:\tAll furry, red things are young.\nFOL:\tall x. (Furry(x) & Red(x) -> Young(x))\nTEXT:\tRed things are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is blue then it is red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, round things are furry.\nFOL:\tall x. (White(x) & Round(x) -> Furry(x))\nTEXT:\tAll blue, young things are big.\nFOL:\tall x. (Blue(x) & Young(x) -> Big(x))\nTEXT:\tIf something is white and young then it is blue.\nFOL:\tall x. (White(x) & Young(x) -> Blue(x))\nTEXT:\tIf Dave is round then Dave is white.\nFOL:\tRound(Dave) -> White(Dave)\nTEXT:\tIf something is blue and white then it is round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tIf Harry is big and Harry is white then Harry is red.\nFOL:\tBig(Harry) & White(Harry) -> Red(Harry)\nTEXT:\tAll furry, red things are young.\nFOL:\tall x. (Furry(x) & Red(x) -> Young(x))\nTEXT:\tRed things are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is blue then it is red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the dog then the dog is round.\nFOL:\tall x. (Likes(x, Dog) -> Round(Dog))\nTEXT:\tIf someone chases the rabbit then the rabbit does not visit the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> -Visits(Rabbit, Dog))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Likes(x, Dog) -> Rough(x))\nTEXT:\tIf someone likes the dog then they are green.\nFOL:\tall x. (Likes(x, Dog) -> Green(x))\nTEXT:\tIf someone visits the squirrel then they are round.\nFOL:\tall x. (Visits(x, Squirrel) -> Round(x))\nTEXT:\tIf someone chases the rabbit then the rabbit is round.\nFOL:\tall x. (Chases(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone is round then they like the dog.\nFOL:\tall x. (Round(x) -> Likes(x, Dog))\nTEXT:\tIf the squirrel likes the bald eagle and the squirrel is not round then the bald eagle likes the rabbit.\nFOL:\t(Likes(Squirrel, BaldEagle) & -Round(Squirrel)) -> Likes(BaldEagle, Rabbit)\nTEXT:\tThe rabbit does not like the dog.\nFOL:\t-Likes(Rabbit, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the dog then the dog is round.\nFOL:\tall x. (Likes(x, Dog) -> Round(Dog))\nTEXT:\tIf someone chases the rabbit then the rabbit does not visit the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> -Visits(Rabbit, Dog))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Likes(x, Dog) -> Rough(x))\nTEXT:\tIf someone likes the dog then they are green.\nFOL:\tall x. (Likes(x, Dog) -> Green(x))\nTEXT:\tIf someone visits the squirrel then they are round.\nFOL:\tall x. (Visits(x, Squirrel) -> Round(x))\nTEXT:\tIf someone chases the rabbit then the rabbit is round.\nFOL:\tall x. (Chases(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone is round then they like the dog.\nFOL:\tall x. (Round(x) -> Likes(x, Dog))\nTEXT:\tIf the squirrel likes the bald eagle and the squirrel is not round then the bald eagle likes the rabbit.\nFOL:\t(Likes(Squirrel, BaldEagle) & -Round(Squirrel)) -> Likes(BaldEagle, Rabbit)\nTEXT:\tThe rabbit does not like the dog.\nFOL:\t-Likes(Rabbit, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the dog then the dog is round.\nFOL:\tall x. (Likes(x, Dog) -> Round(Dog))\nTEXT:\tIf someone chases the rabbit then the rabbit does not visit the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> -Visits(Rabbit, Dog))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Likes(x, Dog) -> Rough(x))\nTEXT:\tIf someone likes the dog then they are green.\nFOL:\tall x. (Likes(x, Dog) -> Green(x))\nTEXT:\tIf someone visits the squirrel then they are round.\nFOL:\tall x. (Visits(x, Squirrel) -> Round(x))\nTEXT:\tIf someone chases the rabbit then the rabbit is round.\nFOL:\tall x. (Chases(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone is round then they like the dog.\nFOL:\tall x. (Round(x) -> Likes(x, Dog))\nTEXT:\tIf the squirrel likes the bald eagle and the squirrel is not round then the bald eagle likes the rabbit.\nFOL:\t(Likes(Squirrel, BaldEagle) & -Round(Squirrel)) -> Likes(BaldEagle, Rabbit)\nTEXT:\tThe rabbit does not like the dog.\nFOL:\t-Likes(Rabbit, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the dog then the dog is round.\nFOL:\tall x. (Likes(x, Dog) -> Round(Dog))\nTEXT:\tIf someone chases the rabbit then the rabbit does not visit the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> -Visits(Rabbit, Dog))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Likes(x, Dog) -> Rough(x))\nTEXT:\tIf someone likes the dog then they are green.\nFOL:\tall x. (Likes(x, Dog) -> Green(x))\nTEXT:\tIf someone visits the squirrel then they are round.\nFOL:\tall x. (Visits(x, Squirrel) -> Round(x))\nTEXT:\tIf someone chases the rabbit then the rabbit is round.\nFOL:\tall x. (Chases(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone is round then they like the dog.\nFOL:\tall x. (Round(x) -> Likes(x, Dog))\nTEXT:\tIf the squirrel likes the bald eagle and the squirrel is not round then the bald eagle likes the rabbit.\nFOL:\t(Likes(Squirrel, BaldEagle) & -Round(Squirrel)) -> Likes(BaldEagle, Rabbit)\nTEXT:\tThe rabbit does not like the dog.\nFOL:\t-Likes(Rabbit, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the dog then the dog is round.\nFOL:\tall x. (Likes(x, Dog) -> Round(Dog))\nTEXT:\tIf someone chases the rabbit then the rabbit does not visit the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> -Visits(Rabbit, Dog))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Likes(x, Dog) -> Rough(x))\nTEXT:\tIf someone likes the dog then they are green.\nFOL:\tall x. (Likes(x, Dog) -> Green(x))\nTEXT:\tIf someone visits the squirrel then they are round.\nFOL:\tall x. (Visits(x, Squirrel) -> Round(x))\nTEXT:\tIf someone chases the rabbit then the rabbit is round.\nFOL:\tall x. (Chases(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone is round then they like the dog.\nFOL:\tall x. (Round(x) -> Likes(x, Dog))\nTEXT:\tIf the squirrel likes the bald eagle and the squirrel is not round then the bald eagle likes the rabbit.\nFOL:\t(Likes(Squirrel, BaldEagle) & -Round(Squirrel)) -> Likes(BaldEagle, Rabbit)\nTEXT:\tThe rabbit does not like the dog.\nFOL:\t-Likes(Rabbit, Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf something likes the lion then it chases the lion.\nFOL:\tall x. (Likes(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf something chases the dog and it is red then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) & Red(x) -> Cold(Dog))\nTEXT:\tIf something likes the tiger then it likes the lion.\nFOL:\tall x. (Likes(x, Tiger) -> Likes(x, Lion))\nTEXT:\tIf something chases the bear and the bear is round then the bear chases the lion.\nFOL:\tall x. (Chases(x, Bear) & Round(Bear) -> Chases(Bear, Lion))\nTEXT:\tIf something chases the lion then it is red.\nFOL:\tall x. (Chases(x, Lion) -> Red(x))\nTEXT:\tIf something eats the dog then the dog chases the lion.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Lion))\nTEXT:\tIf something is round then it likes the tiger.\nFOL:\tall x. (Round(x) -> Likes(x, Tiger))\nTEXT:\tAll young things are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf something likes the lion then it chases the lion.\nFOL:\tall x. (Likes(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf something chases the dog and it is red then the dog is cold.\nFOL:\tall x. ((Chases(x, Dog) & Red(x)) -> Cold(Dog))\nTEXT:\tIf something likes the tiger then it likes the lion.\nFOL:\tall x. (Likes(x, Tiger) -> Likes(x, Lion))\nTEXT:\tIf something chases the bear and the bear is round then the bear chases the lion.\nFOL:\tall x. ((Chases(x, Bear) & Round(Bear)) -> Chases(Bear, Lion))\nTEXT:\tIf something chases the lion then it is red.\nFOL:\tall x. (Chases(x, Lion) -> Red(x))\nTEXT:\tIf something eats the dog then the dog chases the lion.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Lion))\nTEXT:\tIf something is round then it likes the tiger.\nFOL:\tall x. (Round(x) -> Likes(x, Tiger))\nTEXT:\tAll young things are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf something likes the lion then it chases the lion.\nFOL:\tall x. (Likes(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf something chases the dog and it is red then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) & Red(x) -> Cold(Dog))\nTEXT:\tIf something likes the tiger then it likes the lion.\nFOL:\tall x. (Likes(x, Tiger) -> Likes(x, Lion))\nTEXT:\tIf something chases the bear and the bear is round then the bear chases the lion.\nFOL:\tall x. (Chases(x, Bear) & Round(Bear) -> Chases(Bear, Lion))\nTEXT:\tIf something chases the lion then it is red.\nFOL:\tall x. (Chases(x, Lion) -> Red(x))\nTEXT:\tIf something eats the dog then the dog chases the lion.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Lion))\nTEXT:\tIf something is round then it likes the tiger.\nFOL:\tall x. (Round(x) -> Likes(x, Tiger))\nTEXT:\tAll young things are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf something likes the lion then it chases the lion.\nFOL:\tall x. (Likes(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf something chases the dog and it is red then the dog is cold.\nFOL:\tall x. ((Chases(x, Dog) & Red(x)) -> Cold(Dog))\nTEXT:\tIf something likes the tiger then it likes the lion.\nFOL:\tall x. (Likes(x, Tiger) -> Likes(x, Lion))\nTEXT:\tIf something chases the bear and the bear is round then the bear chases the lion.\nFOL:\tall x. ((Chases(x, Bear) & Round(Bear)) -> Chases(Bear, Lion))\nTEXT:\tIf something chases the lion then it is red.\nFOL:\tall x. (Chases(x, Lion) -> Red(x))\nTEXT:\tIf something eats the dog then the dog chases the lion.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Lion))\nTEXT:\tIf something is round then it likes the tiger.\nFOL:\tall x. (Round(x) -> Likes(x, Tiger))\nTEXT:\tAll young things are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the bear.\nFOL:\tEats(Lion, Bear)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf something likes the lion then it chases the lion.\nFOL:\tall x. (Likes(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf something chases the dog and it is red then the dog is cold.\nFOL:\tall x. ((Chases(x, Dog) & Red(x)) -> Cold(Dog))\nTEXT:\tIf something likes the tiger then it likes the lion.\nFOL:\tall x. (Likes(x, Tiger) -> Likes(x, Lion))\nTEXT:\tIf something chases the bear and the bear is round then the bear chases the lion.\nFOL:\tall x. ((Chases(x, Bear) & Round(Bear)) -> Chases(Bear, Lion))\nTEXT:\tIf something chases the lion then it is red.\nFOL:\tall x. (Chases(x, Lion) -> Red(x))\nTEXT:\tIf something eats the dog then the dog chases the lion.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Lion))\nTEXT:\tIf something is round then it likes the tiger.\nFOL:\tall x. (Round(x) -> Likes(x, Tiger))\nTEXT:\tAll young things are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something needs the lion then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Bear))\nTEXT:\tIf something eats the lion and the lion needs the bear then it is round.\nFOL:\tall x. (Eats(x, Lion) & Needs(Lion, Bear) -> Round(x))\nTEXT:\tIf something is round then it eats the mouse.\nFOL:\tall x. (Round(x) -> Eats(x, Mouse))\nTEXT:\tIf something eats the mouse then the mouse visits the dog.\nFOL:\tall x. (Eats(x, Mouse) -> Visits(Mouse, Dog))\nTEXT:\tIf the lion eats the mouse then the lion needs the bear.\nFOL:\tEats(Lion, Mouse) -> Needs(Lion, Bear)\nTEXT:\tIf something visits the dog then the dog visits the mouse.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tIf something is round and it visits the bear then the bear eats the lion.\nFOL:\tall x. (Round(x) & Visits(x, Bear) -> Eats(Bear, Lion))\nTEXT:\tThe mouse does not eat the mouse.\nFOL:\t-Eats(Mouse, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something needs the lion then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Bear))\nTEXT:\tIf something eats the lion and the lion needs the bear then it is round.\nFOL:\tall x. (Eats(x, Lion) & Needs(Lion, Bear) -> Round(x))\nTEXT:\tIf something is round then it eats the mouse.\nFOL:\tall x. (Round(x) -> Eats(x, Mouse))\nTEXT:\tIf something eats the mouse then the mouse visits the dog.\nFOL:\tall x. (Eats(x, Mouse) -> Visits(Mouse, Dog))\nTEXT:\tIf the lion eats the mouse then the lion needs the bear.\nFOL:\tEats(Lion, Mouse) -> Needs(Lion, Bear)\nTEXT:\tIf something visits the dog then the dog visits the mouse.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tIf something is round and it visits the bear then the bear eats the lion.\nFOL:\tall x. (Round(x) & Visits(x, Bear) -> Eats(Bear, Lion))\nTEXT:\tThe mouse does not eat the mouse.\nFOL:\t-Eats(Mouse, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something needs the lion then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Bear))\nTEXT:\tIf something eats the lion and the lion needs the bear then it is round.\nFOL:\tall x. ((Eats(x, Lion) & Needs(Lion, Bear)) -> Round(x))\nTEXT:\tIf something is round then it eats the mouse.\nFOL:\tall x. (Round(x) -> Eats(x, Mouse))\nTEXT:\tIf something eats the mouse then the mouse visits the dog.\nFOL:\tall x. (Eats(x, Mouse) -> Visits(Mouse, Dog))\nTEXT:\tIf the lion eats the mouse then the lion needs the bear.\nFOL:\t(Eats(Lion, Mouse) -> Needs(Lion, Bear))\nTEXT:\tIf something visits the dog then the dog visits the mouse.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tIf something is round and it visits the bear then the bear eats the lion.\nFOL:\tall x. ((Round(x) & Visits(x, Bear)) -> Eats(Bear, Lion))\nTEXT:\tThe mouse does not eat the mouse.\nFOL:\t-Eats(Mouse, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something needs the lion then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Bear))\nTEXT:\tIf something eats the lion and the lion needs the bear then it is round.\nFOL:\tall x. ((Eats(x, Lion) & Needs(Lion, Bear)) -> Round(x))\nTEXT:\tIf something is round then it eats the mouse.\nFOL:\tall x. (Round(x) -> Eats(x, Mouse))\nTEXT:\tIf something eats the mouse then the mouse visits the dog.\nFOL:\tall x. (Eats(x, Mouse) -> Visits(Mouse, Dog))\nTEXT:\tIf the lion eats the mouse then the lion needs the bear.\nFOL:\tEats(Lion, Mouse) -> Needs(Lion, Bear)\nTEXT:\tIf something visits the dog then the dog visits the mouse.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tIf something is round and it visits the bear then the bear eats the lion.\nFOL:\tall x. ((Round(x) & Visits(x, Bear)) -> Eats(Bear, Lion))\nTEXT:\tThe mouse does not eat the mouse.\nFOL:\t-Eats(Mouse, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe dog eats the lion.\nFOL:\tEats(Dog, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something needs the lion then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Bear))\nTEXT:\tIf something eats the lion and the lion needs the bear then it is round.\nFOL:\tall x. (Eats(x, Lion) & Needs(Lion, Bear) -> Round(x))\nTEXT:\tIf something is round then it eats the mouse.\nFOL:\tall x. (Round(x) -> Eats(x, Mouse))\nTEXT:\tIf something eats the mouse then the mouse visits the dog.\nFOL:\tall x. (Eats(x, Mouse) -> Visits(Mouse, Dog))\nTEXT:\tIf the lion eats the mouse then the lion needs the bear.\nFOL:\tEats(Lion, Mouse) -> Needs(Lion, Bear)\nTEXT:\tIf something visits the dog then the dog visits the mouse.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tIf something is round and it visits the bear then the bear eats the lion.\nFOL:\tall x. (Round(x) & Visits(x, Bear) -> Eats(Bear, Lion))\nTEXT:\tThe mouse does not eat the mouse.\nFOL:\t-Eats(Mouse, Mouse)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tIf something chases the cat and it chases the cow then the cow visits the mouse.\nFOL:\tall x. (Chases(x, Cat) & Chases(x, Cow) -> Visits(Cow, Mouse))\nTEXT:\tIf something visits the mouse then the mouse chases the cow.\nFOL:\tall x. (Visits(x, Mouse) -> Chases(Mouse, Cow))\nTEXT:\tIf the cow is blue then the cow needs the cat.\nFOL:\tBlue(Cow) -> Needs(Cow, Cat)\nTEXT:\tIf something visits the cow and it needs the cat then the cat is blue.\nFOL:\tall x. (Visits(x, Cow) & Needs(x, Cat) -> Blue(Cat))\nTEXT:\tIf something visits the mouse and it visits the bald eagle then the mouse is nice.\nFOL:\tall x. (Visits(x, Mouse) & Visits(x, BaldEagle) -> Nice(Mouse))\nTEXT:\tIf something is cold then it needs the mouse.\nFOL:\tall x. (Cold(x) -> Needs(x, Mouse))\nTEXT:\tIf something is nice and it needs the bald eagle then it chases the cow.\nFOL:\tall x. (Nice(x) & Needs(x, BaldEagle) -> Chases(x, Cow))\nTEXT:\tIf the mouse chases the bald eagle then the bald eagle visits the mouse.\nFOL:\tChases(Mouse, BaldEagle) -> Visits(BaldEagle, Mouse)\nTEXT:\tIf the mouse is nice then the mouse chases the bald eagle.\nFOL:\tNice(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the bald eagle.\nFOL:\t-Chases(Mouse, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tIf something chases the cat and it chases the cow then the cow visits the mouse.\nFOL:\tall x. ((Chases(x, Cat) & Chases(x, Cow)) -> Visits(Cow, Mouse))\nTEXT:\tIf something visits the mouse then the mouse chases the cow.\nFOL:\tall x. (Visits(x, Mouse) -> Chases(Mouse, Cow))\nTEXT:\tIf the cow is blue then the cow needs the cat.\nFOL:\tBlue(Cow) -> Needs(Cow, Cat)\nTEXT:\tIf something visits the cow and it needs the cat then the cat is blue.\nFOL:\tall x. ((Visits(x, Cow) & Needs(x, Cat)) -> Blue(Cat))\nTEXT:\tIf something visits the mouse and it visits the bald eagle then the mouse is nice.\nFOL:\tall x. ((Visits(x, Mouse) & Visits(x, BaldEagle)) -> Nice(Mouse))\nTEXT:\tIf something is cold then it needs the mouse.\nFOL:\tall x. (Cold(x) -> Needs(x, Mouse))\nTEXT:\tIf something is nice and it needs the bald eagle then it chases the cow.\nFOL:\tall x. ((Nice(x) & Needs(x, BaldEagle)) -> Chases(x, Cow))\nTEXT:\tIf the mouse chases the bald eagle then the bald eagle visits the mouse.\nFOL:\tChases(Mouse, BaldEagle) -> Visits(BaldEagle, Mouse)\nTEXT:\tIf the mouse is nice then the mouse chases the bald eagle.\nFOL:\tNice(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the bald eagle.\nFOL:\t-Chases(Mouse, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tIf something chases the cat and it chases the cow then the cow visits the mouse.\nFOL:\tall x. (Chases(x, Cat) & Chases(x, Cow) -> Visits(Cow, Mouse))\nTEXT:\tIf something visits the mouse then the mouse chases the cow.\nFOL:\tall x. (Visits(x, Mouse) -> Chases(Mouse, Cow))\nTEXT:\tIf the cow is blue then the cow needs the cat.\nFOL:\tBlue(Cow) -> Needs(Cow, Cat)\nTEXT:\tIf something visits the cow and it needs the cat then the cat is blue.\nFOL:\tall x. (Visits(x, Cow) & Needs(x, Cat) -> Blue(Cat))\nTEXT:\tIf something visits the mouse and it visits the bald eagle then the mouse is nice.\nFOL:\tall x. (Visits(x, Mouse) & Visits(x, BaldEagle) -> Nice(Mouse))\nTEXT:\tIf something is cold then it needs the mouse.\nFOL:\tall x. (Cold(x) -> Needs(x, Mouse))\nTEXT:\tIf something is nice and it needs the bald eagle then it chases the cow.\nFOL:\tall x. (Nice(x) & Needs(x, BaldEagle) -> Chases(x, Cow))\nTEXT:\tIf the mouse chases the bald eagle then the bald eagle visits the mouse.\nFOL:\tChases(Mouse, BaldEagle) -> Visits(BaldEagle, Mouse)\nTEXT:\tIf the mouse is nice then the mouse chases the bald eagle.\nFOL:\tNice(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the bald eagle.\nFOL:\t-Chases(Mouse, BaldEagle)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tIf something chases the cat and it chases the cow then the cow visits the mouse.\nFOL:\tall x. (Chases(x, Cat) & Chases(x, Cow) -> Visits(Cow, Mouse))\nTEXT:\tIf something visits the mouse then the mouse chases the cow.\nFOL:\tall x. (Visits(x, Mouse) -> Chases(Mouse, Cow))\nTEXT:\tIf the cow is blue then the cow needs the cat.\nFOL:\tBlue(Cow) -> Needs(Cow, Cat)\nTEXT:\tIf something visits the cow and it needs the cat then the cat is blue.\nFOL:\tall x. (Visits(x, Cow) & Needs(x, Cat) -> Blue(Cat))\nTEXT:\tIf something visits the mouse and it visits the bald eagle then the mouse is nice.\nFOL:\tall x. (Visits(x, Mouse) & Visits(x, BaldEagle) -> Nice(Mouse))\nTEXT:\tIf something is cold then it needs the mouse.\nFOL:\tall x. (Cold(x) -> Needs(x, Mouse))\nTEXT:\tIf something is nice and it needs the bald eagle then it chases the cow.\nFOL:\tall x. (Nice(x) & Needs(x, BaldEagle) -> Chases(x, Cow))\nTEXT:\tIf the mouse chases the bald eagle then the bald eagle visits the mouse.\nFOL:\tChases(Mouse, BaldEagle) -> Visits(BaldEagle, Mouse)\nTEXT:\tIf the mouse is nice then the mouse chases the bald eagle.\nFOL:\tNice(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the bald eagle.\nFOL:\t-Chases(Mouse, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tIf something chases the cat and it chases the cow then the cow visits the mouse.\nFOL:\tall x. (Chases(x, Cat) & Chases(x, Cow) -> Visits(Cow, Mouse))\nTEXT:\tIf something visits the mouse then the mouse chases the cow.\nFOL:\tall x. (Visits(x, Mouse) -> Chases(Mouse, Cow))\nTEXT:\tIf the cow is blue then the cow needs the cat.\nFOL:\tBlue(Cow) -> Needs(Cow, Cat)\nTEXT:\tIf something visits the cow and it needs the cat then the cat is blue.\nFOL:\tall x. (Visits(x, Cow) & Needs(x, Cat) -> Blue(Cat))\nTEXT:\tIf something visits the mouse and it visits the bald eagle then the mouse is nice.\nFOL:\tall x. (Visits(x, Mouse) & Visits(x, BaldEagle) -> Nice(Mouse))\nTEXT:\tIf something is cold then it needs the mouse.\nFOL:\tall x. (Cold(x) -> Needs(x, Mouse))\nTEXT:\tIf something is nice and it needs the bald eagle then it chases the cow.\nFOL:\tall x. (Nice(x) & Needs(x, BaldEagle) -> Chases(x, Cow))\nTEXT:\tIf the mouse chases the bald eagle then the bald eagle visits the mouse.\nFOL:\tChases(Mouse, BaldEagle) -> Visits(BaldEagle, Mouse)\nTEXT:\tIf the mouse is nice then the mouse chases the bald eagle.\nFOL:\tNice(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tThe mouse does not chase the bald eagle.\nFOL:\t-Chases(Mouse, BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are green.\nFOL:\tall x. ((Furry(x) & Nice(x)) -> Green(x))\nTEXT:\tIf someone is smart then they are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tNice, blue people are furry.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Furry(x))\nTEXT:\tBlue, furry people are nice.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Nice(x))\nTEXT:\tGreen, smart people are furry.\nFOL:\tall x. ((Green(x) & Smart(x)) -> Furry(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll big, blue people are green.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Green(x))\nTEXT:\tAll blue people are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are green.\nFOL:\tall x. ((Furry(x) & Nice(x)) -> Green(x))\nTEXT:\tIf someone is smart then they are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tNice, blue people are furry.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Furry(x))\nTEXT:\tBlue, furry people are nice.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Nice(x))\nTEXT:\tGreen, smart people are furry.\nFOL:\tall x. ((Green(x) & Smart(x)) -> Furry(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll big, blue people are green.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Green(x))\nTEXT:\tAll blue people are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are green.\nFOL:\tall x. (Furry(x) & Nice(x) -> Green(x))\nTEXT:\tIf someone is smart then they are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tNice, blue people are furry.\nFOL:\tall x. (Nice(x) & Blue(x) -> Furry(x))\nTEXT:\tBlue, furry people are nice.\nFOL:\tall x. (Blue(x) & Furry(x) -> Nice(x))\nTEXT:\tGreen, smart people are furry.\nFOL:\tall x. (Green(x) & Smart(x) -> Furry(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll big, blue people are green.\nFOL:\tall x. (Big(x) & Blue(x) -> Green(x))\nTEXT:\tAll blue people are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are green.\nFOL:\tall x. ((Furry(x) & Nice(x)) -> Green(x))\nTEXT:\tIf someone is smart then they are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tNice, blue people are furry.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Furry(x))\nTEXT:\tBlue, furry people are nice.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Nice(x))\nTEXT:\tGreen, smart people are furry.\nFOL:\tall x. ((Green(x) & Smart(x)) -> Furry(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\t(Quiet(Charlie) -> Furry(Charlie))\nTEXT:\tAll big, blue people are green.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Green(x))\nTEXT:\tAll blue people are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are green.\nFOL:\tall x. ((Furry(x) & Nice(x)) -> Green(x))\nTEXT:\tIf someone is smart then they are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tNice, blue people are furry.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Furry(x))\nTEXT:\tBlue, furry people are nice.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Nice(x))\nTEXT:\tGreen, smart people are furry.\nFOL:\tall x. ((Green(x) & Smart(x)) -> Furry(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll big, blue people are green.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Green(x))\nTEXT:\tAll blue people are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tBig things are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tRound, rough things are cold.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is big and cold then it is quiet.\nFOL:\tall x. ((Big(x) & Cold(x)) -> Quiet(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tQuiet things are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Big(x))\nTEXT:\tAll round things are smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tBig things are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tRound, rough things are cold.\nFOL:\tall x. (Round(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is big and cold then it is quiet.\nFOL:\tall x. (Big(x) & Cold(x) -> Quiet(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tQuiet things are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tAll round things are smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tBig things are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tRound, rough things are cold.\nFOL:\tall x. (Round(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is big and cold then it is quiet.\nFOL:\tall x. (Big(x) & Cold(x) -> Quiet(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tQuiet things are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tAll round things are smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tBig things are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tRound, rough things are cold.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is big and cold then it is quiet.\nFOL:\tall x. ((Big(x) & Cold(x)) -> Quiet(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tQuiet things are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Big(x))\nTEXT:\tAll round things are smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tBig things are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tRound, rough things are cold.\nFOL:\tall x. (Round(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something is big and cold then it is quiet.\nFOL:\tall x. (Big(x) & Cold(x) -> Quiet(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tQuiet things are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tAll round things are smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tIf someone is young and they eat the squirrel then they need the mouse.\nFOL:\tall x. (Young(x) & Eats(x, Squirrel) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the cat and the cat is rough then they see the squirrel.\nFOL:\tall x. (Sees(x, Cat) & Rough(Cat) -> Sees(x, Squirrel))\nTEXT:\tIf someone is rough and they eat the cat then they are big.\nFOL:\tall x. (Rough(x) & Eats(x, Cat) -> Big(x))\nTEXT:\tBig people are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf someone needs the mouse then they see the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Cat))\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tIf someone is young and they eat the squirrel then they need the mouse.\nFOL:\tall x. ((Young(x) & Eats(x, Squirrel)) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the cat and the cat is rough then they see the squirrel.\nFOL:\tall x. ((Sees(x, Cat) & Rough(Cat)) -> Sees(x, Squirrel))\nTEXT:\tIf someone is rough and they eat the cat then they are big.\nFOL:\tall x. ((Rough(x) & Eats(x, Cat)) -> Big(x))\nTEXT:\tBig people are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf someone needs the mouse then they see the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Cat))\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tIf someone is young and they eat the squirrel then they need the mouse.\nFOL:\tall x. ((Young(x) & Eats(x, Squirrel)) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the cat and the cat is rough then they see the squirrel.\nFOL:\tall x. ((Sees(x, Cat) & Rough(Cat)) -> Sees(x, Squirrel))\nTEXT:\tIf someone is rough and they eat the cat then they are big.\nFOL:\tall x. ((Rough(x) & Eats(x, Cat)) -> Big(x))\nTEXT:\tBig people are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf someone needs the mouse then they see the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Cat))\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tIf someone is young and they eat the squirrel then they need the mouse.\nFOL:\tall x. (Young(x) & Eats(x, Squirrel) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the cat and the cat is rough then they see the squirrel.\nFOL:\tall x. (Sees(x, Cat) & Rough(Cat) -> Sees(x, Squirrel))\nTEXT:\tIf someone is rough and they eat the cat then they are big.\nFOL:\tall x. (Rough(x) & Eats(x, Cat) -> Big(x))\nTEXT:\tBig people are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf someone needs the mouse then they see the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Cat))\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tThe squirrel eats the mouse.\nFOL:\tEats(Squirrel, Mouse)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tIf someone is young and they eat the squirrel then they need the mouse.\nFOL:\tall x. (Young(x) & Eats(x, Squirrel) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the cat and the cat is rough then they see the squirrel.\nFOL:\tall x. (Sees(x, Cat) & Rough(Cat) -> Sees(x, Squirrel))\nTEXT:\tIf someone is rough and they eat the cat then they are big.\nFOL:\tall x. (Rough(x) & Eats(x, Cat) -> Big(x))\nTEXT:\tBig people are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf someone needs the mouse then they see the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Sees(x, Cat))\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nANSWER:\tTrue\n"], ["TEXT:\tThe cow chases the tiger.\nFOL:\tChase(Cow, Tiger)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEat(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSee(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEat(Rabbit, Cow)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSee(Tiger, Squirrel)\nTEXT:\tIf the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger.\nFOL:\t(See(Cow, Squirrel) & Eat(Squirrel, Rabbit)) -> See(Rabbit, Tiger)\nTEXT:\tIf something sees the tiger then the tiger is round.\nFOL:\tall x. (See(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something chases the squirrel then the squirrel eats the rabbit.\nFOL:\tall x. (Chase(x, Squirrel) -> Eat(Squirrel, Rabbit))\nTEXT:\tIf something is round then it sees the tiger.\nFOL:\tall x. (Round(x) -> See(x, Tiger))\nTEXT:\tIf something is big then it chases the squirrel.\nFOL:\tall x. (Big(x) -> Chase(x, Squirrel))\nTEXT:\tIf something eats the rabbit then the rabbit chases the squirrel.\nFOL:\tall x. (Eat(x, Rabbit) -> Chase(Rabbit, Squirrel))\nTEXT:\tIf the tiger eats the cow and the cow sees the squirrel then the squirrel is young.\nFOL:\t(Eat(Tiger, Cow) & See(Cow, Squirrel)) -> Young(Squirrel)\nTEXT:\tThe cow does not see the rabbit.\nFOL:\t-See(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the tiger.\nFOL:\tChases(Cow, Tiger)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger.\nFOL:\t(Sees(Cow, Squirrel) & Eats(Squirrel, Rabbit)) -> Sees(Rabbit, Tiger)\nTEXT:\tIf something sees the tiger then the tiger is round.\nFOL:\tall x. (Sees(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something chases the squirrel then the squirrel eats the rabbit.\nFOL:\tall x. (Chases(x, Squirrel) -> Eats(Squirrel, Rabbit))\nTEXT:\tIf something is round then it sees the tiger.\nFOL:\tall x. (Round(x) -> Sees(x, Tiger))\nTEXT:\tIf something is big then it chases the squirrel.\nFOL:\tall x. (Big(x) -> Chases(x, Squirrel))\nTEXT:\tIf something eats the rabbit then the rabbit chases the squirrel.\nFOL:\tall x. (Eats(x, Rabbit) -> Chases(Rabbit, Squirrel))\nTEXT:\tIf the tiger eats the cow and the cow sees the squirrel then the squirrel is young.\nFOL:\t(Eats(Tiger, Cow) & Sees(Cow, Squirrel)) -> Young(Squirrel)\nTEXT:\tThe cow does not see the rabbit.\nFOL:\t-Sees(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the tiger.\nFOL:\tChases(Cow, Tiger)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger.\nFOL:\t(Sees(Cow, Squirrel) & Eats(Squirrel, Rabbit)) -> Sees(Rabbit, Tiger)\nTEXT:\tIf something sees the tiger then the tiger is round.\nFOL:\tall x. (Sees(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something chases the squirrel then the squirrel eats the rabbit.\nFOL:\tall x. (Chases(x, Squirrel) -> Eats(Squirrel, Rabbit))\nTEXT:\tIf something is round then it sees the tiger.\nFOL:\tall x. (Round(x) -> Sees(x, Tiger))\nTEXT:\tIf something is big then it chases the squirrel.\nFOL:\tall x. (Big(x) -> Chases(x, Squirrel))\nTEXT:\tIf something eats the rabbit then the rabbit chases the squirrel.\nFOL:\tall x. (Eats(x, Rabbit) -> Chases(Rabbit, Squirrel))\nTEXT:\tIf the tiger eats the cow and the cow sees the squirrel then the squirrel is young.\nFOL:\t(Eats(Tiger, Cow) & Sees(Cow, Squirrel)) -> Young(Squirrel)\nTEXT:\tThe cow does not see the rabbit.\nFOL:\t-Sees(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the tiger.\nFOL:\tChases(Cow, Tiger)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger.\nFOL:\t(Sees(Cow, Squirrel) & Eats(Squirrel, Rabbit)) -> Sees(Rabbit, Tiger)\nTEXT:\tIf something sees the tiger then the tiger is round.\nFOL:\tall x. (Sees(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something chases the squirrel then the squirrel eats the rabbit.\nFOL:\tall x. (Chases(x, Squirrel) -> Eats(Squirrel, Rabbit))\nTEXT:\tIf something is round then it sees the tiger.\nFOL:\tall x. (Round(x) -> Sees(x, Tiger))\nTEXT:\tIf something is big then it chases the squirrel.\nFOL:\tall x. (Big(x) -> Chases(x, Squirrel))\nTEXT:\tIf something eats the rabbit then the rabbit chases the squirrel.\nFOL:\tall x. (Eats(x, Rabbit) -> Chases(Rabbit, Squirrel))\nTEXT:\tIf the tiger eats the cow and the cow sees the squirrel then the squirrel is young.\nFOL:\t(Eats(Tiger, Cow) & Sees(Cow, Squirrel)) -> Young(Squirrel)\nTEXT:\tThe cow does not see the rabbit.\nFOL:\t-See(Cow, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe cow chases the tiger.\nFOL:\tChase(Cow, Tiger)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEat(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSee(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEat(Rabbit, Cow)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSee(Tiger, Squirrel)\nTEXT:\tIf the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger.\nFOL:\tall x. all y. all z. ((See(x, y) & Eat(y, z)) -> See(z, Tiger))\nTEXT:\tIf something sees the tiger then the tiger is round.\nFOL:\tall x. (See(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something chases the squirrel then the squirrel eats the rabbit.\nFOL:\tall x. (Chase(x, Squirrel) -> Eat(Squirrel, Rabbit))\nTEXT:\tIf something is round then it sees the tiger.\nFOL:\tall x. (Round(x) -> See(x, Tiger))\nTEXT:\tIf something is big then it chases the squirrel.\nFOL:\tall x. (Big(x) -> Chase(x, Squirrel))\nTEXT:\tIf something eats the rabbit then the rabbit chases the squirrel.\nFOL:\tall x. (Eat(x, Rabbit) -> Chase(Rabbit, Squirrel))\nTEXT:\tIf the tiger eats the cow and the cow sees the squirrel then the squirrel is young.\nFOL:\tall x. all y. ((Eat(x, Cow) & See(Cow, y)) -> Young(y))\nTEXT:\tThe cow does not see the rabbit.\nFOL:\t-See(Cow, Rabbit)\nANSWER:\tTrue\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tSmart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tAll kind, furry people are big.\nFOL:\tall x. (Kind(x) & Furry(x) -> Big(x))\nTEXT:\tSmart, big people are furry.\nFOL:\tall x. (Smart(x) & Big(x) -> Furry(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. (White(x) & Kind(x) -> Young(x))\nTEXT:\tIf someone is furry and big then they are cold.\nFOL:\tall x. (Furry(x) & Big(x) -> Cold(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll cold, smart people are big.\nFOL:\tall x. (Cold(x) & Smart(x) -> Big(x))\nTEXT:\tAll young people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll cold, young people are white.\nFOL:\tall x. (Cold(x) & Young(x) -> White(x))\nTEXT:\tDave is not white.\nFOL:\t-White(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tSmart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tAll kind, furry people are big.\nFOL:\tall x. (Kind(x) & Furry(x) -> Big(x))\nTEXT:\tSmart, big people are furry.\nFOL:\tall x. (Smart(x) & Big(x) -> Furry(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. (White(x) & Kind(x) -> Young(x))\nTEXT:\tIf someone is furry and big then they are cold.\nFOL:\tall x. (Furry(x) & Big(x) -> Cold(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll cold, smart people are big.\nFOL:\tall x. (Cold(x) & Smart(x) -> Big(x))\nTEXT:\tAll young people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll cold, young people are white.\nFOL:\tall x. (Cold(x) & Young(x) -> White(x))\nTEXT:\tDave is not white.\nFOL:\t-White(Dave)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tSmart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tAll kind, furry people are big.\nFOL:\tall x. (Kind(x) & Furry(x) -> Big(x))\nTEXT:\tSmart, big people are furry.\nFOL:\tall x. (Smart(x) & Big(x) -> Furry(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. (White(x) & Kind(x) -> Young(x))\nTEXT:\tIf someone is furry and big then they are cold.\nFOL:\tall x. (Furry(x) & Big(x) -> Cold(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll cold, smart people are big.\nFOL:\tall x. (Cold(x) & Smart(x) -> Big(x))\nTEXT:\tAll young people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll cold, young people are white.\nFOL:\tall x. (Cold(x) & Young(x) -> White(x))\nTEXT:\tDave is not white.\nFOL:\t-White(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tSmart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tAll kind, furry people are big.\nFOL:\tall x. (Kind(x) & Furry(x) -> Big(x))\nTEXT:\tSmart, big people are furry.\nFOL:\tall x. (Smart(x) & Big(x) -> Furry(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. (White(x) & Kind(x) -> Young(x))\nTEXT:\tIf someone is furry and big then they are cold.\nFOL:\tall x. (Furry(x) & Big(x) -> Cold(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll cold, smart people are big.\nFOL:\tall x. (Cold(x) & Smart(x) -> Big(x))\nTEXT:\tAll young people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll cold, young people are white.\nFOL:\tall x. (Cold(x) & Young(x) -> White(x))\nTEXT:\tDave is not white.\nFOL:\t-White(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tSmart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tAll kind, furry people are big.\nFOL:\tall x. (Kind(x) & Furry(x) -> Big(x))\nTEXT:\tSmart, big people are furry.\nFOL:\tall x. (Smart(x) & Big(x) -> Furry(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. (White(x) & Kind(x) -> Young(x))\nTEXT:\tIf someone is furry and big then they are cold.\nFOL:\tall x. (Furry(x) & Big(x) -> Cold(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll cold, smart people are big.\nFOL:\tall x. (Cold(x) & Smart(x) -> Big(x))\nTEXT:\tAll young people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll cold, young people are white.\nFOL:\tall x. (Cold(x) & Young(x) -> White(x))\nTEXT:\tDave is not white.\nFOL:\t-White(Dave)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is not green.\nFOL:\t-Green(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tYoung, round people are kind.\nFOL:\tall x. (Young(x) & Round(x) -> Kind(x))\nTEXT:\tIf someone is quiet and green then they are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf someone is cold and red then they are not round.\nFOL:\tall x. (Cold(x) & Red(x) -> -Round(x))\nTEXT:\tRed people are young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tIf Gary is round and Gary is young then Gary is kind.\nFOL:\t(Round(Gary) & Young(Gary) -> Kind(Gary))\nTEXT:\tIf Anne is quiet and Anne is round then Anne is red.\nFOL:\t(Quiet(Anne) & Round(Anne) -> Red(Anne))\nTEXT:\tGreen people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Bob is cold then Bob is not quiet.\nFOL:\t(Cold(Bob) -> -Quiet(Bob))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is not green.\nFOL:\t-Green(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tYoung, round people are kind.\nFOL:\tall x. (Young(x) & Round(x) -> Kind(x))\nTEXT:\tIf someone is quiet and green then they are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf someone is cold and red then they are not round.\nFOL:\tall x. (Cold(x) & Red(x) -> -Round(x))\nTEXT:\tRed people are young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tIf Gary is round and Gary is young then Gary is kind.\nFOL:\t(Round(Gary) & Young(Gary) -> Kind(Gary))\nTEXT:\tIf Anne is quiet and Anne is round then Anne is red.\nFOL:\t(Quiet(Anne) & Round(Anne) -> Red(Anne))\nTEXT:\tGreen people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Bob is cold then Bob is not quiet.\nFOL:\t(Cold(Bob) -> -Quiet(Bob))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is not green.\nFOL:\t-Green(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tYoung, round people are kind.\nFOL:\tall x. (Young(x) & Round(x) -> Kind(x))\nTEXT:\tIf someone is quiet and green then they are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf someone is cold and red then they are not round.\nFOL:\tall x. (Cold(x) & Red(x) -> -Round(x))\nTEXT:\tRed people are young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tIf Gary is round and Gary is young then Gary is kind.\nFOL:\t(Round(Gary) & Young(Gary)) -> Kind(Gary)\nTEXT:\tIf Anne is quiet and Anne is round then Anne is red.\nFOL:\t(Quiet(Anne) & Round(Anne)) -> Red(Anne)\nTEXT:\tGreen people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Bob is cold then Bob is not quiet.\nFOL:\tCold(Bob) -> -Quiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is not green.\nFOL:\t-Green(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tYoung, round people are kind.\nFOL:\tall x. ((Young(x) & Round(x)) -> Kind(x))\nTEXT:\tIf someone is quiet and green then they are round.\nFOL:\tall x. ((Quiet(x) & Green(x)) -> Round(x))\nTEXT:\tIf someone is cold and red then they are not round.\nFOL:\tall x. ((Cold(x) & Red(x)) -> -Round(x))\nTEXT:\tRed people are young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tIf Gary is round and Gary is young then Gary is kind.\nFOL:\t((Round(Gary) & Young(Gary)) -> Kind(Gary))\nTEXT:\tIf Anne is quiet and Anne is round then Anne is red.\nFOL:\t((Quiet(Anne) & Round(Anne)) -> Red(Anne))\nTEXT:\tGreen people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Bob is cold then Bob is not quiet.\nFOL:\t(Cold(Bob) -> -Quiet(Bob))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tBob is not green.\nFOL:\t-Green(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tYoung, round people are kind.\nFOL:\tall x. (Young(x) & Round(x) -> Kind(x))\nTEXT:\tIf someone is quiet and green then they are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf someone is cold and red then they are not round.\nFOL:\tall x. (Cold(x) & Red(x) -> -Round(x))\nTEXT:\tRed people are young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tIf Gary is round and Gary is young then Gary is kind.\nFOL:\t(Round(Gary) & Young(Gary) -> Kind(Gary))\nTEXT:\tIf Anne is quiet and Anne is round then Anne is red.\nFOL:\t(Quiet(Anne) & Round(Anne) -> Red(Anne))\nTEXT:\tGreen people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Bob is cold then Bob is not quiet.\nFOL:\t(Cold(Bob) -> -Quiet(Bob))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear chases the mouse.\nFOL:\tChase(Bear, Mouse)\nTEXT:\tThe bear chases the rabbit.\nFOL:\tChase(Bear, Rabbit)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEat(Bear, Rabbit)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSee(Bear, Rabbit)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChase(Cow, Mouse)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChase(Cow, Rabbit)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEat(Cow, Mouse)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow sees the bear.\nFOL:\tSee(Cow, Bear)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSee(Cow, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChase(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEat(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSee(Rabbit, Bear)\nTEXT:\tIf someone eats the bear then the bear sees the rabbit.\nFOL:\tall x. (Eat(x, Bear) -> See(Bear, Rabbit))\nTEXT:\tIf someone sees the rabbit and they eat the bear then they eat the cow.\nFOL:\tall x. ((See(x, Rabbit) & Eat(x, Bear)) -> Eat(x, Cow))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone eats the rabbit then they are rough.\nFOL:\tall x. (Eat(x, Rabbit) -> Rough(x))\nTEXT:\tIf the mouse eats the rabbit and the rabbit eats the cow then the mouse is kind.\nFOL:\t((Eat(Mouse, Rabbit) & Eat(Rabbit, Cow)) -> Kind(Mouse))\nTEXT:\tIf someone is young then they eat the bear.\nFOL:\tall x. (Young(x) -> Eat(x, Bear))\nTEXT:\tIf someone is rough and they eat the bear then the bear is kind.\nFOL:\tall x. ((Rough(x) & Eat(x, Bear)) -> Kind(Bear))\nTEXT:\tIf someone is kind and they see the rabbit then they chase the cow.\nFOL:\tall x. ((Kind(x) & See(x, Rabbit)) -> Chase(x, Cow))\nTEXT:\tThe cow does not eat the cow.\nFOL:\t- Eat(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the mouse.\nFOL:\tChases(Bear, Mouse)\nTEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSees(Rabbit, Bear)\nTEXT:\tIf someone eats the bear then the bear sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(Bear, Rabbit))\nTEXT:\tIf someone sees the rabbit and they eat the bear then they eat the cow.\nFOL:\tall x. ((Sees(x, Rabbit) & Eats(x, Bear)) -> Eats(x, Cow))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone eats the rabbit then they are rough.\nFOL:\tall x. (Eats(x, Rabbit) -> Rough(x))\nTEXT:\tIf the mouse eats the rabbit and the rabbit eats the cow then the mouse is kind.\nFOL:\t((Eats(Mouse, Rabbit) & Eats(Rabbit, Cow)) -> Kind(Mouse))\nTEXT:\tIf someone is young then they eat the bear.\nFOL:\tall x. (Young(x) -> Eats(x, Bear))\nTEXT:\tIf someone is rough and they eat the bear then the bear is kind.\nFOL:\tall x. ((Rough(x) & Eats(x, Bear)) -> Kind(Bear))\nTEXT:\tIf someone is kind and they see the rabbit then they chase the cow.\nFOL:\tall x. ((Kind(x) & Sees(x, Rabbit)) -> Chases(x, Cow))\nTEXT:\tThe cow does not eat the cow.\nFOL:\t\u00acEats(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the mouse.\nFOL:\tChases(Bear, Mouse)\nTEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSees(Rabbit, Bear)\nTEXT:\tIf someone eats the bear then the bear sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(Bear, Rabbit))\nTEXT:\tIf someone sees the rabbit and they eat the bear then they eat the cow.\nFOL:\tall x. ((Sees(x, Rabbit) & Eats(x, Bear)) -> Eats(x, Cow))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone eats the rabbit then they are rough.\nFOL:\tall x. (Eats(x, Rabbit) -> Rough(x))\nTEXT:\tIf the mouse eats the rabbit and the rabbit eats the cow then the mouse is kind.\nFOL:\t((Eats(Mouse, Rabbit) & Eats(Rabbit, Cow)) -> Kind(Mouse))\nTEXT:\tIf someone is young then they eat the bear.\nFOL:\tall x. (Young(x) -> Eats(x, Bear))\nTEXT:\tIf someone is rough and they eat the bear then the bear is kind.\nFOL:\tall x. ((Rough(x) & Eats(x, Bear)) -> Kind(Bear))\nTEXT:\tIf someone is kind and they see the rabbit then they chase the cow.\nFOL:\tall x. ((Kind(x) & Sees(x, Rabbit)) -> Chases(x, Cow))\nTEXT:\tThe cow does not eat the cow.\nFOL:\t-Eats(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the mouse.\nFOL:\tChases(Bear, Mouse)\nTEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSees(Rabbit, Bear)\nTEXT:\tIf someone eats the bear then the bear sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(Bear, Rabbit))\nTEXT:\tIf someone sees the rabbit and they eat the bear then they eat the cow.\nFOL:\tall x. ((Sees(x, Rabbit) & Eats(x, Bear)) -> Eats(x, Cow))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone eats the rabbit then they are rough.\nFOL:\tall x. (Eats(x, Rabbit) -> Rough(x))\nTEXT:\tIf the mouse eats the rabbit and the rabbit eats the cow then the mouse is kind.\nFOL:\t(Eats(Mouse, Rabbit) & Eats(Rabbit, Cow)) -> Kind(Mouse)\nTEXT:\tIf someone is young then they eat the bear.\nFOL:\tall x. (Young(x) -> Eats(x, Bear))\nTEXT:\tIf someone is rough and they eat the bear then the bear is kind.\nFOL:\tall x. ((Rough(x) & Eats(x, Bear)) -> Kind(Bear))\nTEXT:\tIf someone is kind and they see the rabbit then they chase the cow.\nFOL:\tall x. ((Kind(x) & Sees(x, Rabbit)) -> Chases(x, Cow))\nTEXT:\tThe cow does not eat the cow.\nFOL:\t-Eats(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the mouse.\nFOL:\tChase(Bear, Mouse)\nTEXT:\tThe bear chases the rabbit.\nFOL:\tChase(Bear, Rabbit)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEat(Bear, Rabbit)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSee(Bear, Rabbit)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChase(Cow, Mouse)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChase(Cow, Rabbit)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEat(Cow, Mouse)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow sees the bear.\nFOL:\tSee(Cow, Bear)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSee(Cow, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChase(Rabbit, Mouse)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEat(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit sees the bear.\nFOL:\tSee(Rabbit, Bear)\nTEXT:\tIf someone eats the bear then the bear sees the rabbit.\nFOL:\tall x. (Eat(x, Bear) -> See(Bear, Rabbit))\nTEXT:\tIf someone sees the rabbit and they eat the bear then they eat the cow.\nFOL:\tall x. ((See(x, Rabbit) & Eat(x, Bear)) -> Eat(x, Cow))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone eats the rabbit then they are rough.\nFOL:\tall x. (Eat(x, Rabbit) -> Rough(x))\nTEXT:\tIf the mouse eats the rabbit and the rabbit eats the cow then the mouse is kind.\nFOL:\t((Eat(Mouse, Rabbit) & Eat(Rabbit, Cow)) -> Kind(Mouse))\nTEXT:\tIf someone is young then they eat the bear.\nFOL:\tall x. (Young(x) -> Eat(x, Bear))\nTEXT:\tIf someone is rough and they eat the bear then the bear is kind.\nFOL:\tall x. ((Rough(x) & Eat(x, Bear)) -> Kind(Bear))\nTEXT:\tIf someone is kind and they see the rabbit then they chase the cow.\nFOL:\tall x. ((Kind(x) & See(x, Rabbit)) -> Chase(x, Cow))\nTEXT:\tThe cow does not eat the cow.\nFOL:\t-Eat(Cow, Cow)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tNice, big things are quiet.\nFOL:\tall x. ((Nice(x) & Big(x)) -> Quiet(x))\nTEXT:\tIf something is blue then it is big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tAll big, red things are kind.\nFOL:\tall x. ((Big(x) & Red(x)) -> Kind(x))\nTEXT:\tBig things are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tRed, kind things are nice.\nFOL:\tall x. ((Red(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is red then it is blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf something is quiet and kind then it is big.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Big(x))\nTEXT:\tIf Erin is nice and Erin is big then Erin is red.\nFOL:\t((Nice(Erin) & Big(Erin)) -> Red(Erin))\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tNice, big things are quiet.\nFOL:\tall x. ((Nice(x) & Big(x)) -> Quiet(x))\nTEXT:\tIf something is blue then it is big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tAll big, red things are kind.\nFOL:\tall x. ((Big(x) & Red(x)) -> Kind(x))\nTEXT:\tBig things are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tRed, kind things are nice.\nFOL:\tall x. ((Red(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is red then it is blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf something is quiet and kind then it is big.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Big(x))\nTEXT:\tIf Erin is nice and Erin is big then Erin is red.\nFOL:\t((Nice(Erin) & Big(Erin)) -> Red(Erin))\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tNice, big things are quiet.\nFOL:\tall x. (Nice(x) & Big(x) -> Quiet(x))\nTEXT:\tIf something is blue then it is big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tAll big, red things are kind.\nFOL:\tall x. (Big(x) & Red(x) -> Kind(x))\nTEXT:\tBig things are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tRed, kind things are nice.\nFOL:\tall x. (Red(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is red then it is blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf something is quiet and kind then it is big.\nFOL:\tall x. (Quiet(x) & Kind(x) -> Big(x))\nTEXT:\tIf Erin is nice and Erin is big then Erin is red.\nFOL:\t(Nice(Erin) & Big(Erin)) -> Red(Erin)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tNice, big things are quiet.\nFOL:\tall x. (Nice(x) & Big(x) -> Quiet(x))\nTEXT:\tIf something is blue then it is big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tAll big, red things are kind.\nFOL:\tall x. (Big(x) & Red(x) -> Kind(x))\nTEXT:\tBig things are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tRed, kind things are nice.\nFOL:\tall x. (Red(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is red then it is blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf something is quiet and kind then it is big.\nFOL:\tall x. (Quiet(x) & Kind(x) -> Big(x))\nTEXT:\tIf Erin is nice and Erin is big then Erin is red.\nFOL:\t(Nice(Erin) & Big(Erin)) -> Red(Erin)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tNice, big things are quiet.\nFOL:\tall x. (Nice(x) & Big(x) -> Quiet(x))\nTEXT:\tIf something is blue then it is big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tAll big, red things are kind.\nFOL:\tall x. (Big(x) & Red(x) -> Kind(x))\nTEXT:\tBig things are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tRed, kind things are nice.\nFOL:\tall x. (Red(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is red then it is blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf something is quiet and kind then it is big.\nFOL:\tall x. (Quiet(x) & Kind(x) -> Big(x))\nTEXT:\tIf Erin is nice and Erin is big then Erin is red.\nFOL:\t(Nice(Erin) & Big(Erin)) -> Red(Erin)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGreen things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll kind things are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tAll nice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tIf something is smart and young then it is white.\nFOL:\tall x. (Smart(x) & Young(x) -> White(x))\nTEXT:\tYoung, nice things are smart.\nFOL:\tall x. (Young(x) & Nice(x) -> Smart(x))\nTEXT:\tIf something is nice and not white then it is not big.\nFOL:\tall x. ((Nice(x) & -White(x)) -> -Big(x))\nTEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nANSWER:\tTrue\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGreen things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll kind things are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tAll nice, white things are kind.\nFOL:\tall x. ((Nice(x) & White(x)) -> Kind(x))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tIf something is smart and young then it is white.\nFOL:\tall x. ((Smart(x) & Young(x)) -> White(x))\nTEXT:\tYoung, nice things are smart.\nFOL:\tall x. ((Young(x) & Nice(x)) -> Smart(x))\nTEXT:\tIf something is nice and not white then it is not big.\nFOL:\tall x. ((Nice(x) & -White(x)) -> -Big(x))\nTEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nANSWER:\tTrue\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGreen things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll kind things are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tAll nice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tIf something is smart and young then it is white.\nFOL:\tall x. (Smart(x) & Young(x) -> White(x))\nTEXT:\tYoung, nice things are smart.\nFOL:\tall x. (Young(x) & Nice(x) -> Smart(x))\nTEXT:\tIf something is nice and not white then it is not big.\nFOL:\tall x. (Nice(x) & -White(x) -> -Big(x))\nTEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGreen things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll kind things are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tAll nice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tIf something is smart and young then it is white.\nFOL:\tall x. (Smart(x) & Young(x) -> White(x))\nTEXT:\tYoung, nice things are smart.\nFOL:\tall x. (Young(x) & Nice(x) -> Smart(x))\nTEXT:\tIf something is nice and not white then it is not big.\nFOL:\tall x. (Nice(x) & -White(x) -> -Big(x))\nTEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGreen things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll kind things are young.\nFOL:\tall x. (Kind(x) -> Young(x))\nTEXT:\tAll nice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tIf something is smart and young then it is white.\nFOL:\tall x. ((Smart(x) & Young(x)) -> White(x))\nTEXT:\tYoung, nice things are smart.\nFOL:\tall x. (Young(x) & Nice(x) -> Smart(x))\nTEXT:\tIf something is nice and not white then it is not big.\nFOL:\tall x. ((Nice(x) & -White(x)) -> -Big(x))\nTEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is quiet and white then they are furry.\nFOL:\tall x. ((Quiet(x) & White(x)) -> Furry(x))\nTEXT:\tAll cold, round people are white.\nFOL:\tall x. ((Cold(x) & Round(x)) -> White(x))\nTEXT:\tIf Dave is cold then Dave is smart.\nFOL:\tCold(Dave) -> Smart(Dave)\nTEXT:\tRound people are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll quiet, white people are round.\nFOL:\tall x. ((Quiet(x) & White(x)) -> Round(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tWhite people are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is quiet and white then they are furry.\nFOL:\tall x. ((Quiet(x) & White(x)) -> Furry(x))\nTEXT:\tAll cold, round people are white.\nFOL:\tall x. ((Cold(x) & Round(x)) -> White(x))\nTEXT:\tIf Dave is cold then Dave is smart.\nFOL:\tCold(Dave) -> Smart(Dave)\nTEXT:\tRound people are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll quiet, white people are round.\nFOL:\tall x. ((Quiet(x) & White(x)) -> Round(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tWhite people are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is quiet and white then they are furry.\nFOL:\tall x. (Quiet(x) & White(x) -> Furry(x))\nTEXT:\tAll cold, round people are white.\nFOL:\tall x. (Cold(x) & Round(x) -> White(x))\nTEXT:\tIf Dave is cold then Dave is smart.\nFOL:\tCold(Dave) -> Smart(Dave)\nTEXT:\tRound people are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll quiet, white people are round.\nFOL:\tall x. (Quiet(x) & White(x) -> Round(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tWhite people are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is quiet and white then they are furry.\nFOL:\tall x. ((Quiet(x) & White(x)) -> Furry(x))\nTEXT:\tAll cold, round people are white.\nFOL:\tall x. ((Cold(x) & Round(x)) -> White(x))\nTEXT:\tIf Dave is cold then Dave is smart.\nFOL:\tCold(Dave) -> Smart(Dave)\nTEXT:\tRound people are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll quiet, white people are round.\nFOL:\tall x. ((Quiet(x) & White(x)) -> Round(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tWhite people are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is quiet and white then they are furry.\nFOL:\tall x. (Quiet(x) & White(x) -> Furry(x))\nTEXT:\tAll cold, round people are white.\nFOL:\tall x. (Cold(x) & Round(x) -> White(x))\nTEXT:\tIf Dave is cold then Dave is smart.\nFOL:\tCold(Dave) -> Smart(Dave)\nTEXT:\tRound people are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tAll quiet, white people are round.\nFOL:\tall x. (Quiet(x) & White(x) -> Round(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tWhite people are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe cow is not big.\nFOL:\t\u00acBig(Cow)\nTEXT:\tThe cow is not green.\nFOL:\t\u00acGreen(Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe lion does not visit the squirrel.\nFOL:\t\u00acVisits(Lion, Squirrel)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe tiger is not green.\nFOL:\t\u00acGreen(Tiger)\nTEXT:\tThe tiger does not see the cow.\nFOL:\t\u00acSees(Tiger, Cow)\nTEXT:\tIf something sees the squirrel and the squirrel eats the cow then the cow is round.\nFOL:\tall x. ((Sees(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(Cow))\nTEXT:\tIf something is green then it eats the tiger.\nFOL:\tall x. (Green(x) -> Eats(x, Tiger))\nTEXT:\tIf the squirrel is round then the squirrel visits the cow.\nFOL:\t(Round(Squirrel) -> Visits(Squirrel, Cow))\nTEXT:\tIf something eats the cow then it sees the squirrel.\nFOL:\tall x. (Eats(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something sees the tiger and the tiger visits the squirrel then it is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Visits(Tiger, Squirrel)) -> Nice(x))\nTEXT:\tIf something is round then it eats the cow.\nFOL:\tall x. (Round(x) -> Eats(x, Cow))\nTEXT:\tIf something is kind then it eats the cow.\nFOL:\tall x. (Kind(x) -> Eats(x, Cow))\nTEXT:\tIf the tiger visits the cow then the cow sees the squirrel.\nFOL:\t(Visits(Tiger, Cow) -> Sees(Cow, Squirrel))\nTEXT:\tIf something sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow is not big.\nFOL:\t-Big(Cow)\nTEXT:\tThe cow is not green.\nFOL:\t-Green(Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe lion does not visit the squirrel.\nFOL:\t-Visits(Lion, Squirrel)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe tiger is not green.\nFOL:\t-Green(Tiger)\nTEXT:\tThe tiger does not see the cow.\nFOL:\t-Sees(Tiger, Cow)\nTEXT:\tIf something sees the squirrel and the squirrel eats the cow then the cow is round.\nFOL:\tall x. ((Sees(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(Cow))\nTEXT:\tIf something is green then it eats the tiger.\nFOL:\tall x. (Green(x) -> Eats(x, Tiger))\nTEXT:\tIf the squirrel is round then the squirrel visits the cow.\nFOL:\t(Round(Squirrel) -> Visits(Squirrel, Cow))\nTEXT:\tIf something eats the cow then it sees the squirrel.\nFOL:\tall x. (Eats(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something sees the tiger and the tiger visits the squirrel then it is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Visits(Tiger, Squirrel)) -> Nice(x))\nTEXT:\tIf something is round then it eats the cow.\nFOL:\tall x. (Round(x) -> Eats(x, Cow))\nTEXT:\tIf something is kind then it eats the cow.\nFOL:\tall x. (Kind(x) -> Eats(x, Cow))\nTEXT:\tIf the tiger visits the cow then the cow sees the squirrel.\nFOL:\t(Visits(Tiger, Cow) -> Sees(Cow, Squirrel))\nTEXT:\tIf something sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cow is not big.\nFOL:\t-Big(Cow)\nTEXT:\tThe cow is not green.\nFOL:\t-Green(Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe lion does not visit the squirrel.\nFOL:\t-Visits(Lion, Squirrel)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe tiger is not green.\nFOL:\t-Green(Tiger)\nTEXT:\tThe tiger does not see the cow.\nFOL:\t-Sees(Tiger, Cow)\nTEXT:\tIf something sees the squirrel and the squirrel eats the cow then the cow is round.\nFOL:\tall x. ((Sees(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(Cow))\nTEXT:\tIf something is green then it eats the tiger.\nFOL:\tall x. (Green(x) -> Eats(x, Tiger))\nTEXT:\tIf the squirrel is round then the squirrel visits the cow.\nFOL:\t(Round(Squirrel) -> Visits(Squirrel, Cow))\nTEXT:\tIf something eats the cow then it sees the squirrel.\nFOL:\tall x. (Eats(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something sees the tiger and the tiger visits the squirrel then it is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Visits(Tiger, Squirrel)) -> Nice(x))\nTEXT:\tIf something is round then it eats the cow.\nFOL:\tall x. (Round(x) -> Eats(x, Cow))\nTEXT:\tIf something is kind then it eats the cow.\nFOL:\tall x. (Kind(x) -> Eats(x, Cow))\nTEXT:\tIf the tiger visits the cow then the cow sees the squirrel.\nFOL:\t(Visits(Tiger, Cow) -> Sees(Cow, Squirrel))\nTEXT:\tIf something sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cow is not big.\nFOL:\t-Big(Cow)\nTEXT:\tThe cow is not green.\nFOL:\t-Green(Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe lion does not visit the squirrel.\nFOL:\t-Visits(Lion, Squirrel)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe tiger is not green.\nFOL:\t-Green(Tiger)\nTEXT:\tThe tiger does not see the cow.\nFOL:\t-Sees(Tiger, Cow)\nTEXT:\tIf something sees the squirrel and the squirrel eats the cow then the cow is round.\nFOL:\tall x. ((Sees(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(Cow))\nTEXT:\tIf something is green then it eats the tiger.\nFOL:\tall x. (Green(x) -> Eats(x, Tiger))\nTEXT:\tIf the squirrel is round then the squirrel visits the cow.\nFOL:\t(Round(Squirrel) -> Visits(Squirrel, Cow))\nTEXT:\tIf something eats the cow then it sees the squirrel.\nFOL:\tall x. (Eats(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something sees the tiger and the tiger visits the squirrel then it is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Visits(Tiger, Squirrel)) -> Nice(x))\nTEXT:\tIf something is round then it eats the cow.\nFOL:\tall x. (Round(x) -> Eats(x, Cow))\nTEXT:\tIf something is kind then it eats the cow.\nFOL:\tall x. (Kind(x) -> Eats(x, Cow))\nTEXT:\tIf the tiger visits the cow then the cow sees the squirrel.\nFOL:\t(Visits(Tiger, Cow) -> Sees(Cow, Squirrel))\nTEXT:\tIf something sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nANSWER:\tFalse", "TEXT:\tThe cow is not big.\nFOL:\t\u00acBig(Cow)\nTEXT:\tThe cow is not green.\nFOL:\t\u00acGreen(Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe lion does not visit the squirrel.\nFOL:\t\u00acVisits(Lion, Squirrel)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe tiger is not green.\nFOL:\t\u00acGreen(Tiger)\nTEXT:\tThe tiger does not see the cow.\nFOL:\t\u00acSees(Tiger, Cow)\nTEXT:\tIf something sees the squirrel and the squirrel eats the cow then the cow is round.\nFOL:\tall x. (Sees(x, Squirrel) & Eats(Squirrel, Cow) -> Round(Cow))\nTEXT:\tIf something is green then it eats the tiger.\nFOL:\tall x. (Green(x) -> Eats(x, Tiger))\nTEXT:\tIf the squirrel is round then the squirrel visits the cow.\nFOL:\tRound(Squirrel) -> Visits(Squirrel, Cow)\nTEXT:\tIf something eats the cow then it sees the squirrel.\nFOL:\tall x. (Eats(x, Cow) -> Sees(x, Squirrel))\nTEXT:\tIf something sees the tiger and the tiger visits the squirrel then it is nice.\nFOL:\tall x. (Sees(x, Tiger) & Visits(Tiger, Squirrel) -> Nice(x))\nTEXT:\tIf something is round then it eats the cow.\nFOL:\tall x. (Round(x) -> Eats(x, Cow))\nTEXT:\tIf something is kind then it eats the cow.\nFOL:\tall x. (Kind(x) -> Eats(x, Cow))\nTEXT:\tIf the tiger visits the cow then the cow sees the squirrel.\nFOL:\tVisits(Tiger, Cow) -> Sees(Cow, Squirrel)\nTEXT:\tIf something sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe cow sees the squirrel.\nFOL:\tSees(Cow, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Charlie is cold and Charlie is big then Charlie is young.\nFOL:\tall x. (Cold(x) & Big(x) -> Young(x))\nTEXT:\tAll cold, rough things are furry.\nFOL:\tall x. (Cold(x) & Rough(x) -> Furry(x))\nTEXT:\tAll smart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart, red things are rough.\nFOL:\tall x. (Smart(x) & Red(x) -> Rough(x))\nTEXT:\tAll furry things are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll young things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tRough, big things are furry.\nFOL:\tall x. (Rough(x) & Big(x) -> Furry(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Charlie is cold and Charlie is big then Charlie is young.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Young(x))\nTEXT:\tAll cold, rough things are furry.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Furry(x))\nTEXT:\tAll smart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart, red things are rough.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Rough(x))\nTEXT:\tAll furry things are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll young things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tRough, big things are furry.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Furry(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Charlie is cold and Charlie is big then Charlie is young.\nFOL:\tall x. (Cold(x) & Big(x) -> Young(x))\nTEXT:\tAll cold, rough things are furry.\nFOL:\tall x. (Cold(x) & Rough(x) -> Furry(x))\nTEXT:\tAll smart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart, red things are rough.\nFOL:\tall x. (Smart(x) & Red(x) -> Rough(x))\nTEXT:\tAll furry things are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll young things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tRough, big things are furry.\nFOL:\tall x. (Rough(x) & Big(x) -> Furry(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Charlie is cold and Charlie is big then Charlie is young.\nFOL:\t(Cold(Charlie) & Big(Charlie)) -> Young(Charlie)\nTEXT:\tAll cold, rough things are furry.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Furry(x))\nTEXT:\tAll smart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart, red things are rough.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Rough(x))\nTEXT:\tAll furry things are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll young things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tRough, big things are furry.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Furry(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Charlie is cold and Charlie is big then Charlie is young.\nFOL:\tall x. (Cold(x) & Big(x) -> Young(x))\nTEXT:\tAll cold, rough things are furry.\nFOL:\tall x. (Cold(x) & Rough(x) -> Furry(x))\nTEXT:\tAll smart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart, red things are rough.\nFOL:\tall x. (Smart(x) & Red(x) -> Rough(x))\nTEXT:\tAll furry things are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll young things are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tRough, big things are furry.\nFOL:\tall x. (Rough(x) & Big(x) -> Furry(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRed, blue things are rough.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf Anne is green then Anne is rough.\nFOL:\tGreen(Anne) -> Rough(Anne)\nTEXT:\tRough things are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tAll young, rough things are red.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Red(x))\nTEXT:\tAll rough, young things are kind.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Kind(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf something is kind then it is quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRed, blue things are rough.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf Anne is green then Anne is rough.\nFOL:\tGreen(Anne) -> Rough(Anne)\nTEXT:\tRough things are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tAll young, rough things are red.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Red(x))\nTEXT:\tAll rough, young things are kind.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Kind(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf something is kind then it is quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRed, blue things are rough.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf Anne is green then Anne is rough.\nFOL:\tGreen(Anne) -> Rough(Anne)\nTEXT:\tRough things are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tAll young, rough things are red.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Red(x))\nTEXT:\tAll rough, young things are kind.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Kind(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf something is kind then it is quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRed, blue things are rough.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf Anne is green then Anne is rough.\nFOL:\tGreen(Anne) -> Rough(Anne)\nTEXT:\tRough things are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tAll young, rough things are red.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Red(x))\nTEXT:\tAll rough, young things are kind.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Kind(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf something is kind then it is quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRed, blue things are rough.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf Anne is green then Anne is rough.\nFOL:\tGreen(Anne) -> Rough(Anne)\nTEXT:\tRough things are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tAll young, rough things are red.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Red(x))\nTEXT:\tAll rough, young things are kind.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Kind(x))\nTEXT:\tGreen things are red.\nFOL:\tall x. (Green(x) -> Red(x))\nTEXT:\tIf something is kind then it is quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear visits the mouse.\nFOL:\tVisits(Bear, Mouse)\nTEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tIf something needs the bear then it is green.\nFOL:\tall x. (Needs(x, Bear) -> Green(x))\nTEXT:\tIf the bear sees the lion then the lion is big.\nFOL:\t(Sees(Bear, Lion) -> Big(Lion))\nTEXT:\tIf something sees the mouse and the mouse sees the cow then the mouse needs the cow.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(Mouse, Cow)) -> Needs(Mouse, Cow))\nTEXT:\tIf something needs the cow then it is round.\nFOL:\tall x. (Needs(x, Cow) -> Round(x))\nTEXT:\tIf something is green then it sees the mouse.\nFOL:\tall x. (Green(x) -> Sees(x, Mouse))\nTEXT:\tIf something is green then it visits the bear.\nFOL:\tall x. (Green(x) -> Visits(x, Bear))\nTEXT:\tIf something sees the mouse and it sees the bear then the bear is green.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(x, Bear)) -> Green(Bear))\nTEXT:\tIf something sees the cow and it is round then the cow visits the lion.\nFOL:\tall x. ((Sees(x, Cow) & Round(x)) -> Visits(Cow, Lion))\nTEXT:\tIf something is blue and it visits the cow then the cow sees the bear.\nFOL:\tall x. ((Blue(x) & Visits(x, Cow)) -> Sees(Cow, Bear))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear visits the mouse.\nFOL:\tVisits(Bear, Mouse)\nTEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tIf something needs the bear then it is green.\nFOL:\tall x. (Needs(x, Bear) -> Green(x))\nTEXT:\tIf the bear sees the lion then the lion is big.\nFOL:\t(Sees(Bear, Lion) -> Big(Lion))\nTEXT:\tIf something sees the mouse and the mouse sees the cow then the mouse needs the cow.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(Mouse, Cow)) -> Needs(Mouse, Cow))\nTEXT:\tIf something needs the cow then it is round.\nFOL:\tall x. (Needs(x, Cow) -> Round(x))\nTEXT:\tIf something is green then it sees the mouse.\nFOL:\tall x. (Green(x) -> Sees(x, Mouse))\nTEXT:\tIf something is green then it visits the bear.\nFOL:\tall x. (Green(x) -> Visits(x, Bear))\nTEXT:\tIf something sees the mouse and it sees the bear then the bear is green.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(x, Bear)) -> Green(Bear))\nTEXT:\tIf something sees the cow and it is round then the cow visits the lion.\nFOL:\tall x. ((Sees(x, Cow) & Round(x)) -> Visits(Cow, Lion))\nTEXT:\tIf something is blue and it visits the cow then the cow sees the bear.\nFOL:\tall x. ((Blue(x) & Visits(x, Cow)) -> Sees(Cow, Bear))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tFalse", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear visits the mouse.\nFOL:\tVisits(Bear, Mouse)\nTEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tIf something needs the bear then it is green.\nFOL:\tall x. (Needs(x, Bear) -> Green(x))\nTEXT:\tIf the bear sees the lion then the lion is big.\nFOL:\t(Sees(Bear, Lion) -> Big(Lion))\nTEXT:\tIf something sees the mouse and the mouse sees the cow then the mouse needs the cow.\nFOL:\tall x. (Sees(x, Mouse) & Sees(Mouse, Cow) -> Needs(Mouse, Cow))\nTEXT:\tIf something needs the cow then it is round.\nFOL:\tall x. (Needs(x, Cow) -> Round(x))\nTEXT:\tIf something is green then it sees the mouse.\nFOL:\tall x. (Green(x) -> Sees(x, Mouse))\nTEXT:\tIf something is green then it visits the bear.\nFOL:\tall x. (Green(x) -> Visits(x, Bear))\nTEXT:\tIf something sees the mouse and it sees the bear then the bear is green.\nFOL:\tall x. (Sees(x, Mouse) & Sees(x, Bear) -> Green(Bear))\nTEXT:\tIf something sees the cow and it is round then the cow visits the lion.\nFOL:\tall x. (Sees(x, Cow) & Round(x) -> Visits(Cow, Lion))\nTEXT:\tIf something is blue and it visits the cow then the cow sees the bear.\nFOL:\tall x. (Blue(x) & Visits(x, Cow) -> Sees(Cow, Bear))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear visits the mouse.\nFOL:\tVisits(Bear, Mouse)\nTEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tIf something needs the bear then it is green.\nFOL:\tall x. (Needs(x, Bear) -> Green(x))\nTEXT:\tIf the bear sees the lion then the lion is big.\nFOL:\t(Sees(Bear, Lion) -> Big(Lion))\nTEXT:\tIf something sees the mouse and the mouse sees the cow then the mouse needs the cow.\nFOL:\tall x. (Sees(x, Mouse) & Sees(Mouse, Cow) -> Needs(Mouse, Cow))\nTEXT:\tIf something needs the cow then it is round.\nFOL:\tall x. (Needs(x, Cow) -> Round(x))\nTEXT:\tIf something is green then it sees the mouse.\nFOL:\tall x. (Green(x) -> Sees(x, Mouse))\nTEXT:\tIf something is green then it visits the bear.\nFOL:\tall x. (Green(x) -> Visits(x, Bear))\nTEXT:\tIf something sees the mouse and it sees the bear then the bear is green.\nFOL:\tall x. (Sees(x, Mouse) & Sees(x, Bear) -> Green(Bear))\nTEXT:\tIf something sees the cow and it is round then the cow visits the lion.\nFOL:\tall x. (Sees(x, Cow) & Round(x) -> Visits(Cow, Lion))\nTEXT:\tIf something is blue and it visits the cow then the cow sees the bear.\nFOL:\tall x. (Blue(x) & Visits(x, Cow) -> Sees(Cow, Bear))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear visits the mouse.\nFOL:\tVisits(Bear, Mouse)\nTEXT:\tThe cow sees the lion.\nFOL:\tSees(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion visits the bear.\nFOL:\tVisits(Lion, Bear)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tIf something needs the bear then it is green.\nFOL:\tall x. (Needs(x, Bear) -> Green(x))\nTEXT:\tIf the bear sees the lion then the lion is big.\nFOL:\t(Sees(Bear, Lion) -> Big(Lion))\nTEXT:\tIf something sees the mouse and the mouse sees the cow then the mouse needs the cow.\nFOL:\tall x. (Sees(x, Mouse) & Sees(Mouse, Cow) -> Needs(Mouse, Cow))\nTEXT:\tIf something needs the cow then it is round.\nFOL:\tall x. (Needs(x, Cow) -> Round(x))\nTEXT:\tIf something is green then it sees the mouse.\nFOL:\tall x. (Green(x) -> Sees(x, Mouse))\nTEXT:\tIf something is green then it visits the bear.\nFOL:\tall x. (Green(x) -> Visits(x, Bear))\nTEXT:\tIf something sees the mouse and it sees the bear then the bear is green.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(x, Bear)) -> Green(Bear))\nTEXT:\tIf something sees the cow and it is round then the cow visits the lion.\nFOL:\tall x. ((Sees(x, Cow) & Round(x)) -> Visits(Cow, Lion))\nTEXT:\tIf something is blue and it visits the cow then the cow sees the bear.\nFOL:\tall x. ((Blue(x) & Visits(x, Cow)) -> Sees(Cow, Bear))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tTrue\n"], ["TEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf something needs the lion then it needs the tiger.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Tiger))\nTEXT:\tIf something sees the lion and it needs the tiger then the tiger sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Needs(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something is green then it chases the tiger.\nFOL:\tall x. (Green(x) -> Chases(x, Tiger))\nTEXT:\tIf something sees the dog and the dog sees the tiger then the tiger is rough.\nFOL:\tall x. ((Sees(x, Dog) & Sees(Dog, Tiger)) -> Rough(Tiger))\nTEXT:\tIf something is rough then it needs the lion.\nFOL:\tall x. (Rough(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the dog and it needs the lion then it chases the rabbit.\nFOL:\tall x. ((Needs(x, Dog) & Needs(x, Lion)) -> Chases(x, Rabbit))\nTEXT:\tIf something sees the tiger then it needs the dog.\nFOL:\tall x. (Sees(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf something needs the tiger then it sees the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf something needs the lion then it needs the tiger.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Tiger))\nTEXT:\tIf something sees the lion and it needs the tiger then the tiger sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Needs(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something is green then it chases the tiger.\nFOL:\tall x. (Green(x) -> Chases(x, Tiger))\nTEXT:\tIf something sees the dog and the dog sees the tiger then the tiger is rough.\nFOL:\tall x. ((Sees(x, Dog) & Sees(Dog, Tiger)) -> Rough(Tiger))\nTEXT:\tIf something is rough then it needs the lion.\nFOL:\tall x. (Rough(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the dog and it needs the lion then it chases the rabbit.\nFOL:\tall x. ((Needs(x, Dog) & Needs(x, Lion)) -> Chases(x, Rabbit))\nTEXT:\tIf something sees the tiger then it needs the dog.\nFOL:\tall x. (Sees(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf something needs the tiger then it sees the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf something needs the lion then it needs the tiger.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Tiger))\nTEXT:\tIf something sees the lion and it needs the tiger then the tiger sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Needs(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something is green then it chases the tiger.\nFOL:\tall x. (Green(x) -> Chases(x, Tiger))\nTEXT:\tIf something sees the dog and the dog sees the tiger then the tiger is rough.\nFOL:\tall x. ((Sees(x, Dog) & Sees(Dog, Tiger)) -> Rough(Tiger))\nTEXT:\tIf something is rough then it needs the lion.\nFOL:\tall x. (Rough(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the dog and it needs the lion then it chases the rabbit.\nFOL:\tall x. ((Needs(x, Dog) & Needs(x, Lion)) -> Chases(x, Rabbit))\nTEXT:\tIf something sees the tiger then it needs the dog.\nFOL:\tall x. (Sees(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf something needs the tiger then it sees the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf something needs the lion then it needs the tiger.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Tiger))\nTEXT:\tIf something sees the lion and it needs the tiger then the tiger sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Needs(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something is green then it chases the tiger.\nFOL:\tall x. (Green(x) -> Chases(x, Tiger))\nTEXT:\tIf something sees the dog and the dog sees the tiger then the tiger is rough.\nFOL:\tall x. ((Sees(x, Dog) & Sees(Dog, Tiger)) -> Rough(Tiger))\nTEXT:\tIf something is rough then it needs the lion.\nFOL:\tall x. (Rough(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the dog and it needs the lion then it chases the rabbit.\nFOL:\tall x. ((Needs(x, Dog) & Needs(x, Lion)) -> Chases(x, Rabbit))\nTEXT:\tIf something sees the tiger then it needs the dog.\nFOL:\tall x. (Sees(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf something needs the tiger then it sees the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf something needs the lion then it needs the tiger.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Tiger))\nTEXT:\tIf something sees the lion and it needs the tiger then the tiger sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Needs(x, Tiger)) -> Sees(Tiger, Dog))\nTEXT:\tIf something is green then it chases the tiger.\nFOL:\tall x. (Green(x) -> Chases(x, Tiger))\nTEXT:\tIf something sees the dog and the dog sees the tiger then the tiger is rough.\nFOL:\tall x. ((Sees(x, Dog) & Sees(Dog, Tiger)) -> Rough(Tiger))\nTEXT:\tIf something is rough then it needs the lion.\nFOL:\tall x. (Rough(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the dog and it needs the lion then it chases the rabbit.\nFOL:\tall x. ((Needs(x, Dog) & Needs(x, Lion)) -> Chases(x, Rabbit))\nTEXT:\tIf something sees the tiger then it needs the dog.\nFOL:\tall x. (Sees(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf something needs the tiger then it sees the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(x, Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear does not like the lion.\nFOL:\t-Likes(Bear, Lion)\nTEXT:\tThe bear does not need the lion.\nFOL:\t-Needs(Bear, Lion)\nTEXT:\tThe lion chases the bald eagle.\nFOL:\tChases(Lion, BaldEagle)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tIf someone likes the bear then the bear is green.\nFOL:\tall x. (Likes(x, Bear) -> Green(Bear))\nTEXT:\tIf someone chases the lion and the lion likes the tiger then the lion likes the bald eagle.\nFOL:\tall x. (Chases(x, Lion) & Likes(Lion, Tiger) -> Likes(Lion, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf someone is green then they like the bear.\nFOL:\tall x. (Green(x) -> Likes(x, Bear))\nTEXT:\tIf the tiger needs the lion then the lion likes the tiger.\nFOL:\t(Needs(Tiger, Lion) -> Likes(Lion, Tiger))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Likes(x, Tiger))\nTEXT:\tIf the tiger likes the bear then the tiger chases the bald eagle.\nFOL:\t(Likes(Tiger, Bear) -> Chases(Tiger, BaldEagle))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChase(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChase(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChase(Bear, BaldEagle)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear does not like the lion.\nFOL:\t- Likes(Bear, Lion)\nTEXT:\tThe bear does not need the lion.\nFOL:\t- Need(Bear, Lion)\nTEXT:\tThe lion chases the bald eagle.\nFOL:\tChase(Lion, BaldEagle)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeed(Tiger, Lion)\nTEXT:\tIf someone likes the bear then the bear is green.\nFOL:\tall x. (Likes(x, Bear) -> Green(Bear))\nTEXT:\tIf someone chases the lion and the lion likes the tiger then the lion likes the bald eagle.\nFOL:\tall x. (Chase(x, Lion) & Likes(Lion, Tiger) -> Likes(Lion, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf someone is green then they like the bear.\nFOL:\tall x. (Green(x) -> Likes(x, Bear))\nTEXT:\tIf the tiger needs the lion then the lion likes the tiger.\nFOL:\tNeed(Tiger, Lion) -> Likes(Lion, Tiger)\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Likes(x, Tiger))\nTEXT:\tIf the tiger likes the bear then the tiger chases the bald eagle.\nFOL:\tLikes(Tiger, Bear) -> Chase(Tiger, BaldEagle)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear does not like the lion.\nFOL:\t-Likes(Bear, Lion)\nTEXT:\tThe bear does not need the lion.\nFOL:\t-Needs(Bear, Lion)\nTEXT:\tThe lion chases the bald eagle.\nFOL:\tChases(Lion, BaldEagle)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tIf someone likes the bear then the bear is green.\nFOL:\tall x. (Likes(x, Bear) -> Green(Bear))\nTEXT:\tIf someone chases the lion and the lion likes the tiger then the lion likes the bald eagle.\nFOL:\tall x. ((Chases(x, Lion) & Likes(Lion, Tiger)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf someone is green then they like the bear.\nFOL:\tall x. (Green(x) -> Likes(x, Bear))\nTEXT:\tIf the tiger needs the lion then the lion likes the tiger.\nFOL:\t(Needs(Tiger, Lion) -> Likes(Lion, Tiger))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Likes(x, Tiger))\nTEXT:\tIf the tiger likes the bear then the tiger chases the bald eagle.\nFOL:\t(Likes(Tiger, Bear) -> Chases(Tiger, BaldEagle))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChase(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChase(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLike(BaldEagle, Tiger)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChase(Bear, BaldEagle)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear does not like the lion.\nFOL:\t- Like(Bear, Lion)\nTEXT:\tThe bear does not need the lion.\nFOL:\t- Need(Bear, Lion)\nTEXT:\tThe lion chases the bald eagle.\nFOL:\tChase(Lion, BaldEagle)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeed(Tiger, Lion)\nTEXT:\tIf someone likes the bear then the bear is green.\nFOL:\tall x. (Like(x, Bear) -> Green(Bear))\nTEXT:\tIf someone chases the lion and the lion likes the tiger then the lion likes the bald eagle.\nFOL:\tall x. ((Chase(x, Lion) & Like(Lion, Tiger)) -> Like(Lion, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Like(x, BaldEagle) -> Like(x, Bear))\nTEXT:\tIf someone is green then they like the bear.\nFOL:\tall x. (Green(x) -> Like(x, Bear))\nTEXT:\tIf the tiger needs the lion then the lion likes the tiger.\nFOL:\t(Need(Tiger, Lion) -> Like(Lion, Tiger))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Like(x, Tiger))\nTEXT:\tIf the tiger likes the bear then the tiger chases the bald eagle.\nFOL:\t(Like(Tiger, Bear) -> Chase(Tiger, BaldEagle))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear does not like the lion.\nFOL:\t- Likes(Bear, Lion)\nTEXT:\tThe bear does not need the lion.\nFOL:\t- Needs(Bear, Lion)\nTEXT:\tThe lion chases the bald eagle.\nFOL:\tChases(Lion, BaldEagle)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tIf someone likes the bear then the bear is green.\nFOL:\tall x. (Likes(x, Bear) -> Green(Bear))\nTEXT:\tIf someone chases the lion and the lion likes the tiger then the lion likes the bald eagle.\nFOL:\tall x. ((Chases(x, Lion) & Likes(Lion, Tiger)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf someone is green then they like the bear.\nFOL:\tall x. (Green(x) -> Likes(x, Bear))\nTEXT:\tIf the tiger needs the lion then the lion likes the tiger.\nFOL:\tall x. ((Needs(x, Lion) & Tiger(x)) -> Likes(Lion, Tiger))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Likes(x, Tiger))\nTEXT:\tIf the tiger likes the bear then the tiger chases the bald eagle.\nFOL:\tall x. ((Likes(x, Bear) & Tiger(x)) -> Chases(x, BaldEagle))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the lion.\nFOL:\tEats(Bear, Lion)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the lion.\nFOL:\tChases(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it eats the cow.\nFOL:\tall x. (Likes(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it likes the lion.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Lion))\nTEXT:\tIf something is cold then it likes the lion.\nFOL:\tall x. (Cold(x) -> Likes(x, Lion))\nTEXT:\tIf the bear is cold and the bear eats the lion then the bear chases the cow.\nFOL:\t(Cold(Bear) & Eats(Bear, Lion) -> Chases(Bear, Cow))\nTEXT:\tIf something is round and not big then it does not eat the bald eagle.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Eats(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the bear and the bear chases the bald eagle then the bald eagle chases the bear.\nFOL:\t((Likes(BaldEagle, Bear) & Chases(Bear, BaldEagle)) -> Chases(BaldEagle, Bear))\nTEXT:\tIf something is rough and it chases the cow then the cow is rough.\nFOL:\tall x. ((Rough(x) & Chases(x, Cow)) -> Rough(Cow))\nTEXT:\tIf something eats the cow then it chases the cow.\nFOL:\tall x. (Eats(x, Cow) -> Chases(x, Cow))\nTEXT:\tThe cow does not chase the cow.\nFOL:\t-Chases(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the lion.\nFOL:\tEats(Bear, Lion)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the lion.\nFOL:\tChases(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it eats the cow.\nFOL:\tall x. (Likes(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it likes the lion.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Lion))\nTEXT:\tIf something is cold then it likes the lion.\nFOL:\tall x. (Cold(x) -> Likes(x, Lion))\nTEXT:\tIf the bear is cold and the bear eats the lion then the bear chases the cow.\nFOL:\t(Cold(Bear) & Eats(Bear, Lion)) -> Chases(Bear, Cow)\nTEXT:\tIf something is round and not big then it does not eat the bald eagle.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Eats(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the bear and the bear chases the bald eagle then the bald eagle chases the bear.\nFOL:\t(Likes(BaldEagle, Bear) & Chases(Bear, BaldEagle)) -> Chases(BaldEagle, Bear)\nTEXT:\tIf something is rough and it chases the cow then the cow is rough.\nFOL:\tall x. ((Rough(x) & Chases(x, Cow)) -> Rough(Cow))\nTEXT:\tIf something eats the cow then it chases the cow.\nFOL:\tall x. (Eats(x, Cow) -> Chases(x, Cow))\nTEXT:\tThe cow does not chase the cow.\nFOL:\t-Chases(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the lion.\nFOL:\tEats(Bear, Lion)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the lion.\nFOL:\tChases(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it eats the cow.\nFOL:\tall x. (Likes(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it likes the lion.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Lion))\nTEXT:\tIf something is cold then it likes the lion.\nFOL:\tall x. (Cold(x) -> Likes(x, Lion))\nTEXT:\tIf the bear is cold and the bear eats the lion then the bear chases the cow.\nFOL:\t(Cold(Bear) & Eats(Bear, Lion)) -> Chases(Bear, Cow)\nTEXT:\tIf something is round and not big then it does not eat the bald eagle.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Eats(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the bear and the bear chases the bald eagle then the bald eagle chases the bear.\nFOL:\t(Likes(BaldEagle, Bear) & Chases(Bear, BaldEagle)) -> Chases(BaldEagle, Bear)\nTEXT:\tIf something is rough and it chases the cow then the cow is rough.\nFOL:\tall x. ((Rough(x) & Chases(x, Cow)) -> Rough(Cow))\nTEXT:\tIf something eats the cow then it chases the cow.\nFOL:\tall x. (Eats(x, Cow) -> Chases(x, Cow))\nTEXT:\tThe cow does not chase the cow.\nFOL:\t-Chases(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the lion.\nFOL:\tEats(Bear, Lion)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow chases the lion.\nFOL:\tChases(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it eats the cow.\nFOL:\tall x. (Likes(x, Cow) -> Eats(x, Cow))\nTEXT:\tIf something likes the cow then it likes the lion.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Lion))\nTEXT:\tIf something is cold then it likes the lion.\nFOL:\tall x. (Cold(x) -> Likes(x, Lion))\nTEXT:\tIf the bear is cold and the bear eats the lion then the bear chases the cow.\nFOL:\t(Cold(Bear) & Eats(Bear, Lion) -> Chases(Bear, Cow))\nTEXT:\tIf something is round and not big then it does not eat the bald eagle.\nFOL:\tall x. (Round(x) & -Big(x) -> -Eats(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the bear and the bear chases the bald eagle then the bald eagle chases the bear.\nFOL:\t(Likes(BaldEagle, Bear) & Chases(Bear, BaldEagle) -> Chases(BaldEagle, Bear))\nTEXT:\tIf something is rough and it chases the cow then the cow is rough.\nFOL:\tall x. (Rough(x) & Chases(x, Cow) -> Rough(Cow))\nTEXT:\tIf something eats the cow then it chases the cow.\nFOL:\tall x. (Eats(x, Cow) -> Chases(x, Cow))\nTEXT:\tThe cow does not chase the cow.\nFOL:\t-Chases(Cow, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChase(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLike(BaldEagle, Lion)\nTEXT:\tThe bear chases the lion.\nFOL:\tChase(Bear, Lion)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t- Eat(Bear, BaldEagle)\nTEXT:\tThe bear eats the lion.\nFOL:\tEat(Bear, Lion)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChase(Cow, BaldEagle)\nTEXT:\tThe cow chases the lion.\nFOL:\tChase(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLike(Cow, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLike(Lion, BaldEagle)\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eat(x, Cow))\nTEXT:\tIf something likes the cow then it eats the cow.\nFOL:\tall x. (Like(x, Cow) -> Eat(x, Cow))\nTEXT:\tIf something likes the cow then it likes the lion.\nFOL:\tall x. (Like(x, Cow) -> Like(x, Lion))\nTEXT:\tIf something is cold then it likes the lion.\nFOL:\tall x. (Cold(x) -> Like(x, Lion))\nTEXT:\tIf the bear is cold and the bear eats the lion then the bear chases the cow.\nFOL:\t(Cold(Bear) & Eat(Bear, Lion)) -> Chase(Bear, Cow)\nTEXT:\tIf something is round and not big then it does not eat the bald eagle.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Eat(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the bear and the bear chases the bald eagle then the bald eagle chases the bear.\nFOL:\t((Like(BaldEagle, Bear) & Chase(Bear, BaldEagle)) -> Chase(BaldEagle, Bear))\nTEXT:\tIf something is rough and it chases the cow then the cow is rough.\nFOL:\tall x. ((Rough(x) & Chase(x, Cow)) -> Rough(Cow))\nTEXT:\tIf something eats the cow then it chases the cow.\nFOL:\tall x. (Eat(x, Cow) -> Chase(x, Cow))\nTEXT:\tThe cow does not chase the cow.\nFOL:\t- Chase(Cow, Cow)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tIf something is red and it eats the dog then the dog eats the tiger.\nFOL:\tall x. ((Red(x) & Eats(x, Dog)) -> Eats(Dog, Tiger))\nTEXT:\tIf something visits the tiger then the tiger eats the bear.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Bear))\nTEXT:\tIf something eats the dog then the dog is young.\nFOL:\tall x. (Eats(x, Dog) -> Young(Dog))\nTEXT:\tIf something is green and it visits the bald eagle then it visits the dog.\nFOL:\tall x. ((Green(x) & Visits(x, BaldEagle)) -> Visits(x, Dog))\nTEXT:\tIf something eats the tiger then it eats the bear.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(x, Bear))\nTEXT:\tIf something is rough then it eats the bear.\nFOL:\tall x. (Rough(x) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then it is red.\nFOL:\tall x. (Eats(x, Bear) -> Red(x))\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tIsGreen(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is big.\nFOL:\tIsBig(Bear)\nTEXT:\tThe bear is green.\nFOL:\tIsGreen(Bear)\nTEXT:\tThe bear is young.\nFOL:\tIsYoung(Bear)\nTEXT:\tThe dog is big.\nFOL:\tIsBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tIsYoung(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tIf something is red and it eats the dog then the dog eats the tiger.\nFOL:\tall x. ((IsRed(x) & Eats(x, Dog)) -> Eats(Dog, Tiger))\nTEXT:\tIf something visits the tiger then the tiger eats the bear.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Bear))\nTEXT:\tIf something eats the dog then the dog is young.\nFOL:\tall x. (Eats(x, Dog) -> IsYoung(Dog))\nTEXT:\tIf something is green and it visits the bald eagle then it visits the dog.\nFOL:\tall x. ((IsGreen(x) & Visits(x, BaldEagle)) -> Visits(x, Dog))\nTEXT:\tIf something eats the tiger then it eats the bear.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(x, Bear))\nTEXT:\tIf something is rough then it eats the bear.\nFOL:\tall x. (IsRough(x) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then it is red.\nFOL:\tall x. (Eats(x, Bear) -> IsRed(x))\nTEXT:\tThe dog is red.\nFOL:\tIsRed(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tIf something is red and it eats the dog then the dog eats the tiger.\nFOL:\tall x. (Red(x) & Eats(x, Dog) -> Eats(Dog, Tiger))\nTEXT:\tIf something visits the tiger then the tiger eats the bear.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Bear))\nTEXT:\tIf something eats the dog then the dog is young.\nFOL:\tall x. (Eats(x, Dog) -> Young(Dog))\nTEXT:\tIf something is green and it visits the bald eagle then it visits the dog.\nFOL:\tall x. (Green(x) & Visits(x, BaldEagle) -> Visits(x, Dog))\nTEXT:\tIf something eats the tiger then it eats the bear.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(x, Bear))\nTEXT:\tIf something is rough then it eats the bear.\nFOL:\tall x. (Rough(x) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then it is red.\nFOL:\tall x. (Eats(x, Bear) -> Red(x))\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tIf something is red and it eats the dog then the dog eats the tiger.\nFOL:\tall x. ((Red(x) & Eats(x, Dog)) -> Eats(Dog, Tiger))\nTEXT:\tIf something visits the tiger then the tiger eats the bear.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Bear))\nTEXT:\tIf something eats the dog then the dog is young.\nFOL:\tall x. (Eats(x, Dog) -> Young(Dog))\nTEXT:\tIf something is green and it visits the bald eagle then it visits the dog.\nFOL:\tall x. ((Green(x) & Visits(x, BaldEagle)) -> Visits(x, Dog))\nTEXT:\tIf something eats the tiger then it eats the bear.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(x, Bear))\nTEXT:\tIf something is rough then it eats the bear.\nFOL:\tall x. (Rough(x) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then it is red.\nFOL:\tall x. (Eats(x, Bear) -> Red(x))\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear chases the dog.\nFOL:\tChases(Bear, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe tiger chases the bear.\nFOL:\tChases(Tiger, Bear)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tIf something is red and it eats the dog then the dog eats the tiger.\nFOL:\tall x. ((Red(x) & Eats(x, Dog)) -> Eats(Dog, Tiger))\nTEXT:\tIf something visits the tiger then the tiger eats the bear.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Bear))\nTEXT:\tIf something eats the dog then the dog is young.\nFOL:\tall x. (Eats(x, Dog) -> Young(Dog))\nTEXT:\tIf something is green and it visits the bald eagle then it visits the dog.\nFOL:\tall x. ((Green(x) & Visits(x, BaldEagle)) -> Visits(x, Dog))\nTEXT:\tIf something eats the tiger then it eats the bear.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(x, Bear))\nTEXT:\tIf something is rough then it eats the bear.\nFOL:\tall x. (Rough(x) -> Eats(x, Bear))\nTEXT:\tIf something eats the bear then it is red.\nFOL:\tall x. (Eats(x, Bear) -> Red(x))\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tNice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll round, cold people are nice.\nFOL:\tall x. (Round(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is furry and round then they are cold.\nFOL:\tall x. (Furry(x) & Round(x) -> Cold(x))\nTEXT:\tAll cold, green people are quiet.\nFOL:\tall x. (Cold(x) & Green(x) -> Quiet(x))\nTEXT:\tIf Charlie is cold then Charlie is nice.\nFOL:\tCold(Charlie) -> Nice(Charlie)\nTEXT:\tIf someone is furry and white then they are green.\nFOL:\tall x. (Furry(x) & White(x) -> Green(x))\nTEXT:\tIf Anne is white and Anne is quiet then Anne is green.\nFOL:\tWhite(Anne) & Quiet(Anne) -> Green(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tNice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll round, cold people are nice.\nFOL:\tall x. (Round(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is furry and round then they are cold.\nFOL:\tall x. (Furry(x) & Round(x) -> Cold(x))\nTEXT:\tAll cold, green people are quiet.\nFOL:\tall x. (Cold(x) & Green(x) -> Quiet(x))\nTEXT:\tIf Charlie is cold then Charlie is nice.\nFOL:\tCold(Charlie) -> Nice(Charlie)\nTEXT:\tIf someone is furry and white then they are green.\nFOL:\tall x. (Furry(x) & White(x) -> Green(x))\nTEXT:\tIf Anne is white and Anne is quiet then Anne is green.\nFOL:\tWhite(Anne) & Quiet(Anne) -> Green(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tNice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll round, cold people are nice.\nFOL:\tall x. (Round(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is furry and round then they are cold.\nFOL:\tall x. (Furry(x) & Round(x) -> Cold(x))\nTEXT:\tAll cold, green people are quiet.\nFOL:\tall x. (Cold(x) & Green(x) -> Quiet(x))\nTEXT:\tIf Charlie is cold then Charlie is nice.\nFOL:\tCold(Charlie) -> Nice(Charlie)\nTEXT:\tIf someone is furry and white then they are green.\nFOL:\tall x. (Furry(x) & White(x) -> Green(x))\nTEXT:\tIf Anne is white and Anne is quiet then Anne is green.\nFOL:\tWhite(Anne) & Quiet(Anne) -> Green(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tNice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll round, cold people are nice.\nFOL:\tall x. (Round(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is furry and round then they are cold.\nFOL:\tall x. (Furry(x) & Round(x) -> Cold(x))\nTEXT:\tAll cold, green people are quiet.\nFOL:\tall x. (Cold(x) & Green(x) -> Quiet(x))\nTEXT:\tIf Charlie is cold then Charlie is nice.\nFOL:\tCold(Charlie) -> Nice(Charlie)\nTEXT:\tIf someone is furry and white then they are green.\nFOL:\tall x. (Furry(x) & White(x) -> Green(x))\nTEXT:\tIf Anne is white and Anne is quiet then Anne is green.\nFOL:\tWhite(Anne) & Quiet(Anne) -> Green(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tNice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll round, cold people are nice.\nFOL:\tall x. (Round(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is furry and round then they are cold.\nFOL:\tall x. (Furry(x) & Round(x) -> Cold(x))\nTEXT:\tAll cold, green people are quiet.\nFOL:\tall x. (Cold(x) & Green(x) -> Quiet(x))\nTEXT:\tIf Charlie is cold then Charlie is nice.\nFOL:\t(Cold(Charlie) -> Nice(Charlie))\nTEXT:\tIf someone is furry and white then they are green.\nFOL:\tall x. (Furry(x) & White(x) -> Green(x))\nTEXT:\tIf Anne is white and Anne is quiet then Anne is green.\nFOL:\t(White(Anne) & Quiet(Anne) -> Green(Anne))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle eats the bear.\nFOL:\tEats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone needs the mouse then they are kind.\nFOL:\tall x. (Needs(x, Mouse) -> Kind(x))\nTEXT:\tIf the dog is kind and the dog needs the bear then the dog is blue.\nFOL:\t(Kind(Dog) & Needs(Dog, Bear) -> Blue(Dog))\nTEXT:\tIf someone is blue and kind then they need the bald eagle.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Needs(x, BaldEagle))\nTEXT:\tIf someone chases the mouse and they need the mouse then they need the bear.\nFOL:\tall x. ((Chases(x, Mouse) & Needs(x, Mouse)) -> Needs(x, Bear))\nTEXT:\tIf someone is kind and they need the dog then they eat the bald eagle.\nFOL:\tall x. ((Kind(x) & Needs(x, Dog)) -> Eats(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear eats the mouse then the mouse eats the bald eagle.\nFOL:\tall x. ((Chases(x, Bear) & Eats(Bear, Mouse)) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf someone needs the mouse and they are kind then they chase the mouse.\nFOL:\tall x. ((Needs(x, Mouse) & Kind(x)) -> Chases(x, Mouse))\nTEXT:\tIf someone is kind then they chase the dog.\nFOL:\tall x. (Kind(x) -> Chases(x, Dog))\nTEXT:\tIf the bear chases the mouse and the bear is rough then the mouse is young.\nFOL:\t(Chases(Bear, Mouse) & Rough(Bear) -> Young(Mouse))\nTEXT:\tThe dog chases the dog.\nFOL:\tChases(Dog, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the bear.\nFOL:\tEats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone needs the mouse then they are kind.\nFOL:\tall x. (Needs(x, Mouse) -> Kind(x))\nTEXT:\tIf the dog is kind and the dog needs the bear then the dog is blue.\nFOL:\t(Kind(Dog) & Needs(Dog, Bear)) -> Blue(Dog)\nTEXT:\tIf someone is blue and kind then they need the bald eagle.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Needs(x, BaldEagle))\nTEXT:\tIf someone chases the mouse and they need the mouse then they need the bear.\nFOL:\tall x. ((Chases(x, Mouse) & Needs(x, Mouse)) -> Needs(x, Bear))\nTEXT:\tIf someone is kind and they need the dog then they eat the bald eagle.\nFOL:\tall x. ((Kind(x) & Needs(x, Dog)) -> Eats(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear eats the mouse then the mouse eats the bald eagle.\nFOL:\tall x. ((Chases(x, Bear) & Eats(Bear, Mouse)) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf someone needs the mouse and they are kind then they chase the mouse.\nFOL:\tall x. ((Needs(x, Mouse) & Kind(x)) -> Chases(x, Mouse))\nTEXT:\tIf someone is kind then they chase the dog.\nFOL:\tall x. (Kind(x) -> Chases(x, Dog))\nTEXT:\tIf the bear chases the mouse and the bear is rough then the mouse is young.\nFOL:\t(Chases(Bear, Mouse) & Rough(Bear)) -> Young(Mouse)\nTEXT:\tThe dog chases the dog.\nFOL:\tChases(Dog, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the bear.\nFOL:\tEats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone needs the mouse then they are kind.\nFOL:\tall x. (Needs(x, Mouse) -> Kind(x))\nTEXT:\tIf the dog is kind and the dog needs the bear then the dog is blue.\nFOL:\t(Kind(Dog) & Needs(Dog, Bear)) -> Blue(Dog)\nTEXT:\tIf someone is blue and kind then they need the bald eagle.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Needs(x, BaldEagle))\nTEXT:\tIf someone chases the mouse and they need the mouse then they need the bear.\nFOL:\tall x. ((Chases(x, Mouse) & Needs(x, Mouse)) -> Needs(x, Bear))\nTEXT:\tIf someone is kind and they need the dog then they eat the bald eagle.\nFOL:\tall x. ((Kind(x) & Needs(x, Dog)) -> Eats(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear eats the mouse then the mouse eats the bald eagle.\nFOL:\tall x. ((Chases(x, Bear) & Eats(Bear, Mouse)) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf someone needs the mouse and they are kind then they chase the mouse.\nFOL:\tall x. ((Needs(x, Mouse) & Kind(x)) -> Chases(x, Mouse))\nTEXT:\tIf someone is kind then they chase the dog.\nFOL:\tall x. (Kind(x) -> Chases(x, Dog))\nTEXT:\tIf the bear chases the mouse and the bear is rough then the mouse is young.\nFOL:\t(Chases(Bear, Mouse) & Rough(Bear)) -> Young(Mouse)\nTEXT:\tThe dog chases the dog.\nFOL:\tChases(Dog, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the bear.\nFOL:\tEats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone needs the mouse then they are kind.\nFOL:\tall x. (Needs(x, Mouse) -> Kind(x))\nTEXT:\tIf the dog is kind and the dog needs the bear then the dog is blue.\nFOL:\t(Kind(Dog) & Needs(Dog, Bear)) -> Blue(Dog)\nTEXT:\tIf someone is blue and kind then they need the bald eagle.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Needs(x, BaldEagle))\nTEXT:\tIf someone chases the mouse and they need the mouse then they need the bear.\nFOL:\tall x. ((Chases(x, Mouse) & Needs(x, Mouse)) -> Needs(x, Bear))\nTEXT:\tIf someone is kind and they need the dog then they eat the bald eagle.\nFOL:\tall x. ((Kind(x) & Needs(x, Dog)) -> Eats(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear eats the mouse then the mouse eats the bald eagle.\nFOL:\tall x. (Chases(x, Bear) & Eats(Bear, Mouse) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf someone needs the mouse and they are kind then they chase the mouse.\nFOL:\tall x. ((Needs(x, Mouse) & Kind(x)) -> Chases(x, Mouse))\nTEXT:\tIf someone is kind then they chase the dog.\nFOL:\tall x. (Kind(x) -> Chases(x, Dog))\nTEXT:\tIf the bear chases the mouse and the bear is rough then the mouse is young.\nFOL:\t(Chases(Bear, Mouse) & Rough(Bear)) -> Young(Mouse)\nTEXT:\tThe dog chases the dog.\nFOL:\tChases(Dog, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the bear.\nFOL:\tEats(BaldEagle, Bear)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone needs the mouse then they are kind.\nFOL:\tall x. (Needs(x, Mouse) -> Kind(x))\nTEXT:\tIf the dog is kind and the dog needs the bear then the dog is blue.\nFOL:\t(Kind(Dog) & Needs(Dog, Bear)) -> Blue(Dog)\nTEXT:\tIf someone is blue and kind then they need the bald eagle.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Needs(x, BaldEagle))\nTEXT:\tIf someone chases the mouse and they need the mouse then they need the bear.\nFOL:\tall x. ((Chases(x, Mouse) & Needs(x, Mouse)) -> Needs(x, Bear))\nTEXT:\tIf someone is kind and they need the dog then they eat the bald eagle.\nFOL:\tall x. ((Kind(x) & Needs(x, Dog)) -> Eats(x, BaldEagle))\nTEXT:\tIf someone chases the bear and the bear eats the mouse then the mouse eats the bald eagle.\nFOL:\tall x. ((Chases(x, Bear) & Eats(Bear, Mouse)) -> Eats(Mouse, BaldEagle))\nTEXT:\tIf someone needs the mouse and they are kind then they chase the mouse.\nFOL:\tall x. ((Needs(x, Mouse) & Kind(x)) -> Chases(x, Mouse))\nTEXT:\tIf someone is kind then they chase the dog.\nFOL:\tall x. (Kind(x) -> Chases(x, Dog))\nTEXT:\tIf the bear chases the mouse and the bear is rough then the mouse is young.\nFOL:\t(Chases(Bear, Mouse) & Rough(Bear)) -> Young(Mouse)\nTEXT:\tThe dog chases the dog.\nFOL:\tChases(Dog, Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tIf something is blue and not rough then it is furry.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Furry(x))\nTEXT:\tAll blue things are furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Nice(x))\nTEXT:\tAll cold, furry things are nice.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Nice(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf something is blue and red then it is cold.\nFOL:\tall x. ((Blue(x) & Red(x)) -> Cold(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tFiona is not furry.\nFOL:\t-Furry(Fiona)\nANSWER:\tFalse\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tIf something is blue and not rough then it is furry.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Furry(x))\nTEXT:\tAll blue things are furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Nice(x))\nTEXT:\tAll cold, furry things are nice.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Nice(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf something is blue and red then it is cold.\nFOL:\tall x. ((Blue(x) & Red(x)) -> Cold(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tFiona is not furry.\nFOL:\t-Furry(Fiona)\nANSWER:\tFalse\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tIf something is blue and not rough then it is furry.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Furry(x))\nTEXT:\tAll blue things are furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Nice(x))\nTEXT:\tAll cold, furry things are nice.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Nice(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf something is blue and red then it is cold.\nFOL:\tall x. ((Blue(x) & Red(x)) -> Cold(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tFiona is not furry.\nFOL:\t-Furry(Fiona)\nANSWER:\tFalse\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tIf something is blue and not rough then it is furry.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Furry(x))\nTEXT:\tAll blue things are furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Nice(x))\nTEXT:\tAll cold, furry things are nice.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Nice(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf something is blue and red then it is cold.\nFOL:\tall x. ((Blue(x) & Red(x)) -> Cold(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tFiona is not furry.\nFOL:\t-Furry(Fiona)\nANSWER:\tFalse\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tIf something is blue and not rough then it is furry.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Furry(x))\nTEXT:\tAll blue things are furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Nice(x))\nTEXT:\tAll cold, furry things are nice.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Nice(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf something is blue and red then it is cold.\nFOL:\tall x. ((Blue(x) & Red(x)) -> Cold(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tFiona is not furry.\nFOL:\t-Furry(Fiona)\nANSWER:\tFalse"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Gary is round and Gary is smart then Gary is white.\nFOL:\t(Round(Gary) & Smart(Gary)) -> White(Gary)\nTEXT:\tIf someone is furry and round then they are red.\nFOL:\tall x. ((Furry(x) & Round(x)) -> Red(x))\nTEXT:\tBig people are smart.\nFOL:\tall x. (Big(x) -> Smart(x))\nTEXT:\tBig, smart people are round.\nFOL:\tall x. ((Big(x) & Smart(x)) -> Round(x))\nTEXT:\tRed people are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll white people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf someone is rough and smart then they are white.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> White(x))\nTEXT:\tSmart, red people are furry.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Furry(x))\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Gary is round and Gary is smart then Gary is white.\nFOL:\t(Round(Gary) & Smart(Gary)) -> White(Gary)\nTEXT:\tIf someone is furry and round then they are red.\nFOL:\tall x. ((Furry(x) & Round(x)) -> Red(x))\nTEXT:\tBig people are smart.\nFOL:\tall x. (Big(x) -> Smart(x))\nTEXT:\tBig, smart people are round.\nFOL:\tall x. ((Big(x) & Smart(x)) -> Round(x))\nTEXT:\tRed people are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll white people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf someone is rough and smart then they are white.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> White(x))\nTEXT:\tSmart, red people are furry.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Furry(x))\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Gary is round and Gary is smart then Gary is white.\nFOL:\t(Round(Gary) & Smart(Gary)) -> White(Gary)\nTEXT:\tIf someone is furry and round then they are red.\nFOL:\tall x. ((Furry(x) & Round(x)) -> Red(x))\nTEXT:\tBig people are smart.\nFOL:\tall x. (Big(x) -> Smart(x))\nTEXT:\tBig, smart people are round.\nFOL:\tall x. ((Big(x) & Smart(x)) -> Round(x))\nTEXT:\tRed people are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll white people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf someone is rough and smart then they are white.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> White(x))\nTEXT:\tSmart, red people are furry.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Furry(x))\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Gary is round and Gary is smart then Gary is white.\nFOL:\t(Round(Gary) & Smart(Gary)) -> White(Gary)\nTEXT:\tIf someone is furry and round then they are red.\nFOL:\tall x. ((Furry(x) & Round(x)) -> Red(x))\nTEXT:\tBig people are smart.\nFOL:\tall x. (Big(x) -> Smart(x))\nTEXT:\tBig, smart people are round.\nFOL:\tall x. ((Big(x) & Smart(x)) -> Round(x))\nTEXT:\tRed people are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll white people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf someone is rough and smart then they are white.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> White(x))\nTEXT:\tSmart, red people are furry.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Furry(x))\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Gary is round and Gary is smart then Gary is white.\nFOL:\tRound(Gary) & Smart(Gary) -> White(Gary)\nTEXT:\tIf someone is furry and round then they are red.\nFOL:\tall x. (Furry(x) & Round(x) -> Red(x))\nTEXT:\tBig people are smart.\nFOL:\tall x. (Big(x) -> Smart(x))\nTEXT:\tBig, smart people are round.\nFOL:\tall x. (Big(x) & Smart(x) -> Round(x))\nTEXT:\tRed people are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll white people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf someone is rough and smart then they are white.\nFOL:\tall x. (Rough(x) & Smart(x) -> White(x))\nTEXT:\tSmart, red people are furry.\nFOL:\tall x. (Smart(x) & Red(x) -> Furry(x))\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone is red then they are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf someone eats the tiger then they need the cat.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the cat then they like the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the tiger and they are red then they like the tiger.\nFOL:\tall x. ((Needs(x, Tiger) & Red(x)) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they need the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tIf someone likes the tiger and the tiger eats the bald eagle then the tiger needs the mouse.\nFOL:\tall x. ((Likes(x, Tiger) & Eats(Tiger, BaldEagle)) -> Needs(Tiger, Mouse))\nTEXT:\tIf someone needs the mouse then the mouse needs the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Needs(Mouse, Cat))\nTEXT:\tIf someone is blue then they eat the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone is red then they are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf someone eats the tiger then they need the cat.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the cat then they like the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the tiger and they are red then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) & Red(x) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they need the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tIf someone likes the tiger and the tiger eats the bald eagle then the tiger needs the mouse.\nFOL:\tall x. (Likes(x, Tiger) & Eats(Tiger, BaldEagle) -> Needs(Tiger, Mouse))\nTEXT:\tIf someone needs the mouse then the mouse needs the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Needs(Mouse, Cat))\nTEXT:\tIf someone is blue then they eat the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nANSWER:\tTrue", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone is red then they are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf someone eats the tiger then they need the cat.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the cat then they like the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the tiger and they are red then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) & Red(x) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they need the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tIf someone likes the tiger and the tiger eats the bald eagle then the tiger needs the mouse.\nFOL:\tall x. all y. (Likes(x, Tiger) & Eats(y, BaldEagle) -> Needs(Tiger, Mouse))\nTEXT:\tIf someone needs the mouse then the mouse needs the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Needs(Mouse, Cat))\nTEXT:\tIf someone is blue then they eat the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone is red then they are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf someone eats the tiger then they need the cat.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the cat then they like the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the tiger and they are red then they like the tiger.\nFOL:\tall x. ((Needs(x, Tiger) & Red(x)) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they need the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tIf someone likes the tiger and the tiger eats the bald eagle then the tiger needs the mouse.\nFOL:\tall x. (Likes(x, Tiger) & Eats(Tiger, BaldEagle) -> Needs(Tiger, Mouse))\nTEXT:\tIf someone needs the mouse then the mouse needs the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Needs(Mouse, Cat))\nTEXT:\tIf someone is blue then they eat the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone is red then they are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tIf someone eats the tiger then they need the cat.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the cat then they like the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the tiger and they are red then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) & Red(x) -> Likes(x, Tiger))\nTEXT:\tIf someone likes the tiger then they need the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Needs(x, Cat))\nTEXT:\tIf someone eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tIf someone likes the tiger and the tiger eats the bald eagle then the tiger needs the mouse.\nFOL:\tall x. (Likes(x, Tiger) & Eats(Tiger, BaldEagle) -> Needs(Tiger, Mouse))\nTEXT:\tIf someone needs the mouse then the mouse needs the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Needs(Mouse, Cat))\nTEXT:\tIf someone is blue then they eat the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf the rabbit likes the tiger and the tiger sees the bald eagle then the rabbit is rough.\nFOL:\tall x. ((Likes(Rabbit, Tiger) & Sees(Tiger, BaldEagle)) -> Rough(Rabbit))\nTEXT:\tIf someone sees the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Sees(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone likes the bald eagle and the bald eagle likes the rabbit then the rabbit is big.\nFOL:\tall x. ((Likes(x, BaldEagle) & Likes(BaldEagle, Rabbit)) -> Big(Rabbit))\nTEXT:\tIf someone likes the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Likes(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf the mouse chases the rabbit then the rabbit chases the tiger.\nFOL:\tall x. (Chases(Mouse, Rabbit) -> Chases(Rabbit, Tiger))\nTEXT:\tIf the rabbit sees the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Sees(Rabbit, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tIf someone is young and they chase the mouse then they see the mouse.\nFOL:\tall x. (Young(x) & Chases(x, Mouse) -> Sees(x, Mouse))\nTEXT:\tIf someone likes the mouse and they are rough then they see the rabbit.\nFOL:\tall x. ((Likes(x, Mouse) & Rough(x)) -> Sees(x, Rabbit))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf the rabbit likes the tiger and the tiger sees the bald eagle then the rabbit is rough.\nFOL:\tall x. all y. ((Likes(x, Tiger) & Sees(Tiger, y) & Rabbit(x) & BaldEagle(y)) -> Rough(x))\nTEXT:\tIf someone sees the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Sees(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone likes the bald eagle and the bald eagle likes the rabbit then the rabbit is big.\nFOL:\tall x. ((Likes(x, BaldEagle) & Likes(BaldEagle, Rabbit)) -> Big(Rabbit))\nTEXT:\tIf someone likes the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Likes(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf the mouse chases the rabbit then the rabbit chases the tiger.\nFOL:\tall x. all y. ((Chases(Mouse, x) & Rabbit(x) & Tiger(y)) -> Chases(x, y))\nTEXT:\tIf the rabbit sees the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. all y. ((Sees(x, BaldEagle) & Rabbit(x) & BaldEagle(y)) -> Chases(y, x))\nTEXT:\tIf someone is young and they chase the mouse then they see the mouse.\nFOL:\tall x. ((Young(x) & Chases(x, Mouse)) -> Sees(x, Mouse))\nTEXT:\tIf someone likes the mouse and they are rough then they see the rabbit.\nFOL:\tall x. ((Likes(x, Mouse) & Rough(x)) -> Sees(x, Rabbit))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf the rabbit likes the tiger and the tiger sees the bald eagle then the rabbit is rough.\nFOL:\tall x. all y. all z. ((Likes(x, y) & Sees(y, z) & Rabbit(x) & Tiger(y) & BaldEagle(z)) -> Rough(x))\nTEXT:\tIf someone sees the rabbit then the rabbit likes the tiger.\nFOL:\tall x. all y. (Sees(x, y) & Rabbit(y) -> Likes(y, Tiger))\nTEXT:\tIf someone likes the bald eagle and the bald eagle likes the rabbit then the rabbit is big.\nFOL:\tall x. all y. ((Likes(x, y) & Likes(y, Rabbit) & BaldEagle(y)) -> Big(Rabbit))\nTEXT:\tIf someone likes the bald eagle then the bald eagle is rough.\nFOL:\tall x. all y. (Likes(x, y) & BaldEagle(y) -> Rough(y))\nTEXT:\tIf the mouse chases the rabbit then the rabbit chases the tiger.\nFOL:\tall x. all y. ((Chases(x, y) & Mouse(x) & Rabbit(y)) -> Chases(y, Tiger))\nTEXT:\tIf the rabbit sees the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. all y. ((Sees(x, y) & Rabbit(x) & BaldEagle(y)) -> Chases(y, x))\nTEXT:\tIf someone is young and they chase the mouse then they see the mouse.\nFOL:\tall x. (Young(x) & Chases(x, Mouse) -> Sees(x, Mouse))\nTEXT:\tIf someone likes the mouse and they are rough then they see the rabbit.\nFOL:\tall x. ((Likes(x, Mouse) & Rough(x)) -> Sees(x, Rabbit))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf the rabbit likes the tiger and the tiger sees the bald eagle then the rabbit is rough.\nFOL:\tall x. (Likes(x, Tiger) & Sees(Tiger, BaldEagle) -> Rough(x))\nTEXT:\tIf someone sees the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Sees(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone likes the bald eagle and the bald eagle likes the rabbit then the rabbit is big.\nFOL:\tall x. (Likes(x, BaldEagle) & Likes(BaldEagle, Rabbit) -> Big(Rabbit))\nTEXT:\tIf someone likes the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Likes(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf the mouse chases the rabbit then the rabbit chases the tiger.\nFOL:\tall x. (Chases(Mouse, x) -> Chases(x, Tiger))\nTEXT:\tIf the rabbit sees the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Sees(x, BaldEagle) -> Chases(BaldEagle, x))\nTEXT:\tIf someone is young and they chase the mouse then they see the mouse.\nFOL:\tall x. (Young(x) & Chases(x, Mouse) -> Sees(x, Mouse))\nTEXT:\tIf someone likes the mouse and they are rough then they see the rabbit.\nFOL:\tall x. (Likes(x, Mouse) & Rough(x) -> Sees(x, Rabbit))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf the rabbit likes the tiger and the tiger sees the bald eagle then the rabbit is rough.\nFOL:\tall x. all y. (Likes(x, Tiger) & Rabbit(x) & Sees(y, BaldEagle) & Tiger(y) -> Rough(x))\nTEXT:\tIf someone sees the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Sees(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone likes the bald eagle and the bald eagle likes the rabbit then the rabbit is big.\nFOL:\tall x. (Likes(x, BaldEagle) & Likes(BaldEagle, Rabbit) -> Big(Rabbit))\nTEXT:\tIf someone likes the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Likes(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf the mouse chases the rabbit then the rabbit chases the tiger.\nFOL:\tall x. all y. (Chases(x, Rabbit) & Mouse(x) & Rabbit(y) -> Chases(y, Tiger))\nTEXT:\tIf the rabbit sees the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Sees(x, BaldEagle) & Rabbit(x) -> Chases(BaldEagle, Rabbit))\nTEXT:\tIf someone is young and they chase the mouse then they see the mouse.\nFOL:\tall x. (Young(x) & Chases(x, Mouse) -> Sees(x, Mouse))\nTEXT:\tIf someone likes the mouse and they are rough then they see the rabbit.\nFOL:\tall x. (Likes(x, Mouse) & Rough(x) -> Sees(x, Rabbit))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf the rabbit eats the cow then the cow needs the rabbit.\nFOL:\tEats(Rabbit, Cow) -> Needs(Cow, Rabbit)\nTEXT:\tGreen things are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something sees the mouse then it is big.\nFOL:\tall x. (Sees(x, Mouse) -> Big(x))\nTEXT:\tIf something needs the rabbit then the rabbit is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle is nice.\nFOL:\tall x. (Needs(x, BaldEagle) -> Nice(BaldEagle))\nTEXT:\tIf something needs the rabbit and it is rough then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) & Rough(x) -> Big(Rabbit))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf the rabbit eats the cow then the cow needs the rabbit.\nFOL:\tEats(Rabbit, Cow) -> Needs(Cow, Rabbit)\nTEXT:\tGreen things are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something sees the mouse then it is big.\nFOL:\tall x. (Sees(x, Mouse) -> Big(x))\nTEXT:\tIf something needs the rabbit then the rabbit is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle is nice.\nFOL:\tall x. (Needs(x, BaldEagle) -> Nice(BaldEagle))\nTEXT:\tIf something needs the rabbit and it is rough then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) & Rough(x) -> Big(Rabbit))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf the rabbit eats the cow then the cow needs the rabbit.\nFOL:\tEats(Rabbit, Cow) -> Needs(Cow, Rabbit)\nTEXT:\tGreen things are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something sees the mouse then it is big.\nFOL:\tall x. (Sees(x, Mouse) -> Big(x))\nTEXT:\tIf something needs the rabbit then the rabbit is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle is nice.\nFOL:\tall x. (Needs(x, BaldEagle) -> Nice(BaldEagle))\nTEXT:\tIf something needs the rabbit and it is rough then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) & Rough(x) -> Big(Rabbit))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf the rabbit eats the cow then the cow needs the rabbit.\nFOL:\tEats(Rabbit, Cow) -> Needs(Cow, Rabbit)\nTEXT:\tGreen things are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something sees the mouse then it is big.\nFOL:\tall x. (Sees(x, Mouse) -> Big(x))\nTEXT:\tIf something needs the rabbit then the rabbit is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle is nice.\nFOL:\tall x. (Needs(x, BaldEagle) -> Nice(BaldEagle))\nTEXT:\tIf something needs the rabbit and it is rough then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) & Rough(x) -> Big(Rabbit))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse is big.\nFOL:\tBig(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf the rabbit eats the cow then the cow needs the rabbit.\nFOL:\tEats(Rabbit, Cow) -> Needs(Cow, Rabbit)\nTEXT:\tGreen things are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something sees the mouse then it is big.\nFOL:\tall x. (Sees(x, Mouse) -> Big(x))\nTEXT:\tIf something needs the rabbit then the rabbit is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle is nice.\nFOL:\tall x. (Needs(x, BaldEagle) -> Nice(BaldEagle))\nTEXT:\tIf something needs the rabbit and it is rough then the rabbit is big.\nFOL:\tall x. ((Needs(x, Rabbit) & Rough(x)) -> Big(Rabbit))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tThe bald eagle is not rough.\nFOL:\t-Rough(BaldEagle)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Bob is blue then Bob is rough.\nFOL:\tBlue(Bob) -> Rough(Bob)\nTEXT:\tIf Gary is green then Gary is quiet.\nFOL:\tGreen(Gary) -> Quiet(Gary)\nTEXT:\tIf someone is green and red then they are not cold.\nFOL:\tall x. (Green(x) & Red(x) -> -Cold(x))\nTEXT:\tIf someone is smart then they are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough and not cold then they are not quiet.\nFOL:\tall x. ((Rough(x) & -Cold(x)) -> -Quiet(x))\nTEXT:\tIf someone is red and not blue then they are quiet.\nFOL:\tall x. ((Red(x) & -Blue(x)) -> Quiet(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Bob is blue then Bob is rough.\nFOL:\tBlue(Bob) -> Rough(Bob)\nTEXT:\tIf Gary is green then Gary is quiet.\nFOL:\tGreen(Gary) -> Quiet(Gary)\nTEXT:\tIf someone is green and red then they are not cold.\nFOL:\tall x. ((Green(x) & Red(x)) -> -Cold(x))\nTEXT:\tIf someone is smart then they are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough and not cold then they are not quiet.\nFOL:\tall x. ((Rough(x) & -Cold(x)) -> -Quiet(x))\nTEXT:\tIf someone is red and not blue then they are quiet.\nFOL:\tall x. ((Red(x) & -Blue(x)) -> Quiet(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Bob is blue then Bob is rough.\nFOL:\tBlue(Bob) -> Rough(Bob)\nTEXT:\tIf Gary is green then Gary is quiet.\nFOL:\tGreen(Gary) -> Quiet(Gary)\nTEXT:\tIf someone is green and red then they are not cold.\nFOL:\tall x. (Green(x) & Red(x) -> -Cold(x))\nTEXT:\tIf someone is smart then they are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough and not cold then they are not quiet.\nFOL:\tall x. (Rough(x) & -Cold(x) -> -Quiet(x))\nTEXT:\tIf someone is red and not blue then they are quiet.\nFOL:\tall x. (Red(x) & -Blue(x) -> Quiet(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Bob is blue then Bob is rough.\nFOL:\tBlue(Bob) -> Rough(Bob)\nTEXT:\tIf Gary is green then Gary is quiet.\nFOL:\tGreen(Gary) -> Quiet(Gary)\nTEXT:\tIf someone is green and red then they are not cold.\nFOL:\tall x. ((Green(x) & Red(x)) -> -Cold(x))\nTEXT:\tIf someone is smart then they are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough and not cold then they are not quiet.\nFOL:\tall x. ((Rough(x) & -Cold(x)) -> -Quiet(x))\nTEXT:\tIf someone is red and not blue then they are quiet.\nFOL:\tall x. ((Red(x) & -Blue(x)) -> Quiet(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Bob is blue then Bob is rough.\nFOL:\tBlue(Bob) -> Rough(Bob)\nTEXT:\tIf Gary is green then Gary is quiet.\nFOL:\tGreen(Gary) -> Quiet(Gary)\nTEXT:\tIf someone is green and red then they are not cold.\nFOL:\tall x. (Green(x) & Red(x) -> -Cold(x))\nTEXT:\tIf someone is smart then they are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf someone is rough and not cold then they are not quiet.\nFOL:\tall x. (Rough(x) & -Cold(x) -> -Quiet(x))\nTEXT:\tIf someone is red and not blue then they are quiet.\nFOL:\tall x. (Red(x) & -Blue(x) -> Quiet(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nANSWER:\tFalse\n"], ["TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Bob is rough and Bob is red then Bob is round.\nFOL:\tRough(Bob) & Red(Bob) -> Round(Bob)\nTEXT:\tAll furry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is round and furry then they are smart.\nFOL:\tall x. (Round(x) & Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and round then they are blue.\nFOL:\tall x. (Smart(x) & Round(x) -> Blue(x))\nTEXT:\tIf someone is round and rough then they are red.\nFOL:\tall x. (Round(x) & Rough(x) -> Red(x))\nTEXT:\tIf someone is round and furry then they are rough.\nFOL:\tall x. (Round(x) & Furry(x) -> Rough(x))\nTEXT:\tRed, round people are furry.\nFOL:\tall x. (Red(x) & Round(x) -> Furry(x))\nTEXT:\tIf Bob is red and Bob is not smart then Bob is not blue.\nFOL:\tRed(Bob) & -Smart(Bob) -> -Blue(Bob)\nTEXT:\tAll rough, blue people are cold.\nFOL:\tall x. (Rough(x) & Blue(x) -> Cold(x))\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Bob is rough and Bob is red then Bob is round.\nFOL:\tRough(Bob) & Red(Bob) -> Round(Bob)\nTEXT:\tAll furry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is round and furry then they are smart.\nFOL:\tall x. (Round(x) & Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and round then they are blue.\nFOL:\tall x. (Smart(x) & Round(x) -> Blue(x))\nTEXT:\tIf someone is round and rough then they are red.\nFOL:\tall x. (Round(x) & Rough(x) -> Red(x))\nTEXT:\tIf someone is round and furry then they are rough.\nFOL:\tall x. (Round(x) & Furry(x) -> Rough(x))\nTEXT:\tRed, round people are furry.\nFOL:\tall x. (Red(x) & Round(x) -> Furry(x))\nTEXT:\tIf Bob is red and Bob is not smart then Bob is not blue.\nFOL:\tRed(Bob) & -Smart(Bob) -> -Blue(Bob)\nTEXT:\tAll rough, blue people are cold.\nFOL:\tall x. (Rough(x) & Blue(x) -> Cold(x))\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Bob is rough and Bob is red then Bob is round.\nFOL:\t(Rough(Bob) & Red(Bob)) -> Round(Bob)\nTEXT:\tAll furry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is round and furry then they are smart.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Smart(x))\nTEXT:\tIf someone is smart and round then they are blue.\nFOL:\tall x. ((Smart(x) & Round(x)) -> Blue(x))\nTEXT:\tIf someone is round and rough then they are red.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Red(x))\nTEXT:\tIf someone is round and furry then they are rough.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Rough(x))\nTEXT:\tRed, round people are furry.\nFOL:\tall x. ((Red(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Bob is red and Bob is not smart then Bob is not blue.\nFOL:\t(Red(Bob) & -Smart(Bob)) -> -Blue(Bob)\nTEXT:\tAll rough, blue people are cold.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Cold(x))\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Bob is rough and Bob is red then Bob is round.\nFOL:\t(Rough(Bob) & Red(Bob)) -> Round(Bob)\nTEXT:\tAll furry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is round and furry then they are smart.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Smart(x))\nTEXT:\tIf someone is smart and round then they are blue.\nFOL:\tall x. ((Smart(x) & Round(x)) -> Blue(x))\nTEXT:\tIf someone is round and rough then they are red.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Red(x))\nTEXT:\tIf someone is round and furry then they are rough.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Rough(x))\nTEXT:\tRed, round people are furry.\nFOL:\tall x. ((Red(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Bob is red and Bob is not smart then Bob is not blue.\nFOL:\t(Red(Bob) & -Smart(Bob)) -> -Blue(Bob)\nTEXT:\tAll rough, blue people are cold.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Cold(x))\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Bob is rough and Bob is red then Bob is round.\nFOL:\t(Rough(Bob) & Red(Bob)) -> Round(Bob)\nTEXT:\tAll furry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is round and furry then they are smart.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Smart(x))\nTEXT:\tIf someone is smart and round then they are blue.\nFOL:\tall x. ((Smart(x) & Round(x)) -> Blue(x))\nTEXT:\tIf someone is round and rough then they are red.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Red(x))\nTEXT:\tIf someone is round and furry then they are rough.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Rough(x))\nTEXT:\tRed, round people are furry.\nFOL:\tall x. ((Red(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Bob is red and Bob is not smart then Bob is not blue.\nFOL:\t(Red(Bob) & -Smart(Bob)) -> -Blue(Bob)\nTEXT:\tAll rough, blue people are cold.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Cold(x))\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear visits the lion.\nFOL:\tVisits(Bear, Lion)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf something likes the bear then it is rough.\nFOL:\tall x. (Likes(x, Bear) -> Rough(x))\nTEXT:\tIf something likes the bear and it visits the bear then the bear visits the cat.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Bear)) -> Visits(Bear, Cat))\nTEXT:\tIf something likes the bear and it visits the cat then it is rough.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Cat)) -> Rough(x))\nTEXT:\tBig things are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf something is rough then it needs the bear.\nFOL:\tall x. (Rough(x) -> Needs(x, Bear))\nTEXT:\tIf something visits the tiger and it visits the cat then it is nice.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(x, Cat)) -> Nice(x))\nTEXT:\tIf something likes the lion then the lion is young.\nFOL:\tall x. (Likes(x, Lion) -> Young(Lion))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is rough and it needs the bear then it visits the bear.\nFOL:\tall x. ((Rough(x) & Needs(x, Bear)) -> Visits(x, Bear))\nTEXT:\tThe cat is not nice.\nFOL:\t-Nice(Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear visits the lion.\nFOL:\tVisits(Bear, Lion)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf something likes the bear then it is rough.\nFOL:\tall x. (Likes(x, Bear) -> Rough(x))\nTEXT:\tIf something likes the bear and it visits the bear then the bear visits the cat.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Bear)) -> Visits(Bear, Cat))\nTEXT:\tIf something likes the bear and it visits the cat then it is rough.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Cat)) -> Rough(x))\nTEXT:\tBig things are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf something is rough then it needs the bear.\nFOL:\tall x. (Rough(x) -> Needs(x, Bear))\nTEXT:\tIf something visits the tiger and it visits the cat then it is nice.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(x, Cat)) -> Nice(x))\nTEXT:\tIf something likes the lion then the lion is young.\nFOL:\tall x. (Likes(x, Lion) -> Young(Lion))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is rough and it needs the bear then it visits the bear.\nFOL:\tall x. ((Rough(x) & Needs(x, Bear)) -> Visits(x, Bear))\nTEXT:\tThe cat is not nice.\nFOL:\t-Nice(Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear visits the lion.\nFOL:\tVisits(Bear, Lion)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf something likes the bear then it is rough.\nFOL:\tall x. (Likes(x, Bear) -> Rough(x))\nTEXT:\tIf something likes the bear and it visits the bear then the bear visits the cat.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Bear)) -> Visits(Bear, Cat))\nTEXT:\tIf something likes the bear and it visits the cat then it is rough.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Cat)) -> Rough(x))\nTEXT:\tBig things are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf something is rough then it needs the bear.\nFOL:\tall x. (Rough(x) -> Needs(x, Bear))\nTEXT:\tIf something visits the tiger and it visits the cat then it is nice.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(x, Cat)) -> Nice(x))\nTEXT:\tIf something likes the lion then the lion is young.\nFOL:\tall x. (Likes(x, Lion) -> Young(Lion))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is rough and it needs the bear then it visits the bear.\nFOL:\tall x. ((Rough(x) & Needs(x, Bear)) -> Visits(x, Bear))\nTEXT:\tThe cat is not nice.\nFOL:\t-Nice(Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear visits the lion.\nFOL:\tVisits(Bear, Lion)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf something likes the bear then it is rough.\nFOL:\tall x. (Likes(x, Bear) -> Rough(x))\nTEXT:\tIf something likes the bear and it visits the bear then the bear visits the cat.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Bear)) -> Visits(Bear, Cat))\nTEXT:\tIf something likes the bear and it visits the cat then it is rough.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Cat)) -> Rough(x))\nTEXT:\tBig things are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf something is rough then it needs the bear.\nFOL:\tall x. (Rough(x) -> Needs(x, Bear))\nTEXT:\tIf something visits the tiger and it visits the cat then it is nice.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(x, Cat)) -> Nice(x))\nTEXT:\tIf something likes the lion then the lion is young.\nFOL:\tall x. (Likes(x, Lion) -> Young(Lion))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is rough and it needs the bear then it visits the bear.\nFOL:\tall x. ((Rough(x) & Needs(x, Bear)) -> Visits(x, Bear))\nTEXT:\tThe cat is not nice.\nFOL:\t-Nice(Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear visits the lion.\nFOL:\tVisits(Bear, Lion)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf something likes the bear then it is rough.\nFOL:\tall x. (Likes(x, Bear) -> Rough(x))\nTEXT:\tIf something likes the bear and it visits the bear then the bear visits the cat.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Bear)) -> Visits(Bear, Cat))\nTEXT:\tIf something likes the bear and it visits the cat then it is rough.\nFOL:\tall x. ((Likes(x, Bear) & Visits(x, Cat)) -> Rough(x))\nTEXT:\tBig things are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tIf something is rough then it needs the bear.\nFOL:\tall x. (Rough(x) -> Needs(x, Bear))\nTEXT:\tIf something visits the tiger and it visits the cat then it is nice.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(x, Cat)) -> Nice(x))\nTEXT:\tIf something likes the lion then the lion is young.\nFOL:\tall x. (Likes(x, Lion) -> Young(Lion))\nTEXT:\tIf something is big then it is rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf something is rough and it needs the bear then it visits the bear.\nFOL:\tall x. ((Rough(x) & Needs(x, Bear)) -> Visits(x, Bear))\nTEXT:\tThe cat is not nice.\nFOL:\t-Nice(Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tIf the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit.\nFOL:\t(Visits(BaldEagle, Bear) & Rough(BaldEagle)) -> Chases(Bear, Rabbit)\nTEXT:\tIf someone is rough then they chase the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is cold then they are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Needs(x, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone needs the rabbit and they chase the bald eagle then the bald eagle does not chase the bear.\nFOL:\tall x. ((Needs(x, Rabbit) & Chases(x, BaldEagle)) -> -Chases(BaldEagle, Bear))\nTEXT:\tIf someone chases the bald eagle then they are kind.\nFOL:\tall x. (Chases(x, BaldEagle) -> Kind(x))\nTEXT:\tIf someone is kind then they need the bald eagle.\nFOL:\tall x. (Kind(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the rabbit is red and the rabbit is blue then the rabbit needs the bear.\nFOL:\t(Red(Rabbit) & Blue(Rabbit)) -> Needs(Rabbit, Bear)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tIf the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit.\nFOL:\tall x. ((Visits(x, Bear) & Rough(x)) -> Chases(Bear, Rabbit))\nTEXT:\tIf someone is rough then they chase the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is cold then they are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Needs(x, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone needs the rabbit and they chase the bald eagle then the bald eagle does not chase the bear.\nFOL:\tall x. ((Needs(x, Rabbit) & Chases(x, BaldEagle)) -> -Chases(BaldEagle, Bear))\nTEXT:\tIf someone chases the bald eagle then they are kind.\nFOL:\tall x. (Chases(x, BaldEagle) -> Kind(x))\nTEXT:\tIf someone is kind then they need the bald eagle.\nFOL:\tall x. (Kind(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the rabbit is red and the rabbit is blue then the rabbit needs the bear.\nFOL:\t(Red(Rabbit) & Blue(Rabbit)) -> Needs(Rabbit, Bear)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tIf the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit.\nFOL:\tall x. (Visits(x, Bear) & Rough(x) -> Chases(Bear, Rabbit))\nTEXT:\tIf someone is rough then they chase the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is cold then they are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Needs(x, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone needs the rabbit and they chase the bald eagle then the bald eagle does not chase the bear.\nFOL:\tall x. (Needs(x, Rabbit) & Chases(x, BaldEagle) -> -Chases(BaldEagle, Bear))\nTEXT:\tIf someone chases the bald eagle then they are kind.\nFOL:\tall x. (Chases(x, BaldEagle) -> Kind(x))\nTEXT:\tIf someone is kind then they need the bald eagle.\nFOL:\tall x. (Kind(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the rabbit is red and the rabbit is blue then the rabbit needs the bear.\nFOL:\tall x. (Red(x) & Blue(x) -> Needs(x, Bear))\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tIf the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit.\nFOL:\tall x. (Visits(x, Bear) & Rough(x) -> Chases(Bear, Rabbit))\nTEXT:\tIf someone is rough then they chase the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is cold then they are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Needs(x, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone needs the rabbit and they chase the bald eagle then the bald eagle does not chase the bear.\nFOL:\tall x. (Needs(x, Rabbit) & Chases(x, BaldEagle) -> -Chases(BaldEagle, Bear))\nTEXT:\tIf someone chases the bald eagle then they are kind.\nFOL:\tall x. (Chases(x, BaldEagle) -> Kind(x))\nTEXT:\tIf someone is kind then they need the bald eagle.\nFOL:\tall x. (Kind(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the rabbit is red and the rabbit is blue then the rabbit needs the bear.\nFOL:\tall x. (Red(x) & Blue(x) -> Needs(Rabbit, Bear))\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe bear chases the bald eagle.\nFOL:\tChases(Bear, BaldEagle)\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tIf the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit.\nFOL:\tall x. (Visits(x, Bear) & Rough(x) -> Chases(Bear, Rabbit))\nTEXT:\tIf someone is rough then they chase the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is cold then they are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf someone needs the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Needs(x, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone needs the rabbit and they chase the bald eagle then the bald eagle does not chase the bear.\nFOL:\tall x. (Needs(x, Rabbit) & Chases(x, BaldEagle) -> -Chases(BaldEagle, Bear))\nTEXT:\tIf someone chases the bald eagle then they are kind.\nFOL:\tall x. (Chases(x, BaldEagle) -> Kind(x))\nTEXT:\tIf someone is kind then they need the bald eagle.\nFOL:\tall x. (Kind(x) -> Needs(x, BaldEagle))\nTEXT:\tIf the rabbit is red and the rabbit is blue then the rabbit needs the bear.\nFOL:\t(Red(Rabbit) & Blue(Rabbit)) -> Needs(Rabbit, Bear)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nANSWER:\tTrue\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll furry, big people are rough.\nFOL:\tall x. (Furry(x) & Big(x) -> Rough(x))\nTEXT:\tWhite, rough people are kind.\nFOL:\tall x. (White(x) & Rough(x) -> Kind(x))\nTEXT:\tIf someone is kind and big then they are furry.\nFOL:\tall x. (Kind(x) & Big(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Erin is rough then Erin is big.\nFOL:\tRough(Erin) -> Big(Erin)\nTEXT:\tIf someone is nice then they are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. (Furry(x) & White(x) -> Big(x))\nTEXT:\tWhite people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf Dave is kind and Dave is nice then Dave is rough.\nFOL:\tKind(Dave) & Nice(Dave) -> Rough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll furry, big people are rough.\nFOL:\tall x. (Furry(x) & Big(x) -> Rough(x))\nTEXT:\tWhite, rough people are kind.\nFOL:\tall x. (White(x) & Rough(x) -> Kind(x))\nTEXT:\tIf someone is kind and big then they are furry.\nFOL:\tall x. (Kind(x) & Big(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Erin is rough then Erin is big.\nFOL:\tRough(Erin) -> Big(Erin)\nTEXT:\tIf someone is nice then they are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. (Furry(x) & White(x) -> Big(x))\nTEXT:\tWhite people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf Dave is kind and Dave is nice then Dave is rough.\nFOL:\tKind(Dave) & Nice(Dave) -> Rough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll furry, big people are rough.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Rough(x))\nTEXT:\tWhite, rough people are kind.\nFOL:\tall x. ((White(x) & Rough(x)) -> Kind(x))\nTEXT:\tIf someone is kind and big then they are furry.\nFOL:\tall x. ((Kind(x) & Big(x)) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Erin is rough then Erin is big.\nFOL:\tRough(Erin) -> Big(Erin)\nTEXT:\tIf someone is nice then they are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. ((Furry(x) & White(x)) -> Big(x))\nTEXT:\tWhite people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf Dave is kind and Dave is nice then Dave is rough.\nFOL:\t(Kind(Dave) & Nice(Dave)) -> Rough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll furry, big people are rough.\nFOL:\tall x. (Furry(x) & Big(x) -> Rough(x))\nTEXT:\tWhite, rough people are kind.\nFOL:\tall x. (White(x) & Rough(x) -> Kind(x))\nTEXT:\tIf someone is kind and big then they are furry.\nFOL:\tall x. (Kind(x) & Big(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Erin is rough then Erin is big.\nFOL:\tRough(Erin) -> Big(Erin)\nTEXT:\tIf someone is nice then they are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. (Furry(x) & White(x) -> Big(x))\nTEXT:\tWhite people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf Dave is kind and Dave is nice then Dave is rough.\nFOL:\t(Kind(Dave) & Nice(Dave)) -> Rough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tAll furry, big people are rough.\nFOL:\tall x. (Furry(x) & Big(x) -> Rough(x))\nTEXT:\tWhite, rough people are kind.\nFOL:\tall x. (White(x) & Rough(x) -> Kind(x))\nTEXT:\tIf someone is kind and big then they are furry.\nFOL:\tall x. (Kind(x) & Big(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Erin is rough then Erin is big.\nFOL:\tRough(Erin) -> Big(Erin)\nTEXT:\tIf someone is nice then they are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. (Furry(x) & White(x) -> Big(x))\nTEXT:\tWhite people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf Dave is kind and Dave is nice then Dave is rough.\nFOL:\tKind(Dave) & Nice(Dave) -> Rough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the cat.\nFOL:\tChase(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisit(BaldEagle, Rabbit)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLike(Cat, Rabbit)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChase(Mouse, Cat)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLike(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLike(Mouse, Cat)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisit(Mouse, Rabbit)\nTEXT:\tThe rabbit likes the cat.\nFOL:\tLike(Rabbit, Cat)\nTEXT:\tIf someone likes the cat then the cat visits the mouse.\nFOL:\tall x. (Like(x, Cat) -> Visit(Cat, Mouse))\nTEXT:\tIf someone visits the mouse and they like the cat then the mouse visits the bald eagle.\nFOL:\tall x. (Visit(x, Mouse) & Like(x, Cat) -> Visit(Mouse, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and the bald eagle visits the mouse then the bald eagle chases the mouse.\nFOL:\tall x. (Like(x, BaldEagle) & Visit(BaldEagle, Mouse) -> Chase(BaldEagle, Mouse))\nTEXT:\tIf the bald eagle likes the cat then the bald eagle is cold.\nFOL:\tLike(BaldEagle, Cat) -> Cold(BaldEagle)\nTEXT:\tIf someone visits the bald eagle and they chase the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Visit(x, BaldEagle) & Chase(x, BaldEagle) -> Chase(BaldEagle, Cat))\nTEXT:\tIf someone chases the cat then they like the cat.\nFOL:\tall x. (Chase(x, Cat) -> Like(x, Cat))\nTEXT:\tIf someone is blue and kind then they like the rabbit.\nFOL:\tall x. (Blue(x) & Kind(x) -> Like(x, Rabbit))\nTEXT:\tIf someone likes the cat and they chase the mouse then they like the bald eagle.\nFOL:\tall x. (Like(x, Cat) & Chase(x, Mouse) -> Like(x, BaldEagle))\nTEXT:\tIf someone is cold then they visit the mouse.\nFOL:\tall x. (Cold(x) -> Visit(x, Mouse))\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-Cold(BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit likes the cat.\nFOL:\tLikes(Rabbit, Cat)\nTEXT:\tIf someone likes the cat then the cat visits the mouse.\nFOL:\tall x. (Likes(x, Cat) -> Visits(Cat, Mouse))\nTEXT:\tIf someone visits the mouse and they like the cat then the mouse visits the bald eagle.\nFOL:\tall x. (Visits(x, Mouse) & Likes(x, Cat) -> Visits(Mouse, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and the bald eagle visits the mouse then the bald eagle chases the mouse.\nFOL:\tall x. (Likes(x, BaldEagle) & Visits(BaldEagle, Mouse) -> Chases(BaldEagle, Mouse))\nTEXT:\tIf the bald eagle likes the cat then the bald eagle is cold.\nFOL:\tLikes(BaldEagle, Cat) -> Cold(BaldEagle)\nTEXT:\tIf someone visits the bald eagle and they chase the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Visits(x, BaldEagle) & Chases(x, BaldEagle) -> Chases(BaldEagle, Cat))\nTEXT:\tIf someone chases the cat then they like the cat.\nFOL:\tall x. (Chases(x, Cat) -> Likes(x, Cat))\nTEXT:\tIf someone is blue and kind then they like the rabbit.\nFOL:\tall x. (Blue(x) & Kind(x) -> Likes(x, Rabbit))\nTEXT:\tIf someone likes the cat and they chase the mouse then they like the bald eagle.\nFOL:\tall x. (Likes(x, Cat) & Chases(x, Mouse) -> Likes(x, BaldEagle))\nTEXT:\tIf someone is cold then they visit the mouse.\nFOL:\tall x. (Cold(x) -> Visits(x, Mouse))\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-Cold(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit likes the cat.\nFOL:\tLikes(Rabbit, Cat)\nTEXT:\tIf someone likes the cat then the cat visits the mouse.\nFOL:\tall x. (Likes(x, Cat) -> Visits(Cat, Mouse))\nTEXT:\tIf someone visits the mouse and they like the cat then the mouse visits the bald eagle.\nFOL:\tall x. ((Visits(x, Mouse) & Likes(x, Cat)) -> Visits(Mouse, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and the bald eagle visits the mouse then the bald eagle chases the mouse.\nFOL:\tall x. ((Likes(x, BaldEagle) & Visits(BaldEagle, Mouse)) -> Chases(BaldEagle, Mouse))\nTEXT:\tIf the bald eagle likes the cat then the bald eagle is cold.\nFOL:\tLikes(BaldEagle, Cat) -> Cold(BaldEagle)\nTEXT:\tIf someone visits the bald eagle and they chase the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. ((Visits(x, BaldEagle) & Chases(x, BaldEagle)) -> Chases(BaldEagle, Cat))\nTEXT:\tIf someone chases the cat then they like the cat.\nFOL:\tall x. (Chases(x, Cat) -> Likes(x, Cat))\nTEXT:\tIf someone is blue and kind then they like the rabbit.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Likes(x, Rabbit))\nTEXT:\tIf someone likes the cat and they chase the mouse then they like the bald eagle.\nFOL:\tall x. ((Likes(x, Cat) & Chases(x, Mouse)) -> Likes(x, BaldEagle))\nTEXT:\tIf someone is cold then they visit the mouse.\nFOL:\tall x. (Cold(x) -> Visits(x, Mouse))\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-Cold(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit likes the cat.\nFOL:\tLikes(Rabbit, Cat)\nTEXT:\tIf someone likes the cat then the cat visits the mouse.\nFOL:\tall x. (Likes(x, Cat) -> Visits(Cat, Mouse))\nTEXT:\tIf someone visits the mouse and they like the cat then the mouse visits the bald eagle.\nFOL:\tall x. (Visits(x, Mouse) & Likes(x, Cat) -> Visits(Mouse, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and the bald eagle visits the mouse then the bald eagle chases the mouse.\nFOL:\tall x. (Likes(x, BaldEagle) & Visits(BaldEagle, Mouse) -> Chases(BaldEagle, Mouse))\nTEXT:\tIf the bald eagle likes the cat then the bald eagle is cold.\nFOL:\t(Likes(BaldEagle, Cat) -> Cold(BaldEagle))\nTEXT:\tIf someone visits the bald eagle and they chase the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Visits(x, BaldEagle) & Chases(x, BaldEagle) -> Chases(BaldEagle, Cat))\nTEXT:\tIf someone chases the cat then they like the cat.\nFOL:\tall x. (Chases(x, Cat) -> Likes(x, Cat))\nTEXT:\tIf someone is blue and kind then they like the rabbit.\nFOL:\tall x. (Blue(x) & Kind(x) -> Likes(x, Rabbit))\nTEXT:\tIf someone likes the cat and they chase the mouse then they like the bald eagle.\nFOL:\tall x. (Likes(x, Cat) & Chases(x, Mouse) -> Likes(x, BaldEagle))\nTEXT:\tIf someone is cold then they visit the mouse.\nFOL:\tall x. (Cold(x) -> Visits(x, Mouse))\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-Cold(BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the rabbit.\nFOL:\tVisits(BaldEagle, Rabbit)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit likes the cat.\nFOL:\tLikes(Rabbit, Cat)\nTEXT:\tIf someone likes the cat then the cat visits the mouse.\nFOL:\tall x. (Likes(x, Cat) -> Visits(Cat, Mouse))\nTEXT:\tIf someone visits the mouse and they like the cat then the mouse visits the bald eagle.\nFOL:\tall x. ((Visits(x, Mouse) & Likes(x, Cat)) -> Visits(Mouse, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and the bald eagle visits the mouse then the bald eagle chases the mouse.\nFOL:\tall x. ((Likes(x, BaldEagle) & Visits(BaldEagle, Mouse)) -> Chases(BaldEagle, Mouse))\nTEXT:\tIf the bald eagle likes the cat then the bald eagle is cold.\nFOL:\t(Likes(BaldEagle, Cat) -> Cold(BaldEagle))\nTEXT:\tIf someone visits the bald eagle and they chase the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. ((Visits(x, BaldEagle) & Chases(x, BaldEagle)) -> Chases(BaldEagle, Cat))\nTEXT:\tIf someone chases the cat then they like the cat.\nFOL:\tall x. (Chases(x, Cat) -> Likes(x, Cat))\nTEXT:\tIf someone is blue and kind then they like the rabbit.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Likes(x, Rabbit))\nTEXT:\tIf someone likes the cat and they chase the mouse then they like the bald eagle.\nFOL:\tall x. ((Likes(x, Cat) & Chases(x, Mouse)) -> Likes(x, BaldEagle))\nTEXT:\tIf someone is cold then they visit the mouse.\nFOL:\tall x. (Cold(x) -> Visits(x, Mouse))\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-Cold(BaldEagle)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Dave is big then Dave is white.\nFOL:\tBig(Dave) -> White(Dave)\nTEXT:\tAll cold, round people are rough.\nFOL:\tall x. (Cold(x) & Round(x) -> Rough(x))\nTEXT:\tSmart, white people are cold.\nFOL:\tall x. (Smart(x) & White(x) -> Cold(x))\nTEXT:\tIf Dave is round and Dave is big then Dave is smart.\nFOL:\t(Round(Dave) & Big(Dave)) -> Smart(Dave)\nTEXT:\tIf someone is nice then they are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tAll rough, white people are nice.\nFOL:\tall x. (Rough(x) & White(x) -> Nice(x))\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Dave is big then Dave is white.\nFOL:\tBig(Dave) -> White(Dave)\nTEXT:\tAll cold, round people are rough.\nFOL:\tall x. (Cold(x) & Round(x) -> Rough(x))\nTEXT:\tSmart, white people are cold.\nFOL:\tall x. (Smart(x) & White(x) -> Cold(x))\nTEXT:\tIf Dave is round and Dave is big then Dave is smart.\nFOL:\t(Round(Dave) & Big(Dave)) -> Smart(Dave)\nTEXT:\tIf someone is nice then they are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tAll rough, white people are nice.\nFOL:\tall x. (Rough(x) & White(x) -> Nice(x))\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Dave is big then Dave is white.\nFOL:\tBig(Dave) -> White(Dave)\nTEXT:\tAll cold, round people are rough.\nFOL:\tall x. (Cold(x) & Round(x) -> Rough(x))\nTEXT:\tSmart, white people are cold.\nFOL:\tall x. (Smart(x) & White(x) -> Cold(x))\nTEXT:\tIf Dave is round and Dave is big then Dave is smart.\nFOL:\t(Round(Dave) & Big(Dave)) -> Smart(Dave)\nTEXT:\tIf someone is nice then they are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tAll rough, white people are nice.\nFOL:\tall x. (Rough(x) & White(x) -> Nice(x))\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Dave is big then Dave is white.\nFOL:\tBig(Dave) -> White(Dave)\nTEXT:\tAll cold, round people are rough.\nFOL:\tall x. (Cold(x) & Round(x) -> Rough(x))\nTEXT:\tSmart, white people are cold.\nFOL:\tall x. (Smart(x) & White(x) -> Cold(x))\nTEXT:\tIf Dave is round and Dave is big then Dave is smart.\nFOL:\t(Round(Dave) & Big(Dave)) -> Smart(Dave)\nTEXT:\tIf someone is nice then they are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tAll rough, white people are nice.\nFOL:\tall x. (Rough(x) & White(x) -> Nice(x))\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Dave is big then Dave is white.\nFOL:\tBig(Dave) -> White(Dave)\nTEXT:\tAll cold, round people are rough.\nFOL:\tall x. (Cold(x) & Round(x) -> Rough(x))\nTEXT:\tSmart, white people are cold.\nFOL:\tall x. (Smart(x) & White(x) -> Cold(x))\nTEXT:\tIf Dave is round and Dave is big then Dave is smart.\nFOL:\t(Round(Dave) & Big(Dave)) -> Smart(Dave)\nTEXT:\tIf someone is nice then they are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tAll rough, white people are nice.\nFOL:\tall x. (Rough(x) & White(x) -> Nice(x))\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll cold, nice things are blue.\nFOL:\tall x. ((Cold(x) & Nice(x)) -> Blue(x))\nTEXT:\tCold things are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tAll blue, smart things are red.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Red(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll cold, nice things are blue.\nFOL:\tall x. (Cold(x) & Nice(x) -> Blue(x))\nTEXT:\tCold things are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tAll blue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll cold, nice things are blue.\nFOL:\tall x. ((Cold(x) & Nice(x)) -> Blue(x))\nTEXT:\tCold things are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tAll blue, smart things are red.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Red(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll cold, nice things are blue.\nFOL:\tall x. (Cold(x) & Nice(x) -> Blue(x))\nTEXT:\tCold things are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tAll blue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll cold, nice things are blue.\nFOL:\tall x. (Cold(x) & Nice(x) -> Blue(x))\nTEXT:\tCold things are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tSmart things are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tAll blue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf someone needs the rabbit then the rabbit likes the bear.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Bear))\nTEXT:\tIf someone needs the rabbit and they chase the dog then they need the bear.\nFOL:\tall x. ((Needs(x, Rabbit) & Chases(x, Dog)) -> Needs(x, Bear))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the bear and they are blue then they chase the rabbit.\nFOL:\tall x. ((Likes(x, Bear) & Blue(x)) -> Chases(x, Rabbit))\nTEXT:\tIf the rabbit likes the dog then the dog is kind.\nFOL:\t(Likes(Rabbit, Dog) -> Kind(Dog))\nTEXT:\tIf someone chases the dog then the dog likes the cow.\nFOL:\tall x. (Chases(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf someone likes the dog then they are round.\nFOL:\tall x. (Likes(x, Dog) -> Round(x))\nTEXT:\tIf the rabbit likes the dog and the rabbit chases the cow then the dog likes the cow.\nFOL:\t((Likes(Rabbit, Dog) & Chases(Rabbit, Cow)) -> Likes(Dog, Cow))\nTEXT:\tIf someone needs the dog and the dog is kind then the dog needs the rabbit.\nFOL:\tall x. ((Needs(x, Dog) & Kind(Dog)) -> Needs(Dog, Rabbit))\nTEXT:\tThe dog does not need the rabbit.\nFOL:\t-Needs(Dog, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf someone needs the rabbit then the rabbit likes the bear.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Bear))\nTEXT:\tIf someone needs the rabbit and they chase the dog then they need the bear.\nFOL:\tall x. ((Needs(x, Rabbit) & Chases(x, Dog)) -> Needs(x, Bear))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the bear and they are blue then they chase the rabbit.\nFOL:\tall x. ((Likes(x, Bear) & Blue(x)) -> Chases(x, Rabbit))\nTEXT:\tIf the rabbit likes the dog then the dog is kind.\nFOL:\t(Likes(Rabbit, Dog) -> Kind(Dog))\nTEXT:\tIf someone chases the dog then the dog likes the cow.\nFOL:\tall x. (Chases(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf someone likes the dog then they are round.\nFOL:\tall x. (Likes(x, Dog) -> Round(x))\nTEXT:\tIf the rabbit likes the dog and the rabbit chases the cow then the dog likes the cow.\nFOL:\t((Likes(Rabbit, Dog) & Chases(Rabbit, Cow)) -> Likes(Dog, Cow))\nTEXT:\tIf someone needs the dog and the dog is kind then the dog needs the rabbit.\nFOL:\tall x. ((Needs(x, Dog) & Kind(Dog)) -> Needs(Dog, Rabbit))\nTEXT:\tThe dog does not need the rabbit.\nFOL:\t-Needs(Dog, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf someone needs the rabbit then the rabbit likes the bear.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Bear))\nTEXT:\tIf someone needs the rabbit and they chase the dog then they need the bear.\nFOL:\tall x. (Needs(x, Rabbit) & Chases(x, Dog) -> Needs(x, Bear))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the bear and they are blue then they chase the rabbit.\nFOL:\tall x. (Likes(x, Bear) & Blue(x) -> Chases(x, Rabbit))\nTEXT:\tIf the rabbit likes the dog then the dog is kind.\nFOL:\tLikes(Rabbit, Dog) -> Kind(Dog)\nTEXT:\tIf someone chases the dog then the dog likes the cow.\nFOL:\tall x. (Chases(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf someone likes the dog then they are round.\nFOL:\tall x. (Likes(x, Dog) -> Round(x))\nTEXT:\tIf the rabbit likes the dog and the rabbit chases the cow then the dog likes the cow.\nFOL:\t(Likes(Rabbit, Dog) & Chases(Rabbit, Cow)) -> Likes(Dog, Cow)\nTEXT:\tIf someone needs the dog and the dog is kind then the dog needs the rabbit.\nFOL:\tall x. (Needs(x, Dog) & Kind(Dog) -> Needs(Dog, Rabbit))\nTEXT:\tThe dog does not need the rabbit.\nFOL:\t-Needs(Dog, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf someone needs the rabbit then the rabbit likes the bear.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Bear))\nTEXT:\tIf someone needs the rabbit and they chase the dog then they need the bear.\nFOL:\tall x. (Needs(x, Rabbit) & Chases(x, Dog) -> Needs(x, Bear))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the bear and they are blue then they chase the rabbit.\nFOL:\tall x. (Likes(x, Bear) & Blue(x) -> Chases(x, Rabbit))\nTEXT:\tIf the rabbit likes the dog then the dog is kind.\nFOL:\t(Likes(Rabbit, Dog) -> Kind(Dog))\nTEXT:\tIf someone chases the dog then the dog likes the cow.\nFOL:\tall x. (Chases(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf someone likes the dog then they are round.\nFOL:\tall x. (Likes(x, Dog) -> Round(x))\nTEXT:\tIf the rabbit likes the dog and the rabbit chases the cow then the dog likes the cow.\nFOL:\t(Likes(Rabbit, Dog) & Chases(Rabbit, Cow) -> Likes(Dog, Cow))\nTEXT:\tIf someone needs the dog and the dog is kind then the dog needs the rabbit.\nFOL:\tall x. (Needs(x, Dog) & Kind(Dog) -> Needs(Dog, Rabbit))\nTEXT:\tThe dog does not need the rabbit.\nFOL:\t-Needs(Dog, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf someone needs the rabbit then the rabbit likes the bear.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Bear))\nTEXT:\tIf someone needs the rabbit and they chase the dog then they need the bear.\nFOL:\tall x. (Needs(x, Rabbit) & Chases(x, Dog) -> Needs(x, Bear))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the bear and they are blue then they chase the rabbit.\nFOL:\tall x. (Likes(x, Bear) & Blue(x) -> Chases(x, Rabbit))\nTEXT:\tIf the rabbit likes the dog then the dog is kind.\nFOL:\tLikes(Rabbit, Dog) -> Kind(Dog)\nTEXT:\tIf someone chases the dog then the dog likes the cow.\nFOL:\tall x. (Chases(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf someone likes the dog then they are round.\nFOL:\tall x. (Likes(x, Dog) -> Round(x))\nTEXT:\tIf the rabbit likes the dog and the rabbit chases the cow then the dog likes the cow.\nFOL:\t(Likes(Rabbit, Dog) & Chases(Rabbit, Cow)) -> Likes(Dog, Cow)\nTEXT:\tIf someone needs the dog and the dog is kind then the dog needs the rabbit.\nFOL:\tall x. (Needs(x, Dog) & Kind(Dog) -> Needs(Dog, Rabbit))\nTEXT:\tThe dog does not need the rabbit.\nFOL:\t-Needs(Dog, Rabbit)\nANSWER:\tFalse\n"], ["TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is not rough.\nFOL:\t-Rough(Bob)\nTEXT:\tBob is not round.\nFOL:\t-Round(Bob)\nTEXT:\tErin is not kind.\nFOL:\t-Kind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tAll big, round people are rough.\nFOL:\tall x. (Big(x) & Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and not green then they are quiet.\nFOL:\tall x. (Rough(x) & -Green(x) -> Quiet(x))\nTEXT:\tIf someone is round and rough then they are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough, quiet people are big.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is round and kind then they are furry.\nFOL:\tall x. (Round(x) & Kind(x) -> Furry(x))\nTEXT:\tIf someone is big and not quiet then they are furry.\nFOL:\tall x. (Big(x) & -Quiet(x) -> Furry(x))\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is not rough.\nFOL:\t-Rough(Bob)\nTEXT:\tBob is not round.\nFOL:\t-Round(Bob)\nTEXT:\tErin is not kind.\nFOL:\t-Kind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tAll big, round people are rough.\nFOL:\tall x. (Big(x) & Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and not green then they are quiet.\nFOL:\tall x. (Rough(x) & -Green(x) -> Quiet(x))\nTEXT:\tIf someone is round and rough then they are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough, quiet people are big.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is round and kind then they are furry.\nFOL:\tall x. (Round(x) & Kind(x) -> Furry(x))\nTEXT:\tIf someone is big and not quiet then they are furry.\nFOL:\tall x. (Big(x) & -Quiet(x) -> Furry(x))\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is not rough.\nFOL:\t-Rough(Bob)\nTEXT:\tBob is not round.\nFOL:\t-Round(Bob)\nTEXT:\tErin is not kind.\nFOL:\t-Kind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tAll big, round people are rough.\nFOL:\tall x. (Big(x) & Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and not green then they are quiet.\nFOL:\tall x. (Rough(x) & -Green(x) -> Quiet(x))\nTEXT:\tIf someone is round and rough then they are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough, quiet people are big.\nFOL:\tall x. ((Rough(x) & Quiet(x)) -> Big(x))\nTEXT:\tIf someone is round and kind then they are furry.\nFOL:\tall x. (Round(x) & Kind(x) -> Furry(x))\nTEXT:\tIf someone is big and not quiet then they are furry.\nFOL:\tall x. (Big(x) & -Quiet(x) -> Furry(x))\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is not rough.\nFOL:\t-Rough(Bob)\nTEXT:\tBob is not round.\nFOL:\t-Round(Bob)\nTEXT:\tErin is not kind.\nFOL:\t-Kind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tAll big, round people are rough.\nFOL:\tall x. ((Big(x) & Round(x)) -> Rough(x))\nTEXT:\tIf someone is rough and not green then they are quiet.\nFOL:\tall x. ((Rough(x) & -Green(x)) -> Quiet(x))\nTEXT:\tIf someone is round and rough then they are quiet.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Quiet(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough, quiet people are big.\nFOL:\tall x. ((Rough(x) & Quiet(x)) -> Big(x))\nTEXT:\tIf someone is round and kind then they are furry.\nFOL:\tall x. ((Round(x) & Kind(x)) -> Furry(x))\nTEXT:\tIf someone is big and not quiet then they are furry.\nFOL:\tall x. ((Big(x) & -Quiet(x)) -> Furry(x))\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is not rough.\nFOL:\t-Rough(Bob)\nTEXT:\tBob is not round.\nFOL:\t-Round(Bob)\nTEXT:\tErin is not kind.\nFOL:\t-Kind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tAll big, round people are rough.\nFOL:\tall x. (Big(x) & Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and not green then they are quiet.\nFOL:\tall x. (Rough(x) & -Green(x) -> Quiet(x))\nTEXT:\tIf someone is round and rough then they are quiet.\nFOL:\tall x. (Round(x) & Rough(x) -> Quiet(x))\nTEXT:\tAll big people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough, quiet people are big.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is round and kind then they are furry.\nFOL:\tall x. (Round(x) & Kind(x) -> Furry(x))\nTEXT:\tIf someone is big and not quiet then they are furry.\nFOL:\tall x. (Big(x) & -Quiet(x) -> Furry(x))\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is nice.\nFOL:\tNice(Dog)\nTEXT:\tThe dog visits the bald eagle.\nFOL:\tVisits(Dog, BaldEagle)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tIf the tiger visits the bear then the bear likes the bald eagle.\nFOL:\tall x. (Tiger(x) & Visits(x, Bear) -> Likes(Bear, BaldEagle))\nTEXT:\tIf someone is blue and rough then they eat the tiger.\nFOL:\tall x. (Blue(x) & Rough(x) -> Eats(x, Tiger))\nTEXT:\tIf someone is nice and they like the bear then they visit the bear.\nFOL:\tall x. (Nice(x) & Likes(x, Bear) -> Visits(x, Bear))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf the dog is big and the dog is not rough then the dog likes the tiger.\nFOL:\tall x. (Dog(x) & Big(x) & -Rough(x) -> Likes(x, Tiger))\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is nice.\nFOL:\tNice(Dog)\nTEXT:\tThe dog visits the bald eagle.\nFOL:\tVisits(Dog, BaldEagle)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tIf the tiger visits the bear then the bear likes the bald eagle.\nFOL:\tall x. all y. ((Tiger(x) & Visits(x, y) & Bear(y)) -> Likes(y, BaldEagle))\nTEXT:\tIf someone is blue and rough then they eat the tiger.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Eats(x, Tiger))\nTEXT:\tIf someone is nice and they like the bear then they visit the bear.\nFOL:\tall x. ((Nice(x) & Likes(x, Bear)) -> Visits(x, Bear))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. ((Likes(x, BaldEagle)) -> Likes(x, Bear))\nTEXT:\tIf the dog is big and the dog is not rough then the dog likes the tiger.\nFOL:\tall x. ((Dog(x) & Big(x) & -Rough(x)) -> Likes(x, Tiger))\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is nice.\nFOL:\tNice(Dog)\nTEXT:\tThe dog visits the bald eagle.\nFOL:\tVisits(Dog, BaldEagle)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tIf the tiger visits the bear then the bear likes the bald eagle.\nFOL:\tall x. (Visits(x, Bear) & Tiger(x) -> Likes(Bear, BaldEagle))\nTEXT:\tIf someone is blue and rough then they eat the tiger.\nFOL:\tall x. (Blue(x) & Rough(x) -> Eats(x, Tiger))\nTEXT:\tIf someone is nice and they like the bear then they visit the bear.\nFOL:\tall x. (Nice(x) & Likes(x, Bear) -> Visits(x, Bear))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf the dog is big and the dog is not rough then the dog likes the tiger.\nFOL:\tall x. (Dog(x) & Big(x) & -Rough(x) -> Likes(x, Tiger))\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is nice.\nFOL:\tNice(Dog)\nTEXT:\tThe dog visits the bald eagle.\nFOL:\tVisits(Dog, BaldEagle)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tIf the tiger visits the bear then the bear likes the bald eagle.\nFOL:\tVisits(Tiger, Bear) -> Likes(Bear, BaldEagle)\nTEXT:\tIf someone is blue and rough then they eat the tiger.\nFOL:\tall x. (Blue(x) & Rough(x) -> Eats(x, Tiger))\nTEXT:\tIf someone is nice and they like the bear then they visit the bear.\nFOL:\tall x. (Nice(x) & Likes(x, Bear) -> Visits(x, Bear))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf the dog is big and the dog is not rough then the dog likes the tiger.\nFOL:\tBig(Dog) & -Rough(Dog) -> Likes(Dog, Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is nice.\nFOL:\tNice(Dog)\nTEXT:\tThe dog visits the bald eagle.\nFOL:\tVisits(Dog, BaldEagle)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tIf the tiger visits the bear then the bear likes the bald eagle.\nFOL:\tVisits(Tiger, Bear) -> Likes(Bear, BaldEagle)\nTEXT:\tIf someone is blue and rough then they eat the tiger.\nFOL:\tall x. (Blue(x) & Rough(x) -> Eats(x, Tiger))\nTEXT:\tIf someone is nice and they like the bear then they visit the bear.\nFOL:\tall x. (Nice(x) & Likes(x, Bear) -> Visits(x, Bear))\nTEXT:\tIf someone likes the bald eagle then they like the bear.\nFOL:\tall x. (Likes(x, BaldEagle) -> Likes(x, Bear))\nTEXT:\tIf the dog is big and the dog is not rough then the dog likes the tiger.\nFOL:\tBig(Dog) & -Rough(Dog) -> Likes(Dog, Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tBlue, furry people are kind.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Kind(x))\nTEXT:\tCold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tKind, blue people are young.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Young(x))\nTEXT:\tKind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCold, furry people are blue.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Blue(x))\nTEXT:\tRed people are cold.\nFOL:\tall x. (Red(x) -> Cold(x))\nTEXT:\tIf Harry is furry and Harry is not kind then Harry is young.\nFOL:\t((Furry(Harry) & -Kind(Harry)) -> Young(Harry))\nTEXT:\tIf Erin is kind and Erin is rough then Erin is young.\nFOL:\t((Kind(Erin) & Rough(Erin)) -> Young(Erin))\nTEXT:\tAll blue, young people are not rough.\nFOL:\tall x. ((Blue(x) & Young(x)) -> -Rough(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tBlue, furry people are kind.\nFOL:\tall x. (Blue(x) & Furry(x) -> Kind(x))\nTEXT:\tCold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tKind, blue people are young.\nFOL:\tall x. (Kind(x) & Blue(x) -> Young(x))\nTEXT:\tKind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCold, furry people are blue.\nFOL:\tall x. (Cold(x) & Furry(x) -> Blue(x))\nTEXT:\tRed people are cold.\nFOL:\tall x. (Red(x) -> Cold(x))\nTEXT:\tIf Harry is furry and Harry is not kind then Harry is young.\nFOL:\t(Furry(Harry) & -Kind(Harry)) -> Young(Harry)\nTEXT:\tIf Erin is kind and Erin is rough then Erin is young.\nFOL:\t(Kind(Erin) & Rough(Erin)) -> Young(Erin)\nTEXT:\tAll blue, young people are not rough.\nFOL:\tall x. (Blue(x) & Young(x) -> -Rough(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tBlue, furry people are kind.\nFOL:\tall x. (Blue(x) & Furry(x) -> Kind(x))\nTEXT:\tCold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tKind, blue people are young.\nFOL:\tall x. (Kind(x) & Blue(x) -> Young(x))\nTEXT:\tKind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCold, furry people are blue.\nFOL:\tall x. (Cold(x) & Furry(x) -> Blue(x))\nTEXT:\tRed people are cold.\nFOL:\tall x. (Red(x) -> Cold(x))\nTEXT:\tIf Harry is furry and Harry is not kind then Harry is young.\nFOL:\t(Furry(Harry) & -Kind(Harry)) -> Young(Harry)\nTEXT:\tIf Erin is kind and Erin is rough then Erin is young.\nFOL:\t(Kind(Erin) & Rough(Erin)) -> Young(Erin)\nTEXT:\tAll blue, young people are not rough.\nFOL:\tall x. ((Blue(x) & Young(x)) -> -Rough(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tBlue, furry people are kind.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Kind(x))\nTEXT:\tCold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tKind, blue people are young.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Young(x))\nTEXT:\tKind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCold, furry people are blue.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Blue(x))\nTEXT:\tRed people are cold.\nFOL:\tall x. (Red(x) -> Cold(x))\nTEXT:\tIf Harry is furry and Harry is not kind then Harry is young.\nFOL:\t(Furry(Harry) & -Kind(Harry)) -> Young(Harry)\nTEXT:\tIf Erin is kind and Erin is rough then Erin is young.\nFOL:\t(Kind(Erin) & Rough(Erin)) -> Young(Erin)\nTEXT:\tAll blue, young people are not rough.\nFOL:\tall x. ((Blue(x) & Young(x)) -> -Rough(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tBlue, furry people are kind.\nFOL:\tall x. (Blue(x) & Furry(x) -> Kind(x))\nTEXT:\tCold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tKind, blue people are young.\nFOL:\tall x. (Kind(x) & Blue(x) -> Young(x))\nTEXT:\tKind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCold, furry people are blue.\nFOL:\tall x. (Cold(x) & Furry(x) -> Blue(x))\nTEXT:\tRed people are cold.\nFOL:\tall x. (Red(x) -> Cold(x))\nTEXT:\tIf Harry is furry and Harry is not kind then Harry is young.\nFOL:\t(Furry(Harry) & -Kind(Harry)) -> Young(Harry)\nTEXT:\tIf Erin is kind and Erin is rough then Erin is young.\nFOL:\t(Kind(Erin) & Rough(Erin)) -> Young(Erin)\nTEXT:\tAll blue, young people are not rough.\nFOL:\tall x. (Blue(x) & Young(x) -> -Rough(x))\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tYoung things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is white.\nFOL:\tall x. ((Red(x) & Smart(x)) -> White(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tBig, rough things are round.\nFOL:\tall x. ((Big(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tSmart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tYoung things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is white.\nFOL:\tall x. ((Red(x) & Smart(x)) -> White(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tBig, rough things are round.\nFOL:\tall x. ((Big(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tSmart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tYoung things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is white.\nFOL:\tall x. ((Red(x) & Smart(x)) -> White(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tBig, rough things are round.\nFOL:\tall x. ((Big(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tSmart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tYoung things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is white.\nFOL:\tall x. ((Red(x) & Smart(x)) -> White(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tBig, rough things are round.\nFOL:\tall x. ((Big(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tSmart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tYoung things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is white.\nFOL:\tall x. (Red(x) & Smart(x) -> White(x))\nTEXT:\tBig things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tBig, rough things are round.\nFOL:\tall x. (Big(x) & Rough(x) -> Round(x))\nTEXT:\tAll smart, white things are red.\nFOL:\tall x. (Smart(x) & White(x) -> Red(x))\nTEXT:\tSmart things are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf someone is red then they are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tWhite, nice people are young.\nFOL:\tall x. ((White(x) & Nice(x)) -> Young(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tAll green, nice people are white.\nFOL:\tall x. ((Green(x) & Nice(x)) -> White(x))\nTEXT:\tGreen, young people are white.\nFOL:\tall x. ((Green(x) & Young(x)) -> White(x))\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf someone is red then they are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tWhite, nice people are young.\nFOL:\tall x. (White(x) & Nice(x) -> Young(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tAll green, nice people are white.\nFOL:\tall x. (Green(x) & Nice(x) -> White(x))\nTEXT:\tGreen, young people are white.\nFOL:\tall x. (Green(x) & Young(x) -> White(x))\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf someone is red then they are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tWhite, nice people are young.\nFOL:\tall x. ((White(x) & Nice(x)) -> Young(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tAll green, nice people are white.\nFOL:\tall x. ((Green(x) & Nice(x)) -> White(x))\nTEXT:\tGreen, young people are white.\nFOL:\tall x. ((Green(x) & Young(x)) -> White(x))\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf someone is red then they are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tWhite, nice people are young.\nFOL:\tall x. (White(x) & Nice(x) -> Young(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tAll green, nice people are white.\nFOL:\tall x. (Green(x) & Nice(x) -> White(x))\nTEXT:\tGreen, young people are white.\nFOL:\tall x. (Green(x) & Young(x) -> White(x))\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf someone is red then they are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tWhite, nice people are young.\nFOL:\tall x. ((White(x) & Nice(x)) -> Young(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tAll green, nice people are white.\nFOL:\tall x. ((Green(x) & Nice(x)) -> White(x))\nTEXT:\tGreen, young people are white.\nFOL:\tall x. ((Green(x) & Young(x)) -> White(x))\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tThe tiger visits the rabbit.\nFOL:\tVisits(Tiger, Rabbit)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone sees the rabbit then the rabbit sees the tiger.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Tiger))\nTEXT:\tIf someone visits the tiger and the tiger visits the rabbit then the tiger is kind.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(Tiger, Rabbit)) -> Kind(Tiger))\nTEXT:\tIf someone chases the bald eagle then they chase the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(x, Squirrel))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is green and they visit the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Green(x) & Visits(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf someone chases the squirrel then they see the tiger.\nFOL:\tall x. (Chases(x, Squirrel) -> Sees(x, Tiger))\nTEXT:\tIf someone chases the bald eagle and they are green then they see the tiger.\nFOL:\tall x. ((Chases(x, BaldEagle) & Green(x)) -> Sees(x, Tiger))\nTEXT:\tIf someone is kind then they visit the tiger.\nFOL:\tall x. (Kind(x) -> Visits(x, Tiger))\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChase(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSee(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSee(BaldEagle, Tiger)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChase(Rabbit, BaldEagle)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisit(Rabbit, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSee(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSee(Squirrel, Rabbit)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisit(Squirrel, Rabbit)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSee(Tiger, Squirrel)\nTEXT:\tThe tiger visits the rabbit.\nFOL:\tVisit(Tiger, Rabbit)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisit(Tiger, Squirrel)\nTEXT:\tIf someone sees the rabbit then the rabbit sees the tiger.\nFOL:\tall x. (See(x, Rabbit) -> See(Rabbit, Tiger))\nTEXT:\tIf someone visits the tiger and the tiger visits the rabbit then the tiger is kind.\nFOL:\tall x. ((Visit(x, Tiger) & Visit(Tiger, Rabbit)) -> Kind(Tiger))\nTEXT:\tIf someone chases the bald eagle then they chase the squirrel.\nFOL:\tall x. (Chase(x, BaldEagle) -> Chase(x, Squirrel))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chase(x, BaldEagle))\nTEXT:\tIf someone is green and they visit the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Green(x) & Visit(x, Rabbit)) -> Chase(Rabbit, Tiger))\nTEXT:\tIf someone chases the squirrel then they see the tiger.\nFOL:\tall x. (Chase(x, Squirrel) -> See(x, Tiger))\nTEXT:\tIf someone chases the bald eagle and they are green then they see the tiger.\nFOL:\tall x. ((Chase(x, BaldEagle) & Green(x)) -> See(x, Tiger))\nTEXT:\tIf someone is kind then they visit the tiger.\nFOL:\tall x. (Kind(x) -> Visit(x, Tiger))\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisit(BaldEagle, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChase(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSee(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSee(BaldEagle, Tiger)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChase(Rabbit, BaldEagle)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisit(Rabbit, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSee(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSee(Squirrel, Rabbit)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisit(Squirrel, Rabbit)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSee(Tiger, Squirrel)\nTEXT:\tThe tiger visits the rabbit.\nFOL:\tVisit(Tiger, Rabbit)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisit(Tiger, Squirrel)\nTEXT:\tIf someone sees the rabbit then the rabbit sees the tiger.\nFOL:\tall x. (See(x, Rabbit) -> See(Rabbit, Tiger))\nTEXT:\tIf someone visits the tiger and the tiger visits the rabbit then the tiger is kind.\nFOL:\tall x. (Visit(x, Tiger) & Visit(Tiger, Rabbit) -> Kind(Tiger))\nTEXT:\tIf someone chases the bald eagle then they chase the squirrel.\nFOL:\tall x. (Chase(x, BaldEagle) -> Chase(x, Squirrel))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chase(x, BaldEagle))\nTEXT:\tIf someone is green and they visit the rabbit then the rabbit chases the tiger.\nFOL:\tall x. (Green(x) & Visit(x, Rabbit) -> Chase(Rabbit, Tiger))\nTEXT:\tIf someone chases the squirrel then they see the tiger.\nFOL:\tall x. (Chase(x, Squirrel) -> See(x, Tiger))\nTEXT:\tIf someone chases the bald eagle and they are green then they see the tiger.\nFOL:\tall x. (Chase(x, BaldEagle) & Green(x) -> See(x, Tiger))\nTEXT:\tIf someone is kind then they visit the tiger.\nFOL:\tall x. (Kind(x) -> Visit(x, Tiger))\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisit(BaldEagle, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tThe tiger visits the rabbit.\nFOL:\tVisits(Tiger, Rabbit)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone sees the rabbit then the rabbit sees the tiger.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Tiger))\nTEXT:\tIf someone visits the tiger and the tiger visits the rabbit then the tiger is kind.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(Tiger, Rabbit)) -> Kind(Tiger))\nTEXT:\tIf someone chases the bald eagle then they chase the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(x, Squirrel))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is green and they visit the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Green(x) & Visits(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf someone chases the squirrel then they see the tiger.\nFOL:\tall x. (Chases(x, Squirrel) -> Sees(x, Tiger))\nTEXT:\tIf someone chases the bald eagle and they are green then they see the tiger.\nFOL:\tall x. ((Chases(x, BaldEagle) & Green(x)) -> Sees(x, Tiger))\nTEXT:\tIf someone is kind then they visit the tiger.\nFOL:\tall x. (Kind(x) -> Visits(x, Tiger))\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe rabbit chases the bald eagle.\nFOL:\tChases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tThe tiger visits the rabbit.\nFOL:\tVisits(Tiger, Rabbit)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone sees the rabbit then the rabbit sees the tiger.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Tiger))\nTEXT:\tIf someone visits the tiger and the tiger visits the rabbit then the tiger is kind.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(Tiger, Rabbit)) -> Kind(Tiger))\nTEXT:\tIf someone chases the bald eagle then they chase the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(x, Squirrel))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tIf someone is green and they visit the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Green(x) & Visits(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf someone chases the squirrel then they see the tiger.\nFOL:\tall x. (Chases(x, Squirrel) -> Sees(x, Tiger))\nTEXT:\tIf someone chases the bald eagle and they are green then they see the tiger.\nFOL:\tall x. ((Chases(x, BaldEagle) & Green(x)) -> Sees(x, Tiger))\nTEXT:\tIf someone is kind then they visit the tiger.\nFOL:\tall x. (Kind(x) -> Visits(x, Tiger))\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll big, furry things are white.\nFOL:\tall x. (Big(x) & Furry(x) -> White(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is smart and furry then it is round.\nFOL:\tall x. (Smart(x) & Furry(x) -> Round(x))\nTEXT:\tIf something is white and smart then it is big.\nFOL:\tall x. (White(x) & Smart(x) -> Big(x))\nTEXT:\tAll white things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green things are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll big, furry things are white.\nFOL:\tall x. ((Big(x) & Furry(x)) -> White(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is smart and furry then it is round.\nFOL:\tall x. ((Smart(x) & Furry(x)) -> Round(x))\nTEXT:\tIf something is white and smart then it is big.\nFOL:\tall x. ((White(x) & Smart(x)) -> Big(x))\nTEXT:\tAll white things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green things are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll big, furry things are white.\nFOL:\tall x. ((Big(x) & Furry(x)) -> White(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is smart and furry then it is round.\nFOL:\tall x. ((Smart(x) & Furry(x)) -> Round(x))\nTEXT:\tIf something is white and smart then it is big.\nFOL:\tall x. ((White(x) & Smart(x)) -> Big(x))\nTEXT:\tAll white things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green things are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll big, furry things are white.\nFOL:\tall x. (Big(x) & Furry(x) -> White(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is smart and furry then it is round.\nFOL:\tall x. (Smart(x) & Furry(x) -> Round(x))\nTEXT:\tIf something is white and smart then it is big.\nFOL:\tall x. (White(x) & Smart(x) -> Big(x))\nTEXT:\tAll white things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green things are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tAll big, furry things are white.\nFOL:\tall x. ((Big(x) & Furry(x)) -> White(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tIf something is smart and furry then it is round.\nFOL:\tall x. ((Smart(x) & Furry(x)) -> Round(x))\nTEXT:\tIf something is white and smart then it is big.\nFOL:\tall x. ((White(x) & Smart(x)) -> Big(x))\nTEXT:\tAll white things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green things are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll blue things are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tGreen, big things are quiet.\nFOL:\tall x. ((Green(x) & Big(x)) -> Quiet(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Blue(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and green then it is big.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Big(x))\nTEXT:\tWhite, green things are big.\nFOL:\tall x. ((White(x) & Green(x)) -> Big(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tAll rough, blue things are green.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Green(x))\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll blue things are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tGreen, big things are quiet.\nFOL:\tall x. ((Green(x) & Big(x)) -> Quiet(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Blue(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and green then it is big.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Big(x))\nTEXT:\tWhite, green things are big.\nFOL:\tall x. ((White(x) & Green(x)) -> Big(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tAll rough, blue things are green.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Green(x))\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll blue things are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tGreen, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. (Green(x) & Nice(x) -> Blue(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and green then it is big.\nFOL:\tall x. (Rough(x) & Green(x) -> Big(x))\nTEXT:\tWhite, green things are big.\nFOL:\tall x. (White(x) & Green(x) -> Big(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tAll rough, blue things are green.\nFOL:\tall x. (Rough(x) & Blue(x) -> Green(x))\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll blue things are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tGreen, big things are quiet.\nFOL:\tall x. ((Green(x) & Big(x)) -> Quiet(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Blue(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and green then it is big.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Big(x))\nTEXT:\tWhite, green things are big.\nFOL:\tall x. ((White(x) & Green(x)) -> Big(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tAll rough, blue things are green.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Green(x))\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll blue things are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tGreen, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. (Green(x) & Nice(x) -> Blue(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and green then it is big.\nFOL:\tall x. (Rough(x) & Green(x) -> Big(x))\nTEXT:\tWhite, green things are big.\nFOL:\tall x. (White(x) & Green(x) -> Big(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tAll rough, blue things are green.\nFOL:\tall x. (Rough(x) & Blue(x) -> Green(x))\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the cat.\nFOL:\tVisits(BaldEagle, Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf someone is cold then they visit the cow.\nFOL:\tall x. (Cold(x) -> Visits(x, Cow))\nTEXT:\tIf someone visits the tiger then they see the bald eagle.\nFOL:\tall x. (Visits(x, Tiger) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is young and they visit the cow then the cow is cold.\nFOL:\tall x. ((Young(x) & Visits(x, Cow)) -> Cold(Cow))\nTEXT:\tIf someone is round then they visit the bald eagle.\nFOL:\tall x. (Round(x) -> Visits(x, BaldEagle))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone visits the cat and the cat needs the cow then they need the cow.\nFOL:\tall x. ((Visits(x, Cat) & Needs(Cat, Cow)) -> Needs(x, Cow))\nTEXT:\tRound people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone sees the cat then they need the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Needs(x, BaldEagle))\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the cat.\nFOL:\tVisits(BaldEagle, Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf someone is cold then they visit the cow.\nFOL:\tall x. (Cold(x) -> Visits(x, Cow))\nTEXT:\tIf someone visits the tiger then they see the bald eagle.\nFOL:\tall x. (Visits(x, Tiger) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is young and they visit the cow then the cow is cold.\nFOL:\tall x. ((Young(x) & Visits(x, Cow)) -> Cold(Cow))\nTEXT:\tIf someone is round then they visit the bald eagle.\nFOL:\tall x. (Round(x) -> Visits(x, BaldEagle))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone visits the cat and the cat needs the cow then they need the cow.\nFOL:\tall x. ((Visits(x, Cat) & Needs(Cat, Cow)) -> Needs(x, Cow))\nTEXT:\tRound people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone sees the cat then they need the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Needs(x, BaldEagle))\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the cat.\nFOL:\tVisits(BaldEagle, Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf someone is cold then they visit the cow.\nFOL:\tall x. (Cold(x) -> Visits(x, Cow))\nTEXT:\tIf someone visits the tiger then they see the bald eagle.\nFOL:\tall x. (Visits(x, Tiger) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is young and they visit the cow then the cow is cold.\nFOL:\tall x. (Young(x) & Visits(x, Cow) -> Cold(Cow))\nTEXT:\tIf someone is round then they visit the bald eagle.\nFOL:\tall x. (Round(x) -> Visits(x, BaldEagle))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone visits the cat and the cat needs the cow then they need the cow.\nFOL:\tall x. (Visits(x, Cat) & Needs(Cat, Cow) -> Needs(x, Cow))\nTEXT:\tRound people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone sees the cat then they need the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Needs(x, BaldEagle))\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the cat.\nFOL:\tVisits(BaldEagle, Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf someone is cold then they visit the cow.\nFOL:\tall x. (Cold(x) -> Visits(x, Cow))\nTEXT:\tIf someone visits the tiger then they see the bald eagle.\nFOL:\tall x. (Visits(x, Tiger) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is young and they visit the cow then the cow is cold.\nFOL:\tall x. ((Young(x) & Visits(x, Cow)) -> Cold(Cow))\nTEXT:\tIf someone is round then they visit the bald eagle.\nFOL:\tall x. (Round(x) -> Visits(x, BaldEagle))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone visits the cat and the cat needs the cow then they need the cow.\nFOL:\tall x. ((Visits(x, Cat) & Needs(Cat, Cow)) -> Needs(x, Cow))\nTEXT:\tRound people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone sees the cat then they need the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Needs(x, BaldEagle))\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the cat.\nFOL:\tVisits(BaldEagle, Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow needs the bald eagle.\nFOL:\tNeeds(Cow, BaldEagle)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf someone is cold then they visit the cow.\nFOL:\tall x. (Cold(x) -> Visits(x, Cow))\nTEXT:\tIf someone visits the tiger then they see the bald eagle.\nFOL:\tall x. (Visits(x, Tiger) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is young and they visit the cow then the cow is cold.\nFOL:\tall x. (Young(x) & Visits(x, Cow) -> Cold(Cow))\nTEXT:\tIf someone is round then they visit the bald eagle.\nFOL:\tall x. (Round(x) -> Visits(x, BaldEagle))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone visits the cat and the cat needs the cow then they need the cow.\nFOL:\tall x. (Visits(x, Cat) & Needs(Cat, Cow) -> Needs(x, Cow))\nTEXT:\tRound people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone sees the cat then they need the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Needs(x, BaldEagle))\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t- Likes(Mouse, Squirrel)\nTEXT:\tThe mouse visits the cow.\nFOL:\tVisits(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf someone likes the squirrel then they chase the lion.\nFOL:\tall x. (Likes(x, Squirrel) -> Chases(x, Lion))\nTEXT:\tIf someone visits the squirrel then the squirrel chases the lion.\nFOL:\tall x. (Visits(x, Squirrel) -> Chases(Squirrel, Lion))\nTEXT:\tIf someone likes the lion and they visit the mouse then the lion visits the squirrel.\nFOL:\tall x. ((Likes(x, Lion) & Visits(x, Mouse)) -> Visits(Lion, Squirrel))\nTEXT:\tAll red people are not round.\nFOL:\tall x. (Red(x) -> -Round(x))\nTEXT:\tAll nice, kind people are young.\nFOL:\tall x. ((Nice(x) & Kind(x)) -> Young(x))\nTEXT:\tIf the lion likes the mouse and the lion is red then the lion is not nice.\nFOL:\t((Likes(Lion, Mouse) & Red(Lion)) -> -Nice(Lion))\nTEXT:\tIf someone chases the squirrel and the squirrel likes the cow then the cow likes the squirrel.\nFOL:\tall x. ((Chases(x, Squirrel) & Likes(Squirrel, Cow)) -> Likes(Cow, Squirrel))\nTEXT:\tIf someone is young then they like the lion.\nFOL:\tall x. (Young(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the lion and the lion visits the cow then the cow is nice.\nFOL:\tall x. ((Chases(x, Lion) & Visits(Lion, Cow)) -> Nice(Cow))\nTEXT:\tThe cow is not nice.\nFOL:\t-Nice(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nTEXT:\tThe mouse visits the cow.\nFOL:\tVisits(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf someone likes the squirrel then they chase the lion.\nFOL:\tall x. (Likes(x, Squirrel) -> Chases(x, Lion))\nTEXT:\tIf someone visits the squirrel then the squirrel chases the lion.\nFOL:\tall x. (Visits(x, Squirrel) -> Chases(Squirrel, Lion))\nTEXT:\tIf someone likes the lion and they visit the mouse then the lion visits the squirrel.\nFOL:\tall x. ((Likes(x, Lion) & Visits(x, Mouse)) -> Visits(Lion, Squirrel))\nTEXT:\tAll red people are not round.\nFOL:\tall x. (Red(x) -> -Round(x))\nTEXT:\tAll nice, kind people are young.\nFOL:\tall x. ((Nice(x) & Kind(x)) -> Young(x))\nTEXT:\tIf the lion likes the mouse and the lion is red then the lion is not nice.\nFOL:\t(Likes(Lion, Mouse) & Red(Lion)) -> -Nice(Lion)\nTEXT:\tIf someone chases the squirrel and the squirrel likes the cow then the cow likes the squirrel.\nFOL:\tall x. ((Chases(x, Squirrel) & Likes(Squirrel, Cow)) -> Likes(Cow, Squirrel))\nTEXT:\tIf someone is young then they like the lion.\nFOL:\tall x. (Young(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the lion and the lion visits the cow then the cow is nice.\nFOL:\tall x. ((Chases(x, Lion) & Visits(Lion, Cow)) -> Nice(Cow))\nTEXT:\tThe cow is not nice.\nFOL:\t-Nice(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nTEXT:\tThe mouse visits the cow.\nFOL:\tVisits(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf someone likes the squirrel then they chase the lion.\nFOL:\tall x. (Likes(x, Squirrel) -> Chases(x, Lion))\nTEXT:\tIf someone visits the squirrel then the squirrel chases the lion.\nFOL:\tall x. (Visits(x, Squirrel) -> Chases(Squirrel, Lion))\nTEXT:\tIf someone likes the lion and they visit the mouse then the lion visits the squirrel.\nFOL:\tall x. ((Likes(x, Lion) & Visits(x, Mouse)) -> Visits(Lion, Squirrel))\nTEXT:\tAll red people are not round.\nFOL:\tall x. (Red(x) -> -Round(x))\nTEXT:\tAll nice, kind people are young.\nFOL:\tall x. (Nice(x) & Kind(x) -> Young(x))\nTEXT:\tIf the lion likes the mouse and the lion is red then the lion is not nice.\nFOL:\t((Likes(Lion, Mouse) & Red(Lion)) -> -Nice(Lion))\nTEXT:\tIf someone chases the squirrel and the squirrel likes the cow then the cow likes the squirrel.\nFOL:\tall x. ((Chases(x, Squirrel) & Likes(Squirrel, Cow)) -> Likes(Cow, Squirrel))\nTEXT:\tIf someone is young then they like the lion.\nFOL:\tall x. (Young(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the lion and the lion visits the cow then the cow is nice.\nFOL:\tall x. ((Chases(x, Lion) & Visits(Lion, Cow)) -> Nice(Cow))\nTEXT:\tThe cow is not nice.\nFOL:\t-Nice(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nTEXT:\tThe mouse visits the cow.\nFOL:\tVisits(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf someone likes the squirrel then they chase the lion.\nFOL:\tall x. (Likes(x, Squirrel) -> Chases(x, Lion))\nTEXT:\tIf someone visits the squirrel then the squirrel chases the lion.\nFOL:\tall x. (Visits(x, Squirrel) -> Chases(Squirrel, Lion))\nTEXT:\tIf someone likes the lion and they visit the mouse then the lion visits the squirrel.\nFOL:\tall x. (Likes(x, Lion) & Visits(x, Mouse) -> Visits(Lion, Squirrel))\nTEXT:\tAll red people are not round.\nFOL:\tall x. (Red(x) -> -Round(x))\nTEXT:\tAll nice, kind people are young.\nFOL:\tall x. (Nice(x) & Kind(x) -> Young(x))\nTEXT:\tIf the lion likes the mouse and the lion is red then the lion is not nice.\nFOL:\t(Likes(Lion, Mouse) & Red(Lion) -> -Nice(Lion))\nTEXT:\tIf someone chases the squirrel and the squirrel likes the cow then the cow likes the squirrel.\nFOL:\tall x. (Chases(x, Squirrel) & Likes(Squirrel, Cow) -> Likes(Cow, Squirrel))\nTEXT:\tIf someone is young then they like the lion.\nFOL:\tall x. (Young(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the lion and the lion visits the cow then the cow is nice.\nFOL:\tall x. (Chases(x, Lion) & Visits(Lion, Cow) -> Nice(Cow))\nTEXT:\tThe cow is not nice.\nFOL:\t-Nice(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow is kind.\nFOL:\tKind(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the lion.\nFOL:\tVisits(Cow, Lion)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion visits the cow.\nFOL:\tVisits(Lion, Cow)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t- Likes(Mouse, Squirrel)\nTEXT:\tThe mouse visits the cow.\nFOL:\tVisits(Mouse, Cow)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf someone likes the squirrel then they chase the lion.\nFOL:\tall x. (Likes(x, Squirrel) -> Chases(x, Lion))\nTEXT:\tIf someone visits the squirrel then the squirrel chases the lion.\nFOL:\tall x. (Visits(x, Squirrel) -> Chases(Squirrel, Lion))\nTEXT:\tIf someone likes the lion and they visit the mouse then the lion visits the squirrel.\nFOL:\tall x. ((Likes(x, Lion) & Visits(x, Mouse)) -> Visits(Lion, Squirrel))\nTEXT:\tAll red people are not round.\nFOL:\tall x. (Red(x) -> -Round(x))\nTEXT:\tAll nice, kind people are young.\nFOL:\tall x. (Nice(x) & Kind(x) -> Young(x))\nTEXT:\tIf the lion likes the mouse and the lion is red then the lion is not nice.\nFOL:\t((Likes(Lion, Mouse) & Red(Lion)) -> -Nice(Lion))\nTEXT:\tIf someone chases the squirrel and the squirrel likes the cow then the cow likes the squirrel.\nFOL:\tall x. ((Chases(x, Squirrel) & Likes(Squirrel, Cow)) -> Likes(Cow, Squirrel))\nTEXT:\tIf someone is young then they like the lion.\nFOL:\tall x. (Young(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the lion and the lion visits the cow then the cow is nice.\nFOL:\tall x. ((Chases(x, Lion) & Visits(Lion, Cow)) -> Nice(Cow))\nTEXT:\tThe cow is not nice.\nFOL:\t-Nice(Cow)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is big and young then they are blue.\nFOL:\tall x. ((Big(x) & Young(x)) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are young.\nFOL:\tall x. ((Furry(x) & Nice(x)) -> Young(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Dave is furry then Dave is big.\nFOL:\tFurry(Dave) -> Big(Dave)\nTEXT:\tNice, blue people are big.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll young people are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is big and young then they are blue.\nFOL:\tall x. (Big(x) & Young(x) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are young.\nFOL:\tall x. (Furry(x) & Nice(x) -> Young(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Dave is furry then Dave is big.\nFOL:\tFurry(Dave) -> Big(Dave)\nTEXT:\tNice, blue people are big.\nFOL:\tall x. (Nice(x) & Blue(x) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll young people are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is big and young then they are blue.\nFOL:\tall x. ((Big(x) & Young(x)) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are young.\nFOL:\tall x. ((Furry(x) & Nice(x)) -> Young(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Dave is furry then Dave is big.\nFOL:\t(Furry(Dave) -> Big(Dave))\nTEXT:\tNice, blue people are big.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll young people are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is big and young then they are blue.\nFOL:\tall x. ((Big(x) & Young(x)) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are young.\nFOL:\tall x. ((Furry(x) & Nice(x)) -> Young(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Dave is furry then Dave is big.\nFOL:\tFurry(Dave) -> Big(Dave)\nTEXT:\tNice, blue people are big.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll young people are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is big and young then they are blue.\nFOL:\tall x. (Big(x) & Young(x) -> Blue(x))\nTEXT:\tIf someone is furry and nice then they are young.\nFOL:\tall x. (Furry(x) & Nice(x) -> Young(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Dave is furry then Dave is big.\nFOL:\tFurry(Dave) -> Big(Dave)\nTEXT:\tNice, blue people are big.\nFOL:\tall x. (Nice(x) & Blue(x) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf someone is big then they are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll young people are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf something is quiet and red then it is blue.\nFOL:\tall x. (Quiet(x) & Red(x) -> Blue(x))\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is blue.\nFOL:\tall x. (Red(x) & Smart(x) -> Blue(x))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tAll young things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tIf something is young and red then it is quiet.\nFOL:\tall x. (Young(x) & Red(x) -> Quiet(x))\nTEXT:\tAll smart things are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Bob is quiet then Bob is smart.\nFOL:\tQuiet(Bob) -> Smart(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf something is quiet and red then it is blue.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Blue(x))\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is blue.\nFOL:\tall x. ((Red(x) & Smart(x)) -> Blue(x))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tAll young things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tIf something is young and red then it is quiet.\nFOL:\tall x. ((Young(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll smart things are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Bob is quiet then Bob is smart.\nFOL:\t(Quiet(Bob) -> Smart(Bob))\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf something is quiet and red then it is blue.\nFOL:\tall x. (Quiet(x) & Red(x) -> Blue(x))\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is blue.\nFOL:\tall x. (Red(x) & Smart(x) -> Blue(x))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tAll young things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tIf something is young and red then it is quiet.\nFOL:\tall x. (Young(x) & Red(x) -> Quiet(x))\nTEXT:\tAll smart things are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Bob is quiet then Bob is smart.\nFOL:\tQuiet(Bob) -> Smart(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf something is quiet and red then it is blue.\nFOL:\tall x. (Quiet(x) & Red(x) -> Blue(x))\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is blue.\nFOL:\tall x. (Red(x) & Smart(x) -> Blue(x))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tAll young things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tIf something is young and red then it is quiet.\nFOL:\tall x. (Young(x) & Red(x) -> Quiet(x))\nTEXT:\tAll smart things are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Bob is quiet then Bob is smart.\nFOL:\tQuiet(Bob) -> Smart(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf something is quiet and red then it is blue.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Blue(x))\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red and smart then it is blue.\nFOL:\tall x. ((Red(x) & Smart(x)) -> Blue(x))\nTEXT:\tBlue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tAll young things are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tIf something is young and red then it is quiet.\nFOL:\tall x. ((Young(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll smart things are quiet.\nFOL:\tall x. (Smart(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Bob is quiet then Bob is smart.\nFOL:\tQuiet(Bob) -> Smart(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe lion needs the mouse.\nFOL:\tNeeds(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse needs the lion.\nFOL:\tNeeds(Mouse, Lion)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe mouse does not see the tiger.\nFOL:\t-See(Mouse, Tiger)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger does not eat the mouse.\nFOL:\t-Eats(Tiger, Mouse)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf the squirrel needs the tiger and the tiger eats the lion then the lion is nice.\nFOL:\tall x. all y. (Needs(x, Tiger) & Eats(Tiger, y) -> Nice(y))\nTEXT:\tIf something is cold then it eats the mouse.\nFOL:\tall x. (Cold(x) -> Eats(x, Mouse))\nTEXT:\tIf something sees the squirrel and it sees the tiger then the tiger sees the squirrel.\nFOL:\tall x. (Sees(x, Squirrel) & Sees(x, Tiger) -> Sees(Tiger, Squirrel))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something eats the lion then it is rough.\nFOL:\tall x. (Eats(x, Lion) -> Rough(x))\nTEXT:\tIf something is nice then it eats the lion.\nFOL:\tall x. (Nice(x) -> Eats(x, Lion))\nTEXT:\tIf the lion needs the squirrel and the lion eats the tiger then the lion is green.\nFOL:\tNeeds(Lion, Squirrel) & Eats(Lion, Tiger) -> Green(Lion)\nTEXT:\tIf the lion is rough then the lion does not eat the mouse.\nFOL:\tRough(Lion) -> -Eats(Lion, Mouse)\nTEXT:\tIf something eats the lion then the lion eats the tiger.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Tiger))\nTEXT:\tThe lion does not need the squirrel.\nFOL:\t-Needs(Lion, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe lion needs the mouse.\nFOL:\tNeeds(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse needs the lion.\nFOL:\tNeeds(Mouse, Lion)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe mouse does not see the tiger.\nFOL:\t-See(Mouse, Tiger)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger does not eat the mouse.\nFOL:\t-Eat(Tiger, Mouse)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf the squirrel needs the tiger and the tiger eats the lion then the lion is nice.\nFOL:\tall x. (Needs(Squirrel, Tiger) & Eats(Tiger, Lion) -> Nice(Lion))\nTEXT:\tIf something is cold then it eats the mouse.\nFOL:\tall x. (Cold(x) -> Eats(x, Mouse))\nTEXT:\tIf something sees the squirrel and it sees the tiger then the tiger sees the squirrel.\nFOL:\tall x. (Sees(x, Squirrel) & Sees(x, Tiger) -> Sees(Tiger, Squirrel))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something eats the lion then it is rough.\nFOL:\tall x. (Eats(x, Lion) -> Rough(x))\nTEXT:\tIf something is nice then it eats the lion.\nFOL:\tall x. (Nice(x) -> Eats(x, Lion))\nTEXT:\tIf the lion needs the squirrel and the lion eats the tiger then the lion is green.\nFOL:\t(Needs(Lion, Squirrel) & Eats(Lion, Tiger) -> Green(Lion))\nTEXT:\tIf the lion is rough then the lion does not eat the mouse.\nFOL:\t(Rough(Lion) -> -Eat(Lion, Mouse))\nTEXT:\tIf something eats the lion then the lion eats the tiger.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Tiger))\nTEXT:\tThe lion does not need the squirrel.\nFOL:\t-Needs(Lion, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe lion needs the mouse.\nFOL:\tNeeds(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse needs the lion.\nFOL:\tNeeds(Mouse, Lion)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe mouse does not see the tiger.\nFOL:\t-Sees(Mouse, Tiger)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger does not eat the mouse.\nFOL:\t-Eats(Tiger, Mouse)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf the squirrel needs the tiger and the tiger eats the lion then the lion is nice.\nFOL:\tall x. (Needs(x, Tiger) & Eats(Tiger, Lion) -> Nice(Lion))\nTEXT:\tIf something is cold then it eats the mouse.\nFOL:\tall x. (Cold(x) -> Eats(x, Mouse))\nTEXT:\tIf something sees the squirrel and it sees the tiger then the tiger sees the squirrel.\nFOL:\tall x. (Sees(x, Squirrel) & Sees(x, Tiger) -> Sees(Tiger, Squirrel))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something eats the lion then it is rough.\nFOL:\tall x. (Eats(x, Lion) -> Rough(x))\nTEXT:\tIf something is nice then it eats the lion.\nFOL:\tall x. (Nice(x) -> Eats(x, Lion))\nTEXT:\tIf the lion needs the squirrel and the lion eats the tiger then the lion is green.\nFOL:\tall x. (Needs(Lion, Squirrel) & Eats(Lion, Tiger) -> Green(Lion))\nTEXT:\tIf the lion is rough then the lion does not eat the mouse.\nFOL:\tall x. (Rough(Lion) -> -Eats(Lion, Mouse))\nTEXT:\tIf something eats the lion then the lion eats the tiger.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Tiger))\nTEXT:\tThe lion does not need the squirrel.\nFOL:\t-Needs(Lion, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe lion needs the mouse.\nFOL:\tNeeds(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse needs the lion.\nFOL:\tNeeds(Mouse, Lion)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe mouse does not see the tiger.\nFOL:\t-Sees(Mouse, Tiger)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger does not eat the mouse.\nFOL:\t-Eats(Tiger, Mouse)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf the squirrel needs the tiger and the tiger eats the lion then the lion is nice.\nFOL:\t(Needs(Squirrel, Tiger) & Eats(Tiger, Lion)) -> Nice(Lion)\nTEXT:\tIf something is cold then it eats the mouse.\nFOL:\tall x. (Cold(x) -> Eats(x, Mouse))\nTEXT:\tIf something sees the squirrel and it sees the tiger then the tiger sees the squirrel.\nFOL:\tall x. ((Sees(x, Squirrel) & Sees(x, Tiger)) -> Sees(Tiger, Squirrel))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something eats the lion then it is rough.\nFOL:\tall x. (Eats(x, Lion) -> Rough(x))\nTEXT:\tIf something is nice then it eats the lion.\nFOL:\tall x. (Nice(x) -> Eats(x, Lion))\nTEXT:\tIf the lion needs the squirrel and the lion eats the tiger then the lion is green.\nFOL:\t(Needs(Lion, Squirrel) & Eats(Lion, Tiger)) -> Green(Lion)\nTEXT:\tIf the lion is rough then the lion does not eat the mouse.\nFOL:\tRough(Lion) -> -Eats(Lion, Mouse)\nTEXT:\tIf something eats the lion then the lion eats the tiger.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Tiger))\nTEXT:\tThe lion does not need the squirrel.\nFOL:\t-Needs(Lion, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe lion needs the mouse.\nFOL:\tNeeds(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse needs the lion.\nFOL:\tNeeds(Mouse, Lion)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe mouse does not see the tiger.\nFOL:\t-Sees(Mouse, Tiger)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger does not eat the mouse.\nFOL:\t-Eats(Tiger, Mouse)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf the squirrel needs the tiger and the tiger eats the lion then the lion is nice.\nFOL:\tall x. (Needs(x, Tiger) & Eats(Tiger, Lion) -> Nice(Lion))\nTEXT:\tIf something is cold then it eats the mouse.\nFOL:\tall x. (Cold(x) -> Eats(x, Mouse))\nTEXT:\tIf something sees the squirrel and it sees the tiger then the tiger sees the squirrel.\nFOL:\tall x. (Sees(x, Squirrel) & Sees(x, Tiger) -> Sees(Tiger, Squirrel))\nTEXT:\tIf something is cold then it is rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tIf something eats the lion then it is rough.\nFOL:\tall x. (Eats(x, Lion) -> Rough(x))\nTEXT:\tIf something is nice then it eats the lion.\nFOL:\tall x. (Nice(x) -> Eats(x, Lion))\nTEXT:\tIf the lion needs the squirrel and the lion eats the tiger then the lion is green.\nFOL:\t(Needs(Lion, Squirrel) & Eats(Lion, Tiger) -> Green(Lion))\nTEXT:\tIf the lion is rough then the lion does not eat the mouse.\nFOL:\t(Rough(Lion) -> -Eats(Lion, Mouse))\nTEXT:\tIf something eats the lion then the lion eats the tiger.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Tiger))\nTEXT:\tThe lion does not need the squirrel.\nFOL:\t-Needs(Lion, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat likes the bear.\nFOL:\tLikes(Cat, Bear)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tIf the cat likes the bear and the cat chases the dog then the dog likes the cat.\nFOL:\tall x. (Likes(x, Bear) & Chases(x, Dog) -> Likes(Dog, x))\nTEXT:\tIf someone likes the cat then the cat sees the bear.\nFOL:\tall x. (Likes(x, Cat) -> Sees(Cat, Bear))\nTEXT:\tIf someone sees the bear then they chase the dog.\nFOL:\tall x. (Sees(x, Bear) -> Chases(x, Dog))\nTEXT:\tIf the cat is red then the cat likes the bear.\nFOL:\tall x. (Red(x) -> Likes(x, Bear))\nTEXT:\tIf someone chases the bear then the bear sees the dog.\nFOL:\tall x. (Chases(x, Bear) -> Sees(Bear, Dog))\nTEXT:\tIf someone likes the cat then they chase the cow.\nFOL:\tall x. (Likes(x, Cat) -> Chases(x, Cow))\nTEXT:\tIf someone chases the cow and the cow chases the dog then they are red.\nFOL:\tall x. (Chases(x, Cow) & Chases(Cow, Dog) -> Red(x))\nTEXT:\tIf the cow is green then the cow chases the cat.\nFOL:\tall x. (Green(x) -> Chases(x, Cat))\nTEXT:\tIf someone likes the dog and they see the bear then the bear is young.\nFOL:\tall x. (Likes(x, Dog) & Sees(x, Bear) -> Young(Bear))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat likes the bear.\nFOL:\tLikes(Cat, Bear)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tIf the cat likes the bear and the cat chases the dog then the dog likes the cat.\nFOL:\t(Likes(Cat, Bear) & Chases(Cat, Dog)) -> Likes(Dog, Cat)\nTEXT:\tIf someone likes the cat then the cat sees the bear.\nFOL:\tall x. (Likes(x, Cat) -> Sees(Cat, Bear))\nTEXT:\tIf someone sees the bear then they chase the dog.\nFOL:\tall x. (Sees(x, Bear) -> Chases(x, Dog))\nTEXT:\tIf the cat is red then the cat likes the bear.\nFOL:\tRed(Cat) -> Likes(Cat, Bear)\nTEXT:\tIf someone chases the bear then the bear sees the dog.\nFOL:\tall x. (Chases(x, Bear) -> Sees(Bear, Dog))\nTEXT:\tIf someone likes the cat then they chase the cow.\nFOL:\tall x. (Likes(x, Cat) -> Chases(x, Cow))\nTEXT:\tIf someone chases the cow and the cow chases the dog then they are red.\nFOL:\tall x. ((Chases(x, Cow) & Chases(Cow, Dog)) -> Red(x))\nTEXT:\tIf the cow is green then the cow chases the cat.\nFOL:\tGreen(Cow) -> Chases(Cow, Cat)\nTEXT:\tIf someone likes the dog and they see the bear then the bear is young.\nFOL:\tall x. ((Likes(x, Dog) & Sees(x, Bear)) -> Young(Bear))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat likes the bear.\nFOL:\tLikes(Cat, Bear)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tIf the cat likes the bear and the cat chases the dog then the dog likes the cat.\nFOL:\tall x. (Likes(x, Bear) & Chases(x, Dog) -> Likes(Dog, x))\nTEXT:\tIf someone likes the cat then the cat sees the bear.\nFOL:\tall x. (Likes(x, Cat) -> Sees(Cat, Bear))\nTEXT:\tIf someone sees the bear then they chase the dog.\nFOL:\tall x. (Sees(x, Bear) -> Chases(x, Dog))\nTEXT:\tIf the cat is red then the cat likes the bear.\nFOL:\tRed(Cat) -> Likes(Cat, Bear)\nTEXT:\tIf someone chases the bear then the bear sees the dog.\nFOL:\tall x. (Chases(x, Bear) -> Sees(Bear, Dog))\nTEXT:\tIf someone likes the cat then they chase the cow.\nFOL:\tall x. (Likes(x, Cat) -> Chases(x, Cow))\nTEXT:\tIf someone chases the cow and the cow chases the dog then they are red.\nFOL:\tall x. (Chases(x, Cow) & Chases(Cow, Dog) -> Red(x))\nTEXT:\tIf the cow is green then the cow chases the cat.\nFOL:\tGreen(Cow) -> Chases(Cow, Cat)\nTEXT:\tIf someone likes the dog and they see the bear then the bear is young.\nFOL:\tall x. (Likes(x, Dog) & Sees(x, Bear) -> Young(Bear))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat likes the bear.\nFOL:\tLikes(Cat, Bear)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tIf the cat likes the bear and the cat chases the dog then the dog likes the cat.\nFOL:\tall x. all y. ((Likes(x, Bear) & Chases(x, y) & Cat(x) & Dog(y)) -> Likes(y, x))\nTEXT:\tIf someone likes the cat then the cat sees the bear.\nFOL:\tall x. ((Likes(x, Cat)) -> Sees(Cat, Bear))\nTEXT:\tIf someone sees the bear then they chase the dog.\nFOL:\tall x. (Sees(x, Bear) -> Chases(x, Dog))\nTEXT:\tIf the cat is red then the cat likes the bear.\nFOL:\tRed(Cat) -> Likes(Cat, Bear)\nTEXT:\tIf someone chases the bear then the bear sees the dog.\nFOL:\tall x. (Chases(x, Bear) -> Sees(Bear, Dog))\nTEXT:\tIf someone likes the cat then they chase the cow.\nFOL:\tall x. (Likes(x, Cat) -> Chases(x, Cow))\nTEXT:\tIf someone chases the cow and the cow chases the dog then they are red.\nFOL:\tall x. ((Chases(x, Cow) & Chases(Cow, Dog)) -> Red(x))\nTEXT:\tIf the cow is green then the cow chases the cat.\nFOL:\tGreen(Cow) -> Chases(Cow, Cat)\nTEXT:\tIf someone likes the dog and they see the bear then the bear is young.\nFOL:\tall x. ((Likes(x, Dog) & Sees(x, Bear)) -> Young(Bear))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat likes the bear.\nFOL:\tLikes(Cat, Bear)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tIf the cat likes the bear and the cat chases the dog then the dog likes the cat.\nFOL:\tall x. ((Likes(x, Bear) & Chases(x, Dog)) -> Likes(Dog, x))\nTEXT:\tIf someone likes the cat then the cat sees the bear.\nFOL:\tall x. (Likes(x, Cat) -> Sees(Cat, Bear))\nTEXT:\tIf someone sees the bear then they chase the dog.\nFOL:\tall x. (Sees(x, Bear) -> Chases(x, Dog))\nTEXT:\tIf the cat is red then the cat likes the bear.\nFOL:\tRed(Cat) -> Likes(Cat, Bear)\nTEXT:\tIf someone chases the bear then the bear sees the dog.\nFOL:\tall x. (Chases(x, Bear) -> Sees(Bear, Dog))\nTEXT:\tIf someone likes the cat then they chase the cow.\nFOL:\tall x. (Likes(x, Cat) -> Chases(x, Cow))\nTEXT:\tIf someone chases the cow and the cow chases the dog then they are red.\nFOL:\tall x. ((Chases(x, Cow) & Chases(Cow, Dog)) -> Red(x))\nTEXT:\tIf the cow is green then the cow chases the cat.\nFOL:\tGreen(Cow) -> Chases(Cow, Cat)\nTEXT:\tIf someone likes the dog and they see the bear then the bear is young.\nFOL:\tall x. ((Likes(x, Dog) & Sees(x, Bear)) -> Young(Bear))\nTEXT:\tThe cat does not chase the dog.\nFOL:\t-Chases(Cat, Dog)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tAll green people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tRed, green people are nice.\nFOL:\tall x. (Red(x) & Green(x) -> Nice(x))\nTEXT:\tIf someone is smart and red then they are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tGreen, smart people are blue.\nFOL:\tall x. (Green(x) & Smart(x) -> Blue(x))\nTEXT:\tIf Anne is quiet then Anne is young.\nFOL:\tQuiet(Anne) -> Young(Anne)\nTEXT:\tAll young people are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll nice, smart people are red.\nFOL:\tall x. (Nice(x) & Smart(x) -> Red(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tAll green people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tRed, green people are nice.\nFOL:\tall x. ((Red(x) & Green(x)) -> Nice(x))\nTEXT:\tIf someone is smart and red then they are green.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Green(x))\nTEXT:\tIf someone is young then they are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tGreen, smart people are blue.\nFOL:\tall x. ((Green(x) & Smart(x)) -> Blue(x))\nTEXT:\tIf Anne is quiet then Anne is young.\nFOL:\t(Quiet(Anne) -> Young(Anne))\nTEXT:\tAll young people are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll nice, smart people are red.\nFOL:\tall x. ((Nice(x) & Smart(x)) -> Red(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tAll green people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tRed, green people are nice.\nFOL:\tall x. (Red(x) & Green(x) -> Nice(x))\nTEXT:\tIf someone is smart and red then they are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tGreen, smart people are blue.\nFOL:\tall x. (Green(x) & Smart(x) -> Blue(x))\nTEXT:\tIf Anne is quiet then Anne is young.\nFOL:\tQuiet(Anne) -> Young(Anne)\nTEXT:\tAll young people are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll nice, smart people are red.\nFOL:\tall x. (Nice(x) & Smart(x) -> Red(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tAll green people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tRed, green people are nice.\nFOL:\tall x. (Red(x) & Green(x) -> Nice(x))\nTEXT:\tIf someone is smart and red then they are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tIf someone is young then they are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tGreen, smart people are blue.\nFOL:\tall x. (Green(x) & Smart(x) -> Blue(x))\nTEXT:\tIf Anne is quiet then Anne is young.\nFOL:\t(Quiet(Anne) -> Young(Anne))\nTEXT:\tAll young people are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll nice, smart people are red.\nFOL:\tall x. (Nice(x) & Smart(x) -> Red(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tAll green people are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf someone is quiet then they are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tRed, green people are nice.\nFOL:\tall x. ((Red(x) & Green(x)) -> Nice(x))\nTEXT:\tIf someone is smart and red then they are green.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Green(x))\nTEXT:\tIf someone is young then they are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tGreen, smart people are blue.\nFOL:\tall x. ((Green(x) & Smart(x)) -> Blue(x))\nTEXT:\tIf Anne is quiet then Anne is young.\nFOL:\tQuiet(Anne) -> Young(Anne)\nTEXT:\tAll young people are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll nice, smart people are red.\nFOL:\tall x. ((Nice(x) & Smart(x)) -> Red(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll young things are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tWhite things are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll nice, green things are kind.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Kind(x))\nTEXT:\tIf something is young then it is furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tAll kind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll nice, green things are white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tIf something is cold and kind then it is green.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll young things are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tWhite things are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll nice, green things are kind.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Kind(x))\nTEXT:\tIf something is young then it is furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tAll kind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll nice, green things are white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tIf something is cold and kind then it is green.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll young things are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tWhite things are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll nice, green things are kind.\nFOL:\tall x. (Nice(x) & Green(x) -> Kind(x))\nTEXT:\tIf something is young then it is furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tAll kind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll nice, green things are white.\nFOL:\tall x. (Nice(x) & Green(x) -> White(x))\nTEXT:\tIf something is cold and kind then it is green.\nFOL:\tall x. (Cold(x) & Kind(x) -> Green(x))\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. (Nice(x) & Young(x) -> Furry(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll young things are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tWhite things are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll nice, green things are kind.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Kind(x))\nTEXT:\tIf something is young then it is furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tAll kind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll nice, green things are white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tIf something is cold and kind then it is green.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll young things are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tWhite things are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll nice, green things are kind.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Kind(x))\nTEXT:\tIf something is young then it is furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tAll kind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll nice, green things are white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tIf something is cold and kind then it is green.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is nice and young then it is furry.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Furry(x))\nTEXT:\tFurry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is not big.\nFOL:\t-Big(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle does not like the lion.\nFOL:\t-Likes(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tIf someone likes the lion then they see the dog.\nFOL:\tall x. (Likes(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf the cow is cold and the cow sees the dog then the dog sees the bald eagle.\nFOL:\t(Cold(Cow) & Sees(Cow, Dog) -> Sees(Dog, BaldEagle))\nTEXT:\tIf the cow sees the dog then the dog is big.\nFOL:\t(Sees(Cow, Dog) -> Big(Dog))\nTEXT:\tIf someone sees the dog and the dog is green then the dog sees the lion.\nFOL:\tall x. ((Sees(x, Dog) & Green(Dog)) -> Sees(Dog, Lion))\nTEXT:\tIf someone likes the dog then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, Dog) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone sees the bald eagle then the bald eagle is not kind.\nFOL:\tall x. (Sees(x, BaldEagle) -> -Kind(BaldEagle))\nTEXT:\tIf someone is big then they like the lion.\nFOL:\tall x. (Big(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the cow and the cow is cold then they are green.\nFOL:\tall x. ((Chases(x, Cow) & Cold(Cow)) -> Green(x))\nTEXT:\tIf someone sees the bald eagle and they see the cow then the bald eagle likes the dog.\nFOL:\tall x. ((Sees(x, BaldEagle) & Sees(x, Cow)) -> Likes(BaldEagle, Dog))\nTEXT:\tThe bald eagle chases the bald eagle.\nFOL:\tChases(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not big.\nFOL:\t-Big(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle does not like the lion.\nFOL:\t-Like(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSee(BaldEagle, Dog)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLike(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSee(Dog, Cow)\nTEXT:\tThe lion chases the dog.\nFOL:\tChase(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSee(Lion, BaldEagle)\nTEXT:\tThe lion sees the cow.\nFOL:\tSee(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSee(Lion, Dog)\nTEXT:\tIf someone likes the lion then they see the dog.\nFOL:\tall x. (Like(x, Lion) -> See(x, Dog))\nTEXT:\tIf the cow is cold and the cow sees the dog then the dog sees the bald eagle.\nFOL:\t(Cold(Cow) & See(Cow, Dog) -> See(Dog, BaldEagle))\nTEXT:\tIf the cow sees the dog then the dog is big.\nFOL:\t(See(Cow, Dog) -> Big(Dog))\nTEXT:\tIf someone sees the dog and the dog is green then the dog sees the lion.\nFOL:\tall x. ((See(x, Dog) & Green(Dog)) -> See(Dog, Lion))\nTEXT:\tIf someone likes the dog then they do not chase the bald eagle.\nFOL:\tall x. (Like(x, Dog) -> -Chase(x, BaldEagle))\nTEXT:\tIf someone sees the bald eagle then the bald eagle is not kind.\nFOL:\tall x. (See(x, BaldEagle) -> -Kind(BaldEagle))\nTEXT:\tIf someone is big then they like the lion.\nFOL:\tall x. (Big(x) -> Like(x, Lion))\nTEXT:\tIf someone chases the cow and the cow is cold then they are green.\nFOL:\tall x. ((Chase(x, Cow) & Cold(Cow)) -> Green(x))\nTEXT:\tIf someone sees the bald eagle and they see the cow then the bald eagle likes the dog.\nFOL:\tall x. ((See(x, BaldEagle) & See(x, Cow)) -> Like(BaldEagle, Dog))\nTEXT:\tThe bald eagle chases the bald eagle.\nFOL:\tChase(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not big.\nFOL:\t-Big(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle does not like the lion.\nFOL:\t-Likes(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tIf someone likes the lion then they see the dog.\nFOL:\tall x. (Likes(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf the cow is cold and the cow sees the dog then the dog sees the bald eagle.\nFOL:\t(Cold(Cow) & Sees(Cow, Dog)) -> Sees(Dog, BaldEagle)\nTEXT:\tIf the cow sees the dog then the dog is big.\nFOL:\tSees(Cow, Dog) -> Big(Dog)\nTEXT:\tIf someone sees the dog and the dog is green then the dog sees the lion.\nFOL:\tall x. ((Sees(x, Dog) & Green(Dog)) -> Sees(Dog, Lion))\nTEXT:\tIf someone likes the dog then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, Dog) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone sees the bald eagle then the bald eagle is not kind.\nFOL:\tall x. (Sees(x, BaldEagle) -> -Kind(BaldEagle))\nTEXT:\tIf someone is big then they like the lion.\nFOL:\tall x. (Big(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the cow and the cow is cold then they are green.\nFOL:\tall x. ((Chases(x, Cow) & Cold(Cow)) -> Green(x))\nTEXT:\tIf someone sees the bald eagle and they see the cow then the bald eagle likes the dog.\nFOL:\tall x. ((Sees(x, BaldEagle) & Sees(x, Cow)) -> Likes(BaldEagle, Dog))\nTEXT:\tThe bald eagle chases the bald eagle.\nFOL:\tChases(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not big.\nFOL:\t-Big(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle does not like the lion.\nFOL:\t-Likes(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tIf someone likes the lion then they see the dog.\nFOL:\tall x. (Likes(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf the cow is cold and the cow sees the dog then the dog sees the bald eagle.\nFOL:\t(Cold(Cow) & Sees(Cow, Dog)) -> Sees(Dog, BaldEagle)\nTEXT:\tIf the cow sees the dog then the dog is big.\nFOL:\tSees(Cow, Dog) -> Big(Dog)\nTEXT:\tIf someone sees the dog and the dog is green then the dog sees the lion.\nFOL:\tall x. ((Sees(x, Dog) & Green(Dog)) -> Sees(Dog, Lion))\nTEXT:\tIf someone likes the dog then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, Dog) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone sees the bald eagle then the bald eagle is not kind.\nFOL:\tall x. (Sees(x, BaldEagle) -> -Kind(BaldEagle))\nTEXT:\tIf someone is big then they like the lion.\nFOL:\tall x. (Big(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the cow and the cow is cold then they are green.\nFOL:\tall x. ((Chases(x, Cow) & Cold(Cow)) -> Green(x))\nTEXT:\tIf someone sees the bald eagle and they see the cow then the bald eagle likes the dog.\nFOL:\tall x. ((Sees(x, BaldEagle) & Sees(x, Cow)) -> Likes(BaldEagle, Dog))\nTEXT:\tThe bald eagle chases the bald eagle.\nFOL:\tChases(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is not big.\nFOL:\t-Big(BaldEagle)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle does not like the lion.\nFOL:\t-Likes(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cow.\nFOL:\tSees(Lion, Cow)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tIf someone likes the lion then they see the dog.\nFOL:\tall x. (Likes(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf the cow is cold and the cow sees the dog then the dog sees the bald eagle.\nFOL:\tCold(Cow) & Sees(Cow, Dog) -> Sees(Dog, BaldEagle)\nTEXT:\tIf the cow sees the dog then the dog is big.\nFOL:\tSees(Cow, Dog) -> Big(Dog)\nTEXT:\tIf someone sees the dog and the dog is green then the dog sees the lion.\nFOL:\tall x. (Sees(x, Dog) & Green(Dog) -> Sees(Dog, Lion))\nTEXT:\tIf someone likes the dog then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, Dog) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone sees the bald eagle then the bald eagle is not kind.\nFOL:\tall x. (Sees(x, BaldEagle) -> -Kind(BaldEagle))\nTEXT:\tIf someone is big then they like the lion.\nFOL:\tall x. (Big(x) -> Likes(x, Lion))\nTEXT:\tIf someone chases the cow and the cow is cold then they are green.\nFOL:\tall x. (Chases(x, Cow) & Cold(Cow) -> Green(x))\nTEXT:\tIf someone sees the bald eagle and they see the cow then the bald eagle likes the dog.\nFOL:\tall x. (Sees(x, BaldEagle) & Sees(x, Cow) -> Likes(BaldEagle, Dog))\nTEXT:\tThe bald eagle chases the bald eagle.\nFOL:\tChases(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is not red.\nFOL:\t-Red(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tCold people are not big.\nFOL:\tall x. (Cold(x) -> -Big(x))\nTEXT:\tIf Erin is big then Erin is not green.\nFOL:\tBig(Erin) -> -Green(Erin)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is green and quiet then they are white.\nFOL:\tall x. (Green(x) & Quiet(x) -> White(x))\nTEXT:\tAll white people are not cold.\nFOL:\tall x. (White(x) -> -Cold(x))\nTEXT:\tIf Erin is nice then Erin is white.\nFOL:\tNice(Erin) -> White(Erin)\nTEXT:\tAll quiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is quiet and not cold then they are red.\nFOL:\tall x. (Quiet(x) & -Cold(x) -> Red(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is not red.\nFOL:\t-Red(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tCold people are not big.\nFOL:\tall x. (Cold(x) -> -Big(x))\nTEXT:\tIf Erin is big then Erin is not green.\nFOL:\tBig(Erin) -> -Green(Erin)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is green and quiet then they are white.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> White(x))\nTEXT:\tAll white people are not cold.\nFOL:\tall x. (White(x) -> -Cold(x))\nTEXT:\tIf Erin is nice then Erin is white.\nFOL:\tNice(Erin) -> White(Erin)\nTEXT:\tAll quiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is quiet and not cold then they are red.\nFOL:\tall x. ((Quiet(x) & -Cold(x)) -> Red(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is not red.\nFOL:\t-Red(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tCold people are not big.\nFOL:\tall x. (Cold(x) -> -Big(x))\nTEXT:\tIf Erin is big then Erin is not green.\nFOL:\tBig(Erin) -> -Green(Erin)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is green and quiet then they are white.\nFOL:\tall x. (Green(x) & Quiet(x) -> White(x))\nTEXT:\tAll white people are not cold.\nFOL:\tall x. (White(x) -> -Cold(x))\nTEXT:\tIf Erin is nice then Erin is white.\nFOL:\tNice(Erin) -> White(Erin)\nTEXT:\tAll quiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is quiet and not cold then they are red.\nFOL:\tall x. (Quiet(x) & -Cold(x) -> Red(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is not red.\nFOL:\t-Red(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tCold people are not big.\nFOL:\tall x. (Cold(x) -> -Big(x))\nTEXT:\tIf Erin is big then Erin is not green.\nFOL:\tBig(Erin) -> -Green(Erin)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is green and quiet then they are white.\nFOL:\tall x. (Green(x) & Quiet(x) -> White(x))\nTEXT:\tAll white people are not cold.\nFOL:\tall x. (White(x) -> -Cold(x))\nTEXT:\tIf Erin is nice then Erin is white.\nFOL:\tNice(Erin) -> White(Erin)\nTEXT:\tAll quiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is quiet and not cold then they are red.\nFOL:\tall x. (Quiet(x) & -Cold(x) -> Red(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is not red.\nFOL:\t-Red(Erin)\nTEXT:\tErin is not white.\nFOL:\t-White(Erin)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tCold people are not big.\nFOL:\tall x. (Cold(x) -> -Big(x))\nTEXT:\tIf Erin is big then Erin is not green.\nFOL:\tBig(Erin) -> -Green(Erin)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is green and quiet then they are white.\nFOL:\tall x. (Green(x) & Quiet(x) -> White(x))\nTEXT:\tAll white people are not cold.\nFOL:\tall x. (White(x) -> -Cold(x))\nTEXT:\tIf Erin is nice then Erin is white.\nFOL:\tNice(Erin) -> White(Erin)\nTEXT:\tAll quiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is quiet and not cold then they are red.\nFOL:\tall x. (Quiet(x) & -Cold(x) -> Red(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tKind, rough things are furry.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Furry(x))\nTEXT:\tAll big, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll quiet things are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tKind, rough things are furry.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Furry(x))\nTEXT:\tAll big, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll quiet things are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tKind, rough things are furry.\nFOL:\tall x. (Kind(x) & Rough(x) -> Furry(x))\nTEXT:\tAll big, quiet things are rough.\nFOL:\tall x. (Big(x) & Quiet(x) -> Rough(x))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll quiet things are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tKind, rough things are furry.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Furry(x))\nTEXT:\tAll big, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll quiet things are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tUncertain\n", "TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tKind, rough things are furry.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Furry(x))\nTEXT:\tAll big, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll quiet things are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll nice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChases(Dog, Squirrel)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog is not rough.\nFOL:\t\u00acRough(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe squirrel visits the tiger.\nFOL:\tVisits(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tIf someone is young then they do not chase the bear.\nFOL:\tall x. (Young(x) -> \u00acChases(x, Bear))\nTEXT:\tIf someone chases the tiger and the tiger chases the bear then the bear is not red.\nFOL:\tall x. (Chases(x, Tiger) & Chases(Tiger, Bear) -> \u00acRed(Bear))\nTEXT:\tIf someone visits the dog and they chase the squirrel then the squirrel is red.\nFOL:\tall x. (Visits(x, Dog) & Chases(x, Squirrel) -> Red(Squirrel))\nTEXT:\tIf someone likes the dog then they are nice.\nFOL:\tall x. (Likes(x, Dog) -> Nice(x))\nTEXT:\tIf someone visits the squirrel then the squirrel likes the tiger.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(Squirrel, Tiger))\nTEXT:\tIf someone chases the bear and the bear is red then the bear likes the tiger.\nFOL:\tall x. (Chases(x, Bear) & Red(Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone likes the tiger then the tiger visits the dog.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is nice then they visit the squirrel.\nFOL:\tall x. (Nice(x) -> Visits(x, Squirrel))\nTEXT:\tIf the squirrel is nice then the squirrel does not chase the tiger.\nFOL:\tNice(Squirrel) -> \u00acChases(Squirrel, Tiger)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nANSWER:\tTrue", "TEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChases(Dog, Squirrel)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog is not rough.\nFOL:\t\u00acRough(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe squirrel visits the tiger.\nFOL:\tVisits(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tIf someone is young then they do not chase the bear.\nFOL:\tall x. (Young(x) -> \u00acChases(x, Bear))\nTEXT:\tIf someone chases the tiger and the tiger chases the bear then the bear is not red.\nFOL:\tall x. (Chases(x, Tiger) & Chases(Tiger, Bear) -> \u00acRed(Bear))\nTEXT:\tIf someone visits the dog and they chase the squirrel then the squirrel is red.\nFOL:\tall x. (Visits(x, Dog) & Chases(x, Squirrel) -> Red(Squirrel))\nTEXT:\tIf someone likes the dog then they are nice.\nFOL:\tall x. (Likes(x, Dog) -> Nice(x))\nTEXT:\tIf someone visits the squirrel then the squirrel likes the tiger.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(Squirrel, Tiger))\nTEXT:\tIf someone chases the bear and the bear is red then the bear likes the tiger.\nFOL:\tall x. (Chases(x, Bear) & Red(Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone likes the tiger then the tiger visits the dog.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is nice then they visit the squirrel.\nFOL:\tall x. (Nice(x) -> Visits(x, Squirrel))\nTEXT:\tIf the squirrel is nice then the squirrel does not chase the tiger.\nFOL:\tNice(Squirrel) -> \u00acChases(Squirrel, Tiger)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChases(Dog, Squirrel)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog is not rough.\nFOL:\t-Rough(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe squirrel visits the tiger.\nFOL:\tVisits(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tIf someone is young then they do not chase the bear.\nFOL:\tall x. (Young(x) -> -Chases(x, Bear))\nTEXT:\tIf someone chases the tiger and the tiger chases the bear then the bear is not red.\nFOL:\tall x. ((Chases(x, Tiger) & Chases(Tiger, Bear)) -> -Red(Bear))\nTEXT:\tIf someone visits the dog and they chase the squirrel then the squirrel is red.\nFOL:\tall x. ((Visits(x, Dog) & Chases(x, Squirrel)) -> Red(Squirrel))\nTEXT:\tIf someone likes the dog then they are nice.\nFOL:\tall x. (Likes(x, Dog) -> Nice(x))\nTEXT:\tIf someone visits the squirrel then the squirrel likes the tiger.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(Squirrel, Tiger))\nTEXT:\tIf someone chases the bear and the bear is red then the bear likes the tiger.\nFOL:\tall x. ((Chases(x, Bear) & Red(Bear)) -> Likes(Bear, Tiger))\nTEXT:\tIf someone likes the tiger then the tiger visits the dog.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is nice then they visit the squirrel.\nFOL:\tall x. (Nice(x) -> Visits(x, Squirrel))\nTEXT:\tIf the squirrel is nice then the squirrel does not chase the tiger.\nFOL:\t(Nice(Squirrel) -> -Chases(Squirrel, Tiger))\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the squirrel.\nFOL:\tChase(Bear, Squirrel)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChase(Dog, Squirrel)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog is not rough.\nFOL:\t\u00acRough(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe squirrel visits the tiger.\nFOL:\tVisit(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChase(Tiger, Squirrel)\nTEXT:\tIf someone is young then they do not chase the bear.\nFOL:\tall x. (Young(x) -> \u00acChase(x, Bear))\nTEXT:\tIf someone chases the tiger and the tiger chases the bear then the bear is not red.\nFOL:\tall x. (Chase(x, Tiger) & Chase(Tiger, Bear) -> \u00acRed(Bear))\nTEXT:\tIf someone visits the dog and they chase the squirrel then the squirrel is red.\nFOL:\tall x. (Visit(x, Dog) & Chase(x, Squirrel) -> Red(Squirrel))\nTEXT:\tIf someone likes the dog then they are nice.\nFOL:\tall x. (Likes(x, Dog) -> Nice(x))\nTEXT:\tIf someone visits the squirrel then the squirrel likes the tiger.\nFOL:\tall x. (Visit(x, Squirrel) -> Likes(Squirrel, Tiger))\nTEXT:\tIf someone chases the bear and the bear is red then the bear likes the tiger.\nFOL:\tall x. (Chase(x, Bear) & Red(Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone likes the tiger then the tiger visits the dog.\nFOL:\tall x. (Likes(x, Tiger) -> Visit(Tiger, Dog))\nTEXT:\tIf someone is nice then they visit the squirrel.\nFOL:\tall x. (Nice(x) -> Visit(x, Squirrel))\nTEXT:\tIf the squirrel is nice then the squirrel does not chase the tiger.\nFOL:\t(Nice(Squirrel) -> \u00acChase(Squirrel, Tiger))\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChases(Dog, Squirrel)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog is not rough.\nFOL:\t-Rough(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog likes the bear.\nFOL:\tLikes(Dog, Bear)\nTEXT:\tThe squirrel visits the tiger.\nFOL:\tVisits(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tIf someone is young then they do not chase the bear.\nFOL:\tall x. (Young(x) -> -Chases(x, Bear))\nTEXT:\tIf someone chases the tiger and the tiger chases the bear then the bear is not red.\nFOL:\tall x. ((Chases(x, Tiger) & Chases(Tiger, Bear)) -> -Red(Bear))\nTEXT:\tIf someone visits the dog and they chase the squirrel then the squirrel is red.\nFOL:\tall x. ((Visits(x, Dog) & Chases(x, Squirrel)) -> Red(Squirrel))\nTEXT:\tIf someone likes the dog then they are nice.\nFOL:\tall x. (Likes(x, Dog) -> Nice(x))\nTEXT:\tIf someone visits the squirrel then the squirrel likes the tiger.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(Squirrel, Tiger))\nTEXT:\tIf someone chases the bear and the bear is red then the bear likes the tiger.\nFOL:\tall x. ((Chases(x, Bear) & Red(Bear)) -> Likes(Bear, Tiger))\nTEXT:\tIf someone likes the tiger then the tiger visits the dog.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is nice then they visit the squirrel.\nFOL:\tall x. (Nice(x) -> Visits(x, Squirrel))\nTEXT:\tIf the squirrel is nice then the squirrel does not chase the tiger.\nFOL:\t(Nice(Squirrel) -> -Chases(Squirrel, Tiger))\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white then it is kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll white, smart things are kind.\nFOL:\tall x. (White(x) & Smart(x) -> Kind(x))\nTEXT:\tIf something is quiet then it is white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tGreen, white things are red.\nFOL:\tall x. (Green(x) & White(x) -> Red(x))\nTEXT:\tAll smart, red things are nice.\nFOL:\tall x. (Smart(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is green and nice then it is quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white then it is kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll white, smart things are kind.\nFOL:\tall x. (White(x) & Smart(x) -> Kind(x))\nTEXT:\tIf something is quiet then it is white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tGreen, white things are red.\nFOL:\tall x. (Green(x) & White(x) -> Red(x))\nTEXT:\tAll smart, red things are nice.\nFOL:\tall x. (Smart(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is green and nice then it is quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white then it is kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll white, smart things are kind.\nFOL:\tall x. (White(x) & Smart(x) -> Kind(x))\nTEXT:\tIf something is quiet then it is white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tGreen, white things are red.\nFOL:\tall x. (Green(x) & White(x) -> Red(x))\nTEXT:\tAll smart, red things are nice.\nFOL:\tall x. (Smart(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is green and nice then it is quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white then it is kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll white, smart things are kind.\nFOL:\tall x. (White(x) & Smart(x) -> Kind(x))\nTEXT:\tIf something is quiet then it is white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tGreen, white things are red.\nFOL:\tall x. (Green(x) & White(x) -> Red(x))\nTEXT:\tAll smart, red things are nice.\nFOL:\tall x. (Smart(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is green and nice then it is quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white then it is kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll white, smart things are kind.\nFOL:\tall x. (White(x) & Smart(x) -> Kind(x))\nTEXT:\tIf something is quiet then it is white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tKind things are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tGreen, white things are red.\nFOL:\tall x. (Green(x) & White(x) -> Red(x))\nTEXT:\tAll smart, red things are nice.\nFOL:\tall x. (Smart(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is green and nice then it is quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog sees the cat.\nFOL:\tSees(Dog, Cat)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tYoung people are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone is nice and round then they eat the dog.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Eats(x, Dog))\nTEXT:\tIf someone sees the cat and they are nice then they are young.\nFOL:\tall x. ((Sees(x, Cat) & Nice(x)) -> Young(x))\nTEXT:\tIf someone visits the dog and the dog visits the cat then the dog eats the tiger.\nFOL:\tall x. ((Visits(x, Dog) & Visits(Dog, Cat)) -> Eats(Dog, Tiger))\nTEXT:\tIf someone sees the tiger and they see the dog then the tiger is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(x, Dog)) -> Nice(Tiger))\nTEXT:\tIf someone is round and they see the dog then they see the tiger.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(x, Tiger))\nTEXT:\tIf someone is young and they eat the tiger then the tiger is nice.\nFOL:\tall x. ((Young(x) & Eats(x, Tiger)) -> Nice(Tiger))\nTEXT:\tIf someone eats the cat then the cat eats the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Eats(Cat, Tiger))\nTEXT:\tIf someone eats the dog and the dog is kind then they see the dog.\nFOL:\tall x. ((Eats(x, Dog) & Kind(Dog)) -> Sees(x, Dog))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog sees the cat.\nFOL:\tSees(Dog, Cat)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tYoung people are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone is nice and round then they eat the dog.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Eats(x, Dog))\nTEXT:\tIf someone sees the cat and they are nice then they are young.\nFOL:\tall x. ((Sees(x, Cat) & Nice(x)) -> Young(x))\nTEXT:\tIf someone visits the dog and the dog visits the cat then the dog eats the tiger.\nFOL:\tall x. ((Visits(x, Dog) & Visits(Dog, Cat)) -> Eats(Dog, Tiger))\nTEXT:\tIf someone sees the tiger and they see the dog then the tiger is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(x, Dog)) -> Nice(Tiger))\nTEXT:\tIf someone is round and they see the dog then they see the tiger.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(x, Tiger))\nTEXT:\tIf someone is young and they eat the tiger then the tiger is nice.\nFOL:\tall x. ((Young(x) & Eats(x, Tiger)) -> Nice(Tiger))\nTEXT:\tIf someone eats the cat then the cat eats the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Eats(Cat, Tiger))\nTEXT:\tIf someone eats the dog and the dog is kind then they see the dog.\nFOL:\tall x. ((Eats(x, Dog) & Kind(Dog)) -> Sees(x, Dog))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog sees the cat.\nFOL:\tSees(Dog, Cat)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tYoung people are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone is nice and round then they eat the dog.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Eats(x, Dog))\nTEXT:\tIf someone sees the cat and they are nice then they are young.\nFOL:\tall x. ((Sees(x, Cat) & Nice(x)) -> Young(x))\nTEXT:\tIf someone visits the dog and the dog visits the cat then the dog eats the tiger.\nFOL:\tall x. ((Visits(x, Dog) & Visits(Dog, Cat)) -> Eats(Dog, Tiger))\nTEXT:\tIf someone sees the tiger and they see the dog then the tiger is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(x, Dog)) -> Nice(Tiger))\nTEXT:\tIf someone is round and they see the dog then they see the tiger.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(x, Tiger))\nTEXT:\tIf someone is young and they eat the tiger then the tiger is nice.\nFOL:\tall x. ((Young(x) & Eats(x, Tiger)) -> Nice(Tiger))\nTEXT:\tIf someone eats the cat then the cat eats the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Eats(Cat, Tiger))\nTEXT:\tIf someone eats the dog and the dog is kind then they see the dog.\nFOL:\tall x. ((Eats(x, Dog) & Kind(Dog)) -> Sees(x, Dog))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog sees the cat.\nFOL:\tSees(Dog, Cat)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tYoung people are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone is nice and round then they eat the dog.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Eats(x, Dog))\nTEXT:\tIf someone sees the cat and they are nice then they are young.\nFOL:\tall x. ((Sees(x, Cat) & Nice(x)) -> Young(x))\nTEXT:\tIf someone visits the dog and the dog visits the cat then the dog eats the tiger.\nFOL:\tall x. (Visits(x, Dog) & Visits(Dog, Cat) -> Eats(Dog, Tiger))\nTEXT:\tIf someone sees the tiger and they see the dog then the tiger is nice.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(x, Dog)) -> Nice(Tiger))\nTEXT:\tIf someone is round and they see the dog then they see the tiger.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(x, Tiger))\nTEXT:\tIf someone is young and they eat the tiger then the tiger is nice.\nFOL:\tall x. ((Young(x) & Eats(x, Tiger)) -> Nice(Tiger))\nTEXT:\tIf someone eats the cat then the cat eats the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Eats(Cat, Tiger))\nTEXT:\tIf someone eats the dog and the dog is kind then they see the dog.\nFOL:\tall x. ((Eats(x, Dog) & Kind(Dog)) -> Sees(x, Dog))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog sees the cat.\nFOL:\tSees(Dog, Cat)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tYoung people are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone is nice and round then they eat the dog.\nFOL:\tall x. (Nice(x) & Round(x) -> Eats(x, Dog))\nTEXT:\tIf someone sees the cat and they are nice then they are young.\nFOL:\tall x. (Sees(x, Cat) & Nice(x) -> Young(x))\nTEXT:\tIf someone visits the dog and the dog visits the cat then the dog eats the tiger.\nFOL:\tall x. (Visits(x, Dog) & Visits(Dog, Cat) -> Eats(Dog, Tiger))\nTEXT:\tIf someone sees the tiger and they see the dog then the tiger is nice.\nFOL:\tall x. (Sees(x, Tiger) & Sees(x, Dog) -> Nice(Tiger))\nTEXT:\tIf someone is round and they see the dog then they see the tiger.\nFOL:\tall x. (Round(x) & Sees(x, Dog) -> Sees(x, Tiger))\nTEXT:\tIf someone is young and they eat the tiger then the tiger is nice.\nFOL:\tall x. (Young(x) & Eats(x, Tiger) -> Nice(Tiger))\nTEXT:\tIf someone eats the cat then the cat eats the tiger.\nFOL:\tall x. (Eats(x, Cat) -> Eats(Cat, Tiger))\nTEXT:\tIf someone eats the dog and the dog is kind then they see the dog.\nFOL:\tall x. (Eats(x, Dog) & Kind(Dog) -> Sees(x, Dog))\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nTEXT:\tAll green, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tKind people are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf someone is quiet and red then they are round.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Round(x))\nTEXT:\tIf Harry is kind and Harry is round then Harry is green.\nFOL:\t((Kind(Harry) & Round(Harry)) -> Green(Harry))\nTEXT:\tRed, round people are kind.\nFOL:\tall x. ((Red(x) & Round(x)) -> Kind(x))\nTEXT:\tIf Bob is round then Bob is not red.\nFOL:\t(Round(Bob) -> -Red(Bob))\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not red.\nFOL:\t\u00acRed(Harry)\nTEXT:\tAll green, quiet people are red.\nFOL:\tall x. (Green(x) & Quiet(x) -> Red(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tKind people are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf someone is quiet and red then they are round.\nFOL:\tall x. (Quiet(x) & Red(x) -> Round(x))\nTEXT:\tIf Harry is kind and Harry is round then Harry is green.\nFOL:\t(Kind(Harry) & Round(Harry) -> Green(Harry))\nTEXT:\tRed, round people are kind.\nFOL:\tall x. (Red(x) & Round(x) -> Kind(x))\nTEXT:\tIf Bob is round then Bob is not red.\nFOL:\t(Round(Bob) -> \u00acRed(Bob))\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nTEXT:\tAll green, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tKind people are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf someone is quiet and red then they are round.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Round(x))\nTEXT:\tIf Harry is kind and Harry is round then Harry is green.\nFOL:\t(Kind(Harry) & Round(Harry)) -> Green(Harry)\nTEXT:\tRed, round people are kind.\nFOL:\tall x. ((Red(x) & Round(x)) -> Kind(x))\nTEXT:\tIf Bob is round then Bob is not red.\nFOL:\tRound(Bob) -> -Red(Bob)\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nTEXT:\tAll green, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tKind people are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf someone is quiet and red then they are round.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Round(x))\nTEXT:\tIf Harry is kind and Harry is round then Harry is green.\nFOL:\t(Kind(Harry) & Round(Harry)) -> Green(Harry)\nTEXT:\tRed, round people are kind.\nFOL:\tall x. ((Red(x) & Round(x)) -> Kind(x))\nTEXT:\tIf Bob is round then Bob is not red.\nFOL:\tRound(Bob) -> -Red(Bob)\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nTEXT:\tAll green, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tKind people are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf someone is quiet and red then they are round.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Round(x))\nTEXT:\tIf Harry is kind and Harry is round then Harry is green.\nFOL:\t(Kind(Harry) & Round(Harry)) -> Green(Harry)\nTEXT:\tRed, round people are kind.\nFOL:\tall x. ((Red(x) & Round(x)) -> Kind(x))\nTEXT:\tIf Bob is round then Bob is not red.\nFOL:\tRound(Bob) -> -Red(Bob)\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tFurry, white things are red.\nFOL:\tall x. ((Furry(x) & White(x)) -> Red(x))\nTEXT:\tRough, white things are red.\nFOL:\tall x. ((Rough(x) & White(x)) -> Red(x))\nTEXT:\tIf something is green and rough then it is big.\nFOL:\tall x. ((Green(x) & Rough(x)) -> Big(x))\nTEXT:\tAll green, white things are big.\nFOL:\tall x. ((Green(x) & White(x)) -> Big(x))\nTEXT:\tIf something is red and quiet then it is green.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Green(x))\nTEXT:\tAll white, big things are furry.\nFOL:\tall x. ((White(x) & Big(x)) -> Furry(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tFalse\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tFurry, white things are red.\nFOL:\tall x. ((Furry(x) & White(x)) -> Red(x))\nTEXT:\tRough, white things are red.\nFOL:\tall x. ((Rough(x) & White(x)) -> Red(x))\nTEXT:\tIf something is green and rough then it is big.\nFOL:\tall x. ((Green(x) & Rough(x)) -> Big(x))\nTEXT:\tAll green, white things are big.\nFOL:\tall x. ((Green(x) & White(x)) -> Big(x))\nTEXT:\tIf something is red and quiet then it is green.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Green(x))\nTEXT:\tAll white, big things are furry.\nFOL:\tall x. ((White(x) & Big(x)) -> Furry(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tFalse\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tFurry, white things are red.\nFOL:\tall x. (Furry(x) & White(x) -> Red(x))\nTEXT:\tRough, white things are red.\nFOL:\tall x. (Rough(x) & White(x) -> Red(x))\nTEXT:\tIf something is green and rough then it is big.\nFOL:\tall x. (Green(x) & Rough(x) -> Big(x))\nTEXT:\tAll green, white things are big.\nFOL:\tall x. (Green(x) & White(x) -> Big(x))\nTEXT:\tIf something is red and quiet then it is green.\nFOL:\tall x. (Red(x) & Quiet(x) -> Green(x))\nTEXT:\tAll white, big things are furry.\nFOL:\tall x. (White(x) & Big(x) -> Furry(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tFalse\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tFurry, white things are red.\nFOL:\tall x. ((Furry(x) & White(x)) -> Red(x))\nTEXT:\tRough, white things are red.\nFOL:\tall x. ((Rough(x) & White(x)) -> Red(x))\nTEXT:\tIf something is green and rough then it is big.\nFOL:\tall x. ((Green(x) & Rough(x)) -> Big(x))\nTEXT:\tAll green, white things are big.\nFOL:\tall x. ((Green(x) & White(x)) -> Big(x))\nTEXT:\tIf something is red and quiet then it is green.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Green(x))\nTEXT:\tAll white, big things are furry.\nFOL:\tall x. ((White(x) & Big(x)) -> Furry(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tFalse\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tFurry, white things are red.\nFOL:\tall x. (Furry(x) & White(x) -> Red(x))\nTEXT:\tRough, white things are red.\nFOL:\tall x. (Rough(x) & White(x) -> Red(x))\nTEXT:\tIf something is green and rough then it is big.\nFOL:\tall x. (Green(x) & Rough(x) -> Big(x))\nTEXT:\tAll green, white things are big.\nFOL:\tall x. (Green(x) & White(x) -> Big(x))\nTEXT:\tIf something is red and quiet then it is green.\nFOL:\tall x. (Red(x) & Quiet(x) -> Green(x))\nTEXT:\tAll white, big things are furry.\nFOL:\tall x. (White(x) & Big(x) -> Furry(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is not nice.\nFOL:\t- Nice(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tIf Dave is white then Dave is rough.\nFOL:\tWhite(Dave) -> Rough(Dave)\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAll blue, round people are big.\nFOL:\tall x. (Blue(x) & Round(x) -> Big(x))\nTEXT:\tRound, rough people are big.\nFOL:\tall x. (Round(x) & Rough(x) -> Big(x))\nTEXT:\tIf someone is blue and not young then they are big.\nFOL:\tall x. (Blue(x) & -Young(x) -> Big(x))\nTEXT:\tAll rough people are not nice.\nFOL:\tall x. (Rough(x) -> -Nice(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is nice and white then they are blue.\nFOL:\tall x. (Nice(x) & White(x) -> Blue(x))\nTEXT:\tBig, round people are rough.\nFOL:\tall x. (Big(x) & Round(x) -> Rough(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tIf Dave is white then Dave is rough.\nFOL:\tWhite(Dave) -> Rough(Dave)\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAll blue, round people are big.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Big(x))\nTEXT:\tRound, rough people are big.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is blue and not young then they are big.\nFOL:\tall x. ((Blue(x) & -Young(x)) -> Big(x))\nTEXT:\tAll rough people are not nice.\nFOL:\tall x. (Rough(x) -> -Nice(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is nice and white then they are blue.\nFOL:\tall x. ((Nice(x) & White(x)) -> Blue(x))\nTEXT:\tBig, round people are rough.\nFOL:\tall x. ((Big(x) & Round(x)) -> Rough(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tIf Dave is white then Dave is rough.\nFOL:\tWhite(Dave) -> Rough(Dave)\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAll blue, round people are big.\nFOL:\tall x. (Blue(x) & Round(x) -> Big(x))\nTEXT:\tRound, rough people are big.\nFOL:\tall x. (Round(x) & Rough(x) -> Big(x))\nTEXT:\tIf someone is blue and not young then they are big.\nFOL:\tall x. (Blue(x) & -Young(x) -> Big(x))\nTEXT:\tAll rough people are not nice.\nFOL:\tall x. (Rough(x) -> -Nice(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is nice and white then they are blue.\nFOL:\tall x. (Nice(x) & White(x) -> Blue(x))\nTEXT:\tBig, round people are rough.\nFOL:\tall x. (Big(x) & Round(x) -> Rough(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tIf Dave is white then Dave is rough.\nFOL:\tWhite(Dave) -> Rough(Dave)\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAll blue, round people are big.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Big(x))\nTEXT:\tRound, rough people are big.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is blue and not young then they are big.\nFOL:\tall x. ((Blue(x) & -Young(x)) -> Big(x))\nTEXT:\tAll rough people are not nice.\nFOL:\tall x. (Rough(x) -> -Nice(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is nice and white then they are blue.\nFOL:\tall x. ((Nice(x) & White(x)) -> Blue(x))\nTEXT:\tBig, round people are rough.\nFOL:\tall x. ((Big(x) & Round(x)) -> Rough(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tIf Dave is white then Dave is rough.\nFOL:\tWhite(Dave) -> Rough(Dave)\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAll blue, round people are big.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Big(x))\nTEXT:\tRound, rough people are big.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is blue and not young then they are big.\nFOL:\tall x. ((Blue(x) & -Young(x)) -> Big(x))\nTEXT:\tAll rough people are not nice.\nFOL:\tall x. (Rough(x) -> -Nice(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf someone is nice and white then they are blue.\nFOL:\tall x. ((Nice(x) & White(x)) -> Blue(x))\nTEXT:\tBig, round people are rough.\nFOL:\tall x. ((Big(x) & Round(x)) -> Rough(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not round.\nFOL:\t-Round(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is smart.\nFOL:\tQuiet(Harry) -> Smart(Harry)\nTEXT:\tAll rough, green people are red.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Red(x))\nTEXT:\tSmart, quiet people are green.\nFOL:\tall x. ((Smart(x) & Quiet(x)) -> Green(x))\nTEXT:\tRed, quiet people are round.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Round(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not round.\nFOL:\t-Round(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is smart.\nFOL:\tQuiet(Harry) -> Smart(Harry)\nTEXT:\tAll rough, green people are red.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Red(x))\nTEXT:\tSmart, quiet people are green.\nFOL:\tall x. ((Smart(x) & Quiet(x)) -> Green(x))\nTEXT:\tRed, quiet people are round.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Round(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not round.\nFOL:\t-Round(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is smart.\nFOL:\tQuiet(Harry) -> Smart(Harry)\nTEXT:\tAll rough, green people are red.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Red(x))\nTEXT:\tSmart, quiet people are green.\nFOL:\tall x. ((Smart(x) & Quiet(x)) -> Green(x))\nTEXT:\tRed, quiet people are round.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Round(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not round.\nFOL:\t-Round(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is smart.\nFOL:\tQuiet(Harry) -> Smart(Harry)\nTEXT:\tAll rough, green people are red.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Red(x))\nTEXT:\tSmart, quiet people are green.\nFOL:\tall x. ((Smart(x) & Quiet(x)) -> Green(x))\nTEXT:\tRed, quiet people are round.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Round(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not round.\nFOL:\t-Round(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not quiet.\nFOL:\t-Quiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is smart.\nFOL:\tQuiet(Harry) -> Smart(Harry)\nTEXT:\tAll rough, green people are red.\nFOL:\tall x. (Rough(x) & Green(x) -> Red(x))\nTEXT:\tSmart, quiet people are green.\nFOL:\tall x. (Smart(x) & Quiet(x) -> Green(x))\nTEXT:\tRed, quiet people are round.\nFOL:\tall x. (Red(x) & Quiet(x) -> Round(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the squirrel.\nFOL:\tSees(Mouse, Squirrel)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tIf someone sees the bald eagle then they like the squirrel.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Squirrel))\nTEXT:\tIf someone is green and they like the mouse then they see the bald eagle.\nFOL:\tall x. (Green(x) & Likes(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the mouse then the mouse is green.\nFOL:\t(Likes(BaldEagle, Mouse) -> Green(Mouse))\nTEXT:\tIf someone is blue and nice then they are kind.\nFOL:\tall x. (Blue(x) & Nice(x) -> Kind(x))\nTEXT:\tIf someone is green then they like the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tIf someone eats the squirrel then they see the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(x, Mouse))\nTEXT:\tIf someone sees the bald eagle and the bald eagle eats the rabbit then the rabbit is blue.\nFOL:\tall x. (Sees(x, BaldEagle) & Eats(BaldEagle, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf someone is red then they like the mouse.\nFOL:\tall x. (Red(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nANSWER:\tUncertain", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the squirrel.\nFOL:\tSees(Mouse, Squirrel)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tIf someone sees the bald eagle then they like the squirrel.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Squirrel))\nTEXT:\tIf someone is green and they like the mouse then they see the bald eagle.\nFOL:\tall x. (Green(x) & Likes(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the mouse then the mouse is green.\nFOL:\t(Likes(BaldEagle, Mouse) -> Green(Mouse))\nTEXT:\tIf someone is blue and nice then they are kind.\nFOL:\tall x. (Blue(x) & Nice(x) -> Kind(x))\nTEXT:\tIf someone is green then they like the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tIf someone eats the squirrel then they see the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(x, Mouse))\nTEXT:\tIf someone sees the bald eagle and the bald eagle eats the rabbit then the rabbit is blue.\nFOL:\tall x. ((Sees(x, BaldEagle) & Eats(BaldEagle, Rabbit)) -> Blue(Rabbit))\nTEXT:\tIf someone is red then they like the mouse.\nFOL:\tall x. (Red(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the squirrel.\nFOL:\tSees(Mouse, Squirrel)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tIf someone sees the bald eagle then they like the squirrel.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Squirrel))\nTEXT:\tIf someone is green and they like the mouse then they see the bald eagle.\nFOL:\tall x. ((Green(x) & Likes(x, Mouse)) -> Sees(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the mouse then the mouse is green.\nFOL:\t(Likes(BaldEagle, Mouse) -> Green(Mouse))\nTEXT:\tIf someone is blue and nice then they are kind.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Kind(x))\nTEXT:\tIf someone is green then they like the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tIf someone eats the squirrel then they see the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(x, Mouse))\nTEXT:\tIf someone sees the bald eagle and the bald eagle eats the rabbit then the rabbit is blue.\nFOL:\tall x. ((Sees(x, BaldEagle) & Eats(BaldEagle, Rabbit)) -> Blue(Rabbit))\nTEXT:\tIf someone is red then they like the mouse.\nFOL:\tall x. (Red(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nANSWER:\tUncertain", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the squirrel.\nFOL:\tSees(Mouse, Squirrel)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tIf someone sees the bald eagle then they like the squirrel.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Squirrel))\nTEXT:\tIf someone is green and they like the mouse then they see the bald eagle.\nFOL:\tall x. (Green(x) & Likes(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the mouse then the mouse is green.\nFOL:\tLikes(BaldEagle, Mouse) -> Green(Mouse)\nTEXT:\tIf someone is blue and nice then they are kind.\nFOL:\tall x. (Blue(x) & Nice(x) -> Kind(x))\nTEXT:\tIf someone is green then they like the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tIf someone eats the squirrel then they see the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(x, Mouse))\nTEXT:\tIf someone sees the bald eagle and the bald eagle eats the rabbit then the rabbit is blue.\nFOL:\tall x. (Sees(x, BaldEagle) & Eats(BaldEagle, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf someone is red then they like the mouse.\nFOL:\tall x. (Red(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the squirrel.\nFOL:\tSees(Mouse, Squirrel)\nTEXT:\tThe rabbit eats the mouse.\nFOL:\tEats(Rabbit, Mouse)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tIf someone sees the bald eagle then they like the squirrel.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Squirrel))\nTEXT:\tIf someone is green and they like the mouse then they see the bald eagle.\nFOL:\tall x. (Green(x) & Likes(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf the bald eagle likes the mouse then the mouse is green.\nFOL:\t(Likes(BaldEagle, Mouse) -> Green(Mouse))\nTEXT:\tIf someone is blue and nice then they are kind.\nFOL:\tall x. (Blue(x) & Nice(x) -> Kind(x))\nTEXT:\tIf someone is green then they like the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tIf someone eats the squirrel then they see the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Sees(x, Mouse))\nTEXT:\tIf someone sees the bald eagle and the bald eagle eats the rabbit then the rabbit is blue.\nFOL:\tall x. (Sees(x, BaldEagle) & Eats(BaldEagle, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf someone is red then they like the mouse.\nFOL:\tall x. (Red(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse does not like the squirrel.\nFOL:\t-Likes(Mouse, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tBig, furry things are not young.\nFOL:\tall x. (Big(x) & Furry(x) -> -Young(x))\nTEXT:\tAll smart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf Harry is smart then Harry is rough.\nFOL:\tSmart(Harry) -> Rough(Harry)\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll young things are not green.\nFOL:\tall x. (Young(x) -> -Green(x))\nTEXT:\tAll rough, big things are furry.\nFOL:\tall x. (Rough(x) & Big(x) -> Furry(x))\nTEXT:\tSmart, rough things are big.\nFOL:\tall x. (Smart(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is smart and kind then it is rough.\nFOL:\tall x. (Smart(x) & Kind(x) -> Rough(x))\nTEXT:\tIf Harry is young and Harry is kind then Harry is furry.\nFOL:\tYoung(Harry) & Kind(Harry) -> Furry(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tUncertain\n", "TEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tBig, furry things are not young.\nFOL:\tall x. (Big(x) & Furry(x) -> -Young(x))\nTEXT:\tAll smart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf Harry is smart then Harry is rough.\nFOL:\tSmart(Harry) -> Rough(Harry)\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll young things are not green.\nFOL:\tall x. (Young(x) -> -Green(x))\nTEXT:\tAll rough, big things are furry.\nFOL:\tall x. (Rough(x) & Big(x) -> Furry(x))\nTEXT:\tSmart, rough things are big.\nFOL:\tall x. (Smart(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is smart and kind then it is rough.\nFOL:\tall x. (Smart(x) & Kind(x) -> Rough(x))\nTEXT:\tIf Harry is young and Harry is kind then Harry is furry.\nFOL:\tYoung(Harry) & Kind(Harry) -> Furry(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tUncertain\n", "TEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tBig, furry things are not young.\nFOL:\tall x. ((Big(x) & Furry(x)) -> -Young(x))\nTEXT:\tAll smart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf Harry is smart then Harry is rough.\nFOL:\tSmart(Harry) -> Rough(Harry)\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll young things are not green.\nFOL:\tall x. (Young(x) -> -Green(x))\nTEXT:\tAll rough, big things are furry.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Furry(x))\nTEXT:\tSmart, rough things are big.\nFOL:\tall x. ((Smart(x) & Rough(x)) -> Big(x))\nTEXT:\tIf something is smart and kind then it is rough.\nFOL:\tall x. ((Smart(x) & Kind(x)) -> Rough(x))\nTEXT:\tIf Harry is young and Harry is kind then Harry is furry.\nFOL:\t(Young(Harry) & Kind(Harry)) -> Furry(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tUncertain\n", "TEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tBig, furry things are not young.\nFOL:\tall x. ((Big(x) & Furry(x)) -> -Young(x))\nTEXT:\tAll smart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf Harry is smart then Harry is rough.\nFOL:\tSmart(Harry) -> Rough(Harry)\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll young things are not green.\nFOL:\tall x. (Young(x) -> -Green(x))\nTEXT:\tAll rough, big things are furry.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Furry(x))\nTEXT:\tSmart, rough things are big.\nFOL:\tall x. ((Smart(x) & Rough(x)) -> Big(x))\nTEXT:\tIf something is smart and kind then it is rough.\nFOL:\tall x. ((Smart(x) & Kind(x)) -> Rough(x))\nTEXT:\tIf Harry is young and Harry is kind then Harry is furry.\nFOL:\t(Young(Harry) & Kind(Harry)) -> Furry(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tUncertain\n", "TEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is not smart.\nFOL:\t-Smart(Gary)\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tBig, furry things are not young.\nFOL:\tall x. ((Big(x) & Furry(x)) -> -Young(x))\nTEXT:\tAll smart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf Harry is smart then Harry is rough.\nFOL:\tSmart(Harry) -> Rough(Harry)\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll young things are not green.\nFOL:\tall x. (Young(x) -> -Green(x))\nTEXT:\tAll rough, big things are furry.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Furry(x))\nTEXT:\tSmart, rough things are big.\nFOL:\tall x. ((Smart(x) & Rough(x)) -> Big(x))\nTEXT:\tIf something is smart and kind then it is rough.\nFOL:\tall x. ((Smart(x) & Kind(x)) -> Rough(x))\nTEXT:\tIf Harry is young and Harry is kind then Harry is furry.\nFOL:\t(Young(Harry) & Kind(Harry)) -> Furry(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is not white.\nFOL:\t-White(Harry)\nTEXT:\tIf someone is quiet and nice then they are round.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Round(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tRough people are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf someone is white and quiet then they are big.\nFOL:\tall x. (White(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is white then they are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tRound, quiet people are red.\nFOL:\tall x. (Round(x) & Quiet(x) -> Red(x))\nTEXT:\tRed people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice, white people are quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tNice, big people are rough.\nFOL:\tall x. (Nice(x) & Big(x) -> Rough(x))\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is not white.\nFOL:\t-White(Harry)\nTEXT:\tIf someone is quiet and nice then they are round.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Round(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tRough people are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf someone is white and quiet then they are big.\nFOL:\tall x. (White(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is white then they are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tRound, quiet people are red.\nFOL:\tall x. (Round(x) & Quiet(x) -> Red(x))\nTEXT:\tRed people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice, white people are quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tNice, big people are rough.\nFOL:\tall x. (Nice(x) & Big(x) -> Rough(x))\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is not white.\nFOL:\t-White(Harry)\nTEXT:\tIf someone is quiet and nice then they are round.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> Round(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tRough people are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf someone is white and quiet then they are big.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Big(x))\nTEXT:\tIf someone is white then they are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tRound, quiet people are red.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Red(x))\nTEXT:\tRed people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice, white people are quiet.\nFOL:\tall x. ((Nice(x) & White(x)) -> Quiet(x))\nTEXT:\tNice, big people are rough.\nFOL:\tall x. ((Nice(x) & Big(x)) -> Rough(x))\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is not white.\nFOL:\t-White(Harry)\nTEXT:\tIf someone is quiet and nice then they are round.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> Round(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tRough people are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf someone is white and quiet then they are big.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Big(x))\nTEXT:\tIf someone is white then they are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tRound, quiet people are red.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Red(x))\nTEXT:\tRed people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice, white people are quiet.\nFOL:\tall x. ((Nice(x) & White(x)) -> Quiet(x))\nTEXT:\tNice, big people are rough.\nFOL:\tall x. ((Nice(x) & Big(x)) -> Rough(x))\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is not white.\nFOL:\t-White(Harry)\nTEXT:\tIf someone is quiet and nice then they are round.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> Round(x))\nTEXT:\tAll white people are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tRough people are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf someone is white and quiet then they are big.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Big(x))\nTEXT:\tIf someone is white then they are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tRound, quiet people are red.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Red(x))\nTEXT:\tRed people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice, white people are quiet.\nFOL:\tall x. ((Nice(x) & White(x)) -> Quiet(x))\nTEXT:\tNice, big people are rough.\nFOL:\tall x. ((Nice(x) & Big(x)) -> Rough(x))\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tCold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is round then they are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and young then they are furry.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Furry(x))\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tRough people are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone is round and young then they are cold.\nFOL:\tall x. ((Round(x) & Young(x)) -> Cold(x))\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tCold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is round then they are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and young then they are furry.\nFOL:\tall x. (Rough(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tRough people are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone is round and young then they are cold.\nFOL:\tall x. (Round(x) & Young(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tCold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is round then they are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and young then they are furry.\nFOL:\tall x. (Rough(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tRough people are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone is round and young then they are cold.\nFOL:\tall x. (Round(x) & Young(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tCold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is round then they are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and young then they are furry.\nFOL:\tall x. (Rough(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tRough people are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone is round and young then they are cold.\nFOL:\tall x. (Round(x) & Young(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tCold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is round then they are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is rough and young then they are furry.\nFOL:\tall x. (Rough(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tRough people are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone is round and young then they are cold.\nFOL:\tall x. (Round(x) & Young(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the lion.\nFOL:\tNeeds(Cow, Lion)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEats(Lion, Rabbit)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tSees(Rabbit, Lion)\nTEXT:\tBig people are blue.\nFOL:\tall x. (BigPeople(x) -> Blue(x))\nTEXT:\tIf the bear needs the lion then the lion is round.\nFOL:\tNeeds(Bear, Lion) -> Round(Lion)\nTEXT:\tIf someone sees the lion then they need the lion.\nFOL:\tall x. (Sees(x, Lion) -> Needs(x, Lion))\nTEXT:\tIf someone sees the lion and the lion is blue then the lion sees the cow.\nFOL:\tall x. (Sees(x, Lion) & Blue(Lion) -> Sees(Lion, Cow))\nTEXT:\tIf someone is rough then they see the lion.\nFOL:\tall x. (Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone sees the lion then the lion is rough.\nFOL:\tall x. (Sees(x, Lion) -> Rough(Lion))\nTEXT:\tIf someone needs the bear and the bear eats the rabbit then they eat the cow.\nFOL:\tall x. (Needs(x, Bear) & Eats(Bear, Rabbit) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bear and they need the rabbit then the rabbit needs the bear.\nFOL:\tall x. (Eats(x, Bear) & Needs(x, Rabbit) -> Needs(Rabbit, Bear))\nTEXT:\tIf someone is round then they need the bear.\nFOL:\tall x. (Round(x) -> Needs(x, Bear))\nTEXT:\tThe bear does not need the lion.\nFOL:\t-Needs(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the lion.\nFOL:\tNeeds(Cow, Lion)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEats(Lion, Rabbit)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tSees(Rabbit, Lion)\nTEXT:\tBig people are blue.\nFOL:\tall x. (BigPeople(x) -> Blue(x))\nTEXT:\tIf the bear needs the lion then the lion is round.\nFOL:\tNeeds(Bear, Lion) -> Round(Lion)\nTEXT:\tIf someone sees the lion then they need the lion.\nFOL:\tall x. (Sees(x, Lion) -> Needs(x, Lion))\nTEXT:\tIf someone sees the lion and the lion is blue then the lion sees the cow.\nFOL:\tall x. (Sees(x, Lion) & Blue(Lion) -> Sees(Lion, Cow))\nTEXT:\tIf someone is rough then they see the lion.\nFOL:\tall x. (Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone sees the lion then the lion is rough.\nFOL:\tall x. (Sees(x, Lion) -> Rough(Lion))\nTEXT:\tIf someone needs the bear and the bear eats the rabbit then they eat the cow.\nFOL:\tall x. (Needs(x, Bear) & Eats(Bear, Rabbit) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bear and they need the rabbit then the rabbit needs the bear.\nFOL:\tall x. (Eats(x, Bear) & Needs(x, Rabbit) -> Needs(Rabbit, Bear))\nTEXT:\tIf someone is round then they need the bear.\nFOL:\tall x. (Round(x) -> Needs(x, Bear))\nTEXT:\tThe bear does not need the lion.\nFOL:\t-Needs(Bear, Lion)\nANSWER:\tFalse\n", "TEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the lion.\nFOL:\tNeeds(Cow, Lion)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEats(Lion, Rabbit)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tSees(Rabbit, Lion)\nTEXT:\tBig people are blue.\nFOL:\tall x. (BigPeople(x) -> Blue(x))\nTEXT:\tIf the bear needs the lion then the lion is round.\nFOL:\tNeeds(Bear, Lion) -> Round(Lion)\nTEXT:\tIf someone sees the lion then they need the lion.\nFOL:\tall x. (Sees(x, Lion) -> Needs(x, Lion))\nTEXT:\tIf someone sees the lion and the lion is blue then the lion sees the cow.\nFOL:\tall x. ((Sees(x, Lion) & Blue(Lion)) -> Sees(Lion, Cow))\nTEXT:\tIf someone is rough then they see the lion.\nFOL:\tall x. (Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone sees the lion then the lion is rough.\nFOL:\tall x. (Sees(x, Lion) -> Rough(Lion))\nTEXT:\tIf someone needs the bear and the bear eats the rabbit then they eat the cow.\nFOL:\tall x. ((Needs(x, Bear) & Eats(Bear, Rabbit)) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bear and they need the rabbit then the rabbit needs the bear.\nFOL:\tall x. ((Eats(x, Bear) & Needs(x, Rabbit)) -> Needs(Rabbit, Bear))\nTEXT:\tIf someone is round then they need the bear.\nFOL:\tall x. (Round(x) -> Needs(x, Bear))\nTEXT:\tThe bear does not need the lion.\nFOL:\t-Needs(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the lion.\nFOL:\tNeeds(Cow, Lion)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEats(Lion, Rabbit)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tSees(Rabbit, Lion)\nTEXT:\tBig people are blue.\nFOL:\tall x. (Big(x) & People(x) -> Blue(x))\nTEXT:\tIf the bear needs the lion then the lion is round.\nFOL:\tNeeds(Bear, Lion) -> Round(Lion)\nTEXT:\tIf someone sees the lion then they need the lion.\nFOL:\tall x. (Sees(x, Lion) -> Needs(x, Lion))\nTEXT:\tIf someone sees the lion and the lion is blue then the lion sees the cow.\nFOL:\tall x. (Sees(x, Lion) & Blue(Lion) -> Sees(Lion, Cow))\nTEXT:\tIf someone is rough then they see the lion.\nFOL:\tall x. (Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone sees the lion then the lion is rough.\nFOL:\tall x. (Sees(x, Lion) -> Rough(Lion))\nTEXT:\tIf someone needs the bear and the bear eats the rabbit then they eat the cow.\nFOL:\tall x. (Needs(x, Bear) & Eats(Bear, Rabbit) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bear and they need the rabbit then the rabbit needs the bear.\nFOL:\tall x. (Eats(x, Bear) & Needs(x, Rabbit) -> Needs(Rabbit, Bear))\nTEXT:\tIf someone is round then they need the bear.\nFOL:\tall x. (Round(x) -> Needs(x, Bear))\nTEXT:\tThe bear does not need the lion.\nFOL:\t-Needs(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow needs the lion.\nFOL:\tNeeds(Cow, Lion)\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEats(Lion, Rabbit)\nTEXT:\tThe lion is blue.\nFOL:\tBlue(Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tSees(Rabbit, Lion)\nTEXT:\tBig people are blue.\nFOL:\tall x. (BigPeople(x) -> Blue(x))\nTEXT:\tIf the bear needs the lion then the lion is round.\nFOL:\tNeeds(Bear, Lion) -> Round(Lion)\nTEXT:\tIf someone sees the lion then they need the lion.\nFOL:\tall x. (Sees(x, Lion) -> Needs(x, Lion))\nTEXT:\tIf someone sees the lion and the lion is blue then the lion sees the cow.\nFOL:\tall x. (Sees(x, Lion) & Blue(Lion) -> Sees(Lion, Cow))\nTEXT:\tIf someone is rough then they see the lion.\nFOL:\tall x. (Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone sees the lion then the lion is rough.\nFOL:\tall x. (Sees(x, Lion) -> Rough(Lion))\nTEXT:\tIf someone needs the bear and the bear eats the rabbit then they eat the cow.\nFOL:\tall x. (Needs(x, Bear) & Eats(Bear, Rabbit) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bear and they need the rabbit then the rabbit needs the bear.\nFOL:\tall x. (Eats(x, Bear) & Needs(x, Rabbit) -> Needs(Rabbit, Bear))\nTEXT:\tIf someone is round then they need the bear.\nFOL:\tall x. (Round(x) -> Needs(x, Bear))\nTEXT:\tThe bear does not need the lion.\nFOL:\t-Needs(Bear, Lion)\nANSWER:\tFalse\n"], ["TEXT:\tThe cow does not see the lion.\nFOL:\t-See(Cow, Lion)\nTEXT:\tThe lion does not eat the cow.\nFOL:\t-Eat(Lion, Cow)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEat(Lion, Rabbit)\nTEXT:\tThe lion is not big.\nFOL:\t-Big(Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSee(Lion, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEat(Squirrel, Lion)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the lion.\nFOL:\tNeed(Squirrel, Lion)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSee(Squirrel, Lion)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSee(Squirrel, Rabbit)\nTEXT:\tIf someone needs the squirrel then they see the squirrel.\nFOL:\tall x. (Need(x, Squirrel) -> See(x, Squirrel))\nTEXT:\tIf someone sees the lion and they see the squirrel then the squirrel eats the cow.\nFOL:\tall x. (See(x, Lion) & See(x, Squirrel) -> Eat(Squirrel, Cow))\nTEXT:\tIf the cow sees the squirrel and the cow does not need the rabbit then the rabbit sees the lion.\nFOL:\t(See(Cow, Squirrel) & -Need(Cow, Rabbit) -> See(Rabbit, Lion))\nTEXT:\tRough people are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf someone needs the rabbit and the rabbit sees the squirrel then the squirrel does not need the lion.\nFOL:\tall x. (Need(x, Rabbit) & See(Rabbit, Squirrel) -> -Need(Squirrel, Lion))\nTEXT:\tIf someone is big and nice then they need the squirrel.\nFOL:\tall x. (Big(x) & Nice(x) -> Need(x, Squirrel))\nTEXT:\tIf someone is kind then they are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tNice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow does not see the lion.\nFOL:\t-Sees(Cow, Lion)\nTEXT:\tThe lion does not eat the cow.\nFOL:\t-Eats(Lion, Cow)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEats(Lion, Rabbit)\nTEXT:\tThe lion is not big.\nFOL:\t-Big(Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEats(Squirrel, Lion)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the lion.\nFOL:\tNeeds(Squirrel, Lion)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSees(Squirrel, Lion)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone needs the squirrel then they see the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> Sees(x, Squirrel))\nTEXT:\tIf someone sees the lion and they see the squirrel then the squirrel eats the cow.\nFOL:\tall x. ((Sees(x, Lion) & Sees(x, Squirrel)) -> Eats(Squirrel, Cow))\nTEXT:\tIf the cow sees the squirrel and the cow does not need the rabbit then the rabbit sees the lion.\nFOL:\t(Sees(Cow, Squirrel) & -Needs(Cow, Rabbit)) -> Sees(Rabbit, Lion)\nTEXT:\tRough people are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf someone needs the rabbit and the rabbit sees the squirrel then the squirrel does not need the lion.\nFOL:\tall x. ((Needs(x, Rabbit) & Sees(Rabbit, Squirrel)) -> -Needs(Squirrel, Lion))\nTEXT:\tIf someone is big and nice then they need the squirrel.\nFOL:\tall x. ((Big(x) & Nice(x)) -> Needs(x, Squirrel))\nTEXT:\tIf someone is kind then they are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tNice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow does not see the lion.\nFOL:\t-See(Cow, Lion)\nTEXT:\tThe lion does not eat the cow.\nFOL:\t-Eat(Lion, Cow)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEat(Lion, Rabbit)\nTEXT:\tThe lion is not big.\nFOL:\t-Big(Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSee(Lion, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEat(Squirrel, Lion)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the lion.\nFOL:\tNeed(Squirrel, Lion)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSee(Squirrel, Lion)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSee(Squirrel, Rabbit)\nTEXT:\tIf someone needs the squirrel then they see the squirrel.\nFOL:\tall x. (Need(x, Squirrel) -> See(x, Squirrel))\nTEXT:\tIf someone sees the lion and they see the squirrel then the squirrel eats the cow.\nFOL:\tall x. (See(x, Lion) & See(x, Squirrel) -> Eat(Squirrel, Cow))\nTEXT:\tIf the cow sees the squirrel and the cow does not need the rabbit then the rabbit sees the lion.\nFOL:\t(See(Cow, Squirrel) & -Need(Cow, Rabbit)) -> See(Rabbit, Lion)\nTEXT:\tRough people are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf someone needs the rabbit and the rabbit sees the squirrel then the squirrel does not need the lion.\nFOL:\tall x. (Need(x, Rabbit) & See(Rabbit, Squirrel)) -> -Need(Squirrel, Lion)\nTEXT:\tIf someone is big and nice then they need the squirrel.\nFOL:\tall x. (Big(x) & Nice(x) -> Need(x, Squirrel))\nTEXT:\tIf someone is kind then they are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tNice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow does not see the lion.\nFOL:\t-See(Cow, Lion)\nTEXT:\tThe lion does not eat the cow.\nFOL:\t-Eat(Lion, Cow)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEat(Lion, Rabbit)\nTEXT:\tThe lion is not big.\nFOL:\t-Big(Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSee(Lion, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEat(Squirrel, Lion)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the lion.\nFOL:\tNeeds(Squirrel, Lion)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSee(Squirrel, Lion)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSee(Squirrel, Rabbit)\nTEXT:\tIf someone needs the squirrel then they see the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> See(x, Squirrel))\nTEXT:\tIf someone sees the lion and they see the squirrel then the squirrel eats the cow.\nFOL:\tall x. ((See(x, Lion) & See(x, Squirrel)) -> Eat(Squirrel, Cow))\nTEXT:\tIf the cow sees the squirrel and the cow does not need the rabbit then the rabbit sees the lion.\nFOL:\t((See(Cow, Squirrel) & -Needs(Cow, Rabbit)) -> See(Rabbit, Lion))\nTEXT:\tRough people are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf someone needs the rabbit and the rabbit sees the squirrel then the squirrel does not need the lion.\nFOL:\tall x. ((Needs(x, Rabbit) & See(Rabbit, Squirrel)) -> -Needs(Squirrel, Lion))\nTEXT:\tIf someone is big and nice then they need the squirrel.\nFOL:\tall x. ((Big(x) & Nice(x)) -> Needs(x, Squirrel))\nTEXT:\tIf someone is kind then they are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tNice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow does not see the lion.\nFOL:\t-Sees(Cow, Lion)\nTEXT:\tThe lion does not eat the cow.\nFOL:\t-Eats(Lion, Cow)\nTEXT:\tThe lion eats the rabbit.\nFOL:\tEats(Lion, Rabbit)\nTEXT:\tThe lion is not big.\nFOL:\t-Big(Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-Nice(Rabbit)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEats(Squirrel, Lion)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the lion.\nFOL:\tNeeds(Squirrel, Lion)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSees(Squirrel, Lion)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone needs the squirrel then they see the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> Sees(x, Squirrel))\nTEXT:\tIf someone sees the lion and they see the squirrel then the squirrel eats the cow.\nFOL:\tall x. ((Sees(x, Lion) & Sees(x, Squirrel)) -> Eats(Squirrel, Cow))\nTEXT:\tIf the cow sees the squirrel and the cow does not need the rabbit then the rabbit sees the lion.\nFOL:\t((Sees(Cow, Squirrel) & -Needs(Cow, Rabbit)) -> Sees(Rabbit, Lion))\nTEXT:\tRough people are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tIf someone needs the rabbit and the rabbit sees the squirrel then the squirrel does not need the lion.\nFOL:\tall x. ((Needs(x, Rabbit) & Sees(Rabbit, Squirrel)) -> -Needs(Squirrel, Lion))\nTEXT:\tIf someone is big and nice then they need the squirrel.\nFOL:\tall x. ((Big(x) & Nice(x)) -> Needs(x, Squirrel))\nTEXT:\tIf someone is kind then they are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tNice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the mouse.\nFOL:\tNeeds(Bear, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe rabbit does not need the squirrel.\nFOL:\t-Needs(Rabbit, Squirrel)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the bear.\nFOL:\tLikes(Squirrel, Bear)\nTEXT:\tThe squirrel does not like the mouse.\nFOL:\t-Likes(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tIf someone eats the bear then they like the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Likes(x, Rabbit))\nTEXT:\tIf the bear is round and the bear is not blue then the bear does not like the rabbit.\nFOL:\t(Round(Bear) & -Blue(Bear)) -> -Likes(Bear, Rabbit)\nTEXT:\tIf the bear eats the rabbit and the rabbit likes the mouse then the bear likes the squirrel.\nFOL:\t(Eats(Bear, Rabbit) & Likes(Rabbit, Mouse)) -> Likes(Bear, Squirrel)\nTEXT:\tIf someone likes the rabbit then they like the squirrel.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the rabbit and the rabbit is round then they like the squirrel.\nFOL:\tall x. (Needs(x, Rabbit) & Round(Rabbit)) -> Likes(x, Squirrel)\nTEXT:\tIf someone needs the squirrel and they need the mouse then they do not eat the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) & Needs(x, Mouse)) -> -Eats(x, Squirrel)\nTEXT:\tIf someone likes the squirrel then they need the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Needs(x, Squirrel))\nTEXT:\tIf the squirrel needs the bear and the squirrel needs the mouse then the squirrel eats the bear.\nFOL:\t(Needs(Squirrel, Bear) & Needs(Squirrel, Mouse)) -> Eats(Squirrel, Bear)\nTEXT:\tIf someone is nice then they eat the mouse.\nFOL:\tall x. (Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the mouse.\nFOL:\tNeeds(Bear, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe rabbit does not need the squirrel.\nFOL:\t-Needs(Rabbit, Squirrel)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the bear.\nFOL:\tLikes(Squirrel, Bear)\nTEXT:\tThe squirrel does not like the mouse.\nFOL:\t-Likes(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tIf someone eats the bear then they like the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Likes(x, Rabbit))\nTEXT:\tIf the bear is round and the bear is not blue then the bear does not like the rabbit.\nFOL:\tRound(Bear) & -Blue(Bear) -> -Likes(Bear, Rabbit)\nTEXT:\tIf the bear eats the rabbit and the rabbit likes the mouse then the bear likes the squirrel.\nFOL:\tEats(Bear, Rabbit) & Likes(Rabbit, Mouse) -> Likes(Bear, Squirrel)\nTEXT:\tIf someone likes the rabbit then they like the squirrel.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the rabbit and the rabbit is round then they like the squirrel.\nFOL:\tall x. (Needs(x, Rabbit) & Round(Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the squirrel and they need the mouse then they do not eat the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) & Needs(x, Mouse) -> -Eats(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then they need the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Needs(x, Squirrel))\nTEXT:\tIf the squirrel needs the bear and the squirrel needs the mouse then the squirrel eats the bear.\nFOL:\tNeeds(Squirrel, Bear) & Needs(Squirrel, Mouse) -> Eats(Squirrel, Bear)\nTEXT:\tIf someone is nice then they eat the mouse.\nFOL:\tall x. (Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the mouse.\nFOL:\tNeeds(Bear, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe rabbit does not need the squirrel.\nFOL:\t-Needs(Rabbit, Squirrel)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the bear.\nFOL:\tLikes(Squirrel, Bear)\nTEXT:\tThe squirrel does not like the mouse.\nFOL:\t-Likes(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tIf someone eats the bear then they like the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Likes(x, Rabbit))\nTEXT:\tIf the bear is round and the bear is not blue then the bear does not like the rabbit.\nFOL:\t(Round(Bear) & -Blue(Bear)) -> -Likes(Bear, Rabbit)\nTEXT:\tIf the bear eats the rabbit and the rabbit likes the mouse then the bear likes the squirrel.\nFOL:\t(Eats(Bear, Rabbit) & Likes(Rabbit, Mouse)) -> Likes(Bear, Squirrel)\nTEXT:\tIf someone likes the rabbit then they like the squirrel.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the rabbit and the rabbit is round then they like the squirrel.\nFOL:\tall x. (Needs(x, Rabbit) & Round(Rabbit)) -> Likes(x, Squirrel)\nTEXT:\tIf someone needs the squirrel and they need the mouse then they do not eat the squirrel.\nFOL:\tall x. ((Needs(x, Squirrel) & Needs(x, Mouse)) -> -Eats(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then they need the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Needs(x, Squirrel))\nTEXT:\tIf the squirrel needs the bear and the squirrel needs the mouse then the squirrel eats the bear.\nFOL:\t(Needs(Squirrel, Bear) & Needs(Squirrel, Mouse)) -> Eats(Squirrel, Bear)\nTEXT:\tIf someone is nice then they eat the mouse.\nFOL:\tall x. (Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the mouse.\nFOL:\tNeeds(Bear, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe rabbit does not need the squirrel.\nFOL:\t-Needs(Rabbit, Squirrel)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the bear.\nFOL:\tLikes(Squirrel, Bear)\nTEXT:\tThe squirrel does not like the mouse.\nFOL:\t-Likes(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tIf someone eats the bear then they like the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Likes(x, Rabbit))\nTEXT:\tIf the bear is round and the bear is not blue then the bear does not like the rabbit.\nFOL:\tRound(Bear) & -Blue(Bear) -> -Likes(Bear, Rabbit)\nTEXT:\tIf the bear eats the rabbit and the rabbit likes the mouse then the bear likes the squirrel.\nFOL:\tEats(Bear, Rabbit) & Likes(Rabbit, Mouse) -> Likes(Bear, Squirrel)\nTEXT:\tIf someone likes the rabbit then they like the squirrel.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the rabbit and the rabbit is round then they like the squirrel.\nFOL:\tall x. (Needs(x, Rabbit) & Round(Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the squirrel and they need the mouse then they do not eat the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) & Needs(x, Mouse) -> -Eats(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then they need the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Needs(x, Squirrel))\nTEXT:\tIf the squirrel needs the bear and the squirrel needs the mouse then the squirrel eats the bear.\nFOL:\tNeeds(Squirrel, Bear) & Needs(Squirrel, Mouse) -> Eats(Squirrel, Bear)\nTEXT:\tIf someone is nice then they eat the mouse.\nFOL:\tall x. (Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the mouse.\nFOL:\tNeeds(Bear, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse needs the squirrel.\nFOL:\tNeeds(Mouse, Squirrel)\nTEXT:\tThe rabbit does not need the squirrel.\nFOL:\t-Needs(Rabbit, Squirrel)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the bear.\nFOL:\tLikes(Squirrel, Bear)\nTEXT:\tThe squirrel does not like the mouse.\nFOL:\t-Likes(Squirrel, Mouse)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the mouse.\nFOL:\tNeeds(Squirrel, Mouse)\nTEXT:\tIf someone eats the bear then they like the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Likes(x, Rabbit))\nTEXT:\tIf the bear is round and the bear is not blue then the bear does not like the rabbit.\nFOL:\t(Round(Bear) & -Blue(Bear)) -> -Likes(Bear, Rabbit)\nTEXT:\tIf the bear eats the rabbit and the rabbit likes the mouse then the bear likes the squirrel.\nFOL:\t(Eats(Bear, Rabbit) & Likes(Rabbit, Mouse)) -> Likes(Bear, Squirrel)\nTEXT:\tIf someone likes the rabbit then they like the squirrel.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the rabbit and the rabbit is round then they like the squirrel.\nFOL:\tall x. (Needs(x, Rabbit) & Round(Rabbit) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the squirrel and they need the mouse then they do not eat the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) & Needs(x, Mouse) -> -Eats(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then they need the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Needs(x, Squirrel))\nTEXT:\tIf the squirrel needs the bear and the squirrel needs the mouse then the squirrel eats the bear.\nFOL:\t(Needs(Squirrel, Bear) & Needs(Squirrel, Mouse)) -> Eats(Squirrel, Bear)\nTEXT:\tIf someone is nice then they eat the mouse.\nFOL:\tall x. (Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf someone is quiet then they are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are not round.\nFOL:\tall x. (Cold(x) -> -Round(x))\nTEXT:\tIf someone is cold and not round then they are white.\nFOL:\tall x. ((Cold(x) & -Round(x)) -> White(x))\nTEXT:\tIf someone is round and green then they are white.\nFOL:\tall x. ((Round(x) & Green(x)) -> White(x))\nTEXT:\tWhite people are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tAll white people are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tGreen, quiet people are not red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> -Red(x))\nTEXT:\tIf someone is cold and big then they are red.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Red(x))\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf someone is quiet then they are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are not round.\nFOL:\tall x. (Cold(x) -> -Round(x))\nTEXT:\tIf someone is cold and not round then they are white.\nFOL:\tall x. ((Cold(x) & -Round(x)) -> White(x))\nTEXT:\tIf someone is round and green then they are white.\nFOL:\tall x. ((Round(x) & Green(x)) -> White(x))\nTEXT:\tWhite people are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tAll white people are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tGreen, quiet people are not red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> -Red(x))\nTEXT:\tIf someone is cold and big then they are red.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Red(x))\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf someone is quiet then they are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are not round.\nFOL:\tall x. (Cold(x) -> -Round(x))\nTEXT:\tIf someone is cold and not round then they are white.\nFOL:\tall x. (Cold(x) & -Round(x) -> White(x))\nTEXT:\tIf someone is round and green then they are white.\nFOL:\tall x. (Round(x) & Green(x) -> White(x))\nTEXT:\tWhite people are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tAll white people are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tGreen, quiet people are not red.\nFOL:\tall x. (Green(x) & Quiet(x) -> -Red(x))\nTEXT:\tIf someone is cold and big then they are red.\nFOL:\tall x. (Cold(x) & Big(x) -> Red(x))\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf someone is quiet then they are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are not round.\nFOL:\tall x. (Cold(x) -> -Round(x))\nTEXT:\tIf someone is cold and not round then they are white.\nFOL:\tall x. ((Cold(x) & -Round(x)) -> White(x))\nTEXT:\tIf someone is round and green then they are white.\nFOL:\tall x. ((Round(x) & Green(x)) -> White(x))\nTEXT:\tWhite people are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tAll white people are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tGreen, quiet people are not red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> -Red(x))\nTEXT:\tIf someone is cold and big then they are red.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Red(x))\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf someone is quiet then they are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are not round.\nFOL:\tall x. (Cold(x) -> -Round(x))\nTEXT:\tIf someone is cold and not round then they are white.\nFOL:\tall x. ((Cold(x) & -Round(x)) -> White(x))\nTEXT:\tIf someone is round and green then they are white.\nFOL:\tall x. ((Round(x) & Green(x)) -> White(x))\nTEXT:\tWhite people are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tAll white people are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tGreen, quiet people are not red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> -Red(x))\nTEXT:\tIf someone is cold and big then they are red.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Red(x))\nTEXT:\tAnne is not round.\nFOL:\t-Round(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tAll big people are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Fiona is big then Fiona is red.\nFOL:\tBig(Fiona) -> Red(Fiona)\nTEXT:\tAll young, red people are quiet.\nFOL:\tall x. (Young(x) & Red(x) -> Quiet(x))\nTEXT:\tRed people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is big then they are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tIf Charlie is furry and Charlie is big then Charlie is quiet.\nFOL:\t(Furry(Charlie) & Big(Charlie)) -> Quiet(Charlie)\nTEXT:\tYoung people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tAll big people are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Fiona is big then Fiona is red.\nFOL:\tBig(Fiona) -> Red(Fiona)\nTEXT:\tAll young, red people are quiet.\nFOL:\tall x. (Young(x) & Red(x) -> Quiet(x))\nTEXT:\tRed people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is big then they are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tIf Charlie is furry and Charlie is big then Charlie is quiet.\nFOL:\t(Furry(Charlie) & Big(Charlie)) -> Quiet(Charlie)\nTEXT:\tYoung people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tAll big people are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Fiona is big then Fiona is red.\nFOL:\tBig(Fiona) -> Red(Fiona)\nTEXT:\tAll young, red people are quiet.\nFOL:\tall x. ((Young(x) & Red(x)) -> Quiet(x))\nTEXT:\tRed people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is big then they are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tIf Charlie is furry and Charlie is big then Charlie is quiet.\nFOL:\t(Furry(Charlie) & Big(Charlie)) -> Quiet(Charlie)\nTEXT:\tYoung people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tAll big people are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Fiona is big then Fiona is red.\nFOL:\tBig(Fiona) -> Red(Fiona)\nTEXT:\tAll young, red people are quiet.\nFOL:\tall x. (Young(x) & Red(x) -> Quiet(x))\nTEXT:\tRed people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is big then they are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tIf Charlie is furry and Charlie is big then Charlie is quiet.\nFOL:\t(Furry(Charlie) & Big(Charlie)) -> Quiet(Charlie)\nTEXT:\tYoung people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tAll big people are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Fiona is big then Fiona is red.\nFOL:\tBig(Fiona) -> Red(Fiona)\nTEXT:\tAll young, red people are quiet.\nFOL:\tall x. ((Young(x) & Red(x)) -> Quiet(x))\nTEXT:\tRed people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is big then they are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tIf Charlie is furry and Charlie is big then Charlie is quiet.\nFOL:\t(Furry(Charlie) & Big(Charlie)) -> Quiet(Charlie)\nTEXT:\tYoung people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf someone is round and not rough then they are nice.\nFOL:\tall x. ((Round(x) & -Rough(x)) -> Nice(x))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough, green people are kind.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Kind(x))\nTEXT:\tGreen, big people are blue.\nFOL:\tall x. ((Green(x) & Big(x)) -> Blue(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tFalse\n", "TEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf someone is round and not rough then they are nice.\nFOL:\tall x. ((Round(x) & -Rough(x)) -> Nice(x))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough, green people are kind.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Kind(x))\nTEXT:\tGreen, big people are blue.\nFOL:\tall x. ((Green(x) & Big(x)) -> Blue(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tFalse\n", "TEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf someone is round and not rough then they are nice.\nFOL:\tall x. ((Round(x) & -Rough(x)) -> Nice(x))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough, green people are kind.\nFOL:\tall x. (Rough(x) & Green(x) -> Kind(x))\nTEXT:\tGreen, big people are blue.\nFOL:\tall x. (Green(x) & Big(x) -> Blue(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tFalse\n", "TEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf someone is round and not rough then they are nice.\nFOL:\tall x. ((Round(x) & -Rough(x)) -> Nice(x))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough, green people are kind.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Kind(x))\nTEXT:\tGreen, big people are blue.\nFOL:\tall x. ((Green(x) & Big(x)) -> Blue(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tFalse\n", "TEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf someone is round and not rough then they are nice.\nFOL:\tall x. ((Round(x) & -Rough(x)) -> Nice(x))\nTEXT:\tIf someone is green then they are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf someone is rough then they are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRough, green people are kind.\nFOL:\tall x. ((Rough(x) & Green(x)) -> Kind(x))\nTEXT:\tGreen, big people are blue.\nFOL:\tall x. ((Green(x) & Big(x)) -> Blue(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll rough, big things are red.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Red(x))\nTEXT:\tAll blue things are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Big(x))\nTEXT:\tIf something is red and big then it is nice.\nFOL:\tall x. ((Red(x) & Big(x)) -> Nice(x))\nTEXT:\tRed, cold things are nice.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tIf Charlie is rough and Charlie is blue then Charlie is cold.\nFOL:\t(Rough(Charlie) & Blue(Charlie)) -> Cold(Charlie)\nTEXT:\tIf something is green and cold then it is blue.\nFOL:\tall x. ((Green(x) & Cold(x)) -> Blue(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll rough, big things are red.\nFOL:\tall x. (Rough(x) & Big(x) -> Red(x))\nTEXT:\tAll blue things are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is red and big then it is nice.\nFOL:\tall x. (Red(x) & Big(x) -> Nice(x))\nTEXT:\tRed, cold things are nice.\nFOL:\tall x. (Red(x) & Cold(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tIf Charlie is rough and Charlie is blue then Charlie is cold.\nFOL:\t(Rough(Charlie) & Blue(Charlie) -> Cold(Charlie))\nTEXT:\tIf something is green and cold then it is blue.\nFOL:\tall x. (Green(x) & Cold(x) -> Blue(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll rough, big things are red.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Red(x))\nTEXT:\tAll blue things are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Big(x))\nTEXT:\tIf something is red and big then it is nice.\nFOL:\tall x. ((Red(x) & Big(x)) -> Nice(x))\nTEXT:\tRed, cold things are nice.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tIf Charlie is rough and Charlie is blue then Charlie is cold.\nFOL:\t((Rough(Charlie) & Blue(Charlie)) -> Cold(Charlie))\nTEXT:\tIf something is green and cold then it is blue.\nFOL:\tall x. ((Green(x) & Cold(x)) -> Blue(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll rough, big things are red.\nFOL:\tall x. (Rough(x) & Big(x) -> Red(x))\nTEXT:\tAll blue things are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is red and big then it is nice.\nFOL:\tall x. (Red(x) & Big(x) -> Nice(x))\nTEXT:\tRed, cold things are nice.\nFOL:\tall x. (Red(x) & Cold(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tIf Charlie is rough and Charlie is blue then Charlie is cold.\nFOL:\t(Rough(Charlie) & Blue(Charlie) -> Cold(Charlie))\nTEXT:\tIf something is green and cold then it is blue.\nFOL:\tall x. (Green(x) & Cold(x) -> Blue(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll rough, big things are red.\nFOL:\tall x. (Rough(x) & Big(x) -> Red(x))\nTEXT:\tAll blue things are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tRed, rough things are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is red and big then it is nice.\nFOL:\tall x. (Red(x) & Big(x) -> Nice(x))\nTEXT:\tRed, cold things are nice.\nFOL:\tall x. (Red(x) & Cold(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tIf Charlie is rough and Charlie is blue then Charlie is cold.\nFOL:\t(Rough(Charlie) & Blue(Charlie) -> Cold(Charlie))\nTEXT:\tIf something is green and cold then it is blue.\nFOL:\tall x. (Green(x) & Cold(x) -> Blue(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tCold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is quiet then it is furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tRed, quiet things are kind.\nFOL:\tall x. (Red(x) & Quiet(x) -> Kind(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tCold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is quiet then it is furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tRed, quiet things are kind.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Kind(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tCold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is quiet then it is furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tRed, quiet things are kind.\nFOL:\tall x. (Red(x) & Quiet(x) -> Kind(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tCold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is quiet then it is furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tRed, quiet things are kind.\nFOL:\tall x. (Red(x) & Quiet(x) -> Kind(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tCold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is quiet then it is furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tRed, quiet things are kind.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Kind(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n"], ["TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is not green.\nFOL:\t-Green(Cat)\nTEXT:\tThe cat does not need the mouse.\nFOL:\t-Need(Cat, Mouse)\nTEXT:\tThe cat sees the cow.\nFOL:\tSee(Cat, Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLike(Cow, Cat)\nTEXT:\tThe cow does not like the mouse.\nFOL:\t-Like(Cow, Mouse)\nTEXT:\tThe cow does not see the mouse.\nFOL:\t-See(Cow, Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLike(Mouse, Cow)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLike(Mouse, Tiger)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeed(Mouse, Cat)\nTEXT:\tThe mouse does not need the tiger.\nFOL:\t-Need(Mouse, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLike(Tiger, Cow)\nTEXT:\tThe tiger does not see the cat.\nFOL:\t-See(Tiger, Cat)\nTEXT:\tIf something needs the mouse then the mouse likes the cat.\nFOL:\tall x. (Need(x, Mouse) -> Like(Mouse, Cat))\nTEXT:\tIf something likes the cat then it is kind.\nFOL:\tall x. (Like(x, Cat) -> Kind(x))\nTEXT:\tIf something needs the cow then it likes the mouse.\nFOL:\tall x. (Need(x, Cow) -> Like(x, Mouse))\nTEXT:\tIf something needs the cat and it sees the cat then it likes the mouse.\nFOL:\tall x. (Need(x, Cat) & See(x, Cat) -> Like(x, Mouse))\nTEXT:\tIf something is kind then it needs the mouse.\nFOL:\tall x. (Kind(x) -> Need(x, Mouse))\nTEXT:\tIf something likes the cat and it needs the tiger then the tiger does not see the cat.\nFOL:\tall x. (Like(x, Cat) & Need(x, Tiger) -> -See(Tiger, Cat))\nTEXT:\tIf something sees the mouse then it sees the cat.\nFOL:\tall x. (See(x, Mouse) -> See(x, Cat))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Like(x, Tiger))\nTEXT:\tIf something needs the mouse and it does not need the cow then the cow is round.\nFOL:\tall x. (Need(x, Mouse) & -Need(x, Cow) -> Round(Cow))\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeed(Tiger, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is not green.\nFOL:\t-Green(Cat)\nTEXT:\tThe cat does not need the mouse.\nFOL:\t-Need(Cat, Mouse)\nTEXT:\tThe cat sees the cow.\nFOL:\tSee(Cat, Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLike(Cow, Cat)\nTEXT:\tThe cow does not like the mouse.\nFOL:\t-Like(Cow, Mouse)\nTEXT:\tThe cow does not see the mouse.\nFOL:\t-See(Cow, Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLike(Mouse, Cow)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLike(Mouse, Tiger)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeed(Mouse, Cat)\nTEXT:\tThe mouse does not need the tiger.\nFOL:\t-Need(Mouse, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLike(Tiger, Cow)\nTEXT:\tThe tiger does not see the cat.\nFOL:\t-See(Tiger, Cat)\nTEXT:\tIf something needs the mouse then the mouse likes the cat.\nFOL:\tall x. (Need(x, Mouse) -> Like(Mouse, Cat))\nTEXT:\tIf something likes the cat then it is kind.\nFOL:\tall x. (Like(x, Cat) -> Kind(x))\nTEXT:\tIf something needs the cow then it likes the mouse.\nFOL:\tall x. (Need(x, Cow) -> Like(x, Mouse))\nTEXT:\tIf something needs the cat and it sees the cat then it likes the mouse.\nFOL:\tall x. ((Need(x, Cat) & See(x, Cat)) -> Like(x, Mouse))\nTEXT:\tIf something is kind then it needs the mouse.\nFOL:\tall x. (Kind(x) -> Need(x, Mouse))\nTEXT:\tIf something likes the cat and it needs the tiger then the tiger does not see the cat.\nFOL:\tall x. ((Like(x, Cat) & Need(x, Tiger)) -> -See(Tiger, Cat))\nTEXT:\tIf something sees the mouse then it sees the cat.\nFOL:\tall x. (See(x, Mouse) -> See(x, Cat))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Like(x, Tiger))\nTEXT:\tIf something needs the mouse and it does not need the cow then the cow is round.\nFOL:\tall x. ((Need(x, Mouse) & -Need(x, Cow)) -> Round(Cow))\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeed(Tiger, Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is not green.\nFOL:\t-Green(Cat)\nTEXT:\tThe cat does not need the mouse.\nFOL:\t-Needs(Cat, Mouse)\nTEXT:\tThe cat sees the cow.\nFOL:\tSees(Cat, Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow does not like the mouse.\nFOL:\t-Likes(Cow, Mouse)\nTEXT:\tThe cow does not see the mouse.\nFOL:\t-Sees(Cow, Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse does not need the tiger.\nFOL:\t-Needs(Mouse, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLikes(Tiger, Cow)\nTEXT:\tThe tiger does not see the cat.\nFOL:\t-Sees(Tiger, Cat)\nTEXT:\tIf something needs the mouse then the mouse likes the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Likes(Mouse, Cat))\nTEXT:\tIf something likes the cat then it is kind.\nFOL:\tall x. (Likes(x, Cat) -> Kind(x))\nTEXT:\tIf something needs the cow then it likes the mouse.\nFOL:\tall x. (Needs(x, Cow) -> Likes(x, Mouse))\nTEXT:\tIf something needs the cat and it sees the cat then it likes the mouse.\nFOL:\tall x. ((Needs(x, Cat) & Sees(x, Cat)) -> Likes(x, Mouse))\nTEXT:\tIf something is kind then it needs the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf something likes the cat and it needs the tiger then the tiger does not see the cat.\nFOL:\tall x. ((Likes(x, Cat) & Needs(x, Tiger)) -> -Sees(Tiger, Cat))\nTEXT:\tIf something sees the mouse then it sees the cat.\nFOL:\tall x. (Sees(x, Mouse) -> Sees(x, Cat))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something needs the mouse and it does not need the cow then the cow is round.\nFOL:\tall x. ((Needs(x, Mouse) & -Needs(x, Cow)) -> Round(Cow))\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nANSWER:\tFalse", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is not green.\nFOL:\t-Green(Cat)\nTEXT:\tThe cat does not need the mouse.\nFOL:\t-Needs(Cat, Mouse)\nTEXT:\tThe cat sees the cow.\nFOL:\tSees(Cat, Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow does not like the mouse.\nFOL:\t-Likes(Cow, Mouse)\nTEXT:\tThe cow does not see the mouse.\nFOL:\t-See(Cow, Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse does not need the tiger.\nFOL:\t-Needs(Mouse, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLikes(Tiger, Cow)\nTEXT:\tThe tiger does not see the cat.\nFOL:\t-See(Tiger, Cat)\nTEXT:\tIf something needs the mouse then the mouse likes the cat.\nFOL:\tall x. (Needs(x, Mouse) -> Likes(Mouse, Cat))\nTEXT:\tIf something likes the cat then it is kind.\nFOL:\tall x. (Likes(x, Cat) -> Kind(x))\nTEXT:\tIf something needs the cow then it likes the mouse.\nFOL:\tall x. (Needs(x, Cow) -> Likes(x, Mouse))\nTEXT:\tIf something needs the cat and it sees the cat then it likes the mouse.\nFOL:\tall x. ((Needs(x, Cat) & Sees(x, Cat)) -> Likes(x, Mouse))\nTEXT:\tIf something is kind then it needs the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf something likes the cat and it needs the tiger then the tiger does not see the cat.\nFOL:\tall x. ((Likes(x, Cat) & Needs(x, Tiger)) -> -See(Tiger, Cat))\nTEXT:\tIf something sees the mouse then it sees the cat.\nFOL:\tall x. (See(x, Mouse) -> See(x, Cat))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something needs the mouse and it does not need the cow then the cow is round.\nFOL:\tall x. ((Needs(x, Mouse) & -Needs(x, Cow)) -> Round(Cow))\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nANSWER:\tUncertain", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is not green.\nFOL:\t-Green(Cat)\nTEXT:\tThe cat does not need the mouse.\nFOL:\t-Need(Cat, Mouse)\nTEXT:\tThe cat sees the cow.\nFOL:\tSee(Cat, Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLike(Cow, Cat)\nTEXT:\tThe cow does not like the mouse.\nFOL:\t-Like(Cow, Mouse)\nTEXT:\tThe cow does not see the mouse.\nFOL:\t-See(Cow, Mouse)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLike(Mouse, Cow)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLike(Mouse, Tiger)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeed(Mouse, Cat)\nTEXT:\tThe mouse does not need the tiger.\nFOL:\t-Need(Mouse, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLike(Tiger, Cow)\nTEXT:\tThe tiger does not see the cat.\nFOL:\t-See(Tiger, Cat)\nTEXT:\tIf something needs the mouse then the mouse likes the cat.\nFOL:\tall x. (Need(x, Mouse) -> Like(Mouse, Cat))\nTEXT:\tIf something likes the cat then it is kind.\nFOL:\tall x. (Like(x, Cat) -> Kind(x))\nTEXT:\tIf something needs the cow then it likes the mouse.\nFOL:\tall x. (Need(x, Cow) -> Like(x, Mouse))\nTEXT:\tIf something needs the cat and it sees the cat then it likes the mouse.\nFOL:\tall x. ((Need(x, Cat) & See(x, Cat)) -> Like(x, Mouse))\nTEXT:\tIf something is kind then it needs the mouse.\nFOL:\tall x. (Kind(x) -> Need(x, Mouse))\nTEXT:\tIf something likes the cat and it needs the tiger then the tiger does not see the cat.\nFOL:\tall x. ((Like(x, Cat) & Need(x, Tiger)) -> -See(Tiger, Cat))\nTEXT:\tIf something sees the mouse then it sees the cat.\nFOL:\tall x. (See(x, Mouse) -> See(x, Cat))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Like(x, Tiger))\nTEXT:\tIf something needs the mouse and it does not need the cow then the cow is round.\nFOL:\tall x. ((Need(x, Mouse) & -Need(x, Cow)) -> Round(Cow))\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeed(Tiger, Mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tKind things are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tAll rough, furry things are quiet.\nFOL:\tall x. (Rough(x) & Furry(x) -> Quiet(x))\nTEXT:\tKind, big things are furry.\nFOL:\tall x. (Kind(x) & Big(x) -> Furry(x))\nTEXT:\tIf Dave is rough then Dave is blue.\nFOL:\tRough(Dave) -> Blue(Dave)\nTEXT:\tIf something is kind and rough then it is big.\nFOL:\tall x. (Kind(x) & Rough(x) -> Big(x))\nTEXT:\tIf Dave is kind then Dave is furry.\nFOL:\tKind(Dave) -> Furry(Dave)\nTEXT:\tIf something is quiet then it is round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tKind things are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tAll rough, furry things are quiet.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Quiet(x))\nTEXT:\tKind, big things are furry.\nFOL:\tall x. ((Kind(x) & Big(x)) -> Furry(x))\nTEXT:\tIf Dave is rough then Dave is blue.\nFOL:\tRough(Dave) -> Blue(Dave)\nTEXT:\tIf something is kind and rough then it is big.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Dave is kind then Dave is furry.\nFOL:\tKind(Dave) -> Furry(Dave)\nTEXT:\tIf something is quiet then it is round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tKind things are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tAll rough, furry things are quiet.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Quiet(x))\nTEXT:\tKind, big things are furry.\nFOL:\tall x. ((Kind(x) & Big(x)) -> Furry(x))\nTEXT:\tIf Dave is rough then Dave is blue.\nFOL:\tRough(Dave) -> Blue(Dave)\nTEXT:\tIf something is kind and rough then it is big.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Dave is kind then Dave is furry.\nFOL:\tKind(Dave) -> Furry(Dave)\nTEXT:\tIf something is quiet then it is round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tKind things are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tAll rough, furry things are quiet.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Quiet(x))\nTEXT:\tKind, big things are furry.\nFOL:\tall x. ((Kind(x) & Big(x)) -> Furry(x))\nTEXT:\tIf Dave is rough then Dave is blue.\nFOL:\tRough(Dave) -> Blue(Dave)\nTEXT:\tIf something is kind and rough then it is big.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Dave is kind then Dave is furry.\nFOL:\tKind(Dave) -> Furry(Dave)\nTEXT:\tIf something is quiet then it is round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tKind things are rough.\nFOL:\tall x. (Kind(x) -> Rough(x))\nTEXT:\tAll rough, furry things are quiet.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Quiet(x))\nTEXT:\tKind, big things are furry.\nFOL:\tall x. ((Kind(x) & Big(x)) -> Furry(x))\nTEXT:\tIf Dave is rough then Dave is blue.\nFOL:\tRough(Dave) -> Blue(Dave)\nTEXT:\tIf something is kind and rough then it is big.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Dave is kind then Dave is furry.\nFOL:\tKind(Dave) -> Furry(Dave)\nTEXT:\tIf something is quiet then it is round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll quiet, kind people are young.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Young(x))\nTEXT:\tIf Charlie is quiet and Charlie is young then Charlie is kind.\nFOL:\t(Quiet(Charlie) & Young(Charlie)) -> Kind(Charlie)\nTEXT:\tAll green, white people are cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll quiet people are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, green people are white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tRough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll quiet, kind people are young.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Young(x))\nTEXT:\tIf Charlie is quiet and Charlie is young then Charlie is kind.\nFOL:\t(Quiet(Charlie) & Young(Charlie)) -> Kind(Charlie)\nTEXT:\tAll green, white people are cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll quiet people are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, green people are white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tRough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll quiet, kind people are young.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Young(x))\nTEXT:\tIf Charlie is quiet and Charlie is young then Charlie is kind.\nFOL:\t(Quiet(Charlie) & Young(Charlie)) -> Kind(Charlie)\nTEXT:\tAll green, white people are cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll quiet people are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, green people are white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tRough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll quiet, kind people are young.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Young(x))\nTEXT:\tIf Charlie is quiet and Charlie is young then Charlie is kind.\nFOL:\t(Quiet(Charlie) & Young(Charlie)) -> Kind(Charlie)\nTEXT:\tAll green, white people are cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll quiet people are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, green people are white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tRough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tAll quiet, kind people are young.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Young(x))\nTEXT:\tIf Charlie is quiet and Charlie is young then Charlie is kind.\nFOL:\t(Quiet(Charlie) & Young(Charlie)) -> Kind(Charlie)\nTEXT:\tAll green, white people are cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll quiet people are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, green people are white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tAll young people are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tRough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tIf Gary is round and Gary is furry then Gary is blue.\nFOL:\t(Round(Gary) & Furry(Gary)) -> Blue(Gary)\nTEXT:\tIf Gary is smart and Gary is blue then Gary is nice.\nFOL:\t(Smart(Gary) & Blue(Gary)) -> Nice(Gary)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tIf someone is green and furry then they are blue.\nFOL:\tall x. (Green(x) & Furry(x) -> Blue(x))\nTEXT:\tBlue, cold people are green.\nFOL:\tall x. (Blue(x) & Cold(x) -> Green(x))\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tIf Gary is round and Gary is furry then Gary is blue.\nFOL:\t(Round(Gary) & Furry(Gary) -> Blue(Gary))\nTEXT:\tIf Gary is smart and Gary is blue then Gary is nice.\nFOL:\t(Smart(Gary) & Blue(Gary) -> Nice(Gary))\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tIf someone is green and furry then they are blue.\nFOL:\tall x. (Green(x) & Furry(x) -> Blue(x))\nTEXT:\tBlue, cold people are green.\nFOL:\tall x. (Blue(x) & Cold(x) -> Green(x))\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tIf Gary is round and Gary is furry then Gary is blue.\nFOL:\t(Round(Gary) & Furry(Gary) -> Blue(Gary))\nTEXT:\tIf Gary is smart and Gary is blue then Gary is nice.\nFOL:\t(Smart(Gary) & Blue(Gary) -> Nice(Gary))\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tIf someone is green and furry then they are blue.\nFOL:\tall x. (Green(x) & Furry(x) -> Blue(x))\nTEXT:\tBlue, cold people are green.\nFOL:\tall x. (Blue(x) & Cold(x) -> Green(x))\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tIf Gary is round and Gary is furry then Gary is blue.\nFOL:\t(Round(Gary) & Furry(Gary)) -> Blue(Gary)\nTEXT:\tIf Gary is smart and Gary is blue then Gary is nice.\nFOL:\t(Smart(Gary) & Blue(Gary)) -> Nice(Gary)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tIf someone is green and furry then they are blue.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Blue(x))\nTEXT:\tBlue, cold people are green.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Green(x))\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tIf Gary is round and Gary is furry then Gary is blue.\nFOL:\t(Round(Gary) & Furry(Gary)) -> Blue(Gary)\nTEXT:\tIf Gary is smart and Gary is blue then Gary is nice.\nFOL:\t(Smart(Gary) & Blue(Gary)) -> Nice(Gary)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry people are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tIf someone is green and furry then they are blue.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Blue(x))\nTEXT:\tBlue, cold people are green.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Green(x))\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nTEXT:\tThe dog does not like the lion.\nFOL:\t-Likes(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not visit the lion.\nFOL:\t-Visits(Mouse, Lion)\nTEXT:\tIf something is round then it visits the mouse.\nFOL:\tall x. (Round(x) -> Visits(x, Mouse))\nTEXT:\tIf something visits the mouse then it is cold.\nFOL:\tall x. (Visits(x, Mouse) -> Cold(x))\nTEXT:\tIf something visits the dog and the dog needs the lion then the lion is round.\nFOL:\tall x. ((Visits(x, Dog) & Needs(Dog, Lion)) -> Round(Lion))\nTEXT:\tIf something is cold then it needs the lion.\nFOL:\tall x. (Cold(x) -> Needs(x, Lion))\nTEXT:\tIf the mouse does not visit the dog then the dog is green.\nFOL:\t(-Visits(Mouse, Dog) -> Green(Dog))\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nTEXT:\tThe dog does not like the lion.\nFOL:\t-Likes(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not visit the lion.\nFOL:\t-Visits(Mouse, Lion)\nTEXT:\tIf something is round then it visits the mouse.\nFOL:\tall x. (Round(x) -> Visits(x, Mouse))\nTEXT:\tIf something visits the mouse then it is cold.\nFOL:\tall x. (Visits(x, Mouse) -> Cold(x))\nTEXT:\tIf something visits the dog and the dog needs the lion then the lion is round.\nFOL:\tall x. ((Visits(x, Dog) & Needs(Dog, Lion)) -> Round(Lion))\nTEXT:\tIf something is cold then it needs the lion.\nFOL:\tall x. (Cold(x) -> Needs(x, Lion))\nTEXT:\tIf the mouse does not visit the dog then the dog is green.\nFOL:\t(-Visits(Mouse, Dog) -> Green(Dog))\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nTEXT:\tThe dog does not like the lion.\nFOL:\t- Likes(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not visit the lion.\nFOL:\t- Visits(Mouse, Lion)\nTEXT:\tIf something is round then it visits the mouse.\nFOL:\tall x. (Round(x) -> Visits(x, Mouse))\nTEXT:\tIf something visits the mouse then it is cold.\nFOL:\tall x. (Visits(x, Mouse) -> Cold(x))\nTEXT:\tIf something visits the dog and the dog needs the lion then the lion is round.\nFOL:\tall x. ((Visits(x, Dog) & Needs(Dog, Lion)) -> Round(Lion))\nTEXT:\tIf something is cold then it needs the lion.\nFOL:\tall x. (Cold(x) -> Needs(x, Lion))\nTEXT:\tIf the mouse does not visit the dog then the dog is green.\nFOL:\t(- Visits(Mouse, Dog)) -> Green(Dog)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nTEXT:\tThe dog does not like the lion.\nFOL:\t-Likes(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not visit the lion.\nFOL:\t-Visits(Mouse, Lion)\nTEXT:\tIf something is round then it visits the mouse.\nFOL:\tall x. (Round(x) -> Visits(x, Mouse))\nTEXT:\tIf something visits the mouse then it is cold.\nFOL:\tall x. (Visits(x, Mouse) -> Cold(x))\nTEXT:\tIf something visits the dog and the dog needs the lion then the lion is round.\nFOL:\tall x. ((Visits(x, Dog) & Needs(Dog, Lion)) -> Round(Lion))\nTEXT:\tIf something is cold then it needs the lion.\nFOL:\tall x. (Cold(x) -> Needs(x, Lion))\nTEXT:\tIf the mouse does not visit the dog then the dog is green.\nFOL:\t(-Visits(Mouse, Dog) -> Green(Dog))\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nTEXT:\tThe dog does not like the lion.\nFOL:\t-Likes(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse does not visit the lion.\nFOL:\t-Visits(Mouse, Lion)\nTEXT:\tIf something is round then it visits the mouse.\nFOL:\tall x. (Round(x) -> Visits(x, Mouse))\nTEXT:\tIf something visits the mouse then it is cold.\nFOL:\tall x. (Visits(x, Mouse) -> Cold(x))\nTEXT:\tIf something visits the dog and the dog needs the lion then the lion is round.\nFOL:\tall x. ((Visits(x, Dog) & Needs(Dog, Lion)) -> Round(Lion))\nTEXT:\tIf something is cold then it needs the lion.\nFOL:\tall x. (Cold(x) -> Needs(x, Lion))\nTEXT:\tIf the mouse does not visit the dog then the dog is green.\nFOL:\t(-Visits(Mouse, Dog) -> Green(Dog))\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nANSWER:\tTrue"], ["TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the rabbit.\nFOL:\tNeeds(Cat, Rabbit)\nTEXT:\tThe cat sees the lion.\nFOL:\tSees(Cat, Lion)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nTEXT:\tIf something is nice then it is big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is kind and it sees the rabbit then it needs the lion.\nFOL:\tall x. (Kind(x) & Sees(x, Rabbit) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(x))\nTEXT:\tAll cold, big things are kind.\nFOL:\tall x. (Cold(x) & Big(x) -> Kind(x))\nTEXT:\tIf something sees the bald eagle and the bald eagle is nice then it needs the rabbit.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(BaldEagle) -> Needs(x, Rabbit))\nTEXT:\tIf something sees the lion then it visits the rabbit.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Rabbit))\nTEXT:\tIf the bald eagle sees the cat then the bald eagle visits the rabbit.\nFOL:\tSees(BaldEagle, Cat) -> Visits(BaldEagle, Rabbit)\nTEXT:\tIf something visits the rabbit then it needs the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Needs(x, Rabbit))\nTEXT:\tIf something is big then it is cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the rabbit.\nFOL:\tNeeds(Cat, Rabbit)\nTEXT:\tThe cat sees the lion.\nFOL:\tSees(Cat, Lion)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nTEXT:\tIf something is nice then it is big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is kind and it sees the rabbit then it needs the lion.\nFOL:\tall x. (Kind(x) & Sees(x, Rabbit) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(x))\nTEXT:\tAll cold, big things are kind.\nFOL:\tall x. (Cold(x) & Big(x) -> Kind(x))\nTEXT:\tIf something sees the bald eagle and the bald eagle is nice then it needs the rabbit.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(BaldEagle) -> Needs(x, Rabbit))\nTEXT:\tIf something sees the lion then it visits the rabbit.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Rabbit))\nTEXT:\tIf the bald eagle sees the cat then the bald eagle visits the rabbit.\nFOL:\tSees(BaldEagle, Cat) -> Visits(BaldEagle, Rabbit)\nTEXT:\tIf something visits the rabbit then it needs the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Needs(x, Rabbit))\nTEXT:\tIf something is big then it is cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the rabbit.\nFOL:\tNeeds(Cat, Rabbit)\nTEXT:\tThe cat sees the lion.\nFOL:\tSees(Cat, Lion)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nTEXT:\tIf something is nice then it is big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is kind and it sees the rabbit then it needs the lion.\nFOL:\tall x. (Kind(x) & Sees(x, Rabbit) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(x))\nTEXT:\tAll cold, big things are kind.\nFOL:\tall x. (Cold(x) & Big(x) -> Kind(x))\nTEXT:\tIf something sees the bald eagle and the bald eagle is nice then it needs the rabbit.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(BaldEagle) -> Needs(x, Rabbit))\nTEXT:\tIf something sees the lion then it visits the rabbit.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Rabbit))\nTEXT:\tIf the bald eagle sees the cat then the bald eagle visits the rabbit.\nFOL:\tSees(BaldEagle, Cat) -> Visits(BaldEagle, Rabbit)\nTEXT:\tIf something visits the rabbit then it needs the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Needs(x, Rabbit))\nTEXT:\tIf something is big then it is cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the rabbit.\nFOL:\tNeeds(Cat, Rabbit)\nTEXT:\tThe cat sees the lion.\nFOL:\tSees(Cat, Lion)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nTEXT:\tIf something is nice then it is big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is kind and it sees the rabbit then it needs the lion.\nFOL:\tall x. (Kind(x) & Sees(x, Rabbit) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(x))\nTEXT:\tAll cold, big things are kind.\nFOL:\tall x. (Cold(x) & Big(x) -> Kind(x))\nTEXT:\tIf something sees the bald eagle and the bald eagle is nice then it needs the rabbit.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(BaldEagle) -> Needs(x, Rabbit))\nTEXT:\tIf something sees the lion then it visits the rabbit.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Rabbit))\nTEXT:\tIf the bald eagle sees the cat then the bald eagle visits the rabbit.\nFOL:\t(Sees(BaldEagle, Cat) -> Visits(BaldEagle, Rabbit))\nTEXT:\tIf something visits the rabbit then it needs the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Needs(x, Rabbit))\nTEXT:\tIf something is big then it is cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat needs the rabbit.\nFOL:\tNeeds(Cat, Rabbit)\nTEXT:\tThe cat sees the lion.\nFOL:\tSees(Cat, Lion)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion visits the rabbit.\nFOL:\tVisits(Lion, Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit sees the cat.\nFOL:\tSees(Rabbit, Cat)\nTEXT:\tIf something is nice then it is big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is kind and it sees the rabbit then it needs the lion.\nFOL:\tall x. ((Kind(x) & Sees(x, Rabbit)) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it is nice.\nFOL:\tall x. (Needs(x, Rabbit) -> Nice(x))\nTEXT:\tAll cold, big things are kind.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Kind(x))\nTEXT:\tIf something sees the bald eagle and the bald eagle is nice then it needs the rabbit.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(BaldEagle) -> Needs(x, Rabbit))\nTEXT:\tIf something sees the lion then it visits the rabbit.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Rabbit))\nTEXT:\tIf the bald eagle sees the cat then the bald eagle visits the rabbit.\nFOL:\tSees(BaldEagle, Cat) -> Visits(BaldEagle, Rabbit)\nTEXT:\tIf something visits the rabbit then it needs the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) -> Needs(x, Rabbit))\nTEXT:\tIf something is big then it is cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Bob is smart then Bob is not cold.\nFOL:\tSmart(Bob) -> -Cold(Bob)\nTEXT:\tIf something is cold then it is smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tKind things are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf something is green and not cold then it is not furry.\nFOL:\tall x. ((Green(x) & -Cold(x)) -> -Furry(x))\nTEXT:\tIf Harry is round and Harry is not smart then Harry is red.\nFOL:\t((Round(Harry) & -Smart(Harry)) -> Red(Harry))\nTEXT:\tAll furry, cold things are kind.\nFOL:\tall x. ((Furry(x) & Cold(x)) -> Kind(x))\nTEXT:\tIf something is smart and not cold then it is kind.\nFOL:\tall x. ((Smart(x) & -Cold(x)) -> Kind(x))\nTEXT:\tFurry, green things are kind.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Kind(x))\nTEXT:\tRound things are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Bob is smart then Bob is not cold.\nFOL:\tSmart(Bob) -> -Cold(Bob)\nTEXT:\tIf something is cold then it is smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tKind things are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf something is green and not cold then it is not furry.\nFOL:\tall x. (Green(x) & -Cold(x) -> -Furry(x))\nTEXT:\tIf Harry is round and Harry is not smart then Harry is red.\nFOL:\tRound(Harry) & -Smart(Harry) -> Red(Harry)\nTEXT:\tAll furry, cold things are kind.\nFOL:\tall x. (Furry(x) & Cold(x) -> Kind(x))\nTEXT:\tIf something is smart and not cold then it is kind.\nFOL:\tall x. (Smart(x) & -Cold(x) -> Kind(x))\nTEXT:\tFurry, green things are kind.\nFOL:\tall x. (Furry(x) & Green(x) -> Kind(x))\nTEXT:\tRound things are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Bob is smart then Bob is not cold.\nFOL:\tSmart(Bob) -> -Cold(Bob)\nTEXT:\tIf something is cold then it is smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tKind things are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf something is green and not cold then it is not furry.\nFOL:\tall x. ((Green(x) & -Cold(x)) -> -Furry(x))\nTEXT:\tIf Harry is round and Harry is not smart then Harry is red.\nFOL:\t(Round(Harry) & -Smart(Harry)) -> Red(Harry)\nTEXT:\tAll furry, cold things are kind.\nFOL:\tall x. ((Furry(x) & Cold(x)) -> Kind(x))\nTEXT:\tIf something is smart and not cold then it is kind.\nFOL:\tall x. ((Smart(x) & -Cold(x)) -> Kind(x))\nTEXT:\tFurry, green things are kind.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Kind(x))\nTEXT:\tRound things are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Bob is smart then Bob is not cold.\nFOL:\tSmart(Bob) -> -Cold(Bob)\nTEXT:\tIf something is cold then it is smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tKind things are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf something is green and not cold then it is not furry.\nFOL:\tall x. (Green(x) & -Cold(x) -> -Furry(x))\nTEXT:\tIf Harry is round and Harry is not smart then Harry is red.\nFOL:\tRound(Harry) & -Smart(Harry) -> Red(Harry)\nTEXT:\tAll furry, cold things are kind.\nFOL:\tall x. (Furry(x) & Cold(x) -> Kind(x))\nTEXT:\tIf something is smart and not cold then it is kind.\nFOL:\tall x. (Smart(x) & -Cold(x) -> Kind(x))\nTEXT:\tFurry, green things are kind.\nFOL:\tall x. (Furry(x) & Green(x) -> Kind(x))\nTEXT:\tRound things are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf Bob is smart then Bob is not cold.\nFOL:\tSmart(Bob) -> -Cold(Bob)\nTEXT:\tIf something is cold then it is smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tKind things are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf something is green and not cold then it is not furry.\nFOL:\tall x. (Green(x) & -Cold(x) -> -Furry(x))\nTEXT:\tIf Harry is round and Harry is not smart then Harry is red.\nFOL:\t(Round(Harry) & -Smart(Harry)) -> Red(Harry)\nTEXT:\tAll furry, cold things are kind.\nFOL:\tall x. ((Furry(x) & Cold(x)) -> Kind(x))\nTEXT:\tIf something is smart and not cold then it is kind.\nFOL:\tall x. (Smart(x) & -Cold(x) -> Kind(x))\nTEXT:\tFurry, green things are kind.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Kind(x))\nTEXT:\tRound things are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat does not see the tiger.\nFOL:\t-Sees(Cat, Tiger)\nTEXT:\tThe cat visits the mouse.\nFOL:\tVisits(Cat, Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tIf someone visits the bear and they do not visit the tiger then they are not cold.\nFOL:\tall x. ((Visits(x, Bear) & -Visits(x, Tiger)) -> -Cold(x))\nTEXT:\tIf someone sees the cat and they visit the cat then the cat likes the mouse.\nFOL:\tall x. ((Sees(x, Cat) & Visits(x, Cat)) -> Likes(Cat, Mouse))\nTEXT:\tIf someone is big and they like the tiger then they visit the cat.\nFOL:\tall x. ((Big(x) & Likes(x, Tiger)) -> Visits(x, Cat))\nTEXT:\tIf someone sees the cat then they like the tiger.\nFOL:\tall x. (Sees(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone is cold then they do not see the bear.\nFOL:\tall x. (Cold(x) -> -Sees(x, Bear))\nTEXT:\tIf someone likes the mouse then the mouse sees the cat.\nFOL:\tall x. (Likes(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf someone sees the tiger and they do not visit the cat then they are round.\nFOL:\tall x. ((Sees(x, Tiger) & -Visits(x, Cat)) -> Round(x))\nTEXT:\tIf the tiger sees the bear and the tiger is not round then the bear does not like the cat.\nFOL:\t(Sees(Tiger, Bear) & -Round(Tiger)) -> -Likes(Bear, Cat)\nTEXT:\tThe tiger does not like the tiger.\nFOL:\t-Likes(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat does not see the tiger.\nFOL:\t-Sees(Cat, Tiger)\nTEXT:\tThe cat visits the mouse.\nFOL:\tVisits(Cat, Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tIf someone visits the bear and they do not visit the tiger then they are not cold.\nFOL:\tall x. ((Visits(x, Bear) & -Visits(x, Tiger)) -> -Cold(x))\nTEXT:\tIf someone sees the cat and they visit the cat then the cat likes the mouse.\nFOL:\tall x. ((Sees(x, Cat) & Visits(x, Cat)) -> Likes(Cat, Mouse))\nTEXT:\tIf someone is big and they like the tiger then they visit the cat.\nFOL:\tall x. ((Big(x) & Likes(x, Tiger)) -> Visits(x, Cat))\nTEXT:\tIf someone sees the cat then they like the tiger.\nFOL:\tall x. (Sees(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone is cold then they do not see the bear.\nFOL:\tall x. (Cold(x) -> -Sees(x, Bear))\nTEXT:\tIf someone likes the mouse then the mouse sees the cat.\nFOL:\tall x. (Likes(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf someone sees the tiger and they do not visit the cat then they are round.\nFOL:\tall x. ((Sees(x, Tiger) & -Visits(x, Cat)) -> Round(x))\nTEXT:\tIf the tiger sees the bear and the tiger is not round then the bear does not like the cat.\nFOL:\t((Sees(Tiger, Bear) & -Round(Tiger)) -> -Likes(Bear, Cat))\nTEXT:\tThe tiger does not like the tiger.\nFOL:\t-Likes(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat does not see the tiger.\nFOL:\t-Sees(Cat, Tiger)\nTEXT:\tThe cat visits the mouse.\nFOL:\tVisits(Cat, Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tIf someone visits the bear and they do not visit the tiger then they are not cold.\nFOL:\tall x. ((Visits(x, Bear) & -Visits(x, Tiger)) -> -Cold(x))\nTEXT:\tIf someone sees the cat and they visit the cat then the cat likes the mouse.\nFOL:\tall x. ((Sees(x, Cat) & Visits(x, Cat)) -> Likes(Cat, Mouse))\nTEXT:\tIf someone is big and they like the tiger then they visit the cat.\nFOL:\tall x. ((Big(x) & Likes(x, Tiger)) -> Visits(x, Cat))\nTEXT:\tIf someone sees the cat then they like the tiger.\nFOL:\tall x. (Sees(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone is cold then they do not see the bear.\nFOL:\tall x. (Cold(x) -> -Sees(x, Bear))\nTEXT:\tIf someone likes the mouse then the mouse sees the cat.\nFOL:\tall x. (Likes(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf someone sees the tiger and they do not visit the cat then they are round.\nFOL:\tall x. ((Sees(x, Tiger) & -Visits(x, Cat)) -> Round(x))\nTEXT:\tIf the tiger sees the bear and the tiger is not round then the bear does not like the cat.\nFOL:\t((Sees(Tiger, Bear) & -Round(Tiger)) -> -Likes(Bear, Cat))\nTEXT:\tThe tiger does not like the tiger.\nFOL:\t-Likes(Tiger, Tiger)\nANSWER:\tTrue", "TEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat does not see the tiger.\nFOL:\t-Sees(Cat, Tiger)\nTEXT:\tThe cat visits the mouse.\nFOL:\tVisits(Cat, Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tIf someone visits the bear and they do not visit the tiger then they are not cold.\nFOL:\tall x. ((Visits(x, Bear) & -Visits(x, Tiger)) -> -Cold(x))\nTEXT:\tIf someone sees the cat and they visit the cat then the cat likes the mouse.\nFOL:\tall x. ((Sees(x, Cat) & Visits(x, Cat)) -> Likes(Cat, Mouse))\nTEXT:\tIf someone is big and they like the tiger then they visit the cat.\nFOL:\tall x. ((Big(x) & Likes(x, Tiger)) -> Visits(x, Cat))\nTEXT:\tIf someone sees the cat then they like the tiger.\nFOL:\tall x. (Sees(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone is cold then they do not see the bear.\nFOL:\tall x. (Cold(x) -> -Sees(x, Bear))\nTEXT:\tIf someone likes the mouse then the mouse sees the cat.\nFOL:\tall x. (Likes(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf someone sees the tiger and they do not visit the cat then they are round.\nFOL:\tall x. ((Sees(x, Tiger) & -Visits(x, Cat)) -> Round(x))\nTEXT:\tIf the tiger sees the bear and the tiger is not round then the bear does not like the cat.\nFOL:\t(Sees(Tiger, Bear) & -Round(Tiger)) -> -Likes(Bear, Cat)\nTEXT:\tThe tiger does not like the tiger.\nFOL:\t-Likes(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe bear sees the cat.\nFOL:\tSees(Bear, Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat does not see the tiger.\nFOL:\t-Sees(Cat, Tiger)\nTEXT:\tThe cat visits the mouse.\nFOL:\tVisits(Cat, Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tIf someone visits the bear and they do not visit the tiger then they are not cold.\nFOL:\tall x. ((Visits(x, Bear) & -Visits(x, Tiger)) -> -Cold(x))\nTEXT:\tIf someone sees the cat and they visit the cat then the cat likes the mouse.\nFOL:\tall x. ((Sees(x, Cat) & Visits(x, Cat)) -> Likes(Cat, Mouse))\nTEXT:\tIf someone is big and they like the tiger then they visit the cat.\nFOL:\tall x. ((Big(x) & Likes(x, Tiger)) -> Visits(x, Cat))\nTEXT:\tIf someone sees the cat then they like the tiger.\nFOL:\tall x. (Sees(x, Cat) -> Likes(x, Tiger))\nTEXT:\tIf someone is cold then they do not see the bear.\nFOL:\tall x. (Cold(x) -> -Sees(x, Bear))\nTEXT:\tIf someone likes the mouse then the mouse sees the cat.\nFOL:\tall x. (Likes(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf someone sees the tiger and they do not visit the cat then they are round.\nFOL:\tall x. ((Sees(x, Tiger) & -Visits(x, Cat)) -> Round(x))\nTEXT:\tIf the tiger sees the bear and the tiger is not round then the bear does not like the cat.\nFOL:\t((Sees(Tiger, Bear) & -Round(Tiger)) -> -Likes(Bear, Cat))\nTEXT:\tThe tiger does not like the tiger.\nFOL:\t-Likes(Tiger, Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear sees the tiger.\nFOL:\tSees(Bear, Tiger)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe lion is not green.\nFOL:\t-IsGreen(Lion)\nTEXT:\tThe lion likes the tiger.\nFOL:\tLikes(Lion, Tiger)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel likes the lion.\nFOL:\tLikes(Squirrel, Lion)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not like the squirrel.\nFOL:\t- Likes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf someone likes the tiger and the tiger eats the bear then the bear eats the tiger.\nFOL:\tall x. ((Likes(x, Tiger) & Eats(Tiger, Bear)) -> Eats(Bear, Tiger))\nTEXT:\tIf someone eats the tiger then the tiger is blue.\nFOL:\tall x. (Eats(x, Tiger) -> IsBlue(Tiger))\nTEXT:\tIf someone sees the bear then they do not like the lion.\nFOL:\tall x. (Sees(x, Bear) -> - Likes(x, Lion))\nTEXT:\tIf someone is blue then they see the bear.\nFOL:\tall x. (IsBlue(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the bear then the bear likes the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> IsBlue(Bear))\nTEXT:\tIf someone likes the tiger and the tiger sees the lion then they eat the lion.\nFOL:\tall x. ((Likes(x, Tiger) & Sees(Tiger, Lion)) -> Eats(x, Lion))\nTEXT:\tIf someone sees the tiger and they are not blue then the tiger eats the lion.\nFOL:\tall x. ((Sees(x, Tiger) & -IsBlue(x)) -> Eats(Tiger, Lion))\nTEXT:\tThe bear does not like the lion.\nFOL:\t- Likes(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear sees the tiger.\nFOL:\tSees(Bear, Tiger)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe lion is not green.\nFOL:\t\u00acGreen(Lion)\nTEXT:\tThe lion likes the tiger.\nFOL:\tLikes(Lion, Tiger)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel likes the lion.\nFOL:\tLikes(Squirrel, Lion)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is not nice.\nFOL:\t\u00acNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not like the squirrel.\nFOL:\t\u00acLikes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf someone likes the tiger and the tiger eats the bear then the bear eats the tiger.\nFOL:\tall x. ((Likes(x, Tiger) & Eats(Tiger, Bear)) -> Eats(Bear, Tiger))\nTEXT:\tIf someone eats the tiger then the tiger is blue.\nFOL:\tall x. (Eats(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone sees the bear then they do not like the lion.\nFOL:\tall x. (Sees(x, Bear) -> \u00acLikes(x, Lion))\nTEXT:\tIf someone is blue then they see the bear.\nFOL:\tall x. (Blue(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the bear then the bear likes the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf someone likes the tiger and the tiger sees the lion then they eat the lion.\nFOL:\tall x. ((Likes(x, Tiger) & Sees(Tiger, Lion)) -> Eats(x, Lion))\nTEXT:\tIf someone sees the tiger and they are not blue then the tiger eats the lion.\nFOL:\tall x. ((Sees(x, Tiger) & \u00acBlue(x)) -> Eats(Tiger, Lion))\nTEXT:\tThe bear does not like the lion.\nFOL:\t\u00acLikes(Bear, Lion)\nANSWER:\tTrue", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear sees the tiger.\nFOL:\tSees(Bear, Tiger)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe lion is not green.\nFOL:\t-Green(Lion)\nTEXT:\tThe lion likes the tiger.\nFOL:\tLikes(Lion, Tiger)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel likes the lion.\nFOL:\tLikes(Squirrel, Lion)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not like the squirrel.\nFOL:\t-Likes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf someone likes the tiger and the tiger eats the bear then the bear eats the tiger.\nFOL:\tall x. ((Likes(x, Tiger) & Eats(Tiger, Bear)) -> Eats(Bear, Tiger))\nTEXT:\tIf someone eats the tiger then the tiger is blue.\nFOL:\tall x. (Eats(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone sees the bear then they do not like the lion.\nFOL:\tall x. (Sees(x, Bear) -> -Likes(x, Lion))\nTEXT:\tIf someone is blue then they see the bear.\nFOL:\tall x. (Blue(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the bear then the bear likes the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf someone likes the tiger and the tiger sees the lion then they eat the lion.\nFOL:\tall x. ((Likes(x, Tiger) & Sees(Tiger, Lion)) -> Eats(x, Lion))\nTEXT:\tIf someone sees the tiger and they are not blue then the tiger eats the lion.\nFOL:\tall x. ((Sees(x, Tiger) & -Blue(x)) -> Eats(Tiger, Lion))\nTEXT:\tThe bear does not like the lion.\nFOL:\t-Likes(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear sees the tiger.\nFOL:\tSees(Bear, Tiger)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe lion is not green.\nFOL:\t-Green(Lion)\nTEXT:\tThe lion likes the tiger.\nFOL:\tLikes(Lion, Tiger)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel likes the lion.\nFOL:\tLikes(Squirrel, Lion)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not like the squirrel.\nFOL:\t-Likes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf someone likes the tiger and the tiger eats the bear then the bear eats the tiger.\nFOL:\tall x. ((Likes(x, Tiger) & Eats(Tiger, Bear)) -> Eats(Bear, Tiger))\nTEXT:\tIf someone eats the tiger then the tiger is blue.\nFOL:\tall x. (Eats(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone sees the bear then they do not like the lion.\nFOL:\tall x. (Sees(x, Bear) -> -Likes(x, Lion))\nTEXT:\tIf someone is blue then they see the bear.\nFOL:\tall x. (Blue(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the bear then the bear likes the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf someone likes the tiger and the tiger sees the lion then they eat the lion.\nFOL:\tall x. ((Likes(x, Tiger) & Sees(Tiger, Lion)) -> Eats(x, Lion))\nTEXT:\tIf someone sees the tiger and they are not blue then the tiger eats the lion.\nFOL:\tall x. ((Sees(x, Tiger) & -Blue(x)) -> Eats(Tiger, Lion))\nTEXT:\tThe bear does not like the lion.\nFOL:\t-Likes(Bear, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is rough.\nFOL:\tRough(Bear)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear sees the tiger.\nFOL:\tSees(Bear, Tiger)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe lion is not green.\nFOL:\t-Green(Lion)\nTEXT:\tThe lion likes the tiger.\nFOL:\tLikes(Lion, Tiger)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe squirrel likes the lion.\nFOL:\tLikes(Squirrel, Lion)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not like the squirrel.\nFOL:\t-Likes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the lion.\nFOL:\tSees(Tiger, Lion)\nTEXT:\tIf someone likes the tiger and the tiger eats the bear then the bear eats the tiger.\nFOL:\tall x. (Likes(x, Tiger) & Eats(Tiger, Bear) -> Eats(Bear, Tiger))\nTEXT:\tIf someone eats the tiger then the tiger is blue.\nFOL:\tall x. (Eats(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone sees the bear then they do not like the lion.\nFOL:\tall x. (Sees(x, Bear) -> -Likes(x, Lion))\nTEXT:\tIf someone is blue then they see the bear.\nFOL:\tall x. (Blue(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the bear then the bear likes the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Likes(Bear, Tiger))\nTEXT:\tIf someone sees the bear then the bear is blue.\nFOL:\tall x. (Sees(x, Bear) -> Blue(Bear))\nTEXT:\tIf someone likes the tiger and the tiger sees the lion then they eat the lion.\nFOL:\tall x. (Likes(x, Tiger) & Sees(Tiger, Lion) -> Eats(x, Lion))\nTEXT:\tIf someone sees the tiger and they are not blue then the tiger eats the lion.\nFOL:\tall x. (Sees(x, Tiger) & -Blue(x) -> Eats(Tiger, Lion))\nTEXT:\tThe bear does not like the lion.\nFOL:\t-Likes(Bear, Lion)\nANSWER:\tUncertain\n"], ["TEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Gary is blue then Gary is furry.\nFOL:\tBlue(Gary) -> Furry(Gary)\nTEXT:\tIf someone is nice then they are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tAll red people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tYoung, blue people are quiet.\nFOL:\tall x. (Young(x) & Blue(x) -> Quiet(x))\nTEXT:\tAll nice, quiet people are red.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Red(x))\nTEXT:\tIf someone is smart and quiet then they are red.\nFOL:\tall x. (Smart(x) & Quiet(x) -> Red(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. (Red(x) & Young(x) -> Blue(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Gary is blue then Gary is furry.\nFOL:\tBlue(Gary) -> Furry(Gary)\nTEXT:\tIf someone is nice then they are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tAll red people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tYoung, blue people are quiet.\nFOL:\tall x. (Young(x) & Blue(x) -> Quiet(x))\nTEXT:\tAll nice, quiet people are red.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Red(x))\nTEXT:\tIf someone is smart and quiet then they are red.\nFOL:\tall x. (Smart(x) & Quiet(x) -> Red(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. (Red(x) & Young(x) -> Blue(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Gary is blue then Gary is furry.\nFOL:\tBlue(Gary) -> Furry(Gary)\nTEXT:\tIf someone is nice then they are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tAll red people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tYoung, blue people are quiet.\nFOL:\tall x. (Young(x) & Blue(x) -> Quiet(x))\nTEXT:\tAll nice, quiet people are red.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Red(x))\nTEXT:\tIf someone is smart and quiet then they are red.\nFOL:\tall x. (Smart(x) & Quiet(x) -> Red(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. (Red(x) & Young(x) -> Blue(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Gary is blue then Gary is furry.\nFOL:\tBlue(Gary) -> Furry(Gary)\nTEXT:\tIf someone is nice then they are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tAll red people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tYoung, blue people are quiet.\nFOL:\tall x. (Young(x) & Blue(x) -> Quiet(x))\nTEXT:\tAll nice, quiet people are red.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Red(x))\nTEXT:\tIf someone is smart and quiet then they are red.\nFOL:\tall x. (Smart(x) & Quiet(x) -> Red(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. (Red(x) & Young(x) -> Blue(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Gary is blue then Gary is furry.\nFOL:\tBlue(Gary) -> Furry(Gary)\nTEXT:\tIf someone is nice then they are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tAll red people are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tYoung, blue people are quiet.\nFOL:\tall x. (Young(x) & Blue(x) -> Quiet(x))\nTEXT:\tAll nice, quiet people are red.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Red(x))\nTEXT:\tIf someone is smart and quiet then they are red.\nFOL:\tall x. (Smart(x) & Quiet(x) -> Red(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. (Red(x) & Young(x) -> Blue(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEats(Squirrel, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tThe squirrel is not round.\nFOL:\t-Round(Squirrel)\nTEXT:\tIf something chases the lion then it does not like the lion.\nFOL:\tall x. (Chases(x, Lion) -> -Likes(x, Lion))\nTEXT:\tIf the lion eats the bear then the bear is big.\nFOL:\tEats(Lion, Bear) -> Big(Bear)\nTEXT:\tIf something is big then it chases the lion.\nFOL:\tall x. (Big(x) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion eats the bear.\nFOL:\tall x. (Chases(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tIf something eats the squirrel then it likes the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEats(Squirrel, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tThe squirrel is not round.\nFOL:\t-Round(Squirrel)\nTEXT:\tIf something chases the lion then it does not like the lion.\nFOL:\tall x. (Chases(x, Lion) -> -Likes(x, Lion))\nTEXT:\tIf the lion eats the bear then the bear is big.\nFOL:\tEats(Lion, Bear) -> Big(Bear)\nTEXT:\tIf something is big then it chases the lion.\nFOL:\tall x. (Big(x) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion eats the bear.\nFOL:\tall x. (Chases(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tIf something eats the squirrel then it likes the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEats(Squirrel, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tThe squirrel is not round.\nFOL:\t-Round(Squirrel)\nTEXT:\tIf something chases the lion then it does not like the lion.\nFOL:\tall x. (Chases(x, Lion) -> -Likes(x, Lion))\nTEXT:\tIf the lion eats the bear then the bear is big.\nFOL:\t(Eats(Lion, Bear) -> Big(Bear))\nTEXT:\tIf something is big then it chases the lion.\nFOL:\tall x. (Big(x) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion eats the bear.\nFOL:\tall x. (Chases(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tIf something eats the squirrel then it likes the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEats(Squirrel, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tThe squirrel is not round.\nFOL:\t-Round(Squirrel)\nTEXT:\tIf something chases the lion then it does not like the lion.\nFOL:\tall x. (Chases(x, Lion) -> -Likes(x, Lion))\nTEXT:\tIf the lion eats the bear then the bear is big.\nFOL:\t(Eats(Lion, Bear) -> Big(Bear))\nTEXT:\tIf something is big then it chases the lion.\nFOL:\tall x. (Big(x) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion eats the bear.\nFOL:\tall x. (Chases(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tIf something eats the squirrel then it likes the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nTEXT:\tThe lion eats the cat.\nFOL:\tEats(Lion, Cat)\nTEXT:\tThe lion eats the squirrel.\nFOL:\tEats(Lion, Squirrel)\nTEXT:\tThe squirrel eats the lion.\nFOL:\tEats(Squirrel, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tThe squirrel is not round.\nFOL:\t-Round(Squirrel)\nTEXT:\tIf something chases the lion then it does not like the lion.\nFOL:\tall x. (Chases(x, Lion) -> -Likes(x, Lion))\nTEXT:\tIf the lion eats the bear then the bear is big.\nFOL:\tEats(Lion, Bear) -> Big(Bear)\nTEXT:\tIf something is big then it chases the lion.\nFOL:\tall x. (Big(x) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion eats the bear.\nFOL:\tall x. (Chases(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tIf something eats the squirrel then it likes the cat.\nFOL:\tall x. (Eats(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tThe lion chases the squirrel.\nFOL:\tChases(Lion, Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is rough and green then it is white.\nFOL:\tall x. (Rough(x) & Green(x) -> White(x))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is white and young then it is kind.\nFOL:\tall x. (White(x) & Young(x) -> Kind(x))\nTEXT:\tAll young things are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is rough and green then it is white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is white and young then it is kind.\nFOL:\tall x. ((White(x) & Young(x)) -> Kind(x))\nTEXT:\tAll young things are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is rough and green then it is white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is white and young then it is kind.\nFOL:\tall x. ((White(x) & Young(x)) -> Kind(x))\nTEXT:\tAll young things are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is rough and green then it is white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is white and young then it is kind.\nFOL:\tall x. ((White(x) & Young(x)) -> Kind(x))\nTEXT:\tAll young things are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is rough and green then it is white.\nFOL:\tall x. ((Rough(x) & Green(x)) -> White(x))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is white and young then it is kind.\nFOL:\tall x. ((White(x) & Young(x)) -> Kind(x))\nTEXT:\tAll young things are green.\nFOL:\tall x. (Young(x) -> Green(x))\nTEXT:\tWhite things are rough.\nFOL:\tall x. (White(x) -> Rough(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tSmart people are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tBlue, red people are big.\nFOL:\tall x. ((Blue(x) | Red(x)) -> Big(x))\nTEXT:\tIf someone is cold and not blue then they are red.\nFOL:\tall x. (Cold(x) & -Blue(x) -> Red(x))\nTEXT:\tAll cold people are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tBlue people are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf Bob is big and Bob is cold then Bob is not red.\nFOL:\t(Big(Bob) & Cold(Bob) -> -Red(Bob))\nTEXT:\tIf someone is smart and not red then they are white.\nFOL:\tall x. (Smart(x) & -Red(x) -> White(x))\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tSmart people are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tBlue, red people are big.\nFOL:\tall x. ((Blue(x) | Red(x)) -> Big(x))\nTEXT:\tIf someone is cold and not blue then they are red.\nFOL:\tall x. (Cold(x) & -Blue(x) -> Red(x))\nTEXT:\tAll cold people are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tBlue people are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf Bob is big and Bob is cold then Bob is not red.\nFOL:\t(Big(Bob) & Cold(Bob)) -> -Red(Bob)\nTEXT:\tIf someone is smart and not red then they are white.\nFOL:\tall x. (Smart(x) & -Red(x) -> White(x))\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tSmart people are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tBlue, red people are big.\nFOL:\tall x. ((Blue(x) | Red(x)) -> Big(x))\nTEXT:\tIf someone is cold and not blue then they are red.\nFOL:\tall x. ((Cold(x) & -Blue(x)) -> Red(x))\nTEXT:\tAll cold people are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tBlue people are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf Bob is big and Bob is cold then Bob is not red.\nFOL:\t(Big(Bob) & Cold(Bob)) -> -Red(Bob)\nTEXT:\tIf someone is smart and not red then they are white.\nFOL:\tall x. ((Smart(x) & -Red(x)) -> White(x))\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tSmart people are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tBlue, red people are big.\nFOL:\tall x. ((Blue(x) | Red(x)) -> Big(x))\nTEXT:\tIf someone is cold and not blue then they are red.\nFOL:\tall x. ((Cold(x) & -Blue(x)) -> Red(x))\nTEXT:\tAll cold people are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tBlue people are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf Bob is big and Bob is cold then Bob is not red.\nFOL:\t(Big(Bob) & Cold(Bob)) -> -Red(Bob)\nTEXT:\tIf someone is smart and not red then they are white.\nFOL:\tall x. ((Smart(x) & -Red(x)) -> White(x))\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tSmart people are big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tBlue, red people are big.\nFOL:\tall x. (Blue(x) | Red(x) -> Big(x))\nTEXT:\tIf someone is cold and not blue then they are red.\nFOL:\tall x. (Cold(x) & -Blue(x) -> Red(x))\nTEXT:\tAll cold people are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tBlue people are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf Bob is big and Bob is cold then Bob is not red.\nFOL:\tBig(Bob) & Cold(Bob) -> -Red(Bob)\nTEXT:\tIf someone is smart and not red then they are white.\nFOL:\tall x. (Smart(x) & -Red(x) -> White(x))\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll rough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf Bob is rough and Bob is blue then Bob is white.\nFOL:\t(Rough(Bob) & Blue(Bob)) -> White(Bob)\nTEXT:\tAll smart things are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tRed things are smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tIf something is white and nice then it is round.\nFOL:\tall x. ((White(x) & Nice(x)) -> Round(x))\nTEXT:\tSmart, nice things are round.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Round(x))\nTEXT:\tAll rough, round things are red.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Red(x))\nTEXT:\tAll blue things are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll smart things are blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll rough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf Bob is rough and Bob is blue then Bob is white.\nFOL:\t(Rough(Bob) & Blue(Bob)) -> White(Bob)\nTEXT:\tAll smart things are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tRed things are smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tIf something is white and nice then it is round.\nFOL:\tall x. (White(x) & Nice(x) -> Round(x))\nTEXT:\tSmart, nice things are round.\nFOL:\tall x. (Smart(x) & Nice(x) -> Round(x))\nTEXT:\tAll rough, round things are red.\nFOL:\tall x. (Rough(x) & Round(x) -> Red(x))\nTEXT:\tAll blue things are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll smart things are blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll rough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf Bob is rough and Bob is blue then Bob is white.\nFOL:\t((Rough(Bob) & Blue(Bob)) -> White(Bob))\nTEXT:\tAll smart things are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tRed things are smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tIf something is white and nice then it is round.\nFOL:\tall x. ((White(x) & Nice(x)) -> Round(x))\nTEXT:\tSmart, nice things are round.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Round(x))\nTEXT:\tAll rough, round things are red.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Red(x))\nTEXT:\tAll blue things are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll smart things are blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll rough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf Bob is rough and Bob is blue then Bob is white.\nFOL:\t(Rough(Bob) & Blue(Bob) -> White(Bob))\nTEXT:\tAll smart things are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tRed things are smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tIf something is white and nice then it is round.\nFOL:\tall x. ((White(x) & Nice(x)) -> Round(x))\nTEXT:\tSmart, nice things are round.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Round(x))\nTEXT:\tAll rough, round things are red.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Red(x))\nTEXT:\tAll blue things are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll smart things are blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll rough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tIf Bob is rough and Bob is blue then Bob is white.\nFOL:\t(Rough(Bob) & Blue(Bob)) -> White(Bob)\nTEXT:\tAll smart things are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tRed things are smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tIf something is white and nice then it is round.\nFOL:\tall x. ((White(x) & Nice(x)) -> Round(x))\nTEXT:\tSmart, nice things are round.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Round(x))\nTEXT:\tAll rough, round things are red.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Red(x))\nTEXT:\tAll blue things are nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll smart things are blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll kind, cold people are blue.\nFOL:\tall x. ((Kind(x) & Cold(x)) -> Blue(x))\nTEXT:\tIf someone is nice and not young then they are not blue.\nFOL:\tall x. ((Nice(x) & -Young(x)) -> -Blue(x))\nTEXT:\tIf Fiona is kind then Fiona is blue.\nFOL:\t(Kind(Fiona) -> Blue(Fiona))\nTEXT:\tIf Dave is kind and Dave is blue then Dave is not nice.\nFOL:\t((Kind(Dave) & Blue(Dave)) -> -Nice(Dave))\nTEXT:\tRound people are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Dave is young then Dave is kind.\nFOL:\t(Young(Dave) -> Kind(Dave))\nTEXT:\tIf Erin is kind and Erin is blue then Erin is round.\nFOL:\t((Kind(Erin) & Blue(Erin)) -> Round(Erin))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll kind, cold people are blue.\nFOL:\tall x. ((Kind(x) & Cold(x)) -> Blue(x))\nTEXT:\tIf someone is nice and not young then they are not blue.\nFOL:\tall x. ((Nice(x) & -Young(x)) -> -Blue(x))\nTEXT:\tIf Fiona is kind then Fiona is blue.\nFOL:\tKind(Fiona) -> Blue(Fiona)\nTEXT:\tIf Dave is kind and Dave is blue then Dave is not nice.\nFOL:\t(Kind(Dave) & Blue(Dave)) -> -Nice(Dave)\nTEXT:\tRound people are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Dave is young then Dave is kind.\nFOL:\tYoung(Dave) -> Kind(Dave)\nTEXT:\tIf Erin is kind and Erin is blue then Erin is round.\nFOL:\t(Kind(Erin) & Blue(Erin)) -> Round(Erin)\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll kind, cold people are blue.\nFOL:\tall x. ((Kind(x) & Cold(x)) -> Blue(x))\nTEXT:\tIf someone is nice and not young then they are not blue.\nFOL:\tall x. ((Nice(x) & -Young(x)) -> -Blue(x))\nTEXT:\tIf Fiona is kind then Fiona is blue.\nFOL:\t(Kind(Fiona) -> Blue(Fiona))\nTEXT:\tIf Dave is kind and Dave is blue then Dave is not nice.\nFOL:\t((Kind(Dave) & Blue(Dave)) -> -Nice(Dave))\nTEXT:\tRound people are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Dave is young then Dave is kind.\nFOL:\t(Young(Dave) -> Kind(Dave))\nTEXT:\tIf Erin is kind and Erin is blue then Erin is round.\nFOL:\t((Kind(Erin) & Blue(Erin)) -> Round(Erin))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll kind, cold people are blue.\nFOL:\tall x. ((Kind(x) & Cold(x)) -> Blue(x))\nTEXT:\tIf someone is nice and not young then they are not blue.\nFOL:\tall x. ((Nice(x) & -Young(x)) -> -Blue(x))\nTEXT:\tIf Fiona is kind then Fiona is blue.\nFOL:\t(Kind(Fiona) -> Blue(Fiona))\nTEXT:\tIf Dave is kind and Dave is blue then Dave is not nice.\nFOL:\t((Kind(Dave) & Blue(Dave)) -> -Nice(Dave))\nTEXT:\tRound people are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Dave is young then Dave is kind.\nFOL:\t(Young(Dave) -> Kind(Dave))\nTEXT:\tIf Erin is kind and Erin is blue then Erin is round.\nFOL:\t((Kind(Erin) & Blue(Erin)) -> Round(Erin))\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll kind, cold people are blue.\nFOL:\tall x. (Kind(x) & Cold(x) -> Blue(x))\nTEXT:\tIf someone is nice and not young then they are not blue.\nFOL:\tall x. (Nice(x) & -Young(x) -> -Blue(x))\nTEXT:\tIf Fiona is kind then Fiona is blue.\nFOL:\tKind(Fiona) -> Blue(Fiona)\nTEXT:\tIf Dave is kind and Dave is blue then Dave is not nice.\nFOL:\t(Kind(Dave) & Blue(Dave)) -> -Nice(Dave)\nTEXT:\tRound people are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Dave is young then Dave is kind.\nFOL:\tYoung(Dave) -> Kind(Dave)\nTEXT:\tIf Erin is kind and Erin is blue then Erin is round.\nFOL:\t(Kind(Erin) & Blue(Erin)) -> Round(Erin)\nTEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone is cold then they like the tiger.\nFOL:\tall x. (Cold(x) -> Likes(x, Tiger))\nTEXT:\tIf someone visits the squirrel then they visit the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf someone is nice then they see the cat.\nFOL:\tall x. (Nice(x) -> Sees(x, Cat))\nTEXT:\tIf someone sees the tiger then they are blue.\nFOL:\tall x. (Sees(x, Tiger) -> Blue(x))\nTEXT:\tIf someone visits the mouse then the mouse sees the tiger.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(Mouse, Tiger))\nTEXT:\tIf someone visits the squirrel then they are cold.\nFOL:\tall x. (Visits(x, Squirrel) -> Cold(x))\nTEXT:\tIf someone is blue then they visit the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tThe squirrel visits the mouse.\nFOL:\tVisits(Squirrel, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone is cold then they like the tiger.\nFOL:\tall x. (Cold(x) -> Likes(x, Tiger))\nTEXT:\tIf someone visits the squirrel then they visit the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf someone is nice then they see the cat.\nFOL:\tall x. (Nice(x) -> Sees(x, Cat))\nTEXT:\tIf someone sees the tiger then they are blue.\nFOL:\tall x. (Sees(x, Tiger) -> Blue(x))\nTEXT:\tIf someone visits the mouse then the mouse sees the tiger.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(Mouse, Tiger))\nTEXT:\tIf someone visits the squirrel then they are cold.\nFOL:\tall x. (Visits(x, Squirrel) -> Cold(x))\nTEXT:\tIf someone is blue then they visit the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tThe squirrel visits the mouse.\nFOL:\tVisits(Squirrel, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone is cold then they like the tiger.\nFOL:\tall x. (Cold(x) -> Likes(x, Tiger))\nTEXT:\tIf someone visits the squirrel then they visit the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf someone is nice then they see the cat.\nFOL:\tall x. (Nice(x) -> Sees(x, Cat))\nTEXT:\tIf someone sees the tiger then they are blue.\nFOL:\tall x. (Sees(x, Tiger) -> Blue(x))\nTEXT:\tIf someone visits the mouse then the mouse sees the tiger.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(Mouse, Tiger))\nTEXT:\tIf someone visits the squirrel then they are cold.\nFOL:\tall x. (Visits(x, Squirrel) -> Cold(x))\nTEXT:\tIf someone is blue then they visit the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tThe squirrel visits the mouse.\nFOL:\tVisits(Squirrel, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone is cold then they like the tiger.\nFOL:\tall x. (Cold(x) -> Likes(x, Tiger))\nTEXT:\tIf someone visits the squirrel then they visit the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf someone is nice then they see the cat.\nFOL:\tall x. (Nice(x) -> Sees(x, Cat))\nTEXT:\tIf someone sees the tiger then they are blue.\nFOL:\tall x. (Sees(x, Tiger) -> Blue(x))\nTEXT:\tIf someone visits the mouse then the mouse sees the tiger.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(Mouse, Tiger))\nTEXT:\tIf someone visits the squirrel then they are cold.\nFOL:\tall x. (Visits(x, Squirrel) -> Cold(x))\nTEXT:\tIf someone is blue then they visit the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tThe squirrel visits the mouse.\nFOL:\tVisits(Squirrel, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat visits the tiger.\nFOL:\tVisits(Cat, Tiger)\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the squirrel.\nFOL:\tVisits(Tiger, Squirrel)\nTEXT:\tIf someone is cold then they like the tiger.\nFOL:\tall x. (Cold(x) -> Likes(x, Tiger))\nTEXT:\tIf someone visits the squirrel then they visit the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf someone is nice then they see the cat.\nFOL:\tall x. (Nice(x) -> Sees(x, Cat))\nTEXT:\tIf someone sees the tiger then they are blue.\nFOL:\tall x. (Sees(x, Tiger) -> Blue(x))\nTEXT:\tIf someone visits the mouse then the mouse sees the tiger.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(Mouse, Tiger))\nTEXT:\tIf someone visits the squirrel then they are cold.\nFOL:\tall x. (Visits(x, Squirrel) -> Cold(x))\nTEXT:\tIf someone is blue then they visit the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tThe squirrel visits the mouse.\nFOL:\tVisits(Squirrel, Mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe rabbit does not eat the mouse.\nFOL:\t-Eats(Rabbit, Mouse)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is blue then it visits the rabbit.\nFOL:\tall x. (Blue(x) -> Visits(x, Rabbit))\nTEXT:\tIf something visits the mouse and it eats the rabbit then it visits the rabbit.\nFOL:\tall x. ((Visits(x, Mouse) & Eats(x, Rabbit)) -> Visits(x, Rabbit))\nTEXT:\tAll nice things are blue.\nFOL:\tall x. (Nice(x) -> Blue(x))\nTEXT:\tIf something needs the mouse and it eats the tiger then the tiger does not eat the mouse.\nFOL:\tall x. ((Needs(x, Mouse) & Eats(x, Tiger)) -> -Eats(Tiger, Mouse))\nTEXT:\tIf the mouse eats the tiger and the rabbit does not visit the mouse then the rabbit does not visit the squirrel.\nFOL:\t((Eats(Mouse, Tiger) & -Visits(Rabbit, Mouse)) -> -Visits(Rabbit, Squirrel))\nTEXT:\tIf the mouse visits the tiger and the mouse is not green then the mouse is blue.\nFOL:\t((Visits(Mouse, Tiger) & -Green(Mouse)) -> Blue(Mouse))\nTEXT:\tIf something visits the rabbit then the rabbit is nice.\nFOL:\tall x. (Visits(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something is green and nice then it eats the mouse.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Eats(x, Mouse))\nTEXT:\tThe rabbit is not blue.\nFOL:\t-Blue(Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe rabbit does not eat the mouse.\nFOL:\t-Eats(Rabbit, Mouse)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is blue then it visits the rabbit.\nFOL:\tall x. (Blue(x) -> Visits(x, Rabbit))\nTEXT:\tIf something visits the mouse and it eats the rabbit then it visits the rabbit.\nFOL:\tall x. (Visits(x, Mouse) & Eats(x, Rabbit) -> Visits(x, Rabbit))\nTEXT:\tAll nice things are blue.\nFOL:\tall x. (Nice(x) -> Blue(x))\nTEXT:\tIf something needs the mouse and it eats the tiger then the tiger does not eat the mouse.\nFOL:\tall x. (Needs(x, Mouse) & Eats(x, Tiger) -> -Eats(Tiger, Mouse))\nTEXT:\tIf the mouse eats the tiger and the rabbit does not visit the mouse then the rabbit does not visit the squirrel.\nFOL:\t(Eats(Mouse, Tiger) & -Visits(Rabbit, Mouse) -> -Visits(Rabbit, Squirrel))\nTEXT:\tIf the mouse visits the tiger and the mouse is not green then the mouse is blue.\nFOL:\t(Visits(Mouse, Tiger) & -Green(Mouse) -> Blue(Mouse))\nTEXT:\tIf something visits the rabbit then the rabbit is nice.\nFOL:\tall x. (Visits(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something is green and nice then it eats the mouse.\nFOL:\tall x. (Green(x) & Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe rabbit is not blue.\nFOL:\t-Blue(Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe rabbit does not eat the mouse.\nFOL:\t-Eats(Rabbit, Mouse)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe squirrel is green.\nFOL:\tIsGreen(Squirrel)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe tiger is nice.\nFOL:\tIsNice(Tiger)\nTEXT:\tIf something is blue then it visits the rabbit.\nFOL:\tall x. (IsBlue(x) -> Visits(x, Rabbit))\nTEXT:\tIf something visits the mouse and it eats the rabbit then it visits the rabbit.\nFOL:\tall x. (Visits(x, Mouse) & Eats(x, Rabbit) -> Visits(x, Rabbit))\nTEXT:\tAll nice things are blue.\nFOL:\tall x. (IsNice(x) -> IsBlue(x))\nTEXT:\tIf something needs the mouse and it eats the tiger then the tiger does not eat the mouse.\nFOL:\tall x. (Needs(x, Mouse) & Eats(x, Tiger) -> -Eats(Tiger, Mouse))\nTEXT:\tIf the mouse eats the tiger and the rabbit does not visit the mouse then the rabbit does not visit the squirrel.\nFOL:\t(Eats(Mouse, Tiger) & -Visits(Rabbit, Mouse) -> -Visits(Rabbit, Squirrel))\nTEXT:\tIf the mouse visits the tiger and the mouse is not green then the mouse is blue.\nFOL:\t(Visits(Mouse, Tiger) & -IsGreen(Mouse) -> IsBlue(Mouse))\nTEXT:\tIf something visits the rabbit then the rabbit is nice.\nFOL:\tall x. (Visits(x, Rabbit) -> IsNice(Rabbit))\nTEXT:\tIf something is green and nice then it eats the mouse.\nFOL:\tall x. (IsGreen(x) & IsNice(x) -> Eats(x, Mouse))\nTEXT:\tThe rabbit is not blue.\nFOL:\t-IsBlue(Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe rabbit does not eat the mouse.\nFOL:\t-Eats(Rabbit, Mouse)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is blue then it visits the rabbit.\nFOL:\tall x. (Blue(x) -> Visits(x, Rabbit))\nTEXT:\tIf something visits the mouse and it eats the rabbit then it visits the rabbit.\nFOL:\tall x. (Visits(x, Mouse) & Eats(x, Rabbit) -> Visits(x, Rabbit))\nTEXT:\tAll nice things are blue.\nFOL:\tall x. (Nice(x) -> Blue(x))\nTEXT:\tIf something needs the mouse and it eats the tiger then the tiger does not eat the mouse.\nFOL:\tall x. (Needs(x, Mouse) & Eats(x, Tiger) -> -Eats(Tiger, Mouse))\nTEXT:\tIf the mouse eats the tiger and the rabbit does not visit the mouse then the rabbit does not visit the squirrel.\nFOL:\t(Eats(Mouse, Tiger) & -Visits(Rabbit, Mouse) -> -Visits(Rabbit, Squirrel))\nTEXT:\tIf the mouse visits the tiger and the mouse is not green then the mouse is blue.\nFOL:\t(Visits(Mouse, Tiger) & -Green(Mouse) -> Blue(Mouse))\nTEXT:\tIf something visits the rabbit then the rabbit is nice.\nFOL:\tall x. (Visits(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something is green and nice then it eats the mouse.\nFOL:\tall x. (Green(x) & Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe rabbit is not blue.\nFOL:\t-Blue(Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe rabbit does not eat the mouse.\nFOL:\t-Eats(Rabbit, Mouse)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is blue then it visits the rabbit.\nFOL:\tall x. (Blue(x) -> Visits(x, Rabbit))\nTEXT:\tIf something visits the mouse and it eats the rabbit then it visits the rabbit.\nFOL:\tall x. (Visits(x, Mouse) & Eats(x, Rabbit) -> Visits(x, Rabbit))\nTEXT:\tAll nice things are blue.\nFOL:\tall x. (Nice(x) -> Blue(x))\nTEXT:\tIf something needs the mouse and it eats the tiger then the tiger does not eat the mouse.\nFOL:\tall x. (Needs(x, Mouse) & Eats(x, Tiger) -> -Eats(Tiger, Mouse))\nTEXT:\tIf the mouse eats the tiger and the rabbit does not visit the mouse then the rabbit does not visit the squirrel.\nFOL:\t(Eats(Mouse, Tiger) & -Visits(Rabbit, Mouse)) -> -Visits(Rabbit, Squirrel)\nTEXT:\tIf the mouse visits the tiger and the mouse is not green then the mouse is blue.\nFOL:\t(Visits(Mouse, Tiger) & -Green(Mouse)) -> Blue(Mouse)\nTEXT:\tIf something visits the rabbit then the rabbit is nice.\nFOL:\tall x. (Visits(x, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something is green and nice then it eats the mouse.\nFOL:\tall x. (Green(x) & Nice(x) -> Eats(x, Mouse))\nTEXT:\tThe rabbit is not blue.\nFOL:\t-Blue(Rabbit)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf someone sees the rabbit and they like the bear then they like the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) & Likes(x, Bear) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the tiger and the tiger needs the squirrel then they are round.\nFOL:\tall x. (Needs(x, Tiger) & Needs(Tiger, Squirrel) -> Round(x))\nTEXT:\tIf someone needs the squirrel and they are cold then the squirrel is round.\nFOL:\tall x. (Needs(x, Squirrel) & Cold(x) -> Round(Squirrel))\nTEXT:\tYoung people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone likes the bear and they see the squirrel then they need the bear.\nFOL:\tall x. (Likes(x, Bear) & Sees(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel likes the bear then the bear sees the tiger.\nFOL:\tall x. (Needs(x, Squirrel) & Likes(Squirrel, Bear) -> Sees(Bear, Tiger))\nTEXT:\tIf someone is cold then they need the squirrel.\nFOL:\tall x. (Cold(x) -> Needs(x, Squirrel))\nTEXT:\tIf someone is round and they like the tiger then the tiger is young.\nFOL:\tall x. (Round(x) & Likes(x, Tiger) -> Young(Tiger))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf someone sees the rabbit and they like the bear then they like the squirrel.\nFOL:\tall x. (See(x, Rabbit) & Likes(x, Bear) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the tiger and the tiger needs the squirrel then they are round.\nFOL:\tall x. (Needs(x, Tiger) & Needs(Tiger, Squirrel) -> Round(x))\nTEXT:\tIf someone needs the squirrel and they are cold then the squirrel is round.\nFOL:\tall x. (Needs(x, Squirrel) & Cold(x) -> Round(Squirrel))\nTEXT:\tYoung people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone likes the bear and they see the squirrel then they need the bear.\nFOL:\tall x. (Likes(x, Bear) & See(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel likes the bear then the bear sees the tiger.\nFOL:\tall x. (Needs(x, Squirrel) & Likes(Squirrel, Bear) -> See(Bear, Tiger))\nTEXT:\tIf someone is cold then they need the squirrel.\nFOL:\tall x. (Cold(x) -> Needs(x, Squirrel))\nTEXT:\tIf someone is round and they like the tiger then the tiger is young.\nFOL:\tall x. (Round(x) & Likes(x, Tiger) -> Young(Tiger))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf someone sees the rabbit and they like the bear then they like the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) & Likes(x, Bear) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the tiger and the tiger needs the squirrel then they are round.\nFOL:\tall x. (Needs(x, Tiger) & Needs(Tiger, Squirrel) -> Round(x))\nTEXT:\tIf someone needs the squirrel and they are cold then the squirrel is round.\nFOL:\tall x. (Needs(x, Squirrel) & Cold(x) -> Round(Squirrel))\nTEXT:\tYoung people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone likes the bear and they see the squirrel then they need the bear.\nFOL:\tall x. (Likes(x, Bear) & Sees(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel likes the bear then the bear sees the tiger.\nFOL:\tall x. (Needs(x, Squirrel) & Likes(Squirrel, Bear) -> Sees(Bear, Tiger))\nTEXT:\tIf someone is cold then they need the squirrel.\nFOL:\tall x. (Cold(x) -> Needs(x, Squirrel))\nTEXT:\tIf someone is round and they like the tiger then the tiger is young.\nFOL:\tall x. (Round(x) & Likes(x, Tiger) -> Young(Tiger))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf someone sees the rabbit and they like the bear then they like the squirrel.\nFOL:\tall x. ((Sees(x, Rabbit) & Likes(x, Bear)) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the tiger and the tiger needs the squirrel then they are round.\nFOL:\tall x. ((Needs(x, Tiger) & Needs(Tiger, Squirrel)) -> Round(x))\nTEXT:\tIf someone needs the squirrel and they are cold then the squirrel is round.\nFOL:\tall x. ((Needs(x, Squirrel) & Cold(x)) -> Round(Squirrel))\nTEXT:\tYoung people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone likes the bear and they see the squirrel then they need the bear.\nFOL:\tall x. ((Likes(x, Bear) & Sees(x, Squirrel)) -> Needs(x, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel likes the bear then the bear sees the tiger.\nFOL:\tall x. ((Needs(x, Squirrel) & Likes(Squirrel, Bear)) -> Sees(Bear, Tiger))\nTEXT:\tIf someone is cold then they need the squirrel.\nFOL:\tall x. (Cold(x) -> Needs(x, Squirrel))\nTEXT:\tIf someone is round and they like the tiger then the tiger is young.\nFOL:\tall x. ((Round(x) & Likes(x, Tiger)) -> Young(Tiger))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is young.\nFOL:\tYoung(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf someone sees the rabbit and they like the bear then they like the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) & Likes(x, Bear) -> Likes(x, Squirrel))\nTEXT:\tIf someone needs the tiger and the tiger needs the squirrel then they are round.\nFOL:\tall x. (Needs(x, Tiger) & Needs(Tiger, Squirrel) -> Round(x))\nTEXT:\tIf someone needs the squirrel and they are cold then the squirrel is round.\nFOL:\tall x. (Needs(x, Squirrel) & Cold(x) -> Round(Squirrel))\nTEXT:\tYoung people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone likes the bear and they see the squirrel then they need the bear.\nFOL:\tall x. (Likes(x, Bear) & Sees(x, Squirrel) -> Needs(x, Bear))\nTEXT:\tIf someone needs the squirrel and the squirrel likes the bear then the bear sees the tiger.\nFOL:\tall x. (Needs(x, Squirrel) & Likes(Squirrel, Bear) -> Sees(Bear, Tiger))\nTEXT:\tIf someone is cold then they need the squirrel.\nFOL:\tall x. (Cold(x) -> Needs(x, Squirrel))\nTEXT:\tIf someone is round and they like the tiger then the tiger is young.\nFOL:\tall x. (Round(x) & Likes(x, Tiger) -> Young(Tiger))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is not big.\nFOL:\t-Big(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf Erin is big then Erin is green.\nFOL:\tBig(Erin) -> Green(Erin)\nTEXT:\tBlue, kind people are big.\nFOL:\tall x. (Blue(x) & Kind(x) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll cold people are not quiet.\nFOL:\tall x. (Cold(x) -> -Quiet(x))\nTEXT:\tAll kind people are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tIf someone is big and kind then they are cold.\nFOL:\tall x. (Big(x) & Kind(x) -> Cold(x))\nTEXT:\tRed people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nANSWER:\tTrue\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is not big.\nFOL:\t-Big(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf Erin is big then Erin is green.\nFOL:\tBig(Erin) -> Green(Erin)\nTEXT:\tBlue, kind people are big.\nFOL:\tall x. (Blue(x) & Kind(x) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll cold people are not quiet.\nFOL:\tall x. (Cold(x) -> -Quiet(x))\nTEXT:\tAll kind people are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tIf someone is big and kind then they are cold.\nFOL:\tall x. ((Big(x) & Kind(x)) -> Cold(x))\nTEXT:\tRed people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nANSWER:\tTrue\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is not big.\nFOL:\t-Big(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf Erin is big then Erin is green.\nFOL:\tBig(Erin) -> Green(Erin)\nTEXT:\tBlue, kind people are big.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll cold people are not quiet.\nFOL:\tall x. (Cold(x) -> -Quiet(x))\nTEXT:\tAll kind people are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tIf someone is big and kind then they are cold.\nFOL:\tall x. ((Big(x) & Kind(x)) -> Cold(x))\nTEXT:\tRed people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nANSWER:\tTrue\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is not big.\nFOL:\t-Big(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf Erin is big then Erin is green.\nFOL:\tBig(Erin) -> Green(Erin)\nTEXT:\tBlue, kind people are big.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll cold people are not quiet.\nFOL:\tall x. (Cold(x) -> -Quiet(x))\nTEXT:\tAll kind people are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tIf someone is big and kind then they are cold.\nFOL:\tall x. ((Big(x) & Kind(x)) -> Cold(x))\nTEXT:\tRed people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nANSWER:\tTrue\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is not big.\nFOL:\t-Big(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf Erin is big then Erin is green.\nFOL:\tBig(Erin) -> Green(Erin)\nTEXT:\tBlue, kind people are big.\nFOL:\tall x. (Blue(x) & Kind(x) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll cold people are not quiet.\nFOL:\tall x. (Cold(x) -> -Quiet(x))\nTEXT:\tAll kind people are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tIf someone is big and kind then they are cold.\nFOL:\tall x. (Big(x) & Kind(x) -> Cold(x))\nTEXT:\tRed people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tQuiet, red things are nice.\nFOL:\tall x. (Quiet(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is blue then it is young.\nFOL:\tall x. (Blue(x) -> Young(x))\nTEXT:\tAll young things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf Erin is nice and Erin is quiet then Erin is rough.\nFOL:\t(Nice(Erin) & Quiet(Erin) -> Rough(Erin))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Blue(x))\nTEXT:\tAll red things are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tQuiet, red things are nice.\nFOL:\tall x. (Quiet(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is blue then it is young.\nFOL:\tall x. (Blue(x) -> Young(x))\nTEXT:\tAll young things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf Erin is nice and Erin is quiet then Erin is rough.\nFOL:\t(Nice(Erin) & Quiet(Erin)) -> Rough(Erin)\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Blue(x))\nTEXT:\tAll red things are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tQuiet, red things are nice.\nFOL:\tall x. (Quiet(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is blue then it is young.\nFOL:\tall x. (Blue(x) -> Young(x))\nTEXT:\tAll young things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf Erin is nice and Erin is quiet then Erin is rough.\nFOL:\t(Nice(Erin) & Quiet(Erin) -> Rough(Erin))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Blue(x))\nTEXT:\tAll red things are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tQuiet, red things are nice.\nFOL:\tall x. (Quiet(x) & Red(x) -> Nice(x))\nTEXT:\tIf something is blue then it is young.\nFOL:\tall x. (Blue(x) -> Young(x))\nTEXT:\tAll young things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf Erin is nice and Erin is quiet then Erin is rough.\nFOL:\t(Nice(Erin) & Quiet(Erin)) -> Rough(Erin)\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Blue(x))\nTEXT:\tAll red things are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tQuiet, red things are nice.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Nice(x))\nTEXT:\tIf something is blue then it is young.\nFOL:\tall x. (Blue(x) -> Young(x))\nTEXT:\tAll young things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf Erin is nice and Erin is quiet then Erin is rough.\nFOL:\t(Nice(Erin) & Quiet(Erin)) -> Rough(Erin)\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Blue(x))\nTEXT:\tAll red things are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tFalse\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tCold, white people are furry.\nFOL:\tall x. ((Cold(x) & White(x)) -> Furry(x))\nTEXT:\tIf someone is furry then they are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll cold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is kind and young then they are blue.\nFOL:\tall x. ((Kind(x) & Young(x)) -> Blue(x))\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. ((White(x) & Kind(x)) -> Young(x))\nTEXT:\tAll kind, blue people are cold.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Cold(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tCold, white people are furry.\nFOL:\tall x. ((Cold(x) & White(x)) -> Furry(x))\nTEXT:\tIf someone is furry then they are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll cold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is kind and young then they are blue.\nFOL:\tall x. ((Kind(x) & Young(x)) -> Blue(x))\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. ((White(x) & Kind(x)) -> Young(x))\nTEXT:\tAll kind, blue people are cold.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Cold(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tCold, white people are furry.\nFOL:\tall x. (Cold(x) & White(x) -> Furry(x))\nTEXT:\tIf someone is furry then they are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll cold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is kind and young then they are blue.\nFOL:\tall x. (Kind(x) & Young(x) -> Blue(x))\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. (White(x) & Kind(x) -> Young(x))\nTEXT:\tAll kind, blue people are cold.\nFOL:\tall x. (Kind(x) & Blue(x) -> Cold(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tCold, white people are furry.\nFOL:\tall x. (Cold(x) & White(x) -> Furry(x))\nTEXT:\tIf someone is furry then they are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll cold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is kind and young then they are blue.\nFOL:\tall x. (Kind(x) & Young(x) -> Blue(x))\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. (White(x) & Kind(x) -> Young(x))\nTEXT:\tAll kind, blue people are cold.\nFOL:\tall x. (Kind(x) & Blue(x) -> Cold(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tCold, white people are furry.\nFOL:\tall x. ((Cold(x) & White(x)) -> Furry(x))\nTEXT:\tIf someone is furry then they are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll cold people are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is kind and young then they are blue.\nFOL:\tall x. ((Kind(x) & Young(x)) -> Blue(x))\nTEXT:\tIf someone is furry then they are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tAll white, kind people are young.\nFOL:\tall x. ((White(x) & Kind(x)) -> Young(x))\nTEXT:\tAll kind, blue people are cold.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Cold(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear visits the bald eagle.\nFOL:\tVisits(Bear, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tAll round things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something visits the bald eagle and the bald eagle likes the bear then the bald eagle likes the dog.\nFOL:\tall x. (Visits(x, BaldEagle) & Likes(BaldEagle, Bear) -> Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the bald eagle and the bald eagle visits the rabbit then the bald eagle is young.\nFOL:\tall x. (Likes(x, BaldEagle) & Visits(BaldEagle, Rabbit) -> Young(BaldEagle))\nTEXT:\tAll rough, round things are big.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Big(x))\nTEXT:\tIf something likes the dog then the dog likes the bear.\nFOL:\tall x. (Likes(x, Dog) -> Likes(Dog, Bear))\nTEXT:\tIf something visits the bear then it is young.\nFOL:\tall x. (Visits(x, Bear) -> Young(x))\nTEXT:\tIf something needs the bald eagle and it needs the rabbit then the rabbit is blue.\nFOL:\tall x. ((Needs(x, BaldEagle) & Needs(x, Rabbit)) -> Blue(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the dog and the dog is young then the dog is round.\nFOL:\tall x. ((Visits(x, Dog) & Young(Dog)) -> Round(Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle visits the dog.\nFOL:\tVisit(BaldEagle, Dog)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear visits the bald eagle.\nFOL:\tVisit(Bear, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisit(Dog, Bear)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tAll round things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something visits the bald eagle and the bald eagle likes the bear then the bald eagle likes the dog.\nFOL:\tall x. (Visit(x, BaldEagle) & Likes(BaldEagle, Bear) -> Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the bald eagle and the bald eagle visits the rabbit then the bald eagle is young.\nFOL:\tall x. (Likes(x, BaldEagle) & Visit(BaldEagle, Rabbit) -> Young(BaldEagle))\nTEXT:\tAll rough, round things are big.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Big(x))\nTEXT:\tIf something likes the dog then the dog likes the bear.\nFOL:\tall x. (Likes(x, Dog) -> Likes(Dog, Bear))\nTEXT:\tIf something visits the bear then it is young.\nFOL:\tall x. (Visit(x, Bear) -> Young(x))\nTEXT:\tIf something needs the bald eagle and it needs the rabbit then the rabbit is blue.\nFOL:\tall x. (Needs(x, BaldEagle) & Needs(x, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the dog and the dog is young then the dog is round.\nFOL:\tall x. (Visit(x, Dog) & Young(Dog) -> Round(Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear visits the bald eagle.\nFOL:\tVisits(Bear, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tAll round things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something visits the bald eagle and the bald eagle likes the bear then the bald eagle likes the dog.\nFOL:\tall x. ((Visits(x, BaldEagle) & Likes(BaldEagle, Bear)) -> Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the bald eagle and the bald eagle visits the rabbit then the bald eagle is young.\nFOL:\tall x. ((Likes(x, BaldEagle) & Visits(BaldEagle, Rabbit)) -> Young(BaldEagle))\nTEXT:\tAll rough, round things are big.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Big(x))\nTEXT:\tIf something likes the dog then the dog likes the bear.\nFOL:\tall x. (Likes(x, Dog) -> Likes(Dog, Bear))\nTEXT:\tIf something visits the bear then it is young.\nFOL:\tall x. (Visits(x, Bear) -> Young(x))\nTEXT:\tIf something needs the bald eagle and it needs the rabbit then the rabbit is blue.\nFOL:\tall x. ((Needs(x, BaldEagle) & Needs(x, Rabbit)) -> Blue(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the dog and the dog is young then the dog is round.\nFOL:\tall x. ((Visits(x, Dog) & Young(Dog)) -> Round(Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear visits the bald eagle.\nFOL:\tVisits(Bear, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tAll round things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something visits the bald eagle and the bald eagle likes the bear then the bald eagle likes the dog.\nFOL:\tall x. ((Visits(x, BaldEagle) & Likes(BaldEagle, Bear)) -> Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the bald eagle and the bald eagle visits the rabbit then the bald eagle is young.\nFOL:\tall x. ((Likes(x, BaldEagle) & Visits(BaldEagle, Rabbit)) -> Young(BaldEagle))\nTEXT:\tAll rough, round things are big.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Big(x))\nTEXT:\tIf something likes the dog then the dog likes the bear.\nFOL:\tall x. (Likes(x, Dog) -> Likes(Dog, Bear))\nTEXT:\tIf something visits the bear then it is young.\nFOL:\tall x. (Visits(x, Bear) -> Young(x))\nTEXT:\tIf something needs the bald eagle and it needs the rabbit then the rabbit is blue.\nFOL:\tall x. ((Needs(x, BaldEagle) & Needs(x, Rabbit)) -> Blue(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the dog and the dog is young then the dog is round.\nFOL:\tall x. ((Visits(x, Dog) & Young(Dog)) -> Round(Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle visits the dog.\nFOL:\tVisits(BaldEagle, Dog)\nTEXT:\tThe bear likes the rabbit.\nFOL:\tLikes(Bear, Rabbit)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear visits the bald eagle.\nFOL:\tVisits(Bear, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tAll round things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something visits the bald eagle and the bald eagle likes the bear then the bald eagle likes the dog.\nFOL:\tall x. (Visits(x, BaldEagle) & Likes(BaldEagle, Bear) -> Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the bald eagle and the bald eagle visits the rabbit then the bald eagle is young.\nFOL:\tall x. (Likes(x, BaldEagle) & Visits(BaldEagle, Rabbit) -> Young(BaldEagle))\nTEXT:\tAll rough, round things are big.\nFOL:\tall x. (Rough(x) & Round(x) -> Big(x))\nTEXT:\tIf something likes the dog then the dog likes the bear.\nFOL:\tall x. (Likes(x, Dog) -> Likes(Dog, Bear))\nTEXT:\tIf something visits the bear then it is young.\nFOL:\tall x. (Visits(x, Bear) -> Young(x))\nTEXT:\tIf something needs the bald eagle and it needs the rabbit then the rabbit is blue.\nFOL:\tall x. (Needs(x, BaldEagle) & Needs(x, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the dog and the dog is young then the dog is round.\nFOL:\tall x. (Visits(x, Dog) & Young(Dog) -> Round(Dog))\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe dog chases the cow.\nFOL:\tChase(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger does not like the dog.\nFOL:\t-Likes(Tiger, Dog)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone likes the tiger then they are cold.\nFOL:\tall x. (Likes(x, Tiger) -> Cold(x))\nTEXT:\tIf someone chases the dog then the dog is not kind.\nFOL:\tall x. (Chase(x, Dog) -> -Kind(Dog))\nTEXT:\tIf the dog likes the cow and the cow likes the dog then the dog is cold.\nFOL:\t(Likes(Dog, Cow) & Likes(Cow, Dog) -> Cold(Dog))\nTEXT:\tIf someone is cold then they like the cat.\nFOL:\tall x. (Cold(x) -> Likes(x, Cat))\nTEXT:\tIf the cow is big and the cow likes the cat then the cat needs the dog.\nFOL:\t(Big(Cow) & Likes(Cow, Cat) -> Needs(Cat, Dog))\nTEXT:\tIf the tiger is kind and the tiger needs the cat then the cat needs the dog.\nFOL:\t(Kind(Tiger) & Needs(Tiger, Cat) -> Needs(Cat, Dog))\nTEXT:\tIf someone is nice then they chase the tiger.\nFOL:\tall x. (Nice(x) -> Chase(x, Tiger))\nTEXT:\tIf someone needs the dog and they like the tiger then the dog is nice.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Tiger) -> Nice(Dog))\nTEXT:\tIf someone chases the cow then the cow is big.\nFOL:\tall x. (Chase(x, Cow) -> Big(Cow))\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe dog chases the cow.\nFOL:\tChase(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger does not like the dog.\nFOL:\t-Likes(Tiger, Dog)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone likes the tiger then they are cold.\nFOL:\tall x. (Likes(x, Tiger) -> Cold(x))\nTEXT:\tIf someone chases the dog then the dog is not kind.\nFOL:\tall x. (Chase(x, Dog) -> -Kind(Dog))\nTEXT:\tIf the dog likes the cow and the cow likes the dog then the dog is cold.\nFOL:\t(Likes(Dog, Cow) & Likes(Cow, Dog) -> Cold(Dog))\nTEXT:\tIf someone is cold then they like the cat.\nFOL:\tall x. (Cold(x) -> Likes(x, Cat))\nTEXT:\tIf the cow is big and the cow likes the cat then the cat needs the dog.\nFOL:\t(Big(Cow) & Likes(Cow, Cat) -> Needs(Cat, Dog))\nTEXT:\tIf the tiger is kind and the tiger needs the cat then the cat needs the dog.\nFOL:\t(Kind(Tiger) & Needs(Tiger, Cat) -> Needs(Cat, Dog))\nTEXT:\tIf someone is nice then they chase the tiger.\nFOL:\tall x. (Nice(x) -> Chase(x, Tiger))\nTEXT:\tIf someone needs the dog and they like the tiger then the dog is nice.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Tiger) -> Nice(Dog))\nTEXT:\tIf someone chases the cow then the cow is big.\nFOL:\tall x. (Chase(x, Cow) -> Big(Cow))\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe dog chases the cow.\nFOL:\tChase(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger does not like the dog.\nFOL:\t-Likes(Tiger, Dog)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone likes the tiger then they are cold.\nFOL:\tall x. (Likes(x, Tiger) -> Cold(x))\nTEXT:\tIf someone chases the dog then the dog is not kind.\nFOL:\tall x. (Chase(x, Dog) -> -Kind(Dog))\nTEXT:\tIf the dog likes the cow and the cow likes the dog then the dog is cold.\nFOL:\t(Likes(Dog, Cow) & Likes(Cow, Dog) -> Cold(Dog))\nTEXT:\tIf someone is cold then they like the cat.\nFOL:\tall x. (Cold(x) -> Likes(x, Cat))\nTEXT:\tIf the cow is big and the cow likes the cat then the cat needs the dog.\nFOL:\t(Big(Cow) & Likes(Cow, Cat) -> Needs(Cat, Dog))\nTEXT:\tIf the tiger is kind and the tiger needs the cat then the cat needs the dog.\nFOL:\t(Kind(Tiger) & Needs(Tiger, Cat) -> Needs(Cat, Dog))\nTEXT:\tIf someone is nice then they chase the tiger.\nFOL:\tall x. (Nice(x) -> Chase(x, Tiger))\nTEXT:\tIf someone needs the dog and they like the tiger then the dog is nice.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Tiger) -> Nice(Dog))\nTEXT:\tIf someone chases the cow then the cow is big.\nFOL:\tall x. (Chase(x, Cow) -> Big(Cow))\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nANSWER:\tFalse\n", "TEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe dog chases the cow.\nFOL:\tChase(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger does not like the dog.\nFOL:\t-Likes(Tiger, Dog)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone likes the tiger then they are cold.\nFOL:\tall x. (Likes(x, Tiger) -> Cold(x))\nTEXT:\tIf someone chases the dog then the dog is not kind.\nFOL:\tall x. (Chase(x, Dog) -> -Kind(Dog))\nTEXT:\tIf the dog likes the cow and the cow likes the dog then the dog is cold.\nFOL:\t(Likes(Dog, Cow) & Likes(Cow, Dog)) -> Cold(Dog)\nTEXT:\tIf someone is cold then they like the cat.\nFOL:\tall x. (Cold(x) -> Likes(x, Cat))\nTEXT:\tIf the cow is big and the cow likes the cat then the cat needs the dog.\nFOL:\t(Big(Cow) & Likes(Cow, Cat)) -> Needs(Cat, Dog)\nTEXT:\tIf the tiger is kind and the tiger needs the cat then the cat needs the dog.\nFOL:\t(Kind(Tiger) & Needs(Tiger, Cat)) -> Needs(Cat, Dog)\nTEXT:\tIf someone is nice then they chase the tiger.\nFOL:\tall x. (Nice(x) -> Chase(x, Tiger))\nTEXT:\tIf someone needs the dog and they like the tiger then the dog is nice.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Tiger) -> Nice(Dog))\nTEXT:\tIf someone chases the cow then the cow is big.\nFOL:\tall x. (Chase(x, Cow) -> Big(Cow))\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nANSWER:\tFalse\n", "TEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chases(Cat, Tiger)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow chases the cat.\nFOL:\tChases(Cow, Cat)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tThe tiger does not like the dog.\nFOL:\t-Likes(Tiger, Dog)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone likes the tiger then they are cold.\nFOL:\tall x. (Likes(x, Tiger) -> Cold(x))\nTEXT:\tIf someone chases the dog then the dog is not kind.\nFOL:\tall x. (Chases(x, Dog) -> -Kind(Dog))\nTEXT:\tIf the dog likes the cow and the cow likes the dog then the dog is cold.\nFOL:\t(Likes(Dog, Cow) & Likes(Cow, Dog)) -> Cold(Dog)\nTEXT:\tIf someone is cold then they like the cat.\nFOL:\tall x. (Cold(x) -> Likes(x, Cat))\nTEXT:\tIf the cow is big and the cow likes the cat then the cat needs the dog.\nFOL:\t(Big(Cow) & Likes(Cow, Cat)) -> Needs(Cat, Dog)\nTEXT:\tIf the tiger is kind and the tiger needs the cat then the cat needs the dog.\nFOL:\t(Kind(Tiger) & Needs(Tiger, Cat)) -> Needs(Cat, Dog)\nTEXT:\tIf someone is nice then they chase the tiger.\nFOL:\tall x. (Nice(x) -> Chases(x, Tiger))\nTEXT:\tIf someone needs the dog and they like the tiger then the dog is nice.\nFOL:\tall x. ((Needs(x, Dog) & Likes(x, Tiger)) -> Nice(Dog))\nTEXT:\tIf someone chases the cow then the cow is big.\nFOL:\tall x. (Chases(x, Cow) -> Big(Cow))\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nANSWER:\tFalse\n"], ["TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat needs the lion.\nFOL:\tNeeds(Cat, Lion)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is not cold.\nFOL:\t- Cold(Lion)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe lion likes the rabbit.\nFOL:\tLikes(Lion, Rabbit)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is not cold.\nFOL:\t- Cold(Rabbit)\nTEXT:\tThe rabbit is not nice.\nFOL:\t- Nice(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tIf something is cold then it needs the rabbit.\nFOL:\tall x. (Cold(x) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the lion then it is green.\nFOL:\tall x. (Likes(x, Lion) -> Green(x))\nTEXT:\tIf something visits the rabbit then the rabbit visits the cat.\nFOL:\tall x. (Visits(x, Rabbit) -> Visits(Rabbit, Cat))\nTEXT:\tIf something visits the dog then the dog likes the lion.\nFOL:\tall x. (Visits(x, Dog) -> Likes(Dog, Lion))\nTEXT:\tIf something needs the lion and it is not blue then it does not visit the cat.\nFOL:\tall x. (Needs(x, Lion) & - Blue(x) -> - Visits(x, Cat))\nTEXT:\tIf something likes the cat and it is green then the cat likes the rabbit.\nFOL:\tall x. (Likes(x, Cat) & Green(x) -> Likes(Cat, Rabbit))\nTEXT:\tIf something is green and it likes the lion then it visits the dog.\nFOL:\tall x. (Green(x) & Likes(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf something likes the dog and the dog is cold then it is not nice.\nFOL:\tall x. (Likes(x, Dog) & Cold(Dog) -> - Nice(x))\nTEXT:\tIf something likes the rabbit and it does not need the lion then it is nice.\nFOL:\tall x. (Likes(x, Rabbit) & - Needs(x, Lion) -> Nice(x))\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat needs the lion.\nFOL:\tNeeds(Cat, Lion)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is not cold.\nFOL:\t- Cold(Lion)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe lion likes the rabbit.\nFOL:\tLikes(Lion, Rabbit)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is not cold.\nFOL:\t- Cold(Rabbit)\nTEXT:\tThe rabbit is not nice.\nFOL:\t- Nice(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tIf something is cold then it needs the rabbit.\nFOL:\tall x. (Cold(x) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the lion then it is green.\nFOL:\tall x. (Likes(x, Lion) -> Green(x))\nTEXT:\tIf something visits the rabbit then the rabbit visits the cat.\nFOL:\tall x. (Visits(x, Rabbit) -> Visits(Rabbit, Cat))\nTEXT:\tIf something visits the dog then the dog likes the lion.\nFOL:\tall x. (Visits(x, Dog) -> Likes(Dog, Lion))\nTEXT:\tIf something needs the lion and it is not blue then it does not visit the cat.\nFOL:\tall x. (Needs(x, Lion) & - Blue(x) -> - Visits(x, Cat))\nTEXT:\tIf something likes the cat and it is green then the cat likes the rabbit.\nFOL:\tall x. (Likes(x, Cat) & Green(x) -> Likes(Cat, Rabbit))\nTEXT:\tIf something is green and it likes the lion then it visits the dog.\nFOL:\tall x. (Green(x) & Likes(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf something likes the dog and the dog is cold then it is not nice.\nFOL:\tall x. (Likes(x, Dog) & Cold(Dog) -> - Nice(x))\nTEXT:\tIf something likes the rabbit and it does not need the lion then it is nice.\nFOL:\tall x. (Likes(x, Rabbit) & - Needs(x, Lion) -> Nice(x))\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nANSWER:\tFalse\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat needs the lion.\nFOL:\tNeeds(Cat, Lion)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is not cold.\nFOL:\t\u00acCold(Lion)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe lion likes the rabbit.\nFOL:\tLikes(Lion, Rabbit)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is not cold.\nFOL:\t\u00acCold(Rabbit)\nTEXT:\tThe rabbit is not nice.\nFOL:\t\u00acNice(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t\u00acNeeds(Rabbit, Lion)\nTEXT:\tIf something is cold then it needs the rabbit.\nFOL:\tall x. (Cold(x) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the lion then it is green.\nFOL:\tall x. (Likes(x, Lion) -> Green(x))\nTEXT:\tIf something visits the rabbit then the rabbit visits the cat.\nFOL:\tall x. (Visits(x, Rabbit) -> Visits(Rabbit, Cat))\nTEXT:\tIf something visits the dog then the dog likes the lion.\nFOL:\tall x. (Visits(x, Dog) -> Likes(Dog, Lion))\nTEXT:\tIf something needs the lion and it is not blue then it does not visit the cat.\nFOL:\tall x. (Needs(x, Lion) & \u00acBlue(x) -> \u00acVisits(x, Cat))\nTEXT:\tIf something likes the cat and it is green then the cat likes the rabbit.\nFOL:\tall x. (Likes(x, Cat) & Green(x) -> Likes(Cat, Rabbit))\nTEXT:\tIf something is green and it likes the lion then it visits the dog.\nFOL:\tall x. (Green(x) & Likes(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf something likes the dog and the dog is cold then it is not nice.\nFOL:\tall x. (Likes(x, Dog) & Cold(Dog) -> \u00acNice(x))\nTEXT:\tIf something likes the rabbit and it does not need the lion then it is nice.\nFOL:\tall x. (Likes(x, Rabbit) & \u00acNeeds(x, Lion) -> Nice(x))\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nANSWER:\tFalse\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat needs the lion.\nFOL:\tNeeds(Cat, Lion)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is not cold.\nFOL:\t- Cold(Lion)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe lion likes the rabbit.\nFOL:\tLikes(Lion, Rabbit)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is not cold.\nFOL:\t- Cold(Rabbit)\nTEXT:\tThe rabbit is not nice.\nFOL:\t- Nice(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tIf something is cold then it needs the rabbit.\nFOL:\tall x. (Cold(x) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the lion then it is green.\nFOL:\tall x. (Likes(x, Lion) -> Green(x))\nTEXT:\tIf something visits the rabbit then the rabbit visits the cat.\nFOL:\tall x. (Visits(x, Rabbit) -> Visits(Rabbit, Cat))\nTEXT:\tIf something visits the dog then the dog likes the lion.\nFOL:\tall x. (Visits(x, Dog) -> Likes(Dog, Lion))\nTEXT:\tIf something needs the lion and it is not blue then it does not visit the cat.\nFOL:\tall x. ((Needs(x, Lion) & -Blue(x)) -> -Visits(x, Cat))\nTEXT:\tIf something likes the cat and it is green then the cat likes the rabbit.\nFOL:\tall x. ((Likes(x, Cat) & Green(x)) -> Likes(Cat, Rabbit))\nTEXT:\tIf something is green and it likes the lion then it visits the dog.\nFOL:\tall x. ((Green(x) & Likes(x, Lion)) -> Visits(x, Dog))\nTEXT:\tIf something likes the dog and the dog is cold then it is not nice.\nFOL:\tall x. ((Likes(x, Dog) & Cold(Dog)) -> -Nice(x))\nTEXT:\tIf something likes the rabbit and it does not need the lion then it is nice.\nFOL:\tall x. ((Likes(x, Rabbit) & -Needs(x, Lion)) -> Nice(x))\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat needs the lion.\nFOL:\tNeeds(Cat, Lion)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is not cold.\nFOL:\t-IsCold(Lion)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe lion likes the rabbit.\nFOL:\tLikes(Lion, Rabbit)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is not cold.\nFOL:\t-IsCold(Rabbit)\nTEXT:\tThe rabbit is not nice.\nFOL:\t-IsNice(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t-Needs(Rabbit, Lion)\nTEXT:\tIf something is cold then it needs the rabbit.\nFOL:\tall x. (IsCold(x) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the lion then it is green.\nFOL:\tall x. (Likes(x, Lion) -> IsGreen(x))\nTEXT:\tIf something visits the rabbit then the rabbit visits the cat.\nFOL:\tall x. (Visits(x, Rabbit) -> Visits(Rabbit, Cat))\nTEXT:\tIf something visits the dog then the dog likes the lion.\nFOL:\tall x. (Visits(x, Dog) -> Likes(Dog, Lion))\nTEXT:\tIf something needs the lion and it is not blue then it does not visit the cat.\nFOL:\tall x. (Needs(x, Lion) & -IsBlue(x) -> -Visits(x, Cat))\nTEXT:\tIf something likes the cat and it is green then the cat likes the rabbit.\nFOL:\tall x. (Likes(x, Cat) & IsGreen(x) -> Likes(Cat, Rabbit))\nTEXT:\tIf something is green and it likes the lion then it visits the dog.\nFOL:\tall x. (IsGreen(x) & Likes(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf something likes the dog and the dog is cold then it is not nice.\nFOL:\tall x. (Likes(x, Dog) & IsCold(Dog) -> -IsNice(x))\nTEXT:\tIf something likes the rabbit and it does not need the lion then it is nice.\nFOL:\tall x. (Likes(x, Rabbit) & -Needs(x, Lion) -> IsNice(x))\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tYoung, nice things are cold.\nFOL:\tall x. (Young(x) & Nice(x) -> Cold(x))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\tNice(Gary) -> Young(Gary)\nTEXT:\tIf something is quiet and nice then it is young.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Young(x))\nTEXT:\tAll blue, quiet things are nice.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Nice(x))\nTEXT:\tAll cold things are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. (Young(x) & Kind(x) -> Blue(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tYoung, nice things are cold.\nFOL:\tall x. (Young(x) & Nice(x) -> Cold(x))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\tNice(Gary) -> Young(Gary)\nTEXT:\tIf something is quiet and nice then it is young.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Young(x))\nTEXT:\tAll blue, quiet things are nice.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Nice(x))\nTEXT:\tAll cold things are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. (Young(x) & Kind(x) -> Blue(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tYoung, nice things are cold.\nFOL:\tall x. (Young(x) & Nice(x) -> Cold(x))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\tNice(Gary) -> Young(Gary)\nTEXT:\tIf something is quiet and nice then it is young.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Young(x))\nTEXT:\tAll blue, quiet things are nice.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Nice(x))\nTEXT:\tAll cold things are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. (Young(x) & Kind(x) -> Blue(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tYoung, nice things are cold.\nFOL:\tall x. (Young(x) & Nice(x) -> Cold(x))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\tNice(Gary) -> Young(Gary)\nTEXT:\tIf something is quiet and nice then it is young.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Young(x))\nTEXT:\tAll blue, quiet things are nice.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Nice(x))\nTEXT:\tAll cold things are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. (Young(x) & Kind(x) -> Blue(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tYoung, nice things are cold.\nFOL:\tall x. (Young(x) & Nice(x) -> Cold(x))\nTEXT:\tIf Gary is nice then Gary is young.\nFOL:\tNice(Gary) -> Young(Gary)\nTEXT:\tIf something is quiet and nice then it is young.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Young(x))\nTEXT:\tAll blue, quiet things are nice.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Nice(x))\nTEXT:\tAll cold things are smart.\nFOL:\tall x. (Cold(x) -> Smart(x))\nTEXT:\tAll young, kind things are blue.\nFOL:\tall x. (Young(x) & Kind(x) -> Blue(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Bob is blue then Bob is kind.\nFOL:\tBlue(Bob) -> Kind(Bob)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf Fiona is young then Fiona is blue.\nFOL:\tYoung(Fiona) -> Blue(Fiona)\nTEXT:\tIf Gary is nice then Gary is blue.\nFOL:\tNice(Gary) -> Blue(Gary)\nTEXT:\tWhite, red things are nice.\nFOL:\tall x. ((White(x) & Red(x)) -> Nice(x))\nTEXT:\tNice, round things are smart.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Smart(x))\nTEXT:\tIf Fiona is smart then Fiona is red.\nFOL:\tSmart(Fiona) -> Red(Fiona)\nTEXT:\tAll round things are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll blue, young things are white.\nFOL:\tall x. ((Blue(x) & Young(x)) -> White(x))\nTEXT:\tAll round, blue things are red.\nFOL:\tall x. ((Round(x) & Blue(x)) -> Red(x))\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf Fiona is young then Fiona is blue.\nFOL:\tYoung(Fiona) -> Blue(Fiona)\nTEXT:\tIf Gary is nice then Gary is blue.\nFOL:\tNice(Gary) -> Blue(Gary)\nTEXT:\tWhite, red things are nice.\nFOL:\tall x. (White(x) & Red(x) -> Nice(x))\nTEXT:\tNice, round things are smart.\nFOL:\tall x. (Nice(x) & Round(x) -> Smart(x))\nTEXT:\tIf Fiona is smart then Fiona is red.\nFOL:\tSmart(Fiona) -> Red(Fiona)\nTEXT:\tAll round things are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll blue, young things are white.\nFOL:\tall x. (Blue(x) & Young(x) -> White(x))\nTEXT:\tAll round, blue things are red.\nFOL:\tall x. (Round(x) & Blue(x) -> Red(x))\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf Fiona is young then Fiona is blue.\nFOL:\tYoung(Fiona) -> Blue(Fiona)\nTEXT:\tIf Gary is nice then Gary is blue.\nFOL:\tNice(Gary) -> Blue(Gary)\nTEXT:\tWhite, red things are nice.\nFOL:\tall x. (White(x) & Red(x) -> Nice(x))\nTEXT:\tNice, round things are smart.\nFOL:\tall x. (Nice(x) & Round(x) -> Smart(x))\nTEXT:\tIf Fiona is smart then Fiona is red.\nFOL:\tSmart(Fiona) -> Red(Fiona)\nTEXT:\tAll round things are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll blue, young things are white.\nFOL:\tall x. (Blue(x) & Young(x) -> White(x))\nTEXT:\tAll round, blue things are red.\nFOL:\tall x. (Round(x) & Blue(x) -> Red(x))\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf Fiona is young then Fiona is blue.\nFOL:\tYoung(Fiona) -> Blue(Fiona)\nTEXT:\tIf Gary is nice then Gary is blue.\nFOL:\tNice(Gary) -> Blue(Gary)\nTEXT:\tWhite, red things are nice.\nFOL:\tall x. (White(x) & Red(x) -> Nice(x))\nTEXT:\tNice, round things are smart.\nFOL:\tall x. (Nice(x) & Round(x) -> Smart(x))\nTEXT:\tIf Fiona is smart then Fiona is red.\nFOL:\tSmart(Fiona) -> Red(Fiona)\nTEXT:\tAll round things are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll blue, young things are white.\nFOL:\tall x. (Blue(x) & Young(x) -> White(x))\nTEXT:\tAll round, blue things are red.\nFOL:\tall x. (Round(x) & Blue(x) -> Red(x))\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tIf Fiona is young then Fiona is blue.\nFOL:\tYoung(Fiona) -> Blue(Fiona)\nTEXT:\tIf Gary is nice then Gary is blue.\nFOL:\tNice(Gary) -> Blue(Gary)\nTEXT:\tWhite, red things are nice.\nFOL:\tall x. ((White(x) & Red(x)) -> Nice(x))\nTEXT:\tNice, round things are smart.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Smart(x))\nTEXT:\tIf Fiona is smart then Fiona is red.\nFOL:\tSmart(Fiona) -> Red(Fiona)\nTEXT:\tAll round things are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll blue, young things are white.\nFOL:\tall x. ((Blue(x) & Young(x)) -> White(x))\nTEXT:\tAll round, blue things are red.\nFOL:\tall x. ((Round(x) & Blue(x)) -> Red(x))\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nANSWER:\tTrue\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tRough things are blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tRed, quiet things are blue.\nFOL:\tall x. (Red(x) & Quiet(x) -> Blue(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. (Rough(x) & Blue(x) -> Nice(x))\nTEXT:\tIf something is quiet and round then it is not nice.\nFOL:\tall x. (Quiet(x) & Round(x) -> -Nice(x))\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tRed things are not quiet.\nFOL:\tall x. (Red(x) -> -Quiet(x))\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tRough things are blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tRed, quiet things are blue.\nFOL:\tall x. (Red(x) & Quiet(x) -> Blue(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. (Rough(x) & Blue(x) -> Nice(x))\nTEXT:\tIf something is quiet and round then it is not nice.\nFOL:\tall x. (Quiet(x) & Round(x) -> -Nice(x))\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tRed things are not quiet.\nFOL:\tall x. (Red(x) -> -Quiet(x))\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tRough things are blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tRed, quiet things are blue.\nFOL:\tall x. (Red(x) & Quiet(x) -> Blue(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. (Rough(x) & Blue(x) -> Nice(x))\nTEXT:\tIf something is quiet and round then it is not nice.\nFOL:\tall x. (Quiet(x) & Round(x) -> -Nice(x))\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tRed things are not quiet.\nFOL:\tall x. (Red(x) -> -Quiet(x))\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tRough things are blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tRed, quiet things are blue.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Blue(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Nice(x))\nTEXT:\tIf something is quiet and round then it is not nice.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> -Nice(x))\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tRed things are not quiet.\nFOL:\tall x. (Red(x) -> -Quiet(x))\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tRough things are blue.\nFOL:\tall x. (Rough(x) -> Blue(x))\nTEXT:\tRed, quiet things are blue.\nFOL:\tall x. (Red(x) & Quiet(x) -> Blue(x))\nTEXT:\tAll rough, blue things are nice.\nFOL:\tall x. (Rough(x) & Blue(x) -> Nice(x))\nTEXT:\tIf something is quiet and round then it is not nice.\nFOL:\tall x. (Quiet(x) & Round(x) -> -Nice(x))\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tRed things are not quiet.\nFOL:\tall x. (Red(x) -> -Quiet(x))\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tAll blue, nice things are kind.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll furry, green things are blue.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Blue(x))\nTEXT:\tNice, rough things are blue.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is furry then it is rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tAll kind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll blue, rough things are furry.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Furry(x))\nTEXT:\tGreen, kind things are rough.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Rough(x))\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tAll blue, nice things are kind.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll furry, green things are blue.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Blue(x))\nTEXT:\tNice, rough things are blue.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is furry then it is rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tAll kind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll blue, rough things are furry.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Furry(x))\nTEXT:\tGreen, kind things are rough.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Rough(x))\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tAll blue, nice things are kind.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll furry, green things are blue.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Blue(x))\nTEXT:\tNice, rough things are blue.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is furry then it is rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tAll kind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll blue, rough things are furry.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Furry(x))\nTEXT:\tGreen, kind things are rough.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Rough(x))\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tAll blue, nice things are kind.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll furry, green things are blue.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Blue(x))\nTEXT:\tNice, rough things are blue.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is furry then it is rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tAll kind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll blue, rough things are furry.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Furry(x))\nTEXT:\tGreen, kind things are rough.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Rough(x))\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tAll blue, nice things are kind.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll furry, green things are blue.\nFOL:\tall x. ((Furry(x) & Green(x)) -> Blue(x))\nTEXT:\tNice, rough things are blue.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is furry then it is rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tAll kind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tAll blue, rough things are furry.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Furry(x))\nTEXT:\tGreen, kind things are rough.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Rough(x))\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll kind things are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tKind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Gary is furry and Gary is nice then Gary is not quiet.\nFOL:\tFurry(Gary) & Nice(Gary) -> -Quiet(Gary)\nTEXT:\tIf something is green and not kind then it is furry.\nFOL:\tall x. (Green(x) & -Kind(x) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is not cold.\nFOL:\tall x. (Nice(x) & Furry(x) -> -Cold(x))\nTEXT:\tIf something is cold and not furry then it is not quiet.\nFOL:\tall x. (Cold(x) & -Furry(x) -> -Quiet(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll kind things are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tKind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Gary is furry and Gary is nice then Gary is not quiet.\nFOL:\t(Furry(Gary) & Nice(Gary)) -> -Quiet(Gary)\nTEXT:\tIf something is green and not kind then it is furry.\nFOL:\tall x. ((Green(x) & -Kind(x)) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is not cold.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> -Cold(x))\nTEXT:\tIf something is cold and not furry then it is not quiet.\nFOL:\tall x. ((Cold(x) & -Furry(x)) -> -Quiet(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll kind things are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tKind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Gary is furry and Gary is nice then Gary is not quiet.\nFOL:\t(Furry(Gary) & Nice(Gary)) -> -Quiet(Gary)\nTEXT:\tIf something is green and not kind then it is furry.\nFOL:\tall x. (Green(x) & -Kind(x) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is not cold.\nFOL:\tall x. (Nice(x) & Furry(x) -> -Cold(x))\nTEXT:\tIf something is cold and not furry then it is not quiet.\nFOL:\tall x. (Cold(x) & -Furry(x) -> -Quiet(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll kind things are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tKind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Gary is furry and Gary is nice then Gary is not quiet.\nFOL:\t(Furry(Gary) & Nice(Gary)) -> -Quiet(Gary)\nTEXT:\tIf something is green and not kind then it is furry.\nFOL:\tall x. ((Green(x) & -Kind(x)) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is not cold.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> -Cold(x))\nTEXT:\tIf something is cold and not furry then it is not quiet.\nFOL:\tall x. ((Cold(x) & -Furry(x)) -> -Quiet(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tAll kind things are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tKind things are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Gary is furry and Gary is nice then Gary is not quiet.\nFOL:\t(Furry(Gary) & Nice(Gary)) -> -Quiet(Gary)\nTEXT:\tIf something is green and not kind then it is furry.\nFOL:\tall x. ((Green(x) & -Kind(x)) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is not cold.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> -Cold(x))\nTEXT:\tIf something is cold and not furry then it is not quiet.\nFOL:\tall x. ((Cold(x) & -Furry(x)) -> -Quiet(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat does not visit the cow.\nFOL:\t\u00acVisits(Cat, Cow)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf something is green then it needs the cow.\nFOL:\tall x. (Green(x) -> Needs(x, Cow))\nTEXT:\tIf something chases the cat and the cat chases the cow then it needs the tiger.\nFOL:\tall x. ((Chases(x, Cat) & Chases(Cat, Cow)) -> Needs(x, Tiger))\nTEXT:\tIf the squirrel visits the cat then the squirrel chases the cat.\nFOL:\t(Visits(Squirrel, Cat) -> Chases(Squirrel, Cat))\nTEXT:\tIf something chases the squirrel and the squirrel is green then it chases the cat.\nFOL:\tall x. ((Chases(x, Squirrel) & Green(Squirrel)) -> Chases(x, Cat))\nTEXT:\tIf something chases the squirrel then the squirrel visits the cat.\nFOL:\tall x. (Chases(x, Squirrel) -> Visits(Squirrel, Cat))\nTEXT:\tIf something is blue and red then it chases the squirrel.\nFOL:\tall x. ((Blue(x) & Red(x)) -> Chases(x, Squirrel))\nTEXT:\tIf something chases the cat then it visits the cow.\nFOL:\tall x. (Chases(x, Cat) -> Visits(x, Cow))\nTEXT:\tIf something visits the cow then the cow does not chase the squirrel.\nFOL:\tall x. (Visits(x, Cow) -> \u00acChases(Cow, Squirrel))\nTEXT:\tThe cow does not visit the squirrel.\nFOL:\t\u00acVisits(Cow, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat does not visit the cow.\nFOL:\t-Visit(Cat, Cow)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisit(Cow, Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf something is green then it needs the cow.\nFOL:\tall x. (Green(x) -> Needs(x, Cow))\nTEXT:\tIf something chases the cat and the cat chases the cow then it needs the tiger.\nFOL:\tall x. (Chases(x, Cat) & Chases(Cat, Cow) -> Needs(x, Tiger))\nTEXT:\tIf the squirrel visits the cat then the squirrel chases the cat.\nFOL:\tVisit(Squirrel, Cat) -> Chases(Squirrel, Cat)\nTEXT:\tIf something chases the squirrel and the squirrel is green then it chases the cat.\nFOL:\tall x. (Chases(x, Squirrel) & Green(Squirrel) -> Chases(x, Cat))\nTEXT:\tIf something chases the squirrel then the squirrel visits the cat.\nFOL:\tall x. (Chases(x, Squirrel) -> Visit(Squirrel, Cat))\nTEXT:\tIf something is blue and red then it chases the squirrel.\nFOL:\tall x. (Blue(x) & Red(x) -> Chases(x, Squirrel))\nTEXT:\tIf something chases the cat then it visits the cow.\nFOL:\tall x. (Chases(x, Cat) -> Visit(x, Cow))\nTEXT:\tIf something visits the cow then the cow does not chase the squirrel.\nFOL:\tall x. (Visit(x, Cow) -> -Chases(Cow, Squirrel))\nTEXT:\tThe cow does not visit the squirrel.\nFOL:\t-Visit(Cow, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat does not visit the cow.\nFOL:\t-Visits(Cat, Cow)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf something is green then it needs the cow.\nFOL:\tall x. (Green(x) -> Needs(x, Cow))\nTEXT:\tIf something chases the cat and the cat chases the cow then it needs the tiger.\nFOL:\tall x. ((Chases(x, Cat) & Chases(Cat, Cow)) -> Needs(x, Tiger))\nTEXT:\tIf the squirrel visits the cat then the squirrel chases the cat.\nFOL:\tall x. (Visits(Squirrel, Cat) -> Chases(Squirrel, Cat))\nTEXT:\tIf something chases the squirrel and the squirrel is green then it chases the cat.\nFOL:\tall x. ((Chases(x, Squirrel) & Green(Squirrel)) -> Chases(x, Cat))\nTEXT:\tIf something chases the squirrel then the squirrel visits the cat.\nFOL:\tall x. (Chases(x, Squirrel) -> Visits(Squirrel, Cat))\nTEXT:\tIf something is blue and red then it chases the squirrel.\nFOL:\tall x. ((Blue(x) & Red(x)) -> Chases(x, Squirrel))\nTEXT:\tIf something chases the cat then it visits the cow.\nFOL:\tall x. (Chases(x, Cat) -> Visits(x, Cow))\nTEXT:\tIf something visits the cow then the cow does not chase the squirrel.\nFOL:\tall x. (Visits(x, Cow) -> -Chases(Cow, Squirrel))\nTEXT:\tThe cow does not visit the squirrel.\nFOL:\t-Visits(Cow, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat does not visit the cow.\nFOL:\t-Visits(Cat, Cow)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf something is green then it needs the cow.\nFOL:\tall x. (Green(x) -> Needs(x, Cow))\nTEXT:\tIf something chases the cat and the cat chases the cow then it needs the tiger.\nFOL:\tall x. (Chases(x, Cat) & Chases(Cat, Cow) -> Needs(x, Tiger))\nTEXT:\tIf the squirrel visits the cat then the squirrel chases the cat.\nFOL:\t(Visits(Squirrel, Cat) -> Chases(Squirrel, Cat))\nTEXT:\tIf something chases the squirrel and the squirrel is green then it chases the cat.\nFOL:\tall x. (Chases(x, Squirrel) & Green(Squirrel) -> Chases(x, Cat))\nTEXT:\tIf something chases the squirrel then the squirrel visits the cat.\nFOL:\tall x. (Chases(x, Squirrel) -> Visits(Squirrel, Cat))\nTEXT:\tIf something is blue and red then it chases the squirrel.\nFOL:\tall x. (Blue(x) & Red(x) -> Chases(x, Squirrel))\nTEXT:\tIf something chases the cat then it visits the cow.\nFOL:\tall x. (Chases(x, Cat) -> Visits(x, Cow))\nTEXT:\tIf something visits the cow then the cow does not chase the squirrel.\nFOL:\tall x. (Visits(x, Cow) -> -Chases(Cow, Squirrel))\nTEXT:\tThe cow does not visit the squirrel.\nFOL:\t-Visits(Cow, Squirrel)\nANSWER:\tFalse", "TEXT:\tThe cat chases the cow.\nFOL:\tChases(Cat, Cow)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat does not visit the cow.\nFOL:\t-Visits(Cat, Cow)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf something is green then it needs the cow.\nFOL:\tall x. (Green(x) -> Needs(x, Cow))\nTEXT:\tIf something chases the cat and the cat chases the cow then it needs the tiger.\nFOL:\tall x. (Chases(x, Cat) & Chases(Cat, Cow) -> Needs(x, Tiger))\nTEXT:\tIf the squirrel visits the cat then the squirrel chases the cat.\nFOL:\tall x. (Visits(Squirrel, x) & Cat(x) -> Chases(Squirrel, Cat))\nTEXT:\tIf something chases the squirrel and the squirrel is green then it chases the cat.\nFOL:\tall x. (Chases(x, Squirrel) & Green(Squirrel) -> Chases(x, Cat))\nTEXT:\tIf something chases the squirrel then the squirrel visits the cat.\nFOL:\tall x. (Chases(x, Squirrel) -> Visits(Squirrel, Cat))\nTEXT:\tIf something is blue and red then it chases the squirrel.\nFOL:\tall x. (Blue(x) & Red(x) -> Chases(x, Squirrel))\nTEXT:\tIf something chases the cat then it visits the cow.\nFOL:\tall x. (Chases(x, Cat) -> Visits(x, Cow))\nTEXT:\tIf something visits the cow then the cow does not chase the squirrel.\nFOL:\tall x. (Visits(x, Cow) -> -Chases(Cow, Squirrel))\nTEXT:\tThe cow does not visit the squirrel.\nFOL:\t-Visits(Cow, Squirrel)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tIf Charlie is furry and Charlie is kind then Charlie is blue.\nFOL:\tFurry(Charlie) & Kind(Charlie) -> Blue(Charlie)\nTEXT:\tRound, furry things are red.\nFOL:\tall x. (Round(x) & Furry(x) -> Red(x))\nTEXT:\tAll round things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tBlue, furry things are cold.\nFOL:\tall x. (Blue(x) & Furry(x) -> Cold(x))\nTEXT:\tIf something is red and kind then it is furry.\nFOL:\tall x. (Red(x) & Kind(x) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tIf Charlie is furry and Charlie is kind then Charlie is blue.\nFOL:\t(Furry(Charlie) & Kind(Charlie)) -> Blue(Charlie)\nTEXT:\tRound, furry things are red.\nFOL:\tall x. (Round(x) & Furry(x) -> Red(x))\nTEXT:\tAll round things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tBlue, furry things are cold.\nFOL:\tall x. (Blue(x) & Furry(x) -> Cold(x))\nTEXT:\tIf something is red and kind then it is furry.\nFOL:\tall x. (Red(x) & Kind(x) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tIf Charlie is furry and Charlie is kind then Charlie is blue.\nFOL:\t(Furry(Charlie) & Kind(Charlie)) -> Blue(Charlie)\nTEXT:\tRound, furry things are red.\nFOL:\tall x. (Round(x) & Furry(x) -> Red(x))\nTEXT:\tAll round things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tBlue, furry things are cold.\nFOL:\tall x. (Blue(x) & Furry(x) -> Cold(x))\nTEXT:\tIf something is red and kind then it is furry.\nFOL:\tall x. (Red(x) & Kind(x) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tIf Charlie is furry and Charlie is kind then Charlie is blue.\nFOL:\t(Furry(Charlie) & Kind(Charlie)) -> Blue(Charlie)\nTEXT:\tRound, furry things are red.\nFOL:\tall x. (Round(x) & Furry(x) -> Red(x))\nTEXT:\tAll round things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tBlue, furry things are cold.\nFOL:\tall x. (Blue(x) & Furry(x) -> Cold(x))\nTEXT:\tIf something is red and kind then it is furry.\nFOL:\tall x. (Red(x) & Kind(x) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tIf Charlie is furry and Charlie is kind then Charlie is blue.\nFOL:\t(Furry(Charlie) & Kind(Charlie)) -> Blue(Charlie)\nTEXT:\tRound, furry things are red.\nFOL:\tall x. (Round(x) & Furry(x) -> Red(x))\nTEXT:\tAll round things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tBlue, furry things are cold.\nFOL:\tall x. (Blue(x) & Furry(x) -> Cold(x))\nTEXT:\tIf something is red and kind then it is furry.\nFOL:\tall x. (Red(x) & Kind(x) -> Furry(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tIf someone is kind and nice then they are big.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Big(x))\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is big then they are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tAll round people are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tAll nice, round people are furry.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Harry is kind and Harry is furry then Harry is nice.\nFOL:\t((Kind(Harry) & Furry(Harry)) -> Nice(Harry))\nTEXT:\tIf Dave is kind and Dave is round then Dave is green.\nFOL:\t((Kind(Dave) & Round(Dave)) -> Green(Dave))\nTEXT:\tIf Bob is young and Bob is nice then Bob is round.\nFOL:\t((Young(Bob) & Nice(Bob)) -> Round(Bob))\nTEXT:\tGreen, kind people are furry.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Furry(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tIf someone is kind and nice then they are big.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Big(x))\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is big then they are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tAll round people are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tAll nice, round people are furry.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Harry is kind and Harry is furry then Harry is nice.\nFOL:\t((Kind(Harry) & Furry(Harry)) -> Nice(Harry))\nTEXT:\tIf Dave is kind and Dave is round then Dave is green.\nFOL:\t((Kind(Dave) & Round(Dave)) -> Green(Dave))\nTEXT:\tIf Bob is young and Bob is nice then Bob is round.\nFOL:\t((Young(Bob) & Nice(Bob)) -> Round(Bob))\nTEXT:\tGreen, kind people are furry.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Furry(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tIf someone is kind and nice then they are big.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Big(x))\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is big then they are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tAll round people are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tAll nice, round people are furry.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Harry is kind and Harry is furry then Harry is nice.\nFOL:\t((Kind(Harry) & Furry(Harry)) -> Nice(Harry))\nTEXT:\tIf Dave is kind and Dave is round then Dave is green.\nFOL:\t((Kind(Dave) & Round(Dave)) -> Green(Dave))\nTEXT:\tIf Bob is young and Bob is nice then Bob is round.\nFOL:\t((Young(Bob) & Nice(Bob)) -> Round(Bob))\nTEXT:\tGreen, kind people are furry.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Furry(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tIf someone is kind and nice then they are big.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Big(x))\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is big then they are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tAll round people are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tAll nice, round people are furry.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Harry is kind and Harry is furry then Harry is nice.\nFOL:\t((Kind(Harry) & Furry(Harry)) -> Nice(Harry))\nTEXT:\tIf Dave is kind and Dave is round then Dave is green.\nFOL:\t((Kind(Dave) & Round(Dave)) -> Green(Dave))\nTEXT:\tIf Bob is young and Bob is nice then Bob is round.\nFOL:\t((Young(Bob) & Nice(Bob)) -> Round(Bob))\nTEXT:\tGreen, kind people are furry.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Furry(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tIf someone is kind and nice then they are big.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Big(x))\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is big then they are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tAll round people are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tAll nice, round people are furry.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Furry(x))\nTEXT:\tIf Harry is kind and Harry is furry then Harry is nice.\nFOL:\t((Kind(Harry) & Furry(Harry)) -> Nice(Harry))\nTEXT:\tIf Dave is kind and Dave is round then Dave is green.\nFOL:\t((Kind(Dave) & Round(Dave)) -> Green(Dave))\nTEXT:\tIf Bob is young and Bob is nice then Bob is round.\nFOL:\t((Young(Bob) & Nice(Bob)) -> Round(Bob))\nTEXT:\tGreen, kind people are furry.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Furry(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not like the bear.\nFOL:\t- Likes(BaldEagle, Bear)\nTEXT:\tThe bear does not chase the bald eagle.\nFOL:\t- Chases(Bear, BaldEagle)\nTEXT:\tThe bear does not chase the dog.\nFOL:\t- Chases(Bear, Dog)\nTEXT:\tThe bear does not chase the tiger.\nFOL:\t- Chases(Bear, Tiger)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog does not chase the bear.\nFOL:\t- Chases(Dog, Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf someone visits the bald eagle and they like the tiger then the bald eagle chases the tiger.\nFOL:\tall x. (Visits(x, BaldEagle) & Likes(x, Tiger) -> Chases(BaldEagle, Tiger))\nTEXT:\tIf someone likes the bear and they are not green then the bear chases the tiger.\nFOL:\tall x. (Likes(x, Bear) & -Green(x) -> Chases(Bear, Tiger))\nTEXT:\tIf someone chases the dog and the dog is not nice then they do not chase the tiger.\nFOL:\tall x. (Chases(x, Dog) & -Nice(Dog) -> -Chases(x, Tiger))\nTEXT:\tIf someone chases the bear and they are red then they visit the dog.\nFOL:\tall x. (Chases(x, Bear) & Red(x) -> Visits(x, Dog))\nTEXT:\tIf someone chases the bear then the bear is red.\nFOL:\tall x. (Chases(x, Bear) -> Red(Bear))\nTEXT:\tIf someone visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf someone is blue and they visit the tiger then they are rough.\nFOL:\tall x. (Blue(x) & Visits(x, Tiger) -> Rough(x))\nTEXT:\tIf someone is green and they visit the tiger then they chase the bear.\nFOL:\tall x. (Green(x) & Visits(x, Tiger) -> Chases(x, Bear))\nTEXT:\tThe bald eagle does not visit the dog.\nFOL:\t-Visits(BaldEagle, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChase(BaldEagle, Dog)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not like the bear.\nFOL:\t- Like(BaldEagle, Bear)\nTEXT:\tThe bear does not chase the bald eagle.\nFOL:\t- Chase(Bear, BaldEagle)\nTEXT:\tThe bear does not chase the dog.\nFOL:\t- Chase(Bear, Dog)\nTEXT:\tThe bear does not chase the tiger.\nFOL:\t- Chase(Bear, Tiger)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLike(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisit(Bear, Tiger)\nTEXT:\tThe dog does not chase the bear.\nFOL:\t- Chase(Dog, Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChase(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf someone visits the bald eagle and they like the tiger then the bald eagle chases the tiger.\nFOL:\tall x. ((Visit(x, BaldEagle) & Like(x, Tiger)) -> Chase(BaldEagle, Tiger))\nTEXT:\tIf someone likes the bear and they are not green then the bear chases the tiger.\nFOL:\tall x. ((Like(x, Bear) & -Green(x)) -> Chase(Bear, Tiger))\nTEXT:\tIf someone chases the dog and the dog is not nice then they do not chase the tiger.\nFOL:\tall x. ((Chase(x, Dog) & -Nice(Dog)) -> -Chase(x, Tiger))\nTEXT:\tIf someone chases the bear and they are red then they visit the dog.\nFOL:\tall x. ((Chase(x, Bear) & Red(x)) -> Visit(x, Dog))\nTEXT:\tIf someone chases the bear then the bear is red.\nFOL:\tall x. (Chase(x, Bear) -> Red(Bear))\nTEXT:\tIf someone visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visit(x, Dog) -> Visit(Dog, Tiger))\nTEXT:\tIf someone is blue and they visit the tiger then they are rough.\nFOL:\tall x. ((Blue(x) & Visit(x, Tiger)) -> Rough(x))\nTEXT:\tIf someone is green and they visit the tiger then they chase the bear.\nFOL:\tall x. ((Green(x) & Visit(x, Tiger)) -> Chase(x, Bear))\nTEXT:\tThe bald eagle does not visit the dog.\nFOL:\t- Visit(BaldEagle, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not like the bear.\nFOL:\t- Likes(BaldEagle, Bear)\nTEXT:\tThe bear does not chase the bald eagle.\nFOL:\t- Chases(Bear, BaldEagle)\nTEXT:\tThe bear does not chase the dog.\nFOL:\t- Chases(Bear, Dog)\nTEXT:\tThe bear does not chase the tiger.\nFOL:\t- Chases(Bear, Tiger)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog does not chase the bear.\nFOL:\t- Chases(Dog, Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf someone visits the bald eagle and they like the tiger then the bald eagle chases the tiger.\nFOL:\tall x. (Visits(x, BaldEagle) & Likes(x, Tiger) -> Chases(BaldEagle, Tiger))\nTEXT:\tIf someone likes the bear and they are not green then the bear chases the tiger.\nFOL:\tall x. (Likes(x, Bear) & -Green(x) -> Chases(Bear, Tiger))\nTEXT:\tIf someone chases the dog and the dog is not nice then they do not chase the tiger.\nFOL:\tall x. (Chases(x, Dog) & -Nice(Dog) -> -Chases(x, Tiger))\nTEXT:\tIf someone chases the bear and they are red then they visit the dog.\nFOL:\tall x. (Chases(x, Bear) & Red(x) -> Visits(x, Dog))\nTEXT:\tIf someone chases the bear then the bear is red.\nFOL:\tall x. (Chases(x, Bear) -> Red(Bear))\nTEXT:\tIf someone visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf someone is blue and they visit the tiger then they are rough.\nFOL:\tall x. (Blue(x) & Visits(x, Tiger) -> Rough(x))\nTEXT:\tIf someone is green and they visit the tiger then they chase the bear.\nFOL:\tall x. (Green(x) & Visits(x, Tiger) -> Chases(x, Bear))\nTEXT:\tThe bald eagle does not visit the dog.\nFOL:\t- Visits(BaldEagle, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not like the bear.\nFOL:\t- Likes(BaldEagle, Bear)\nTEXT:\tThe bear does not chase the bald eagle.\nFOL:\t- Chases(Bear, BaldEagle)\nTEXT:\tThe bear does not chase the dog.\nFOL:\t- Chases(Bear, Dog)\nTEXT:\tThe bear does not chase the tiger.\nFOL:\t- Chases(Bear, Tiger)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog does not chase the bear.\nFOL:\t- Chases(Dog, Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf someone visits the bald eagle and they like the tiger then the bald eagle chases the tiger.\nFOL:\tall x. ((Visits(x, BaldEagle) & Likes(x, Tiger)) -> Chases(BaldEagle, Tiger))\nTEXT:\tIf someone likes the bear and they are not green then the bear chases the tiger.\nFOL:\tall x. ((Likes(x, Bear) & -Green(x)) -> Chases(Bear, Tiger))\nTEXT:\tIf someone chases the dog and the dog is not nice then they do not chase the tiger.\nFOL:\tall x. ((Chases(x, Dog) & -Nice(Dog)) -> -Chases(x, Tiger))\nTEXT:\tIf someone chases the bear and they are red then they visit the dog.\nFOL:\tall x. ((Chases(x, Bear) & Red(x)) -> Visits(x, Dog))\nTEXT:\tIf someone chases the bear then the bear is red.\nFOL:\tall x. (Chases(x, Bear) -> Red(Bear))\nTEXT:\tIf someone visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf someone is blue and they visit the tiger then they are rough.\nFOL:\tall x. ((Blue(x) & Visits(x, Tiger)) -> Rough(x))\nTEXT:\tIf someone is green and they visit the tiger then they chase the bear.\nFOL:\tall x. ((Green(x) & Visits(x, Tiger)) -> Chases(x, Bear))\nTEXT:\tThe bald eagle does not visit the dog.\nFOL:\t- Visits(BaldEagle, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChase(BaldEagle, Dog)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not like the bear.\nFOL:\t- Like(BaldEagle, Bear)\nTEXT:\tThe bear does not chase the bald eagle.\nFOL:\t- Chase(Bear, BaldEagle)\nTEXT:\tThe bear does not chase the dog.\nFOL:\t- Chase(Bear, Dog)\nTEXT:\tThe bear does not chase the tiger.\nFOL:\t- Chase(Bear, Tiger)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear likes the dog.\nFOL:\tLike(Bear, Dog)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisit(Bear, Tiger)\nTEXT:\tThe dog does not chase the bear.\nFOL:\t- Chase(Dog, Bear)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChase(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf someone visits the bald eagle and they like the tiger then the bald eagle chases the tiger.\nFOL:\tall x. (Visit(x, BaldEagle) & Like(x, Tiger) -> Chase(BaldEagle, Tiger))\nTEXT:\tIf someone likes the bear and they are not green then the bear chases the tiger.\nFOL:\tall x. (Like(x, Bear) & - Green(x) -> Chase(Bear, Tiger))\nTEXT:\tIf someone chases the dog and the dog is not nice then they do not chase the tiger.\nFOL:\tall x. (Chase(x, Dog) & - Nice(Dog) -> - Chase(x, Tiger))\nTEXT:\tIf someone chases the bear and they are red then they visit the dog.\nFOL:\tall x. (Chase(x, Bear) & Red(x) -> Visit(x, Dog))\nTEXT:\tIf someone chases the bear then the bear is red.\nFOL:\tall x. (Chase(x, Bear) -> Red(Bear))\nTEXT:\tIf someone visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visit(x, Dog) -> Visit(Dog, Tiger))\nTEXT:\tIf someone is blue and they visit the tiger then they are rough.\nFOL:\tall x. (Blue(x) & Visit(x, Tiger) -> Rough(x))\nTEXT:\tIf someone is green and they visit the tiger then they chase the bear.\nFOL:\tall x. (Green(x) & Visit(x, Tiger) -> Chase(x, Bear))\nTEXT:\tThe bald eagle does not visit the dog.\nFOL:\t- Visit(BaldEagle, Dog)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tRough, quiet things are furry.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Furry(x))\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Charlie is rough then Charlie is quiet.\nFOL:\tRough(Charlie) -> Quiet(Charlie)\nTEXT:\tIf Charlie is red then Charlie is cold.\nFOL:\tRed(Charlie) -> Cold(Charlie)\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Gary is red and Gary is quiet then Gary is big.\nFOL:\tRed(Gary) & Quiet(Gary) -> Big(Gary)\nTEXT:\tAll big things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tRough, quiet things are furry.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Furry(x))\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Charlie is rough then Charlie is quiet.\nFOL:\t(Rough(Charlie) -> Quiet(Charlie))\nTEXT:\tIf Charlie is red then Charlie is cold.\nFOL:\t(Red(Charlie) -> Cold(Charlie))\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Gary is red and Gary is quiet then Gary is big.\nFOL:\t(Red(Gary) & Quiet(Gary) -> Big(Gary))\nTEXT:\tAll big things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tRough, quiet things are furry.\nFOL:\tall x. ((Rough(x) & Quiet(x)) -> Furry(x))\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Charlie is rough then Charlie is quiet.\nFOL:\tRough(Charlie) -> Quiet(Charlie)\nTEXT:\tIf Charlie is red then Charlie is cold.\nFOL:\tRed(Charlie) -> Cold(Charlie)\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Gary is red and Gary is quiet then Gary is big.\nFOL:\t(Red(Gary) & Quiet(Gary)) -> Big(Gary)\nTEXT:\tAll big things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tRough, quiet things are furry.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Furry(x))\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Charlie is rough then Charlie is quiet.\nFOL:\t(Rough(Charlie) -> Quiet(Charlie))\nTEXT:\tIf Charlie is red then Charlie is cold.\nFOL:\t(Red(Charlie) -> Cold(Charlie))\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Gary is red and Gary is quiet then Gary is big.\nFOL:\t(Red(Gary) & Quiet(Gary) -> Big(Gary))\nTEXT:\tAll big things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tRough, quiet things are furry.\nFOL:\tall x. (Rough(x) & Quiet(x) -> Furry(x))\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Charlie is rough then Charlie is quiet.\nFOL:\tRough(Charlie) -> Quiet(Charlie)\nTEXT:\tIf Charlie is red then Charlie is cold.\nFOL:\tRed(Charlie) -> Cold(Charlie)\nTEXT:\tIf something is cold then it is red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Gary is red and Gary is quiet then Gary is big.\nFOL:\tRed(Gary) & Quiet(Gary) -> Big(Gary)\nTEXT:\tAll big things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cow visits the dog.\nFOL:\tVisits(Cow, Dog)\nTEXT:\tThe cow does not visit the rabbit.\nFOL:\t-Visits(Cow, Rabbit)\nTEXT:\tThe dog is not young.\nFOL:\t-Young(Dog)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog does not visit the rabbit.\nFOL:\t-Visits(Dog, Rabbit)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the dog.\nFOL:\tVisits(Rabbit, Dog)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is not nice.\nFOL:\t-Nice(Squirrel)\nTEXT:\tIf something eats the rabbit and it is round then it visits the rabbit.\nFOL:\tall x. ((Eats(x, Rabbit) & Round(x)) -> Visits(x, Rabbit))\nTEXT:\tIf something eats the dog then the dog visits the cow.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something visits the squirrel and it sees the cow then the squirrel is nice.\nFOL:\tall x. ((Visits(x, Squirrel) & Sees(x, Cow)) -> Nice(Squirrel))\nTEXT:\tIf something visits the dog then it visits the cow.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Cow))\nTEXT:\tIf something eats the rabbit then it is blue.\nFOL:\tall x. (Eats(x, Rabbit) -> Blue(x))\nTEXT:\tIf something visits the cow then it eats the dog.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Dog))\nTEXT:\tIf something visits the dog and the dog visits the cow then it sees the rabbit.\nFOL:\tall x. ((Visits(x, Dog) & Visits(Dog, Cow)) -> Sees(x, Rabbit))\nTEXT:\tThe dog does not visit the cow.\nFOL:\t-Visits(Dog, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe cow visits the dog.\nFOL:\tVisit(Cow, Dog)\nTEXT:\tThe cow does not visit the rabbit.\nFOL:\t-Visit(Cow, Rabbit)\nTEXT:\tThe dog is not young.\nFOL:\t-Young(Dog)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSee(Dog, Squirrel)\nTEXT:\tThe dog does not visit the rabbit.\nFOL:\t-Visit(Dog, Rabbit)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEat(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSee(Rabbit, Dog)\nTEXT:\tThe rabbit visits the dog.\nFOL:\tVisit(Rabbit, Dog)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEat(Squirrel, Cow)\nTEXT:\tThe squirrel is not nice.\nFOL:\t-Nice(Squirrel)\nTEXT:\tIf something eats the rabbit and it is round then it visits the rabbit.\nFOL:\tall x. ((Eat(x, Rabbit) & Round(x)) -> Visit(x, Rabbit))\nTEXT:\tIf something eats the dog then the dog visits the cow.\nFOL:\tall x. (Eat(x, Dog) -> Visit(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (See(x, Rabbit) -> See(x, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (See(x, Rabbit) -> See(x, Cow))\nTEXT:\tIf something visits the squirrel and it sees the cow then the squirrel is nice.\nFOL:\tall x. ((Visit(x, Squirrel) & See(x, Cow)) -> Nice(Squirrel))\nTEXT:\tIf something visits the dog then it visits the cow.\nFOL:\tall x. (Visit(x, Dog) -> Visit(x, Cow))\nTEXT:\tIf something eats the rabbit then it is blue.\nFOL:\tall x. (Eat(x, Rabbit) -> Blue(x))\nTEXT:\tIf something visits the cow then it eats the dog.\nFOL:\tall x. (Visit(x, Cow) -> Eat(x, Dog))\nTEXT:\tIf something visits the dog and the dog visits the cow then it sees the rabbit.\nFOL:\tall x. ((Visit(x, Dog) & Visit(Dog, Cow)) -> See(x, Rabbit))\nTEXT:\tThe dog does not visit the cow.\nFOL:\t-Visit(Dog, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe cow visits the dog.\nFOL:\tVisits(Cow, Dog)\nTEXT:\tThe cow does not visit the rabbit.\nFOL:\t-Visits(Cow, Rabbit)\nTEXT:\tThe dog is not young.\nFOL:\t-Young(Dog)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog does not visit the rabbit.\nFOL:\t-Visits(Dog, Rabbit)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the dog.\nFOL:\tVisits(Rabbit, Dog)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is not nice.\nFOL:\t-Nice(Squirrel)\nTEXT:\tIf something eats the rabbit and it is round then it visits the rabbit.\nFOL:\tall x. ((Eats(x, Rabbit) & Round(x)) -> Visits(x, Rabbit))\nTEXT:\tIf something eats the dog then the dog visits the cow.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something visits the squirrel and it sees the cow then the squirrel is nice.\nFOL:\tall x. ((Visits(x, Squirrel) & Sees(x, Cow)) -> Nice(Squirrel))\nTEXT:\tIf something visits the dog then it visits the cow.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Cow))\nTEXT:\tIf something eats the rabbit then it is blue.\nFOL:\tall x. (Eats(x, Rabbit) -> Blue(x))\nTEXT:\tIf something visits the cow then it eats the dog.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Dog))\nTEXT:\tIf something visits the dog and the dog visits the cow then it sees the rabbit.\nFOL:\tall x. ((Visits(x, Dog) & Visits(Dog, Cow)) -> Sees(x, Rabbit))\nTEXT:\tThe dog does not visit the cow.\nFOL:\t-Visits(Dog, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe cow visits the dog.\nFOL:\tVisits(Cow, Dog)\nTEXT:\tThe cow does not visit the rabbit.\nFOL:\t-Visits(Cow, Rabbit)\nTEXT:\tThe dog is not young.\nFOL:\t-Young(Dog)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog does not visit the rabbit.\nFOL:\t-Visits(Dog, Rabbit)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the dog.\nFOL:\tVisits(Rabbit, Dog)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is not nice.\nFOL:\t-Nice(Squirrel)\nTEXT:\tIf something eats the rabbit and it is round then it visits the rabbit.\nFOL:\tall x. (Eats(x, Rabbit) & Round(x) -> Visits(x, Rabbit))\nTEXT:\tIf something eats the dog then the dog visits the cow.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something visits the squirrel and it sees the cow then the squirrel is nice.\nFOL:\tall x. (Visits(x, Squirrel) & Sees(x, Cow) -> Nice(Squirrel))\nTEXT:\tIf something visits the dog then it visits the cow.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Cow))\nTEXT:\tIf something eats the rabbit then it is blue.\nFOL:\tall x. (Eats(x, Rabbit) -> Blue(x))\nTEXT:\tIf something visits the cow then it eats the dog.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Dog))\nTEXT:\tIf something visits the dog and the dog visits the cow then it sees the rabbit.\nFOL:\tall x. (Visits(x, Dog) & Visits(Dog, Cow) -> Sees(x, Rabbit))\nTEXT:\tThe dog does not visit the cow.\nFOL:\t-Visits(Dog, Cow)\nANSWER:\tFalse", "TEXT:\tThe cow visits the dog.\nFOL:\tVisits(Cow, Dog)\nTEXT:\tThe cow does not visit the rabbit.\nFOL:\t-Visits(Cow, Rabbit)\nTEXT:\tThe dog is not young.\nFOL:\t-Young(Dog)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog does not visit the rabbit.\nFOL:\t-Visits(Dog, Rabbit)\nTEXT:\tThe rabbit eats the squirrel.\nFOL:\tEats(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the dog.\nFOL:\tVisits(Rabbit, Dog)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel is not nice.\nFOL:\t-Nice(Squirrel)\nTEXT:\tIf something eats the rabbit and it is round then it visits the rabbit.\nFOL:\tall x. (Eats(x, Rabbit) & Round(x) -> Visits(x, Rabbit))\nTEXT:\tIf something eats the dog then the dog visits the cow.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something sees the rabbit then it sees the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(x, Cow))\nTEXT:\tIf something visits the squirrel and it sees the cow then the squirrel is nice.\nFOL:\tall x. (Visits(x, Squirrel) & Sees(x, Cow) -> Nice(Squirrel))\nTEXT:\tIf something visits the dog then it visits the cow.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Cow))\nTEXT:\tIf something eats the rabbit then it is blue.\nFOL:\tall x. (Eats(x, Rabbit) -> Blue(x))\nTEXT:\tIf something visits the cow then it eats the dog.\nFOL:\tall x. (Visits(x, Cow) -> Eats(x, Dog))\nTEXT:\tIf something visits the dog and the dog visits the cow then it sees the rabbit.\nFOL:\tall x. (Visits(x, Dog) & Visits(Dog, Cow) -> Sees(x, Rabbit))\nTEXT:\tThe dog does not visit the cow.\nFOL:\t-Visits(Dog, Cow)\nANSWER:\tTrue"], ["TEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll nice people are not quiet.\nFOL:\tall x. (Nice(x) -> -Quiet(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is nice then Anne is white.\nFOL:\tNice(Anne) -> White(Anne)\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Fiona is white then Fiona is blue.\nFOL:\tWhite(Fiona) -> Blue(Fiona)\nTEXT:\tIf someone is rough then they are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is nice and not blue then they are not rough.\nFOL:\tall x. ((Nice(x) & -Blue(x)) -> -Rough(x))\nTEXT:\tIf someone is blue then they are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll nice people are not quiet.\nFOL:\tall x. (Nice(x) -> -Quiet(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is nice then Anne is white.\nFOL:\tNice(Anne) -> White(Anne)\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Fiona is white then Fiona is blue.\nFOL:\tWhite(Fiona) -> Blue(Fiona)\nTEXT:\tIf someone is rough then they are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is nice and not blue then they are not rough.\nFOL:\tall x. (Nice(x) & -Blue(x) -> -Rough(x))\nTEXT:\tIf someone is blue then they are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll nice people are not quiet.\nFOL:\tall x. (Nice(x) -> -Quiet(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is nice then Anne is white.\nFOL:\tNice(Anne) -> White(Anne)\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Fiona is white then Fiona is blue.\nFOL:\tWhite(Fiona) -> Blue(Fiona)\nTEXT:\tIf someone is rough then they are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is nice and not blue then they are not rough.\nFOL:\tall x. ((Nice(x) & -Blue(x)) -> -Rough(x))\nTEXT:\tIf someone is blue then they are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll nice people are not quiet.\nFOL:\tall x. (Nice(x) -> -Quiet(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is nice then Anne is white.\nFOL:\tNice(Anne) -> White(Anne)\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Fiona is white then Fiona is blue.\nFOL:\tWhite(Fiona) -> Blue(Fiona)\nTEXT:\tIf someone is rough then they are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is nice and not blue then they are not rough.\nFOL:\tall x. ((Nice(x) & -Blue(x)) -> -Rough(x))\nTEXT:\tIf someone is blue then they are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is not nice.\nFOL:\t-Nice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is not white.\nFOL:\t-White(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll nice people are not quiet.\nFOL:\tall x. (Nice(x) -> -Quiet(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tIf Anne is nice then Anne is white.\nFOL:\tNice(Anne) -> White(Anne)\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tIf Fiona is white then Fiona is blue.\nFOL:\tWhite(Fiona) -> Blue(Fiona)\nTEXT:\tIf someone is rough then they are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf someone is nice and not blue then they are not rough.\nFOL:\tall x. ((Nice(x) & -Blue(x)) -> -Rough(x))\nTEXT:\tIf someone is blue then they are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tIf Erin is young then Erin is white.\nFOL:\tYoung(Erin) -> White(Erin)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is not green.\nFOL:\t- Green(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf something is furry then it is young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tWhite, red things are rough.\nFOL:\tall x. ((White(x) & Red(x)) -> Rough(x))\nTEXT:\tAll white, furry things are big.\nFOL:\tall x. ((White(x) & Furry(x)) -> Big(x))\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tRed, young things are white.\nFOL:\tall x. ((Red(x) & Young(x)) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf something is furry then it is young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tWhite, red things are rough.\nFOL:\tall x. (White(x) & Red(x) -> Rough(x))\nTEXT:\tAll white, furry things are big.\nFOL:\tall x. (White(x) & Furry(x) -> Big(x))\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tRed, young things are white.\nFOL:\tall x. (Red(x) & Young(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf something is furry then it is young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tWhite, red things are rough.\nFOL:\tall x. (Red(x) & White(x) -> Rough(x))\nTEXT:\tAll white, furry things are big.\nFOL:\tall x. (White(x) & Furry(x) -> Big(x))\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tRed, young things are white.\nFOL:\tall x. (Red(x) & Young(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf something is furry then it is young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tWhite, red things are rough.\nFOL:\tall x. (White(x) & Red(x) -> Rough(x))\nTEXT:\tAll white, furry things are big.\nFOL:\tall x. (White(x) & Furry(x) -> Big(x))\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tRed, young things are white.\nFOL:\tall x. (Red(x) & Young(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not green.\nFOL:\t- Green(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf something is furry then it is young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tWhite, red things are rough.\nFOL:\tall x. (White(x) & Red(x) -> Rough(x))\nTEXT:\tAll white, furry things are big.\nFOL:\tall x. (White(x) & Furry(x) -> Big(x))\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tRed, young things are white.\nFOL:\tall x. (Red(x) & Young(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe dog does not chase the lion.\nFOL:\t-Chases(Dog, Lion)\nTEXT:\tThe dog is not rough.\nFOL:\t-Rough(Dog)\nTEXT:\tThe dog sees the bald eagle.\nFOL:\tSees(Dog, BaldEagle)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf the lion sees the bald eagle and the bald eagle chases the tiger then the tiger is round.\nFOL:\tall x. all y. all z. (Sees(x, y) & Chases(y, z) & Lion(x) & BaldEagle(y) & Tiger(z) -> Round(z))\nTEXT:\tIf someone sees the lion and the lion chases the dog then the dog needs the lion.\nFOL:\tall x. (Sees(x, Lion) & Chases(Lion, Dog) -> Needs(Dog, Lion))\nTEXT:\tIf someone is kind and they chase the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Kind(x) & Chases(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone sees the lion and the lion is rough then they chase the lion.\nFOL:\tall x. (Sees(x, Lion) & Rough(Lion) -> Chases(x, Lion))\nTEXT:\tIf someone needs the dog and the dog is kind then the dog sees the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Kind(Dog) -> Sees(Dog, BaldEagle))\nTEXT:\tIf someone sees the bald eagle and the bald eagle chases the lion then the lion is red.\nFOL:\tall x. (Sees(x, BaldEagle) & Chases(BaldEagle, Lion) -> Red(Lion))\nTEXT:\tIf someone is red and rough then they see the lion.\nFOL:\tall x. (Red(x) & Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone needs the lion then the lion needs the dog.\nFOL:\tall x. (Needs(x, Lion) -> Needs(Lion, Dog))\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tThe lion does not see the lion.\nFOL:\t-Sees(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe dog does not chase the lion.\nFOL:\t-Chases(Dog, Lion)\nTEXT:\tThe dog is not rough.\nFOL:\t-Rough(Dog)\nTEXT:\tThe dog sees the bald eagle.\nFOL:\tSees(Dog, BaldEagle)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf the lion sees the bald eagle and the bald eagle chases the tiger then the tiger is round.\nFOL:\tall x. all y. (Sees(x, BaldEagle) & Chases(BaldEagle, y) -> Round(y))\nTEXT:\tIf someone sees the lion and the lion chases the dog then the dog needs the lion.\nFOL:\tall x. (Sees(x, Lion) & Chases(Lion, Dog) -> Needs(Dog, Lion))\nTEXT:\tIf someone is kind and they chase the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Kind(x) & Chases(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone sees the lion and the lion is rough then they chase the lion.\nFOL:\tall x. (Sees(x, Lion) & Rough(Lion) -> Chases(x, Lion))\nTEXT:\tIf someone needs the dog and the dog is kind then the dog sees the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Kind(Dog) -> Sees(Dog, BaldEagle))\nTEXT:\tIf someone sees the bald eagle and the bald eagle chases the lion then the lion is red.\nFOL:\tall x. (Sees(x, BaldEagle) & Chases(BaldEagle, Lion) -> Red(Lion))\nTEXT:\tIf someone is red and rough then they see the lion.\nFOL:\tall x. (Red(x) & Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone needs the lion then the lion needs the dog.\nFOL:\tall x. (Needs(x, Lion) -> Needs(Lion, Dog))\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tThe lion does not see the lion.\nFOL:\t-Sees(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe dog does not chase the lion.\nFOL:\t-Chases(Dog, Lion)\nTEXT:\tThe dog is not rough.\nFOL:\t-Rough(Dog)\nTEXT:\tThe dog sees the bald eagle.\nFOL:\tSees(Dog, BaldEagle)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf the lion sees the bald eagle and the bald eagle chases the tiger then the tiger is round.\nFOL:\tall x. ((Sees(x, BaldEagle) & Chases(BaldEagle, Tiger)) -> Round(Tiger))\nTEXT:\tIf someone sees the lion and the lion chases the dog then the dog needs the lion.\nFOL:\tall x. ((Sees(x, Lion) & Chases(Lion, Dog)) -> Needs(Dog, Lion))\nTEXT:\tIf someone is kind and they chase the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. ((Kind(x) & Chases(x, BaldEagle)) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone sees the lion and the lion is rough then they chase the lion.\nFOL:\tall x. ((Sees(x, Lion) & Rough(Lion)) -> Chases(x, Lion))\nTEXT:\tIf someone needs the dog and the dog is kind then the dog sees the bald eagle.\nFOL:\tall x. ((Needs(x, Dog) & Kind(Dog)) -> Sees(Dog, BaldEagle))\nTEXT:\tIf someone sees the bald eagle and the bald eagle chases the lion then the lion is red.\nFOL:\tall x. ((Sees(x, BaldEagle) & Chases(BaldEagle, Lion)) -> Red(Lion))\nTEXT:\tIf someone is red and rough then they see the lion.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Sees(x, Lion))\nTEXT:\tIf someone needs the lion then the lion needs the dog.\nFOL:\tall x. ((Needs(x, Lion)) -> Needs(Lion, Dog))\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tThe lion does not see the lion.\nFOL:\t-Sees(Lion, Lion)\nANSWER:\tUncertain", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe dog does not chase the lion.\nFOL:\t-Chases(Dog, Lion)\nTEXT:\tThe dog is not rough.\nFOL:\t-Rough(Dog)\nTEXT:\tThe dog sees the bald eagle.\nFOL:\tSees(Dog, BaldEagle)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf the lion sees the bald eagle and the bald eagle chases the tiger then the tiger is round.\nFOL:\tall x. (Sees(x, BaldEagle) & Chases(BaldEagle, Tiger) -> Round(Tiger))\nTEXT:\tIf someone sees the lion and the lion chases the dog then the dog needs the lion.\nFOL:\tall x. (Sees(x, Lion) & Chases(Lion, Dog) -> Needs(Dog, Lion))\nTEXT:\tIf someone is kind and they chase the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Kind(x) & Chases(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone sees the lion and the lion is rough then they chase the lion.\nFOL:\tall x. (Sees(x, Lion) & Rough(Lion) -> Chases(x, Lion))\nTEXT:\tIf someone needs the dog and the dog is kind then the dog sees the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Kind(Dog) -> Sees(Dog, BaldEagle))\nTEXT:\tIf someone sees the bald eagle and the bald eagle chases the lion then the lion is red.\nFOL:\tall x. (Sees(x, BaldEagle) & Chases(BaldEagle, Lion) -> Red(Lion))\nTEXT:\tIf someone is red and rough then they see the lion.\nFOL:\tall x. (Red(x) & Rough(x) -> Sees(x, Lion))\nTEXT:\tIf someone needs the lion then the lion needs the dog.\nFOL:\tall x. (Needs(x, Lion) -> Needs(Lion, Dog))\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tThe lion does not see the lion.\nFOL:\t- Sees(Lion, Lion)\nANSWER:\tUncertain", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the lion.\nFOL:\tNeeds(BaldEagle, Lion)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe dog does not chase the lion.\nFOL:\t-Chases(Dog, Lion)\nTEXT:\tThe dog is not rough.\nFOL:\t-Rough(Dog)\nTEXT:\tThe dog sees the bald eagle.\nFOL:\tSees(Dog, BaldEagle)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion needs the tiger.\nFOL:\tNeeds(Lion, Tiger)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf the lion sees the bald eagle and the bald eagle chases the tiger then the tiger is round.\nFOL:\t(Sees(Lion, BaldEagle) & Chases(BaldEagle, Tiger)) -> Round(Tiger)\nTEXT:\tIf someone sees the lion and the lion chases the dog then the dog needs the lion.\nFOL:\tall x. (Sees(x, Lion) & Chases(Lion, Dog)) -> Needs(Dog, Lion)\nTEXT:\tIf someone is kind and they chase the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Kind(x) & Chases(x, BaldEagle)) -> Needs(BaldEagle, Dog)\nTEXT:\tIf someone sees the lion and the lion is rough then they chase the lion.\nFOL:\tall x. (Sees(x, Lion) & Rough(Lion)) -> Chases(x, Lion)\nTEXT:\tIf someone needs the dog and the dog is kind then the dog sees the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Kind(Dog)) -> Sees(Dog, BaldEagle)\nTEXT:\tIf someone sees the bald eagle and the bald eagle chases the lion then the lion is red.\nFOL:\tall x. (Sees(x, BaldEagle) & Chases(BaldEagle, Lion)) -> Red(Lion)\nTEXT:\tIf someone is red and rough then they see the lion.\nFOL:\tall x. (Red(x) & Rough(x)) -> Sees(x, Lion)\nTEXT:\tIf someone needs the lion then the lion needs the dog.\nFOL:\tall x. (Needs(x, Lion)) -> Needs(Lion, Dog)\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x)) -> Rough(x)\nTEXT:\tThe lion does not see the lion.\nFOL:\t-Sees(Lion, Lion)\nANSWER:\tUncertain"], ["TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart, round people are big.\nFOL:\tall x. (Smart(x) & Round(x) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tAll quiet people are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf Charlie is red and Charlie is kind then Charlie is big.\nFOL:\t(Red(Charlie) & Kind(Charlie)) -> Big(Charlie)\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tCharlie is not kind.\nFOL:\t-Kind(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart, round people are big.\nFOL:\tall x. (Smart(x) & Round(x) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tAll quiet people are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf Charlie is red and Charlie is kind then Charlie is big.\nFOL:\t(Red(Charlie) & Kind(Charlie) -> Big(Charlie))\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tCharlie is not kind.\nFOL:\t-Kind(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart, round people are big.\nFOL:\tall x. (Smart(x) & Round(x) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tAll quiet people are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf Charlie is red and Charlie is kind then Charlie is big.\nFOL:\t(Red(Charlie) & Kind(Charlie)) -> Big(Charlie)\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tCharlie is not kind.\nFOL:\t-Kind(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart, round people are big.\nFOL:\tall x. ((Smart(x) & Round(x)) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tAll quiet people are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf Charlie is red and Charlie is kind then Charlie is big.\nFOL:\t(Red(Charlie) & Kind(Charlie)) -> Big(Charlie)\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tCharlie is not kind.\nFOL:\t-Kind(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart, round people are big.\nFOL:\tall x. (Smart(x) & Round(x) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tAll quiet people are white.\nFOL:\tall x. (Quiet(x) -> White(x))\nTEXT:\tIf Charlie is red and Charlie is kind then Charlie is big.\nFOL:\t(Red(Charlie) & Kind(Charlie)) -> Big(Charlie)\nTEXT:\tRed people are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tCharlie is not kind.\nFOL:\t-Kind(Charlie)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRough, smart things are red.\nFOL:\tall x. (Rough(x) & Smart(x) -> Red(x))\nTEXT:\tRough things are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tGreen, red things are smart.\nFOL:\tall x. (Green(x) & Red(x) -> Smart(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tAll smart, red things are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tRed, blue things are green.\nFOL:\tall x. (Red(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tSmart, green things are furry.\nFOL:\tall x. (Smart(x) & Green(x) -> Furry(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRough, smart things are red.\nFOL:\tall x. (Rough(x) & Smart(x) -> Red(x))\nTEXT:\tRough things are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tGreen, red things are smart.\nFOL:\tall x. (Green(x) & Red(x) -> Smart(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tAll smart, red things are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tRed, blue things are green.\nFOL:\tall x. (Red(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tSmart, green things are furry.\nFOL:\tall x. (Smart(x) & Green(x) -> Furry(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRough, smart things are red.\nFOL:\tall x. (Rough(x) & Smart(x) -> Red(x))\nTEXT:\tRough things are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tGreen, red things are smart.\nFOL:\tall x. (Green(x) & Red(x) -> Smart(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tAll smart, red things are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tRed, blue things are green.\nFOL:\tall x. (Red(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tSmart, green things are furry.\nFOL:\tall x. (Smart(x) & Green(x) -> Furry(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRough, smart things are red.\nFOL:\tall x. (Rough(x) & Smart(x) -> Red(x))\nTEXT:\tRough things are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tGreen, red things are smart.\nFOL:\tall x. (Green(x) & Red(x) -> Smart(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tAll smart, red things are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tRed, blue things are green.\nFOL:\tall x. (Red(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tSmart, green things are furry.\nFOL:\tall x. (Smart(x) & Green(x) -> Furry(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRough, smart things are red.\nFOL:\tall x. (Rough(x) & Smart(x) -> Red(x))\nTEXT:\tRough things are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tGreen, red things are smart.\nFOL:\tall x. (Green(x) & Red(x) -> Smart(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tAll smart, red things are green.\nFOL:\tall x. (Smart(x) & Red(x) -> Green(x))\nTEXT:\tRed, blue things are green.\nFOL:\tall x. (Red(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tSmart, green things are furry.\nFOL:\tall x. (Smart(x) & Green(x) -> Furry(x))\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat likes the cow.\nFOL:\tLikes(Cat, Cow)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat needs the bear.\nFOL:\tNeeds(Cat, Bear)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf the tiger eats the bear then the bear likes the cow.\nFOL:\tall x. (Eats(x, Bear) & Tiger(x) -> Likes(Bear, Cow))\nTEXT:\tIf something eats the tiger and the tiger is rough then it is rough.\nFOL:\tall x. (Eats(x, Tiger) & Rough(Tiger) -> Rough(x))\nTEXT:\tIf something eats the cow then the cow is rough.\nFOL:\tall x. (Eats(x, Cow) -> Rough(Cow))\nTEXT:\tIf something is kind then it needs the tiger.\nFOL:\tall x. (Kind(x) -> Needs(x, Tiger))\nTEXT:\tIf something is kind and it eats the bear then it eats the cow.\nFOL:\tall x. (Kind(x) & Eats(x, Bear) -> Eats(x, Cow))\nTEXT:\tIf something needs the bear then the bear is red.\nFOL:\tall x. (Needs(x, Bear) -> Red(Bear))\nTEXT:\tIf the cow is rough and the cow eats the bear then the cow is cold.\nFOL:\t(Rough(Cow) & Eats(Cow, Bear)) -> Cold(Cow)\nTEXT:\tIf something needs the tiger then it eats the bear.\nFOL:\tall x. (Needs(x, Tiger) -> Eats(x, Bear))\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat likes the cow.\nFOL:\tLikes(Cat, Cow)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat needs the bear.\nFOL:\tNeeds(Cat, Bear)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf the tiger eats the bear then the bear likes the cow.\nFOL:\tall x. (Eats(x, Bear) & Tiger(x) -> Likes(Bear, Cow))\nTEXT:\tIf something eats the tiger and the tiger is rough then it is rough.\nFOL:\tall x. (Eats(x, Tiger) & Rough(Tiger) -> Rough(x))\nTEXT:\tIf something eats the cow then the cow is rough.\nFOL:\tall x. (Eats(x, Cow) -> Rough(Cow))\nTEXT:\tIf something is kind then it needs the tiger.\nFOL:\tall x. (Kind(x) -> Needs(x, Tiger))\nTEXT:\tIf something is kind and it eats the bear then it eats the cow.\nFOL:\tall x. (Kind(x) & Eats(x, Bear) -> Eats(x, Cow))\nTEXT:\tIf something needs the bear then the bear is red.\nFOL:\tall x. (Needs(x, Bear) -> Red(Bear))\nTEXT:\tIf the cow is rough and the cow eats the bear then the cow is cold.\nFOL:\t(Rough(Cow) & Eats(Cow, Bear) -> Cold(Cow))\nTEXT:\tIf something needs the tiger then it eats the bear.\nFOL:\tall x. (Needs(x, Tiger) -> Eats(x, Bear))\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat likes the cow.\nFOL:\tLikes(Cat, Cow)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat needs the bear.\nFOL:\tNeeds(Cat, Bear)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf the tiger eats the bear then the bear likes the cow.\nFOL:\tall x. all y. (Eats(x, y) & Tiger(x) & Bear(y) -> Likes(y, Cow))\nTEXT:\tIf something eats the tiger and the tiger is rough then it is rough.\nFOL:\tall x. (Eats(x, Tiger) & Rough(Tiger) -> Rough(x))\nTEXT:\tIf something eats the cow then the cow is rough.\nFOL:\tall x. (Eats(x, Cow) -> Rough(Cow))\nTEXT:\tIf something is kind then it needs the tiger.\nFOL:\tall x. (Kind(x) -> Needs(x, Tiger))\nTEXT:\tIf something is kind and it eats the bear then it eats the cow.\nFOL:\tall x. (Kind(x) & Eats(x, Bear) -> Eats(x, Cow))\nTEXT:\tIf something needs the bear then the bear is red.\nFOL:\tall x. (Needs(x, Bear) -> Red(Bear))\nTEXT:\tIf the cow is rough and the cow eats the bear then the cow is cold.\nFOL:\t(Rough(Cow) & Eats(Cow, Bear) -> Cold(Cow))\nTEXT:\tIf something needs the tiger then it eats the bear.\nFOL:\tall x. (Needs(x, Tiger) -> Eats(x, Bear))\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat likes the cow.\nFOL:\tLikes(Cat, Cow)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat needs the bear.\nFOL:\tNeeds(Cat, Bear)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf the tiger eats the bear then the bear likes the cow.\nFOL:\tall x. all y. (Eats(x, y) & Tiger(x) & Bear(y) -> Likes(y, Cow))\nTEXT:\tIf something eats the tiger and the tiger is rough then it is rough.\nFOL:\tall x. (Eats(x, Tiger) & Rough(Tiger) -> Rough(x))\nTEXT:\tIf something eats the cow then the cow is rough.\nFOL:\tall x. (Eats(x, Cow) -> Rough(Cow))\nTEXT:\tIf something is kind then it needs the tiger.\nFOL:\tall x. (Kind(x) -> Needs(x, Tiger))\nTEXT:\tIf something is kind and it eats the bear then it eats the cow.\nFOL:\tall x. (Kind(x) & Eats(x, Bear) -> Eats(x, Cow))\nTEXT:\tIf something needs the bear then the bear is red.\nFOL:\tall x. (Needs(x, Bear) -> Red(Bear))\nTEXT:\tIf the cow is rough and the cow eats the bear then the cow is cold.\nFOL:\t(Rough(Cow) & Eats(Cow, Bear) -> Cold(Cow))\nTEXT:\tIf something needs the tiger then it eats the bear.\nFOL:\tall x. (Needs(x, Tiger) -> Eats(x, Bear))\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat likes the cow.\nFOL:\tLikes(Cat, Cow)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat needs the bear.\nFOL:\tNeeds(Cat, Bear)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf the tiger eats the bear then the bear likes the cow.\nFOL:\tall x. (Eats(x, Bear) & Tiger(x) -> Likes(Bear, Cow))\nTEXT:\tIf something eats the tiger and the tiger is rough then it is rough.\nFOL:\tall x. (Eats(x, Tiger) & Rough(Tiger) -> Rough(x))\nTEXT:\tIf something eats the cow then the cow is rough.\nFOL:\tall x. (Eats(x, Cow) -> Rough(Cow))\nTEXT:\tIf something is kind then it needs the tiger.\nFOL:\tall x. (Kind(x) -> Needs(x, Tiger))\nTEXT:\tIf something is kind and it eats the bear then it eats the cow.\nFOL:\tall x. (Kind(x) & Eats(x, Bear) -> Eats(x, Cow))\nTEXT:\tIf something needs the bear then the bear is red.\nFOL:\tall x. (Needs(x, Bear) -> Red(Bear))\nTEXT:\tIf the cow is rough and the cow eats the bear then the cow is cold.\nFOL:\t(Rough(Cow) & Eats(Cow, Bear)) -> Cold(Cow)\nTEXT:\tIf something needs the tiger then it eats the bear.\nFOL:\tall x. (Needs(x, Tiger) -> Eats(x, Bear))\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf Anne is rough then Anne is not furry.\nFOL:\tRough(Anne) -> -Furry(Anne)\nTEXT:\tIf Fiona is quiet then Fiona is big.\nFOL:\tQuiet(Fiona) -> Big(Fiona)\nTEXT:\tIf something is blue and not rough then it is not round.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> -Round(x))\nTEXT:\tIf something is nice and round then it is quiet.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf Fiona is big and Fiona is nice then Fiona is round.\nFOL:\t(Big(Fiona) & Nice(Fiona)) -> Round(Fiona)\nTEXT:\tIf something is round then it is blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tFurry things are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough then it is furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf Anne is rough then Anne is not furry.\nFOL:\tRough(Anne) -> -Furry(Anne)\nTEXT:\tIf Fiona is quiet then Fiona is big.\nFOL:\tQuiet(Fiona) -> Big(Fiona)\nTEXT:\tIf something is blue and not rough then it is not round.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> -Round(x))\nTEXT:\tIf something is nice and round then it is quiet.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf Fiona is big and Fiona is nice then Fiona is round.\nFOL:\t(Big(Fiona) & Nice(Fiona)) -> Round(Fiona)\nTEXT:\tIf something is round then it is blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tFurry things are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough then it is furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf Anne is rough then Anne is not furry.\nFOL:\tRough(Anne) -> -Furry(Anne)\nTEXT:\tIf Fiona is quiet then Fiona is big.\nFOL:\tQuiet(Fiona) -> Big(Fiona)\nTEXT:\tIf something is blue and not rough then it is not round.\nFOL:\tall x. (Blue(x) & -Rough(x) -> -Round(x))\nTEXT:\tIf something is nice and round then it is quiet.\nFOL:\tall x. (Nice(x) & Round(x) -> Quiet(x))\nTEXT:\tIf Fiona is big and Fiona is nice then Fiona is round.\nFOL:\t(Big(Fiona) & Nice(Fiona)) -> Round(Fiona)\nTEXT:\tIf something is round then it is blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tFurry things are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough then it is furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf Anne is rough then Anne is not furry.\nFOL:\tRough(Anne) -> -Furry(Anne)\nTEXT:\tIf Fiona is quiet then Fiona is big.\nFOL:\tQuiet(Fiona) -> Big(Fiona)\nTEXT:\tIf something is blue and not rough then it is not round.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> -Round(x))\nTEXT:\tIf something is nice and round then it is quiet.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf Fiona is big and Fiona is nice then Fiona is round.\nFOL:\t(Big(Fiona) & Nice(Fiona)) -> Round(Fiona)\nTEXT:\tIf something is round then it is blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tFurry things are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough then it is furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf Anne is rough then Anne is not furry.\nFOL:\tRough(Anne) -> -Furry(Anne)\nTEXT:\tIf Fiona is quiet then Fiona is big.\nFOL:\tQuiet(Fiona) -> Big(Fiona)\nTEXT:\tIf something is blue and not rough then it is not round.\nFOL:\tall x. (Blue(x) & -Rough(x) -> -Round(x))\nTEXT:\tIf something is nice and round then it is quiet.\nFOL:\tall x. (Nice(x) & Round(x) -> Quiet(x))\nTEXT:\tIf Fiona is big and Fiona is nice then Fiona is round.\nFOL:\t(Big(Fiona) & Nice(Fiona)) -> Round(Fiona)\nTEXT:\tIf something is round then it is blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tFurry things are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough then it is furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nANSWER:\tFalse\n"], ["TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the cow.\nFOL:\tNeeds(Tiger, Cow)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tIf someone is young then they need the tiger.\nFOL:\tall x. (Young(x) -> Needs(x, Tiger))\nTEXT:\tIf the tiger is young then the tiger is green.\nFOL:\tYoung(Tiger) -> Green(Tiger)\nTEXT:\tIf someone needs the tiger then the tiger sees the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(Tiger, BaldEagle))\nTEXT:\tIf someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger.\nFOL:\tall x. ((Sees(x, Tiger) & Likes(Tiger, BaldEagle)) -> Sees(BaldEagle, Tiger))\nTEXT:\tIf someone is green and they see the bald eagle then they are cold.\nFOL:\tall x. ((Green(x) & Sees(x, BaldEagle)) -> Cold(x))\nTEXT:\tIf someone is green and they like the tiger then they see the bald eagle.\nFOL:\tall x. ((Green(x) & Likes(x, Tiger)) -> Sees(x, BaldEagle))\nTEXT:\tIf the tiger is cold then the tiger is young.\nFOL:\tCold(Tiger) -> Young(Tiger)\nTEXT:\tIf someone needs the tiger then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the mouse then they are green.\nFOL:\tall x. (Needs(x, Mouse) -> Green(x))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the cow.\nFOL:\tNeeds(Tiger, Cow)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tIf someone is young then they need the tiger.\nFOL:\tall x. (Young(x) -> Needs(x, Tiger))\nTEXT:\tIf the tiger is young then the tiger is green.\nFOL:\tYoung(Tiger) -> Green(Tiger)\nTEXT:\tIf someone needs the tiger then the tiger sees the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(Tiger, BaldEagle))\nTEXT:\tIf someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger.\nFOL:\tall x. ((Sees(x, Tiger) & Likes(Tiger, BaldEagle)) -> Sees(BaldEagle, Tiger))\nTEXT:\tIf someone is green and they see the bald eagle then they are cold.\nFOL:\tall x. ((Green(x) & Sees(x, BaldEagle)) -> Cold(x))\nTEXT:\tIf someone is green and they like the tiger then they see the bald eagle.\nFOL:\tall x. ((Green(x) & Likes(x, Tiger)) -> Sees(x, BaldEagle))\nTEXT:\tIf the tiger is cold then the tiger is young.\nFOL:\tCold(Tiger) -> Young(Tiger)\nTEXT:\tIf someone needs the tiger then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the mouse then they are green.\nFOL:\tall x. (Needs(x, Mouse) -> Green(x))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the cow.\nFOL:\tNeeds(Tiger, Cow)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tIf someone is young then they need the tiger.\nFOL:\tall x. (Young(x) -> Needs(x, Tiger))\nTEXT:\tIf the tiger is young then the tiger is green.\nFOL:\tYoung(Tiger) -> Green(Tiger)\nTEXT:\tIf someone needs the tiger then the tiger sees the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(Tiger, BaldEagle))\nTEXT:\tIf someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger.\nFOL:\tall x. (Sees(x, Tiger) & Likes(Tiger, BaldEagle) -> Sees(BaldEagle, Tiger))\nTEXT:\tIf someone is green and they see the bald eagle then they are cold.\nFOL:\tall x. (Green(x) & Sees(x, BaldEagle) -> Cold(x))\nTEXT:\tIf someone is green and they like the tiger then they see the bald eagle.\nFOL:\tall x. (Green(x) & Likes(x, Tiger) -> Sees(x, BaldEagle))\nTEXT:\tIf the tiger is cold then the tiger is young.\nFOL:\tCold(Tiger) -> Young(Tiger)\nTEXT:\tIf someone needs the tiger then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the mouse then they are green.\nFOL:\tall x. (Needs(x, Mouse) -> Green(x))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the cow.\nFOL:\tNeeds(Tiger, Cow)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tIf someone is young then they need the tiger.\nFOL:\tall x. (Young(x) -> Needs(x, Tiger))\nTEXT:\tIf the tiger is young then the tiger is green.\nFOL:\tYoung(Tiger) -> Green(Tiger)\nTEXT:\tIf someone needs the tiger then the tiger sees the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(Tiger, BaldEagle))\nTEXT:\tIf someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger.\nFOL:\tall x. ((Sees(x, Tiger) & Likes(Tiger, BaldEagle)) -> Sees(BaldEagle, Tiger))\nTEXT:\tIf someone is green and they see the bald eagle then they are cold.\nFOL:\tall x. ((Green(x) & Sees(x, BaldEagle)) -> Cold(x))\nTEXT:\tIf someone is green and they like the tiger then they see the bald eagle.\nFOL:\tall x. ((Green(x) & Likes(x, Tiger)) -> Sees(x, BaldEagle))\nTEXT:\tIf the tiger is cold then the tiger is young.\nFOL:\tCold(Tiger) -> Young(Tiger)\nTEXT:\tIf someone needs the tiger then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the mouse then they are green.\nFOL:\tall x. (Needs(x, Mouse) -> Green(x))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow needs the tiger.\nFOL:\tNeeds(Cow, Tiger)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the cow.\nFOL:\tNeeds(Tiger, Cow)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tIf someone is young then they need the tiger.\nFOL:\tall x. (Young(x) -> Needs(x, Tiger))\nTEXT:\tIf the tiger is young then the tiger is green.\nFOL:\tYoung(Tiger) -> Green(Tiger)\nTEXT:\tIf someone needs the tiger then the tiger sees the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> Sees(Tiger, BaldEagle))\nTEXT:\tIf someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger.\nFOL:\tall x. ((Sees(x, Tiger) & Likes(Tiger, BaldEagle)) -> Sees(BaldEagle, Tiger))\nTEXT:\tIf someone is green and they see the bald eagle then they are cold.\nFOL:\tall x. ((Green(x) & Sees(x, BaldEagle)) -> Cold(x))\nTEXT:\tIf someone is green and they like the tiger then they see the bald eagle.\nFOL:\tall x. ((Green(x) & Likes(x, Tiger)) -> Sees(x, BaldEagle))\nTEXT:\tIf the tiger is cold then the tiger is young.\nFOL:\tCold(Tiger) -> Young(Tiger)\nTEXT:\tIf someone needs the tiger then they like the tiger.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Tiger))\nTEXT:\tIf someone needs the mouse then they are green.\nFOL:\tall x. (Needs(x, Mouse) -> Green(x))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tRound, big people are white.\nFOL:\tall x. (Round(x) & Big(x) -> White(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tAll big, kind people are round.\nFOL:\tall x. (Big(x) & Kind(x) -> Round(x))\nTEXT:\tWhite, young people are quiet.\nFOL:\tall x. (White(x) & Young(x) -> Quiet(x))\nTEXT:\tCold people are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf someone is big and white then they are young.\nFOL:\tall x. (Big(x) & White(x) -> Young(x))\nTEXT:\tAll white, quiet people are big.\nFOL:\tall x. (White(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is white then they are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tRound, big people are white.\nFOL:\tall x. (Round(x) & Big(x) -> White(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tAll big, kind people are round.\nFOL:\tall x. (Big(x) & Kind(x) -> Round(x))\nTEXT:\tWhite, young people are quiet.\nFOL:\tall x. (White(x) & Young(x) -> Quiet(x))\nTEXT:\tCold people are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf someone is big and white then they are young.\nFOL:\tall x. (Big(x) & White(x) -> Young(x))\nTEXT:\tAll white, quiet people are big.\nFOL:\tall x. (White(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is white then they are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tRound, big people are white.\nFOL:\tall x. ((Round(x) & Big(x)) -> White(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tAll big, kind people are round.\nFOL:\tall x. ((Big(x) & Kind(x)) -> Round(x))\nTEXT:\tWhite, young people are quiet.\nFOL:\tall x. ((White(x) & Young(x)) -> Quiet(x))\nTEXT:\tCold people are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf someone is big and white then they are young.\nFOL:\tall x. ((Big(x) & White(x)) -> Young(x))\nTEXT:\tAll white, quiet people are big.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Big(x))\nTEXT:\tIf someone is white then they are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tRound, big people are white.\nFOL:\tall x. (Round(x) & Big(x) -> White(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tAll big, kind people are round.\nFOL:\tall x. (Big(x) & Kind(x) -> Round(x))\nTEXT:\tWhite, young people are quiet.\nFOL:\tall x. (White(x) & Young(x) -> Quiet(x))\nTEXT:\tCold people are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf someone is big and white then they are young.\nFOL:\tall x. (Big(x) & White(x) -> Young(x))\nTEXT:\tAll white, quiet people are big.\nFOL:\tall x. (White(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is white then they are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tRound, big people are white.\nFOL:\tall x. (Round(x) & Big(x) -> White(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tAll big, kind people are round.\nFOL:\tall x. (Big(x) & Kind(x) -> Round(x))\nTEXT:\tWhite, young people are quiet.\nFOL:\tall x. (White(x) & Young(x) -> Quiet(x))\nTEXT:\tCold people are kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf someone is big and white then they are young.\nFOL:\tall x. (Big(x) & White(x) -> Young(x))\nTEXT:\tAll white, quiet people are big.\nFOL:\tall x. (White(x) & Quiet(x) -> Big(x))\nTEXT:\tIf someone is white then they are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is not young.\nFOL:\t-Young(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Bob is furry then Bob is quiet.\nFOL:\tFurry(Bob) -> Quiet(Bob)\nTEXT:\tAll white things are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tNice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is nice and green then it is rough.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Rough(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is green and nice then it is furry.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Furry(x))\nTEXT:\tIf Gary is white and Gary is nice then Gary is rough.\nFOL:\t(White(Gary) & Nice(Gary)) -> Rough(Gary)\nTEXT:\tAll white, green things are nice.\nFOL:\tall x. ((White(x) & Green(x)) -> Nice(x))\nTEXT:\tGreen, furry things are red.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Red(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Bob is furry then Bob is quiet.\nFOL:\tFurry(Bob) -> Quiet(Bob)\nTEXT:\tAll white things are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tNice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is nice and green then it is rough.\nFOL:\tall x. (Nice(x) & Green(x) -> Rough(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is green and nice then it is furry.\nFOL:\tall x. (Green(x) & Nice(x) -> Furry(x))\nTEXT:\tIf Gary is white and Gary is nice then Gary is rough.\nFOL:\t(White(Gary) & Nice(Gary)) -> Rough(Gary)\nTEXT:\tAll white, green things are nice.\nFOL:\tall x. (White(x) & Green(x) -> Nice(x))\nTEXT:\tGreen, furry things are red.\nFOL:\tall x. (Green(x) & Furry(x) -> Red(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Bob is furry then Bob is quiet.\nFOL:\tFurry(Bob) -> Quiet(Bob)\nTEXT:\tAll white things are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tNice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is nice and green then it is rough.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Rough(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is green and nice then it is furry.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Furry(x))\nTEXT:\tIf Gary is white and Gary is nice then Gary is rough.\nFOL:\t(White(Gary) & Nice(Gary)) -> Rough(Gary)\nTEXT:\tAll white, green things are nice.\nFOL:\tall x. ((White(x) & Green(x)) -> Nice(x))\nTEXT:\tGreen, furry things are red.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Red(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Bob is furry then Bob is quiet.\nFOL:\tFurry(Bob) -> Quiet(Bob)\nTEXT:\tAll white things are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tNice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is nice and green then it is rough.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Rough(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is green and nice then it is furry.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Furry(x))\nTEXT:\tIf Gary is white and Gary is nice then Gary is rough.\nFOL:\t(White(Gary) & Nice(Gary)) -> Rough(Gary)\nTEXT:\tAll white, green things are nice.\nFOL:\tall x. ((White(x) & Green(x)) -> Nice(x))\nTEXT:\tGreen, furry things are red.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Red(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf Bob is furry then Bob is quiet.\nFOL:\tFurry(Bob) -> Quiet(Bob)\nTEXT:\tAll white things are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tNice things are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf something is nice and green then it is rough.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Rough(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is green and nice then it is furry.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Furry(x))\nTEXT:\tIf Gary is white and Gary is nice then Gary is rough.\nFOL:\t(White(Gary) & Nice(Gary)) -> Rough(Gary)\nTEXT:\tAll white, green things are nice.\nFOL:\tall x. ((White(x) & Green(x)) -> Nice(x))\nTEXT:\tGreen, furry things are red.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Red(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll red things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is red.\nFOL:\tCold(Erin) -> Red(Erin)\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll cold, white things are rough.\nFOL:\tall x. (Cold(x) & White(x) -> Rough(x))\nTEXT:\tAll white, round things are nice.\nFOL:\tall x. (White(x) & Round(x) -> Nice(x))\nTEXT:\tKind, cold things are nice.\nFOL:\tall x. (Kind(x) & Cold(x) -> Nice(x))\nTEXT:\tIf something is nice and rough then it is round.\nFOL:\tall x. (Nice(x) & Rough(x) -> Round(x))\nTEXT:\tAll rough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll cold, kind things are red.\nFOL:\tall x. (Cold(x) & Kind(x) -> Red(x))\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll red things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is red.\nFOL:\tCold(Erin) -> Red(Erin)\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll cold, white things are rough.\nFOL:\tall x. (Cold(x) & White(x) -> Rough(x))\nTEXT:\tAll white, round things are nice.\nFOL:\tall x. (White(x) & Round(x) -> Nice(x))\nTEXT:\tKind, cold things are nice.\nFOL:\tall x. (Kind(x) & Cold(x) -> Nice(x))\nTEXT:\tIf something is nice and rough then it is round.\nFOL:\tall x. (Nice(x) & Rough(x) -> Round(x))\nTEXT:\tAll rough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll cold, kind things are red.\nFOL:\tall x. (Cold(x) & Kind(x) -> Red(x))\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll red things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is red.\nFOL:\tCold(Erin) -> Red(Erin)\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll cold, white things are rough.\nFOL:\tall x. (Cold(x) & White(x) -> Rough(x))\nTEXT:\tAll white, round things are nice.\nFOL:\tall x. (White(x) & Round(x) -> Nice(x))\nTEXT:\tKind, cold things are nice.\nFOL:\tall x. (Kind(x) & Cold(x) -> Nice(x))\nTEXT:\tIf something is nice and rough then it is round.\nFOL:\tall x. (Nice(x) & Rough(x) -> Round(x))\nTEXT:\tAll rough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll cold, kind things are red.\nFOL:\tall x. (Cold(x) & Kind(x) -> Red(x))\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll red things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is red.\nFOL:\tCold(Erin) -> Red(Erin)\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll cold, white things are rough.\nFOL:\tall x. (Cold(x) & White(x) -> Rough(x))\nTEXT:\tAll white, round things are nice.\nFOL:\tall x. (White(x) & Round(x) -> Nice(x))\nTEXT:\tKind, cold things are nice.\nFOL:\tall x. (Kind(x) & Cold(x) -> Nice(x))\nTEXT:\tIf something is nice and rough then it is round.\nFOL:\tall x. (Nice(x) & Rough(x) -> Round(x))\nTEXT:\tAll rough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll cold, kind things are red.\nFOL:\tall x. (Cold(x) & Kind(x) -> Red(x))\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is not red.\nFOL:\t-Red(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tAll red things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is red.\nFOL:\tCold(Erin) -> Red(Erin)\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll cold, white things are rough.\nFOL:\tall x. (Cold(x) & White(x) -> Rough(x))\nTEXT:\tAll white, round things are nice.\nFOL:\tall x. (White(x) & Round(x) -> Nice(x))\nTEXT:\tKind, cold things are nice.\nFOL:\tall x. (Kind(x) & Cold(x) -> Nice(x))\nTEXT:\tIf something is nice and rough then it is round.\nFOL:\tall x. (Nice(x) & Rough(x) -> Round(x))\nTEXT:\tAll rough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll cold, kind things are red.\nFOL:\tall x. (Cold(x) & Kind(x) -> Red(x))\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog visits the squirrel.\nFOL:\tVisits(Dog, Squirrel)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf someone eats the tiger and the tiger is big then they are green.\nFOL:\tall x. ((Eats(x, Tiger) & Big(Tiger)) -> Green(x))\nTEXT:\tIf someone is green then they like the squirrel.\nFOL:\tall x. (Green(x) -> Likes(x, Squirrel))\nTEXT:\tIf the dog is green then the dog likes the mouse.\nFOL:\tGreen(Dog) -> Likes(Dog, Mouse)\nTEXT:\tIf someone visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone visits the tiger then the tiger visits the dog.\nFOL:\tall x. (Visits(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is blue and they eat the squirrel then the squirrel is green.\nFOL:\tall x. ((Blue(x) & Eats(x, Squirrel)) -> Green(Squirrel))\nTEXT:\tIf someone is blue then they eat the squirrel.\nFOL:\tall x. (Blue(x) -> Eats(x, Squirrel))\nTEXT:\tIf someone likes the dog and they are green then they are blue.\nFOL:\tall x. ((Likes(x, Dog) & Green(x)) -> Blue(x))\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog visits the squirrel.\nFOL:\tVisits(Dog, Squirrel)\nTEXT:\tThe mouse is green.\nFOL:\tIsGreen(Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tIsBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tIsRound(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf someone eats the tiger and the tiger is big then they are green.\nFOL:\tall x. ((Eats(x, Tiger) & IsBig(Tiger)) -> IsGreen(x))\nTEXT:\tIf someone is green then they like the squirrel.\nFOL:\tall x. (IsGreen(x) -> Likes(x, Squirrel))\nTEXT:\tIf the dog is green then the dog likes the mouse.\nFOL:\tIsGreen(Dog) -> Likes(Dog, Mouse)\nTEXT:\tIf someone visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> IsBlue(Tiger))\nTEXT:\tIf someone visits the tiger then the tiger visits the dog.\nFOL:\tall x. (Visits(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is blue and they eat the squirrel then the squirrel is green.\nFOL:\tall x. ((IsBlue(x) & Eats(x, Squirrel)) -> IsGreen(Squirrel))\nTEXT:\tIf someone is blue then they eat the squirrel.\nFOL:\tall x. (IsBlue(x) -> Eats(x, Squirrel))\nTEXT:\tIf someone likes the dog and they are green then they are blue.\nFOL:\tall x. ((Likes(x, Dog) & IsGreen(x)) -> IsBlue(x))\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog visits the squirrel.\nFOL:\tVisits(Dog, Squirrel)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf someone eats the tiger and the tiger is big then they are green.\nFOL:\tall x. (Eats(x, Tiger) & Big(Tiger) -> Green(x))\nTEXT:\tIf someone is green then they like the squirrel.\nFOL:\tall x. (Green(x) -> Likes(x, Squirrel))\nTEXT:\tIf the dog is green then the dog likes the mouse.\nFOL:\t(Green(Dog) -> Likes(Dog, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone visits the tiger then the tiger visits the dog.\nFOL:\tall x. (Visits(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is blue and they eat the squirrel then the squirrel is green.\nFOL:\tall x. (Blue(x) & Eats(x, Squirrel) -> Green(Squirrel))\nTEXT:\tIf someone is blue then they eat the squirrel.\nFOL:\tall x. (Blue(x) -> Eats(x, Squirrel))\nTEXT:\tIf someone likes the dog and they are green then they are blue.\nFOL:\tall x. (Likes(x, Dog) & Green(x) -> Blue(x))\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog visits the squirrel.\nFOL:\tVisits(Dog, Squirrel)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf someone eats the tiger and the tiger is big then they are green.\nFOL:\tall x. (Eats(x, Tiger) & Big(Tiger) -> Green(x))\nTEXT:\tIf someone is green then they like the squirrel.\nFOL:\tall x. (Green(x) -> Likes(x, Squirrel))\nTEXT:\tIf the dog is green then the dog likes the mouse.\nFOL:\tGreen(Dog) -> Likes(Dog, Mouse)\nTEXT:\tIf someone visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone visits the tiger then the tiger visits the dog.\nFOL:\tall x. (Visits(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is blue and they eat the squirrel then the squirrel is green.\nFOL:\tall x. (Blue(x) & Eats(x, Squirrel) -> Green(Squirrel))\nTEXT:\tIf someone is blue then they eat the squirrel.\nFOL:\tall x. (Blue(x) -> Eats(x, Squirrel))\nTEXT:\tIf someone likes the dog and they are green then they are blue.\nFOL:\tall x. (Likes(x, Dog) & Green(x) -> Blue(x))\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog visits the squirrel.\nFOL:\tVisits(Dog, Squirrel)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse visits the tiger.\nFOL:\tVisits(Mouse, Tiger)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf someone eats the tiger and the tiger is big then they are green.\nFOL:\tall x. ((Eats(x, Tiger) & Big(Tiger)) -> Green(x))\nTEXT:\tIf someone is green then they like the squirrel.\nFOL:\tall x. (Green(x) -> Likes(x, Squirrel))\nTEXT:\tIf the dog is green then the dog likes the mouse.\nFOL:\t(Green(Dog) -> Likes(Dog, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf someone visits the tiger then the tiger visits the dog.\nFOL:\tall x. (Visits(x, Tiger) -> Visits(Tiger, Dog))\nTEXT:\tIf someone is blue and they eat the squirrel then the squirrel is green.\nFOL:\tall x. ((Blue(x) & Eats(x, Squirrel)) -> Green(Squirrel))\nTEXT:\tIf someone is blue then they eat the squirrel.\nFOL:\tall x. (Blue(x) -> Eats(x, Squirrel))\nTEXT:\tIf someone likes the dog and they are green then they are blue.\nFOL:\tall x. ((Likes(x, Dog) & Green(x)) -> Blue(x))\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tAll green people are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tAll kind, round people are red.\nFOL:\tall x. (Kind(x) & Round(x) -> Red(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll quiet, red people are nice.\nFOL:\tall x. (Quiet(x) & Red(x) -> Nice(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is green and kind then they are blue.\nFOL:\tall x. (Green(x) & Kind(x) -> Blue(x))\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tNice, blue people are red.\nFOL:\tall x. (Nice(x) & Blue(x) -> Red(x))\nTEXT:\tAll red, quiet people are kind.\nFOL:\tall x. (Red(x) & Quiet(x) -> Kind(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tAll green people are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tAll kind, round people are red.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Red(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll quiet, red people are nice.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Nice(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is green and kind then they are blue.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Blue(x))\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tNice, blue people are red.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Red(x))\nTEXT:\tAll red, quiet people are kind.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Kind(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tAll green people are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tAll kind, round people are red.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Red(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll quiet, red people are nice.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Nice(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is green and kind then they are blue.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Blue(x))\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tNice, blue people are red.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Red(x))\nTEXT:\tAll red, quiet people are kind.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Kind(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tAll green people are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tAll kind, round people are red.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Red(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll quiet, red people are nice.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Nice(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is green and kind then they are blue.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Blue(x))\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tNice, blue people are red.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Red(x))\nTEXT:\tAll red, quiet people are kind.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Kind(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tTrue\n", "TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tAll green people are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tAll kind, round people are red.\nFOL:\tall x. (Kind(x) & Round(x) -> Red(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll quiet, red people are nice.\nFOL:\tall x. (Quiet(x) & Red(x) -> Nice(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf someone is green and kind then they are blue.\nFOL:\tall x. (Green(x) & Kind(x) -> Blue(x))\nTEXT:\tIf someone is kind then they are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tNice, blue people are red.\nFOL:\tall x. (Nice(x) & Blue(x) -> Red(x))\nTEXT:\tAll red, quiet people are kind.\nFOL:\tall x. (Red(x) & Quiet(x) -> Kind(x))\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tIf Gary is blue then Gary is smart.\nFOL:\tBlue(Gary) -> Smart(Gary)\nTEXT:\tIf something is blue and smart then it is kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Gary is big and Gary is nice then Gary is kind.\nFOL:\t(Big(Gary) & Nice(Gary)) -> Kind(Gary)\nTEXT:\tIf Gary is nice then Gary is big.\nFOL:\tNice(Gary) -> Big(Gary)\nTEXT:\tIf something is quiet and kind then it is nice.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tAll green things are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf something is smart then it is green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tIf Gary is blue then Gary is smart.\nFOL:\tBlue(Gary) -> Smart(Gary)\nTEXT:\tIf something is blue and smart then it is kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Gary is big and Gary is nice then Gary is kind.\nFOL:\t(Big(Gary) & Nice(Gary)) -> Kind(Gary)\nTEXT:\tIf Gary is nice then Gary is big.\nFOL:\tNice(Gary) -> Big(Gary)\nTEXT:\tIf something is quiet and kind then it is nice.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tAll green things are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf something is smart then it is green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tIf Gary is blue then Gary is smart.\nFOL:\tBlue(Gary) -> Smart(Gary)\nTEXT:\tIf something is blue and smart then it is kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Gary is big and Gary is nice then Gary is kind.\nFOL:\t(Big(Gary) & Nice(Gary)) -> Kind(Gary)\nTEXT:\tIf Gary is nice then Gary is big.\nFOL:\tNice(Gary) -> Big(Gary)\nTEXT:\tIf something is quiet and kind then it is nice.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tAll green things are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf something is smart then it is green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tIf Gary is blue then Gary is smart.\nFOL:\tBlue(Gary) -> Smart(Gary)\nTEXT:\tIf something is blue and smart then it is kind.\nFOL:\tall x. (Blue(x) & Smart(x) -> Kind(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Gary is big and Gary is nice then Gary is kind.\nFOL:\t(Big(Gary) & Nice(Gary)) -> Kind(Gary)\nTEXT:\tIf Gary is nice then Gary is big.\nFOL:\tNice(Gary) -> Big(Gary)\nTEXT:\tIf something is quiet and kind then it is nice.\nFOL:\tall x. (Quiet(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tAll green things are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf something is smart then it is green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tIf Gary is blue then Gary is smart.\nFOL:\tBlue(Gary) -> Smart(Gary)\nTEXT:\tIf something is blue and smart then it is kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf Gary is big and Gary is nice then Gary is kind.\nFOL:\t(Big(Gary) & Nice(Gary)) -> Kind(Gary)\nTEXT:\tIf Gary is nice then Gary is big.\nFOL:\tNice(Gary) -> Big(Gary)\nTEXT:\tIf something is quiet and kind then it is nice.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind then it is blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tAll green things are kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf something is smart then it is green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the rabbit.\nFOL:\tLikes(Squirrel, Rabbit)\nTEXT:\tThe squirrel does not need the lion.\nFOL:\t-Needs(Squirrel, Lion)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf something is red then it needs the squirrel.\nFOL:\tall x. (Red(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and the rabbit is round then it is red.\nFOL:\tall x. (Sees(x, Rabbit) & Round(Rabbit) -> Red(x))\nTEXT:\tIf something needs the squirrel then it is round.\nFOL:\tall x. (Needs(x, Squirrel) -> Round(x))\nTEXT:\tIf something needs the squirrel and it is not round then the squirrel likes the lion.\nFOL:\tall x. (Needs(x, Squirrel) & -Round(x) -> Likes(Squirrel, Lion))\nTEXT:\tIf something likes the lion then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion is cold then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) & Cold(Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion likes the squirrel then the squirrel sees the tiger.\nFOL:\tall x. (Likes(x, Lion) & Likes(Lion, Squirrel) -> Sees(Squirrel, Tiger))\nTEXT:\tIf something is cold and it does not see the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & -Sees(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue", "TEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the rabbit.\nFOL:\tLikes(Squirrel, Rabbit)\nTEXT:\tThe squirrel does not need the lion.\nFOL:\t-Needs(Squirrel, Lion)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf something is red then it needs the squirrel.\nFOL:\tall x. (Red(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and the rabbit is round then it is red.\nFOL:\tall x. (Sees(x, Rabbit) & Round(Rabbit) -> Red(x))\nTEXT:\tIf something needs the squirrel then it is round.\nFOL:\tall x. (Needs(x, Squirrel) -> Round(x))\nTEXT:\tIf something needs the squirrel and it is not round then the squirrel likes the lion.\nFOL:\tall x. (Needs(x, Squirrel) & -Round(x) -> Likes(Squirrel, Lion))\nTEXT:\tIf something likes the lion then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion is cold then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) & Cold(Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion likes the squirrel then the squirrel sees the tiger.\nFOL:\tall x. (Likes(x, Lion) & Likes(Lion, Squirrel) -> Sees(Squirrel, Tiger))\nTEXT:\tIf something is cold and it does not see the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & -Sees(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the rabbit.\nFOL:\tLikes(Squirrel, Rabbit)\nTEXT:\tThe squirrel does not need the lion.\nFOL:\t-Needs(Squirrel, Lion)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf something is red then it needs the squirrel.\nFOL:\tall x. (Red(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and the rabbit is round then it is red.\nFOL:\tall x. (Sees(x, Rabbit) & Round(Rabbit) -> Red(x))\nTEXT:\tIf something needs the squirrel then it is round.\nFOL:\tall x. (Needs(x, Squirrel) -> Round(x))\nTEXT:\tIf something needs the squirrel and it is not round then the squirrel likes the lion.\nFOL:\tall x. (Needs(x, Squirrel) & -Round(x) -> Likes(Squirrel, Lion))\nTEXT:\tIf something likes the lion then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion is cold then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) & Cold(Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion likes the squirrel then the squirrel sees the tiger.\nFOL:\tall x. (Likes(x, Lion) & Likes(Lion, Squirrel) -> Sees(Squirrel, Tiger))\nTEXT:\tIf something is cold and it does not see the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & -Sees(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the rabbit.\nFOL:\tLikes(Squirrel, Rabbit)\nTEXT:\tThe squirrel does not need the lion.\nFOL:\t-Needs(Squirrel, Lion)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf something is red then it needs the squirrel.\nFOL:\tall x. (Red(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and the rabbit is round then it is red.\nFOL:\tall x. (Sees(x, Rabbit) & Round(Rabbit) -> Red(x))\nTEXT:\tIf something needs the squirrel then it is round.\nFOL:\tall x. (Needs(x, Squirrel) -> Round(x))\nTEXT:\tIf something needs the squirrel and it is not round then the squirrel likes the lion.\nFOL:\tall x. (Needs(x, Squirrel) & -Round(x) -> Likes(Squirrel, Lion))\nTEXT:\tIf something likes the lion then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion is cold then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) & Cold(Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion likes the squirrel then the squirrel sees the tiger.\nFOL:\tall x. (Likes(x, Lion) & Likes(Lion, Squirrel) -> Sees(Squirrel, Tiger))\nTEXT:\tIf something is cold and it does not see the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & -Sees(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel likes the rabbit.\nFOL:\tLikes(Squirrel, Rabbit)\nTEXT:\tThe squirrel does not need the lion.\nFOL:\t-Needs(Squirrel, Lion)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the rabbit.\nFOL:\tLikes(Tiger, Rabbit)\nTEXT:\tIf something is red then it needs the squirrel.\nFOL:\tall x. (Red(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and the rabbit is round then it is red.\nFOL:\tall x. (Sees(x, Rabbit) & Round(Rabbit) -> Red(x))\nTEXT:\tIf something needs the squirrel then it is round.\nFOL:\tall x. (Needs(x, Squirrel) -> Round(x))\nTEXT:\tIf something needs the squirrel and it is not round then the squirrel likes the lion.\nFOL:\tall x. (Needs(x, Squirrel) & -Round(x) -> Likes(Squirrel, Lion))\nTEXT:\tIf something likes the lion then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion is cold then the lion likes the squirrel.\nFOL:\tall x. (Likes(x, Lion) & Cold(Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf something likes the lion and the lion likes the squirrel then the squirrel sees the tiger.\nFOL:\tall x. (Likes(x, Lion) & Likes(Lion, Squirrel) -> Sees(Squirrel, Tiger))\nTEXT:\tIf something is cold and it does not see the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & -Sees(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is rough then it eats the cat.\nFOL:\tall x. (Rough(x) -> Eats(x, Cat))\nTEXT:\tIf something eats the mouse and the mouse needs the cat then it eats the bald eagle.\nFOL:\tall x. ((Eats(x, Mouse) & Needs(Mouse, Cat)) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the cat then it needs the cat.\nFOL:\tall x. (Eats(x, Cat) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle needs the mouse and the bald eagle eats the cat then the bald eagle chases the tiger.\nFOL:\t(Needs(BaldEagle, Mouse) & Eats(BaldEagle, Cat)) -> Chases(BaldEagle, Tiger)\nTEXT:\tIf something is rough then it chases the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something eats the bald eagle then it is rough.\nFOL:\tall x. (Eats(x, BaldEagle) -> Rough(x))\nTEXT:\tIf something eats the tiger then the tiger eats the bald eagle.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(Tiger, BaldEagle))\nTEXT:\tIf something needs the cat then the cat chases the tiger.\nFOL:\tall x. (Needs(x, Cat) -> Chases(Cat, Tiger))\nTEXT:\tIf something eats the cat then the cat is young.\nFOL:\tall x. (Eats(x, Cat) -> Young(Cat))\nTEXT:\tThe cat is not rough.\nFOL:\t-Rough(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is rough then it eats the cat.\nFOL:\tall x. (Rough(x) -> Eats(x, Cat))\nTEXT:\tIf something eats the mouse and the mouse needs the cat then it eats the bald eagle.\nFOL:\tall x. (Eats(x, Mouse) & Needs(Mouse, Cat) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the cat then it needs the cat.\nFOL:\tall x. (Eats(x, Cat) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle needs the mouse and the bald eagle eats the cat then the bald eagle chases the tiger.\nFOL:\t(Needs(BaldEagle, Mouse) & Eats(BaldEagle, Cat)) -> Chases(BaldEagle, Tiger)\nTEXT:\tIf something is rough then it chases the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something eats the bald eagle then it is rough.\nFOL:\tall x. (Eats(x, BaldEagle) -> Rough(x))\nTEXT:\tIf something eats the tiger then the tiger eats the bald eagle.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(Tiger, BaldEagle))\nTEXT:\tIf something needs the cat then the cat chases the tiger.\nFOL:\tall x. (Needs(x, Cat) -> Chases(Cat, Tiger))\nTEXT:\tIf something eats the cat then the cat is young.\nFOL:\tall x. (Eats(x, Cat) -> Young(Cat))\nTEXT:\tThe cat is not rough.\nFOL:\t-Rough(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is rough then it eats the cat.\nFOL:\tall x. (Rough(x) -> Eats(x, Cat))\nTEXT:\tIf something eats the mouse and the mouse needs the cat then it eats the bald eagle.\nFOL:\tall x. ((Eats(x, Mouse) & Needs(Mouse, Cat)) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the cat then it needs the cat.\nFOL:\tall x. (Eats(x, Cat) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle needs the mouse and the bald eagle eats the cat then the bald eagle chases the tiger.\nFOL:\t((Needs(BaldEagle, Mouse) & Eats(BaldEagle, Cat)) -> Chases(BaldEagle, Tiger))\nTEXT:\tIf something is rough then it chases the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something eats the bald eagle then it is rough.\nFOL:\tall x. (Eats(x, BaldEagle) -> Rough(x))\nTEXT:\tIf something eats the tiger then the tiger eats the bald eagle.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(Tiger, BaldEagle))\nTEXT:\tIf something needs the cat then the cat chases the tiger.\nFOL:\tall x. (Needs(x, Cat) -> Chases(Cat, Tiger))\nTEXT:\tIf something eats the cat then the cat is young.\nFOL:\tall x. (Eats(x, Cat) -> Young(Cat))\nTEXT:\tThe cat is not rough.\nFOL:\t-Rough(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is rough then it eats the cat.\nFOL:\tall x. (Rough(x) -> Eats(x, Cat))\nTEXT:\tIf something eats the mouse and the mouse needs the cat then it eats the bald eagle.\nFOL:\tall x. (Eats(x, Mouse) & Needs(Mouse, Cat) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the cat then it needs the cat.\nFOL:\tall x. (Eats(x, Cat) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle needs the mouse and the bald eagle eats the cat then the bald eagle chases the tiger.\nFOL:\t(Needs(BaldEagle, Mouse) & Eats(BaldEagle, Cat)) -> Chases(BaldEagle, Tiger)\nTEXT:\tIf something is rough then it chases the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something eats the bald eagle then it is rough.\nFOL:\tall x. (Eats(x, BaldEagle) -> Rough(x))\nTEXT:\tIf something eats the tiger then the tiger eats the bald eagle.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(Tiger, BaldEagle))\nTEXT:\tIf something needs the cat then the cat chases the tiger.\nFOL:\tall x. (Needs(x, Cat) -> Chases(Cat, Tiger))\nTEXT:\tIf something eats the cat then the cat is young.\nFOL:\tall x. (Eats(x, Cat) -> Young(Cat))\nTEXT:\tThe cat is not rough.\nFOL:\t-Rough(Cat)\nANSWER:\tTrue", "TEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tIf something is rough then it eats the cat.\nFOL:\tall x. (Rough(x) -> Eats(x, Cat))\nTEXT:\tIf something eats the mouse and the mouse needs the cat then it eats the bald eagle.\nFOL:\tall x. (Eats(x, Mouse) & Needs(Mouse, Cat) -> Eats(x, BaldEagle))\nTEXT:\tIf something eats the cat then it needs the cat.\nFOL:\tall x. (Eats(x, Cat) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle needs the mouse and the bald eagle eats the cat then the bald eagle chases the tiger.\nFOL:\t(Needs(BaldEagle, Mouse) & Eats(BaldEagle, Cat) -> Chases(BaldEagle, Tiger))\nTEXT:\tIf something is rough then it chases the bald eagle.\nFOL:\tall x. (Rough(x) -> Chases(x, BaldEagle))\nTEXT:\tIf something eats the bald eagle then it is rough.\nFOL:\tall x. (Eats(x, BaldEagle) -> Rough(x))\nTEXT:\tIf something eats the tiger then the tiger eats the bald eagle.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(Tiger, BaldEagle))\nTEXT:\tIf something needs the cat then the cat chases the tiger.\nFOL:\tall x. (Needs(x, Cat) -> Chases(Cat, Tiger))\nTEXT:\tIf something eats the cat then the cat is young.\nFOL:\tall x. (Eats(x, Cat) -> Young(Cat))\nTEXT:\tThe cat is not rough.\nFOL:\t-Rough(Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tAll white people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll blue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tKind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tIf Erin is round and Erin is blue then Erin is furry.\nFOL:\t(Round(Erin) & Blue(Erin)) -> Furry(Erin)\nTEXT:\tIf Gary is white and Gary is furry then Gary is nice.\nFOL:\t(White(Gary) & Furry(Gary)) -> Nice(Gary)\nTEXT:\tAll nice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tRed people are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tWhite, round people are blue.\nFOL:\tall x. (White(x) & Round(x) -> Blue(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tAll white people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll blue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tKind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tIf Erin is round and Erin is blue then Erin is furry.\nFOL:\t(Round(Erin) & Blue(Erin)) -> Furry(Erin)\nTEXT:\tIf Gary is white and Gary is furry then Gary is nice.\nFOL:\t(White(Gary) & Furry(Gary)) -> Nice(Gary)\nTEXT:\tAll nice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tRed people are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tWhite, round people are blue.\nFOL:\tall x. ((White(x) & Round(x)) -> Blue(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tAll white people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll blue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tKind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tIf Erin is round and Erin is blue then Erin is furry.\nFOL:\t(Round(Erin) & Blue(Erin)) -> Furry(Erin)\nTEXT:\tIf Gary is white and Gary is furry then Gary is nice.\nFOL:\t(White(Gary) & Furry(Gary)) -> Nice(Gary)\nTEXT:\tAll nice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tRed people are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tWhite, round people are blue.\nFOL:\tall x. (White(x) & Round(x) -> Blue(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tAll white people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll blue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tKind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tIf Erin is round and Erin is blue then Erin is furry.\nFOL:\tRound(Erin) & Blue(Erin) -> Furry(Erin)\nTEXT:\tIf Gary is white and Gary is furry then Gary is nice.\nFOL:\tWhite(Gary) & Furry(Gary) -> Nice(Gary)\nTEXT:\tAll nice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tRed people are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tWhite, round people are blue.\nFOL:\tall x. (White(x) & Round(x) -> Blue(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tAll white people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll blue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tKind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tIf Erin is round and Erin is blue then Erin is furry.\nFOL:\t(Round(Erin) & Blue(Erin)) -> Furry(Erin)\nTEXT:\tIf Gary is white and Gary is furry then Gary is nice.\nFOL:\t(White(Gary) & Furry(Gary)) -> Nice(Gary)\nTEXT:\tAll nice people are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tRed people are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tWhite, round people are blue.\nFOL:\tall x. (White(x) & Round(x) -> Blue(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is not quiet.\nFOL:\t-Quiet(Harry)\nTEXT:\tIf Gary is quiet and Gary is red then Gary is cold.\nFOL:\t(Quiet(Gary) & Red(Gary)) -> Cold(Gary)\nTEXT:\tIf something is quiet and not white then it is nice.\nFOL:\tall x. ((Quiet(x) & -White(x)) -> Nice(x))\nTEXT:\tIf something is green and kind then it is nice.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind and not red then it is green.\nFOL:\tall x. ((Kind(x) & -Red(x)) -> Green(x))\nTEXT:\tRed, kind things are green.\nFOL:\tall x. ((Red(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Charlie is nice then Charlie is cold.\nFOL:\tNice(Charlie) -> Cold(Charlie)\nTEXT:\tCold, quiet things are kind.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> Kind(x))\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is not quiet.\nFOL:\t-Quiet(Harry)\nTEXT:\tIf Gary is quiet and Gary is red then Gary is cold.\nFOL:\t(Quiet(Gary) & Red(Gary)) -> Cold(Gary)\nTEXT:\tIf something is quiet and not white then it is nice.\nFOL:\tall x. ((Quiet(x) & -White(x)) -> Nice(x))\nTEXT:\tIf something is green and kind then it is nice.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind and not red then it is green.\nFOL:\tall x. ((Kind(x) & -Red(x)) -> Green(x))\nTEXT:\tRed, kind things are green.\nFOL:\tall x. ((Red(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Charlie is nice then Charlie is cold.\nFOL:\tNice(Charlie) -> Cold(Charlie)\nTEXT:\tCold, quiet things are kind.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> Kind(x))\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is not quiet.\nFOL:\t-Quiet(Harry)\nTEXT:\tIf Gary is quiet and Gary is red then Gary is cold.\nFOL:\t(Quiet(Gary) & Red(Gary)) -> Cold(Gary)\nTEXT:\tIf something is quiet and not white then it is nice.\nFOL:\tall x. ((Quiet(x) & -White(x)) -> Nice(x))\nTEXT:\tIf something is green and kind then it is nice.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind and not red then it is green.\nFOL:\tall x. ((Kind(x) & -Red(x)) -> Green(x))\nTEXT:\tRed, kind things are green.\nFOL:\tall x. ((Red(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Charlie is nice then Charlie is cold.\nFOL:\tNice(Charlie) -> Cold(Charlie)\nTEXT:\tCold, quiet things are kind.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> Kind(x))\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is not quiet.\nFOL:\t- Quiet(Harry)\nTEXT:\tIf Gary is quiet and Gary is red then Gary is cold.\nFOL:\t(Quiet(Gary) & Red(Gary)) -> Cold(Gary)\nTEXT:\tIf something is quiet and not white then it is nice.\nFOL:\tall x. ((Quiet(x) & -White(x)) -> Nice(x))\nTEXT:\tIf something is green and kind then it is nice.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind and not red then it is green.\nFOL:\tall x. ((Kind(x) & -Red(x)) -> Green(x))\nTEXT:\tRed, kind things are green.\nFOL:\tall x. ((Red(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Charlie is nice then Charlie is cold.\nFOL:\tNice(Charlie) -> Cold(Charlie)\nTEXT:\tCold, quiet things are kind.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> Kind(x))\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is not quiet.\nFOL:\t- Quiet(Harry)\nTEXT:\tIf Gary is quiet and Gary is red then Gary is cold.\nFOL:\t(Quiet(Gary) & Red(Gary)) -> Cold(Gary)\nTEXT:\tIf something is quiet and not white then it is nice.\nFOL:\tall x. ((Quiet(x) & -White(x)) -> Nice(x))\nTEXT:\tIf something is green and kind then it is nice.\nFOL:\tall x. ((Green(x) & Kind(x)) -> Nice(x))\nTEXT:\tIf something is kind and not red then it is green.\nFOL:\tall x. ((Kind(x) & -Red(x)) -> Green(x))\nTEXT:\tRed, kind things are green.\nFOL:\tall x. ((Red(x) & Kind(x)) -> Green(x))\nTEXT:\tIf something is red then it is quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf Charlie is nice then Charlie is cold.\nFOL:\t(Nice(Charlie) -> Cold(Charlie))\nTEXT:\tCold, quiet things are kind.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> Kind(x))\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit needs the bald eagle.\nFOL:\tNeeds(Rabbit, BaldEagle)\nTEXT:\tIf something is round and it needs the rabbit then the rabbit is big.\nFOL:\tall x. (Round(x) & Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the lion then the lion is green.\nFOL:\tall x. (Visits(x, Lion) -> Green(Lion))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle needs the lion then it needs the lion.\nFOL:\tall x. (Needs(x, BaldEagle) & Needs(BaldEagle, Lion) -> Needs(x, Lion))\nTEXT:\tIf something needs the mouse and the mouse needs the rabbit then the rabbit is blue.\nFOL:\tall x. (Needs(x, Mouse) & Needs(Mouse, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf something visits the bald eagle then it needs the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, BaldEagle))\nTEXT:\tThe bald eagle eats the bald eagle.\nFOL:\tEats(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit needs the bald eagle.\nFOL:\tNeeds(Rabbit, BaldEagle)\nTEXT:\tIf something is round and it needs the rabbit then the rabbit is big.\nFOL:\tall x. (Round(x) & Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the lion then the lion is green.\nFOL:\tall x. (Visits(x, Lion) -> Green(Lion))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle needs the lion then it needs the lion.\nFOL:\tall x. (Needs(x, BaldEagle) & Needs(BaldEagle, Lion) -> Needs(x, Lion))\nTEXT:\tIf something needs the mouse and the mouse needs the rabbit then the rabbit is blue.\nFOL:\tall x. (Needs(x, Mouse) & Needs(Mouse, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf something visits the bald eagle then it needs the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, BaldEagle))\nTEXT:\tThe bald eagle eats the bald eagle.\nFOL:\tEats(BaldEagle, BaldEagle)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit needs the bald eagle.\nFOL:\tNeeds(Rabbit, BaldEagle)\nTEXT:\tIf something is round and it needs the rabbit then the rabbit is big.\nFOL:\tall x. (Round(x) & Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the lion then the lion is green.\nFOL:\tall x. (Visits(x, Lion) -> Green(Lion))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle needs the lion then it needs the lion.\nFOL:\tall x. (Needs(x, BaldEagle) & Needs(BaldEagle, Lion) -> Needs(x, Lion))\nTEXT:\tIf something needs the mouse and the mouse needs the rabbit then the rabbit is blue.\nFOL:\tall x. (Needs(x, Mouse) & Needs(Mouse, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf something visits the bald eagle then it needs the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, BaldEagle))\nTEXT:\tThe bald eagle eats the bald eagle.\nFOL:\tEats(BaldEagle, BaldEagle)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit needs the bald eagle.\nFOL:\tNeeds(Rabbit, BaldEagle)\nTEXT:\tIf something is round and it needs the rabbit then the rabbit is big.\nFOL:\tall x. ((Round(x) & Needs(x, Rabbit)) -> Big(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the lion then the lion is green.\nFOL:\tall x. (Visits(x, Lion) -> Green(Lion))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle needs the lion then it needs the lion.\nFOL:\tall x. ((Needs(x, BaldEagle) & Needs(BaldEagle, Lion)) -> Needs(x, Lion))\nTEXT:\tIf something needs the mouse and the mouse needs the rabbit then the rabbit is blue.\nFOL:\tall x. ((Needs(x, Mouse) & Needs(Mouse, Rabbit)) -> Blue(Rabbit))\nTEXT:\tIf something visits the bald eagle then it needs the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, BaldEagle))\nTEXT:\tThe bald eagle eats the bald eagle.\nFOL:\tEats(BaldEagle, BaldEagle)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit needs the bald eagle.\nFOL:\tNeeds(Rabbit, BaldEagle)\nTEXT:\tIf something is round and it needs the rabbit then the rabbit is big.\nFOL:\tall x. (Round(x) & Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf something is big then it needs the rabbit.\nFOL:\tall x. (Big(x) -> Needs(x, Rabbit))\nTEXT:\tIf something visits the lion then the lion is green.\nFOL:\tall x. (Visits(x, Lion) -> Green(Lion))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle needs the lion then it needs the lion.\nFOL:\tall x. (Needs(x, BaldEagle) & Needs(BaldEagle, Lion) -> Needs(x, Lion))\nTEXT:\tIf something needs the mouse and the mouse needs the rabbit then the rabbit is blue.\nFOL:\tall x. (Needs(x, Mouse) & Needs(Mouse, Rabbit) -> Blue(Rabbit))\nTEXT:\tIf something visits the bald eagle then it needs the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Needs(x, Lion))\nTEXT:\tIf something needs the rabbit then it visits the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, BaldEagle))\nTEXT:\tThe bald eagle eats the bald eagle.\nFOL:\tEats(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tRound, furry people are big.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll rough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRound, kind people are furry.\nFOL:\tall x. ((Round(x) & Kind(x)) -> Furry(x))\nTEXT:\tIf Harry is red then Harry is big.\nFOL:\tRed(Harry) -> Big(Harry)\nTEXT:\tRough, round people are kind.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Kind(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tRound, furry people are big.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll rough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRound, kind people are furry.\nFOL:\tall x. ((Round(x) & Kind(x)) -> Furry(x))\nTEXT:\tIf Harry is red then Harry is big.\nFOL:\tRed(Harry) -> Big(Harry)\nTEXT:\tRough, round people are kind.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Kind(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tRound, furry people are big.\nFOL:\tall x. (Round(x) & Furry(x) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll rough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRound, kind people are furry.\nFOL:\tall x. (Round(x) & Kind(x) -> Furry(x))\nTEXT:\tIf Harry is red then Harry is big.\nFOL:\tRed(Harry) -> Big(Harry)\nTEXT:\tRough, round people are kind.\nFOL:\tall x. (Rough(x) & Round(x) -> Kind(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tRound, furry people are big.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll rough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRound, kind people are furry.\nFOL:\tall x. ((Round(x) & Kind(x)) -> Furry(x))\nTEXT:\tIf Harry is red then Harry is big.\nFOL:\tRed(Harry) -> Big(Harry)\nTEXT:\tRough, round people are kind.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Kind(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tIf Harry is red then Harry is rough.\nFOL:\tRed(Harry) -> Rough(Harry)\nTEXT:\tAll green people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tRound, furry people are big.\nFOL:\tall x. ((Round(x) & Furry(x)) -> Big(x))\nTEXT:\tAll kind people are green.\nFOL:\tall x. (Kind(x) -> Green(x))\nTEXT:\tAll rough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tRound, kind people are furry.\nFOL:\tall x. ((Round(x) & Kind(x)) -> Furry(x))\nTEXT:\tIf Harry is red then Harry is big.\nFOL:\tRed(Harry) -> Big(Harry)\nTEXT:\tRough, round people are kind.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Kind(x))\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not rough.\nFOL:\t-Rough(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf the bear does not need the squirrel then the squirrel needs the bear.\nFOL:\t-Needs(Bear, Squirrel) -> Needs(Squirrel, Bear)\nTEXT:\tIf someone chases the cow then they chase the bear.\nFOL:\tall x. (Chase(x, Cow) -> Chase(x, Bear))\nTEXT:\tIf someone sees the rabbit then they chase the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Chase(x, Cow))\nTEXT:\tIf someone is big and not rough then they see the rabbit.\nFOL:\tall x. (Big(x) & -Rough(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone needs the rabbit then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf someone needs the squirrel then the squirrel chases the cow.\nFOL:\tall x. (Needs(x, Squirrel) -> Chase(Squirrel, Cow))\nTEXT:\tIf someone chases the rabbit and they do not need the rabbit then they are red.\nFOL:\tall x. (Chase(x, Rabbit) & -Needs(x, Rabbit) -> Red(x))\nTEXT:\tIf someone is cold and not nice then they are big.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Big(x))\nTEXT:\tIf the squirrel needs the rabbit and the rabbit chases the bear then the squirrel is cold.\nFOL:\tNeeds(Squirrel, Rabbit) & Chase(Rabbit, Bear) -> Cold(Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChase(Squirrel, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not rough.\nFOL:\t-Rough(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf the bear does not need the squirrel then the squirrel needs the bear.\nFOL:\t-Needs(Bear, Squirrel) -> Needs(Squirrel, Bear)\nTEXT:\tIf someone chases the cow then they chase the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(x, Bear))\nTEXT:\tIf someone sees the rabbit then they chase the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Chases(x, Cow))\nTEXT:\tIf someone is big and not rough then they see the rabbit.\nFOL:\tall x. (Big(x) & -Rough(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone needs the rabbit then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf someone needs the squirrel then the squirrel chases the cow.\nFOL:\tall x. (Needs(x, Squirrel) -> Chases(Squirrel, Cow))\nTEXT:\tIf someone chases the rabbit and they do not need the rabbit then they are red.\nFOL:\tall x. (Chases(x, Rabbit) & -Needs(x, Rabbit) -> Red(x))\nTEXT:\tIf someone is cold and not nice then they are big.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Big(x))\nTEXT:\tIf the squirrel needs the rabbit and the rabbit chases the bear then the squirrel is cold.\nFOL:\t( Needs(Squirrel, Rabbit) & Chases(Rabbit, Bear) ) -> Cold(Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not rough.\nFOL:\t-Rough(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf the bear does not need the squirrel then the squirrel needs the bear.\nFOL:\t-Needs(Bear, Squirrel) -> Needs(Squirrel, Bear)\nTEXT:\tIf someone chases the cow then they chase the bear.\nFOL:\tall x. (Chase(x, Cow) -> Chase(x, Bear))\nTEXT:\tIf someone sees the rabbit then they chase the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Chase(x, Cow))\nTEXT:\tIf someone is big and not rough then they see the rabbit.\nFOL:\tall x. (Big(x) & -Rough(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone needs the rabbit then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf someone needs the squirrel then the squirrel chases the cow.\nFOL:\tall x. (Needs(x, Squirrel) -> Chase(Squirrel, Cow))\nTEXT:\tIf someone chases the rabbit and they do not need the rabbit then they are red.\nFOL:\tall x. (Chase(x, Rabbit) & -Needs(x, Rabbit) -> Red(x))\nTEXT:\tIf someone is cold and not nice then they are big.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Big(x))\nTEXT:\tIf the squirrel needs the rabbit and the rabbit chases the bear then the squirrel is cold.\nFOL:\t( Needs(Squirrel, Rabbit) & Chase(Rabbit, Bear) ) -> Cold(Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChase(Squirrel, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not rough.\nFOL:\t-Rough(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf the bear does not need the squirrel then the squirrel needs the bear.\nFOL:\t-Needs(Bear, Squirrel) -> Needs(Squirrel, Bear)\nTEXT:\tIf someone chases the cow then they chase the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(x, Bear))\nTEXT:\tIf someone sees the rabbit then they chase the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Chases(x, Cow))\nTEXT:\tIf someone is big and not rough then they see the rabbit.\nFOL:\tall x. (Big(x) & -Rough(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone needs the rabbit then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf someone needs the squirrel then the squirrel chases the cow.\nFOL:\tall x. (Needs(x, Squirrel) -> Chases(Squirrel, Cow))\nTEXT:\tIf someone chases the rabbit and they do not need the rabbit then they are red.\nFOL:\tall x. (Chases(x, Rabbit) & -Needs(x, Rabbit) -> Red(x))\nTEXT:\tIf someone is cold and not nice then they are big.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Big(x))\nTEXT:\tIf the squirrel needs the rabbit and the rabbit chases the bear then the squirrel is cold.\nFOL:\t(Needs(Squirrel, Rabbit) & Chases(Rabbit, Bear)) -> Cold(Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not rough.\nFOL:\t-Rough(Rabbit)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe squirrel needs the bear.\nFOL:\tNeeds(Squirrel, Bear)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf the bear does not need the squirrel then the squirrel needs the bear.\nFOL:\t-Needs(Bear, Squirrel) -> Needs(Squirrel, Bear)\nTEXT:\tIf someone chases the cow then they chase the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(x, Bear))\nTEXT:\tIf someone sees the rabbit then they chase the cow.\nFOL:\tall x. (Sees(x, Rabbit) -> Chases(x, Cow))\nTEXT:\tIf someone is big and not rough then they see the rabbit.\nFOL:\tall x. (Big(x) & -Rough(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone needs the rabbit then the rabbit is big.\nFOL:\tall x. (Needs(x, Rabbit) -> Big(Rabbit))\nTEXT:\tIf someone needs the squirrel then the squirrel chases the cow.\nFOL:\tall x. (Needs(x, Squirrel) -> Chases(Squirrel, Cow))\nTEXT:\tIf someone chases the rabbit and they do not need the rabbit then they are red.\nFOL:\tall x. (Chases(x, Rabbit) & -Needs(x, Rabbit) -> Red(x))\nTEXT:\tIf someone is cold and not nice then they are big.\nFOL:\tall x. (Cold(x) & -Nice(x) -> Big(x))\nTEXT:\tIf the squirrel needs the rabbit and the rabbit chases the bear then the squirrel is cold.\nFOL:\tNeeds(Squirrel, Rabbit) & Chases(Rabbit, Bear) -> Cold(Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion does not eat the bald eagle.\nFOL:\t-Eats(Lion, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tIf something likes the mouse then it likes the tiger.\nFOL:\tall x. (Likes(x, Mouse) -> Likes(x, Tiger))\nTEXT:\tIf something is round then it does not like the tiger.\nFOL:\tall x. (Round(x) -> -Likes(x, Tiger))\nTEXT:\tIf something sees the bald eagle then it likes the lion.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Lion))\nTEXT:\tIf something sees the mouse then it is cold.\nFOL:\tall x. (Sees(x, Mouse) -> Cold(x))\nTEXT:\tRough things are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf something eats the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tAll cold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tThe lion does not see the mouse.\nFOL:\t-Sees(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion does not eat the bald eagle.\nFOL:\t-Eats(Lion, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tIf something likes the mouse then it likes the tiger.\nFOL:\tall x. (Likes(x, Mouse) -> Likes(x, Tiger))\nTEXT:\tIf something is round then it does not like the tiger.\nFOL:\tall x. (Round(x) -> -Likes(x, Tiger))\nTEXT:\tIf something sees the bald eagle then it likes the lion.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Lion))\nTEXT:\tIf something sees the mouse then it is cold.\nFOL:\tall x. (Sees(x, Mouse) -> Cold(x))\nTEXT:\tRough things are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf something eats the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tAll cold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tThe lion does not see the mouse.\nFOL:\t-Sees(Lion, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion does not eat the bald eagle.\nFOL:\t-Eats(Lion, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tIf something likes the mouse then it likes the tiger.\nFOL:\tall x. (Likes(x, Mouse) -> Likes(x, Tiger))\nTEXT:\tIf something is round then it does not like the tiger.\nFOL:\tall x. (Round(x) -> -Likes(x, Tiger))\nTEXT:\tIf something sees the bald eagle then it likes the lion.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Lion))\nTEXT:\tIf something sees the mouse then it is cold.\nFOL:\tall x. (Sees(x, Mouse) -> Cold(x))\nTEXT:\tRough things are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf something eats the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tAll cold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tThe lion does not see the mouse.\nFOL:\t-Sees(Lion, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion does not eat the bald eagle.\nFOL:\t-Eats(Lion, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tIf something likes the mouse then it likes the tiger.\nFOL:\tall x. (Likes(x, Mouse) -> Likes(x, Tiger))\nTEXT:\tIf something is round then it does not like the tiger.\nFOL:\tall x. (Round(x) -> -Likes(x, Tiger))\nTEXT:\tIf something sees the bald eagle then it likes the lion.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Lion))\nTEXT:\tIf something sees the mouse then it is cold.\nFOL:\tall x. (Sees(x, Mouse) -> Cold(x))\nTEXT:\tRough things are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf something eats the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tAll cold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tThe lion does not see the mouse.\nFOL:\t-Sees(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the mouse.\nFOL:\tEats(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion does not eat the bald eagle.\nFOL:\t-Eats(Lion, BaldEagle)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe mouse likes the tiger.\nFOL:\tLikes(Mouse, Tiger)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tIf something is kind then it sees the mouse.\nFOL:\tall x. (Kind(x) -> Sees(x, Mouse))\nTEXT:\tIf something likes the mouse then it likes the tiger.\nFOL:\tall x. (Likes(x, Mouse) -> Likes(x, Tiger))\nTEXT:\tIf something is round then it does not like the tiger.\nFOL:\tall x. (Round(x) -> -Likes(x, Tiger))\nTEXT:\tIf something sees the bald eagle then it likes the lion.\nFOL:\tall x. (Sees(x, BaldEagle) -> Likes(x, Lion))\nTEXT:\tIf something sees the mouse then it is cold.\nFOL:\tall x. (Sees(x, Mouse) -> Cold(x))\nTEXT:\tRough things are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf something eats the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tAll cold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tThe lion does not see the mouse.\nFOL:\t-Sees(Lion, Mouse)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear eats the squirrel.\nFOL:\tEats(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear visits the rabbit.\nFOL:\tVisits(Bear, Rabbit)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf something is young then it needs the squirrel.\nFOL:\tall x. (Young(x) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the bear and the bear needs the rabbit then the bear visits the cow.\nFOL:\tall x. (Needs(x, Bear) & Needs(Bear, Rabbit) -> Visits(Bear, Cow))\nTEXT:\tIf the cow is big and the cow needs the rabbit then the cow is rough.\nFOL:\t(Big(Cow) & Needs(Cow, Rabbit) -> Rough(Cow))\nTEXT:\tIf something visits the cow then it is rough.\nFOL:\tall x. (Visits(x, Cow) -> Rough(x))\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something visits the cow and it is rough then it needs the bear.\nFOL:\tall x. (Visits(x, Cow) & Rough(x) -> Needs(x, Bear))\nTEXT:\tIf the squirrel needs the bear and the squirrel eats the cow then the squirrel is cold.\nFOL:\t(Needs(Squirrel, Bear) & Eats(Squirrel, Cow) -> Cold(Squirrel))\nTEXT:\tIf something needs the bear then the bear needs the rabbit.\nFOL:\tall x. (Needs(x, Bear) -> Needs(Bear, Rabbit))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the squirrel.\nFOL:\tEats(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear visits the rabbit.\nFOL:\tVisits(Bear, Rabbit)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf something is young then it needs the squirrel.\nFOL:\tall x. (Young(x) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the bear and the bear needs the rabbit then the bear visits the cow.\nFOL:\tall x. (Needs(x, Bear) & Needs(Bear, Rabbit) -> Visits(Bear, Cow))\nTEXT:\tIf the cow is big and the cow needs the rabbit then the cow is rough.\nFOL:\t(Big(Cow) & Needs(Cow, Rabbit) -> Rough(Cow))\nTEXT:\tIf something visits the cow then it is rough.\nFOL:\tall x. (Visits(x, Cow) -> Rough(x))\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something visits the cow and it is rough then it needs the bear.\nFOL:\tall x. (Visits(x, Cow) & Rough(x) -> Needs(x, Bear))\nTEXT:\tIf the squirrel needs the bear and the squirrel eats the cow then the squirrel is cold.\nFOL:\t(Needs(Squirrel, Bear) & Eats(Squirrel, Cow) -> Cold(Squirrel))\nTEXT:\tIf something needs the bear then the bear needs the rabbit.\nFOL:\tall x. (Needs(x, Bear) -> Needs(Bear, Rabbit))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the squirrel.\nFOL:\tEats(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear visits the rabbit.\nFOL:\tVisits(Bear, Rabbit)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf something is young then it needs the squirrel.\nFOL:\tall x. (Young(x) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the bear and the bear needs the rabbit then the bear visits the cow.\nFOL:\tall x. (Needs(x, Bear) & Needs(Bear, Rabbit) -> Visits(Bear, Cow))\nTEXT:\tIf the cow is big and the cow needs the rabbit then the cow is rough.\nFOL:\t(Big(Cow) & Needs(Cow, Rabbit) -> Rough(Cow))\nTEXT:\tIf something visits the cow then it is rough.\nFOL:\tall x. (Visits(x, Cow) -> Rough(x))\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something visits the cow and it is rough then it needs the bear.\nFOL:\tall x. ((Visits(x, Cow) & Rough(x)) -> Needs(x, Bear))\nTEXT:\tIf the squirrel needs the bear and the squirrel eats the cow then the squirrel is cold.\nFOL:\t((Needs(Squirrel, Bear) & Eats(Squirrel, Cow)) -> Cold(Squirrel))\nTEXT:\tIf something needs the bear then the bear needs the rabbit.\nFOL:\tall x. (Needs(x, Bear) -> Needs(Bear, Rabbit))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the squirrel.\nFOL:\tEats(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear visits the rabbit.\nFOL:\tVisits(Bear, Rabbit)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf something is young then it needs the squirrel.\nFOL:\tall x. (Young(x) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the bear and the bear needs the rabbit then the bear visits the cow.\nFOL:\tall x. (Needs(x, Bear) & Needs(Bear, Rabbit) -> Visits(Bear, Cow))\nTEXT:\tIf the cow is big and the cow needs the rabbit then the cow is rough.\nFOL:\t(Big(Cow) & Needs(Cow, Rabbit)) -> Rough(Cow)\nTEXT:\tIf something visits the cow then it is rough.\nFOL:\tall x. (Visits(x, Cow) -> Rough(x))\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something visits the cow and it is rough then it needs the bear.\nFOL:\tall x. (Visits(x, Cow) & Rough(x) -> Needs(x, Bear))\nTEXT:\tIf the squirrel needs the bear and the squirrel eats the cow then the squirrel is cold.\nFOL:\t(Needs(Squirrel, Bear) & Eats(Squirrel, Cow)) -> Cold(Squirrel)\nTEXT:\tIf something needs the bear then the bear needs the rabbit.\nFOL:\tall x. (Needs(x, Bear) -> Needs(Bear, Rabbit))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear eats the squirrel.\nFOL:\tEats(Bear, Squirrel)\nTEXT:\tThe bear is young.\nFOL:\tYoung(Bear)\nTEXT:\tThe bear visits the rabbit.\nFOL:\tVisits(Bear, Rabbit)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the bear.\nFOL:\tVisits(Rabbit, Bear)\nTEXT:\tThe rabbit visits the squirrel.\nFOL:\tVisits(Rabbit, Squirrel)\nTEXT:\tThe squirrel is big.\nFOL:\tBig(Squirrel)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf something is young then it needs the squirrel.\nFOL:\tall x. (Young(x) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the bear and the bear needs the rabbit then the bear visits the cow.\nFOL:\tall x. ((Needs(x, Bear) & Needs(Bear, Rabbit)) -> Visits(Bear, Cow))\nTEXT:\tIf the cow is big and the cow needs the rabbit then the cow is rough.\nFOL:\t(Big(Cow) & Needs(Cow, Rabbit)) -> Rough(Cow)\nTEXT:\tIf something visits the cow then it is rough.\nFOL:\tall x. (Visits(x, Cow) -> Rough(x))\nTEXT:\tIf something is rough then it eats the cow.\nFOL:\tall x. (Rough(x) -> Eats(x, Cow))\nTEXT:\tIf something visits the cow and it is rough then it needs the bear.\nFOL:\tall x. ((Visits(x, Cow) & Rough(x)) -> Needs(x, Bear))\nTEXT:\tIf the squirrel needs the bear and the squirrel eats the cow then the squirrel is cold.\nFOL:\t(Needs(Squirrel, Bear) & Eats(Squirrel, Cow)) -> Cold(Squirrel)\nTEXT:\tIf something needs the bear then the bear needs the rabbit.\nFOL:\tall x. (Needs(x, Bear) -> Needs(Bear, Rabbit))\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nANSWER:\tTrue"], ["TEXT:\tThe bald eagle chases the bear.\nFOL:\tChases(BaldEagle, Bear)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear is blue.\nFOL:\tBlue(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone eats the dog then the dog chases the bear.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Bear))\nTEXT:\tIf someone is blue and they chase the bear then the bear is big.\nFOL:\tall x. (Blue(x) & Chases(x, Bear) -> Big(Bear))\nTEXT:\tIf someone eats the bear then they see the bear.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Bear))\nTEXT:\tIf the mouse is big then the mouse chases the bald eagle.\nFOL:\tBig(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tIf someone chases the dog then they are rough.\nFOL:\tall x. (Chases(x, Dog) -> Rough(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf someone chases the dog then the dog is green.\nFOL:\tall x. (Chases(x, Dog) -> Green(Dog))\nTEXT:\tThe bear is not rough.\nFOL:\t-Rough(Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the bear.\nFOL:\tChase(BaldEagle, Bear)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChase(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSee(BaldEagle, Mouse)\nTEXT:\tThe bear eats the dog.\nFOL:\tEat(Bear, Dog)\nTEXT:\tThe bear eats the mouse.\nFOL:\tEat(Bear, Mouse)\nTEXT:\tThe bear is blue.\nFOL:\tBlue(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSee(Bear, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEat(Mouse, Dog)\nTEXT:\tIf someone eats the dog then the dog chases the bear.\nFOL:\tall x. (Eat(x, Dog) -> Chase(Dog, Bear))\nTEXT:\tIf someone is blue and they chase the bear then the bear is big.\nFOL:\tall x. ((Blue(x) & Chase(x, Bear)) -> Big(Bear))\nTEXT:\tIf someone eats the bear then they see the bear.\nFOL:\tall x. (Eat(x, Bear) -> See(x, Bear))\nTEXT:\tIf the mouse is big then the mouse chases the bald eagle.\nFOL:\tBig(Mouse) -> Chase(Mouse, BaldEagle)\nTEXT:\tIf someone chases the dog then they are rough.\nFOL:\tall x. (Chase(x, Dog) -> Rough(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chase(x, Dog))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf someone chases the dog then the dog is green.\nFOL:\tall x. (Chase(x, Dog) -> Green(Dog))\nTEXT:\tThe bear is not rough.\nFOL:\t-Rough(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the bear.\nFOL:\tChases(BaldEagle, Bear)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear is blue.\nFOL:\tBlue(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone eats the dog then the dog chases the bear.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Bear))\nTEXT:\tIf someone is blue and they chase the bear then the bear is big.\nFOL:\tall x. ((Blue(x) & Chases(x, Bear)) -> Big(Bear))\nTEXT:\tIf someone eats the bear then they see the bear.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Bear))\nTEXT:\tIf the mouse is big then the mouse chases the bald eagle.\nFOL:\tBig(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tIf someone chases the dog then they are rough.\nFOL:\tall x. (Chases(x, Dog) -> Rough(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf someone chases the dog then the dog is green.\nFOL:\tall x. (Chases(x, Dog) -> Green(Dog))\nTEXT:\tThe bear is not rough.\nFOL:\t-Rough(Bear)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the bear.\nFOL:\tChases(BaldEagle, Bear)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear is blue.\nFOL:\tBlue(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone eats the dog then the dog chases the bear.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Bear))\nTEXT:\tIf someone is blue and they chase the bear then the bear is big.\nFOL:\tall x. ((Blue(x) & Chases(x, Bear)) -> Big(Bear))\nTEXT:\tIf someone eats the bear then they see the bear.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Bear))\nTEXT:\tIf the mouse is big then the mouse chases the bald eagle.\nFOL:\tBig(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tIf someone chases the dog then they are rough.\nFOL:\tall x. (Chases(x, Dog) -> Rough(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf someone chases the dog then the dog is green.\nFOL:\tall x. (Chases(x, Dog) -> Green(Dog))\nTEXT:\tThe bear is not rough.\nFOL:\t-Rough(Bear)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the bear.\nFOL:\tChases(BaldEagle, Bear)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle sees the mouse.\nFOL:\tSees(BaldEagle, Mouse)\nTEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the mouse.\nFOL:\tEats(Bear, Mouse)\nTEXT:\tThe bear is blue.\nFOL:\tBlue(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tIf someone eats the dog then the dog chases the bear.\nFOL:\tall x. (Eats(x, Dog) -> Chases(Dog, Bear))\nTEXT:\tIf someone is blue and they chase the bear then the bear is big.\nFOL:\tall x. ((Blue(x) & Chases(x, Bear)) -> Big(Bear))\nTEXT:\tIf someone eats the bear then they see the bear.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Bear))\nTEXT:\tIf the mouse is big then the mouse chases the bald eagle.\nFOL:\tBig(Mouse) -> Chases(Mouse, BaldEagle)\nTEXT:\tIf someone chases the dog then they are rough.\nFOL:\tall x. (Chases(x, Dog) -> Rough(x))\nTEXT:\tIf someone is big then they chase the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tRough people are kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tIf someone chases the dog then the dog is green.\nFOL:\tall x. (Chases(x, Dog) -> Green(Dog))\nTEXT:\tThe bear is not rough.\nFOL:\t-Rough(Bear)\nANSWER:\tTrue\n"], ["TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tIf something is blue and cold then it is big.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Big(x))\nTEXT:\tRound, nice things are big.\nFOL:\tall x. ((Round(x) & Nice(x)) -> Big(x))\nTEXT:\tAll nice, quiet things are furry.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Furry(x))\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf Bob is furry and Bob is nice then Bob is big.\nFOL:\t(Furry(Bob) & Nice(Bob)) -> Big(Bob)\nTEXT:\tIf something is big and blue then it is quiet.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tIf something is blue and cold then it is big.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Big(x))\nTEXT:\tRound, nice things are big.\nFOL:\tall x. ((Round(x) & Nice(x)) -> Big(x))\nTEXT:\tAll nice, quiet things are furry.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Furry(x))\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\t(Round(Bob) -> Furry(Bob))\nTEXT:\tIf Bob is furry and Bob is nice then Bob is big.\nFOL:\t((Furry(Bob) & Nice(Bob)) -> Big(Bob))\nTEXT:\tIf something is big and blue then it is quiet.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tIf something is blue and cold then it is big.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Big(x))\nTEXT:\tRound, nice things are big.\nFOL:\tall x. ((Round(x) & Nice(x)) -> Big(x))\nTEXT:\tAll nice, quiet things are furry.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Furry(x))\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\t(Round(Bob) -> Furry(Bob))\nTEXT:\tIf Bob is furry and Bob is nice then Bob is big.\nFOL:\t((Furry(Bob) & Nice(Bob)) -> Big(Bob))\nTEXT:\tIf something is big and blue then it is quiet.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tIf something is blue and cold then it is big.\nFOL:\tall x. (Blue(x) & Cold(x) -> Big(x))\nTEXT:\tRound, nice things are big.\nFOL:\tall x. (Round(x) & Nice(x) -> Big(x))\nTEXT:\tAll nice, quiet things are furry.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Furry(x))\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf Bob is furry and Bob is nice then Bob is big.\nFOL:\t(Furry(Bob) & Nice(Bob)) -> Big(Bob)\nTEXT:\tIf something is big and blue then it is quiet.\nFOL:\tall x. (Big(x) & Blue(x) -> Quiet(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tIf something is blue and cold then it is big.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Big(x))\nTEXT:\tRound, nice things are big.\nFOL:\tall x. ((Round(x) & Nice(x)) -> Big(x))\nTEXT:\tAll nice, quiet things are furry.\nFOL:\tall x. ((Nice(x) & Quiet(x)) -> Furry(x))\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf Bob is furry and Bob is nice then Bob is big.\nFOL:\t(Furry(Bob) & Nice(Bob)) -> Big(Bob)\nTEXT:\tIf something is big and blue then it is quiet.\nFOL:\tall x. ((Big(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the bear.\nFOL:\tSees(BaldEagle, Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe squirrel does not need the bald eagle.\nFOL:\t-Needs(Squirrel, BaldEagle)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the bear.\nFOL:\tSees(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf something sees the bear and it visits the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Sees(x, Bear) & Visits(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something is round and it sees the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Round(x) & Sees(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something needs the cow and it does not need the bald eagle then the cow needs the squirrel.\nFOL:\tall x. ((Needs(x, Cow) & -Needs(x, BaldEagle)) -> Needs(Cow, Squirrel))\nTEXT:\tIf something visits the cow and the cow is nice then the cow does not need the squirrel.\nFOL:\tall x. ((Visits(x, Cow) & Nice(Cow)) -> -Needs(Cow, Squirrel))\nTEXT:\tIf something needs the cow and the cow needs the bald eagle then the bald eagle visits the cow.\nFOL:\tall x. ((Needs(x, Cow) & Needs(Cow, BaldEagle)) -> Visits(BaldEagle, Cow))\nTEXT:\tIf something sees the bald eagle and the bald eagle visits the squirrel then it is kind.\nFOL:\tall x. ((Sees(x, BaldEagle) & Visits(BaldEagle, Squirrel)) -> Kind(x))\nTEXT:\tIf something needs the bald eagle then the bald eagle is round.\nFOL:\tall x. (Needs(x, BaldEagle) -> Round(BaldEagle))\nTEXT:\tIf something is round then it visits the squirrel.\nFOL:\tall x. (Round(x) -> Visits(x, Squirrel))\nTEXT:\tIf something is kind and it sees the bear then it visits the bald eagle.\nFOL:\tall x. ((Kind(x) & Sees(x, Bear)) -> Visits(x, BaldEagle))\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the bear.\nFOL:\tSees(BaldEagle, Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe squirrel does not need the bald eagle.\nFOL:\t-Needs(Squirrel, BaldEagle)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the bear.\nFOL:\tSees(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf something sees the bear and it visits the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Sees(x, Bear) & Visits(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something is round and it sees the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Round(x) & Sees(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something needs the cow and it does not need the bald eagle then the cow needs the squirrel.\nFOL:\tall x. ((Needs(x, Cow) & -Needs(x, BaldEagle)) -> Needs(Cow, Squirrel))\nTEXT:\tIf something visits the cow and the cow is nice then the cow does not need the squirrel.\nFOL:\tall x. ((Visits(x, Cow) & Nice(Cow)) -> -Needs(Cow, Squirrel))\nTEXT:\tIf something needs the cow and the cow needs the bald eagle then the bald eagle visits the cow.\nFOL:\tall x. ((Needs(x, Cow) & Needs(Cow, BaldEagle)) -> Visits(BaldEagle, Cow))\nTEXT:\tIf something sees the bald eagle and the bald eagle visits the squirrel then it is kind.\nFOL:\tall x. ((Sees(x, BaldEagle) & Visits(BaldEagle, Squirrel)) -> Kind(x))\nTEXT:\tIf something needs the bald eagle then the bald eagle is round.\nFOL:\tall x. (Needs(x, BaldEagle) -> Round(BaldEagle))\nTEXT:\tIf something is round then it visits the squirrel.\nFOL:\tall x. (Round(x) -> Visits(x, Squirrel))\nTEXT:\tIf something is kind and it sees the bear then it visits the bald eagle.\nFOL:\tall x. ((Kind(x) & Sees(x, Bear)) -> Visits(x, BaldEagle))\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the bear.\nFOL:\tSees(BaldEagle, Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe squirrel does not need the bald eagle.\nFOL:\t-Needs(Squirrel, BaldEagle)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the bear.\nFOL:\tSees(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf something sees the bear and it visits the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Sees(x, Bear) & Visits(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something is round and it sees the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Round(x) & Sees(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something needs the cow and it does not need the bald eagle then the cow needs the squirrel.\nFOL:\tall x. ((Needs(x, Cow) & -Needs(x, BaldEagle)) -> Needs(Cow, Squirrel))\nTEXT:\tIf something visits the cow and the cow is nice then the cow does not need the squirrel.\nFOL:\tall x. ((Visits(x, Cow) & Nice(Cow)) -> -Needs(Cow, Squirrel))\nTEXT:\tIf something needs the cow and the cow needs the bald eagle then the bald eagle visits the cow.\nFOL:\tall x. ((Needs(x, Cow) & Needs(Cow, BaldEagle)) -> Visits(BaldEagle, Cow))\nTEXT:\tIf something sees the bald eagle and the bald eagle visits the squirrel then it is kind.\nFOL:\tall x. ((Sees(x, BaldEagle) & Visits(BaldEagle, Squirrel)) -> Kind(x))\nTEXT:\tIf something needs the bald eagle then the bald eagle is round.\nFOL:\tall x. (Needs(x, BaldEagle) -> Round(BaldEagle))\nTEXT:\tIf something is round then it visits the squirrel.\nFOL:\tall x. (Round(x) -> Visits(x, Squirrel))\nTEXT:\tIf something is kind and it sees the bear then it visits the bald eagle.\nFOL:\tall x. ((Kind(x) & Sees(x, Bear)) -> Visits(x, BaldEagle))\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the bear.\nFOL:\tSees(BaldEagle, Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe squirrel does not need the bald eagle.\nFOL:\t-Needs(Squirrel, BaldEagle)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the bear.\nFOL:\tSees(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf something sees the bear and it visits the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Sees(x, Bear) & Visits(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something is round and it sees the bald eagle then the bald eagle is green.\nFOL:\tall x. ((Round(x) & Sees(x, BaldEagle)) -> Green(BaldEagle))\nTEXT:\tIf something needs the cow and it does not need the bald eagle then the cow needs the squirrel.\nFOL:\tall x. ((Needs(x, Cow) & -Needs(x, BaldEagle)) -> Needs(Cow, Squirrel))\nTEXT:\tIf something visits the cow and the cow is nice then the cow does not need the squirrel.\nFOL:\tall x. ((Visits(x, Cow) & Nice(Cow)) -> -Needs(Cow, Squirrel))\nTEXT:\tIf something needs the cow and the cow needs the bald eagle then the bald eagle visits the cow.\nFOL:\tall x. ((Needs(x, Cow) & Needs(Cow, BaldEagle)) -> Visits(BaldEagle, Cow))\nTEXT:\tIf something sees the bald eagle and the bald eagle visits the squirrel then it is kind.\nFOL:\tall x. ((Sees(x, BaldEagle) & Visits(BaldEagle, Squirrel)) -> Kind(x))\nTEXT:\tIf something needs the bald eagle then the bald eagle is round.\nFOL:\tall x. (Needs(x, BaldEagle) -> Round(BaldEagle))\nTEXT:\tIf something is round then it visits the squirrel.\nFOL:\tall x. (Round(x) -> Visits(x, Squirrel))\nTEXT:\tIf something is kind and it sees the bear then it visits the bald eagle.\nFOL:\tall x. ((Kind(x) & Sees(x, Bear)) -> Visits(x, BaldEagle))\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the bear.\nFOL:\tSees(BaldEagle, Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe cow visits the bald eagle.\nFOL:\tVisits(Cow, BaldEagle)\nTEXT:\tThe squirrel does not need the bald eagle.\nFOL:\t-Needs(Squirrel, BaldEagle)\nTEXT:\tThe squirrel needs the cow.\nFOL:\tNeeds(Squirrel, Cow)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the bear.\nFOL:\tSees(Squirrel, Bear)\nTEXT:\tThe squirrel visits the cow.\nFOL:\tVisits(Squirrel, Cow)\nTEXT:\tIf something sees the bear and it visits the bald eagle then the bald eagle is green.\nFOL:\tall x. (Sees(x, Bear) & Visits(x, BaldEagle) -> Green(BaldEagle))\nTEXT:\tIf something is round and it sees the bald eagle then the bald eagle is green.\nFOL:\tall x. (Round(x) & Sees(x, BaldEagle) -> Green(BaldEagle))\nTEXT:\tIf something needs the cow and it does not need the bald eagle then the cow needs the squirrel.\nFOL:\tall x. (Needs(x, Cow) & -Needs(x, BaldEagle) -> Needs(Cow, Squirrel))\nTEXT:\tIf something visits the cow and the cow is nice then the cow does not need the squirrel.\nFOL:\tall x. (Visits(x, Cow) & Nice(Cow) -> -Needs(Cow, Squirrel))\nTEXT:\tIf something needs the cow and the cow needs the bald eagle then the bald eagle visits the cow.\nFOL:\tall x. (Needs(x, Cow) & Needs(Cow, BaldEagle) -> Visits(BaldEagle, Cow))\nTEXT:\tIf something sees the bald eagle and the bald eagle visits the squirrel then it is kind.\nFOL:\tall x. (Sees(x, BaldEagle) & Visits(BaldEagle, Squirrel) -> Kind(x))\nTEXT:\tIf something needs the bald eagle then the bald eagle is round.\nFOL:\tall x. (Needs(x, BaldEagle) -> Round(BaldEagle))\nTEXT:\tIf something is round then it visits the squirrel.\nFOL:\tall x. (Round(x) -> Visits(x, Squirrel))\nTEXT:\tIf something is kind and it sees the bear then it visits the bald eagle.\nFOL:\tall x. (Kind(x) & Sees(x, Bear) -> Visits(x, BaldEagle))\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the lion.\nFOL:\tChases(Squirrel, Lion)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf something visits the bald eagle then the bald eagle visits the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Visits(BaldEagle, Lion))\nTEXT:\tIf something is kind then it visits the squirrel.\nFOL:\tall x. (Kind(x) -> Visits(x, Squirrel))\nTEXT:\tIf something likes the mouse then it visits the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf the bald eagle visits the lion and the lion visits the squirrel then the bald eagle likes the squirrel.\nFOL:\t(Visits(BaldEagle, Lion) & Visits(Lion, Squirrel)) -> Likes(BaldEagle, Squirrel)\nTEXT:\tIf something likes the lion then it visits the lion.\nFOL:\tall x. (Likes(x, Lion) -> Visits(x, Lion))\nTEXT:\tIf something likes the mouse and it visits the lion then it is young.\nFOL:\tall x. (Likes(x, Mouse) & Visits(x, Lion) -> Young(x))\nTEXT:\tIf something visits the squirrel then it likes the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(x, Mouse))\nTEXT:\tIf something visits the lion and the lion chases the mouse then the mouse is young.\nFOL:\tall x. (Visits(x, Lion) & Chases(Lion, Mouse) -> Young(Mouse))\nTEXT:\tIf something visits the bald eagle and it chases the lion then the lion is kind.\nFOL:\tall x. (Visits(x, BaldEagle) & Chases(x, Lion) -> Kind(Lion))\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the lion.\nFOL:\tChases(Squirrel, Lion)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf something visits the bald eagle then the bald eagle visits the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Visits(BaldEagle, Lion))\nTEXT:\tIf something is kind then it visits the squirrel.\nFOL:\tall x. (Kind(x) -> Visits(x, Squirrel))\nTEXT:\tIf something likes the mouse then it visits the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf the bald eagle visits the lion and the lion visits the squirrel then the bald eagle likes the squirrel.\nFOL:\t(Visits(BaldEagle, Lion) & Visits(Lion, Squirrel)) -> Likes(BaldEagle, Squirrel)\nTEXT:\tIf something likes the lion then it visits the lion.\nFOL:\tall x. (Likes(x, Lion) -> Visits(x, Lion))\nTEXT:\tIf something likes the mouse and it visits the lion then it is young.\nFOL:\tall x. (Likes(x, Mouse) & Visits(x, Lion) -> Young(x))\nTEXT:\tIf something visits the squirrel then it likes the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(x, Mouse))\nTEXT:\tIf something visits the lion and the lion chases the mouse then the mouse is young.\nFOL:\tall x. (Visits(x, Lion) & Chases(Lion, Mouse) -> Young(Mouse))\nTEXT:\tIf something visits the bald eagle and it chases the lion then the lion is kind.\nFOL:\tall x. (Visits(x, BaldEagle) & Chases(x, Lion) -> Kind(Lion))\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the lion.\nFOL:\tChases(Squirrel, Lion)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf something visits the bald eagle then the bald eagle visits the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Visits(BaldEagle, Lion))\nTEXT:\tIf something is kind then it visits the squirrel.\nFOL:\tall x. (Kind(x) -> Visits(x, Squirrel))\nTEXT:\tIf something likes the mouse then it visits the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf the bald eagle visits the lion and the lion visits the squirrel then the bald eagle likes the squirrel.\nFOL:\t(Visits(BaldEagle, Lion) & Visits(Lion, Squirrel)) -> Likes(BaldEagle, Squirrel)\nTEXT:\tIf something likes the lion then it visits the lion.\nFOL:\tall x. (Likes(x, Lion) -> Visits(x, Lion))\nTEXT:\tIf something likes the mouse and it visits the lion then it is young.\nFOL:\tall x. (Likes(x, Mouse) & Visits(x, Lion) -> Young(x))\nTEXT:\tIf something visits the squirrel then it likes the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(x, Mouse))\nTEXT:\tIf something visits the lion and the lion chases the mouse then the mouse is young.\nFOL:\tall x. (Visits(x, Lion) & Chases(Lion, Mouse) -> Young(Mouse))\nTEXT:\tIf something visits the bald eagle and it chases the lion then the lion is kind.\nFOL:\tall x. (Visits(x, BaldEagle) & Chases(x, Lion) -> Kind(Lion))\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the lion.\nFOL:\tChases(Squirrel, Lion)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf something visits the bald eagle then the bald eagle visits the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Visits(BaldEagle, Lion))\nTEXT:\tIf something is kind then it visits the squirrel.\nFOL:\tall x. (Kind(x) -> Visits(x, Squirrel))\nTEXT:\tIf something likes the mouse then it visits the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf the bald eagle visits the lion and the lion visits the squirrel then the bald eagle likes the squirrel.\nFOL:\t(Visits(BaldEagle, Lion) & Visits(Lion, Squirrel)) -> Likes(BaldEagle, Squirrel)\nTEXT:\tIf something likes the lion then it visits the lion.\nFOL:\tall x. (Likes(x, Lion) -> Visits(x, Lion))\nTEXT:\tIf something likes the mouse and it visits the lion then it is young.\nFOL:\tall x. ((Likes(x, Mouse) & Visits(x, Lion)) -> Young(x))\nTEXT:\tIf something visits the squirrel then it likes the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(x, Mouse))\nTEXT:\tIf something visits the lion and the lion chases the mouse then the mouse is young.\nFOL:\tall x. ((Visits(x, Lion) & Chases(Lion, Mouse)) -> Young(Mouse))\nTEXT:\tIf something visits the bald eagle and it chases the lion then the lion is kind.\nFOL:\tall x. ((Visits(x, BaldEagle) & Chases(x, Lion)) -> Kind(Lion))\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bald eagle chases the mouse.\nFOL:\tChases(BaldEagle, Mouse)\nTEXT:\tThe bald eagle visits the lion.\nFOL:\tVisits(BaldEagle, Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion likes the bald eagle.\nFOL:\tLikes(Lion, BaldEagle)\nTEXT:\tThe lion likes the squirrel.\nFOL:\tLikes(Lion, Squirrel)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tThe mouse chases the squirrel.\nFOL:\tChases(Mouse, Squirrel)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse visits the bald eagle.\nFOL:\tVisits(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the lion.\nFOL:\tChases(Squirrel, Lion)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tIf something visits the bald eagle then the bald eagle visits the lion.\nFOL:\tall x. (Visits(x, BaldEagle) -> Visits(BaldEagle, Lion))\nTEXT:\tIf something is kind then it visits the squirrel.\nFOL:\tall x. (Kind(x) -> Visits(x, Squirrel))\nTEXT:\tIf something likes the mouse then it visits the lion.\nFOL:\tall x. (Likes(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf the bald eagle visits the lion and the lion visits the squirrel then the bald eagle likes the squirrel.\nFOL:\t(Visits(BaldEagle, Lion) & Visits(Lion, Squirrel)) -> Likes(BaldEagle, Squirrel)\nTEXT:\tIf something likes the lion then it visits the lion.\nFOL:\tall x. (Likes(x, Lion) -> Visits(x, Lion))\nTEXT:\tIf something likes the mouse and it visits the lion then it is young.\nFOL:\tall x. (Likes(x, Mouse) & Visits(x, Lion) -> Young(x))\nTEXT:\tIf something visits the squirrel then it likes the mouse.\nFOL:\tall x. (Visits(x, Squirrel) -> Likes(x, Mouse))\nTEXT:\tIf something visits the lion and the lion chases the mouse then the mouse is young.\nFOL:\tall x. (Visits(x, Lion) & Chases(Lion, Mouse) -> Young(Mouse))\nTEXT:\tIf something visits the bald eagle and it chases the lion then the lion is kind.\nFOL:\tall x. (Visits(x, BaldEagle) & Chases(x, Lion) -> Kind(Lion))\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf something is kind and blue then it is nice.\nFOL:\tall x. (Kind(x) & Blue(x) -> Nice(x))\nTEXT:\tNice things are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is round and quiet then it is kind.\nFOL:\tall x. (Round(x) & Quiet(x) -> Kind(x))\nTEXT:\tHarry is not blue.\nFOL:\t-Blue(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf something is kind and blue then it is nice.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Nice(x))\nTEXT:\tNice things are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is round and quiet then it is kind.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Kind(x))\nTEXT:\tHarry is not blue.\nFOL:\t-Blue(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf something is kind and blue then it is nice.\nFOL:\tall x. (Kind(x) & Blue(x) -> Nice(x))\nTEXT:\tNice things are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is round and quiet then it is kind.\nFOL:\tall x. (Round(x) & Quiet(x) -> Kind(x))\nTEXT:\tHarry is not blue.\nFOL:\t-Blue(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf something is kind and blue then it is nice.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Nice(x))\nTEXT:\tNice things are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is round and quiet then it is kind.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Kind(x))\nTEXT:\tHarry is not blue.\nFOL:\t-Blue(Harry)\nANSWER:\tFalse\n", "TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf something is kind and blue then it is nice.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Nice(x))\nTEXT:\tNice things are round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tIf something is round then it is quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tNice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is round and quiet then it is kind.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Kind(x))\nTEXT:\tHarry is not blue.\nFOL:\t-Blue(Harry)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tAll kind people are not red.\nFOL:\tall x. (Kind(x) -> -Red(x))\nTEXT:\tIf Charlie is rough and Charlie is furry then Charlie is red.\nFOL:\t(Rough(Charlie) & Furry(Charlie)) -> Red(Charlie)\nTEXT:\tAll cold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf Erin is cold then Erin is kind.\nFOL:\tCold(Erin) -> Kind(Erin)\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tIf someone is rough then they are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tAll kind people are not red.\nFOL:\tall x. (Kind(x) -> -Red(x))\nTEXT:\tIf Charlie is rough and Charlie is furry then Charlie is red.\nFOL:\t(Rough(Charlie) & Furry(Charlie) -> Red(Charlie))\nTEXT:\tAll cold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf Erin is cold then Erin is kind.\nFOL:\t(Cold(Erin) -> Kind(Erin))\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tIf someone is rough then they are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tAll kind people are not red.\nFOL:\tall x. (Kind(x) -> -Red(x))\nTEXT:\tIf Charlie is rough and Charlie is furry then Charlie is red.\nFOL:\t(Rough(Charlie) & Furry(Charlie) -> Red(Charlie))\nTEXT:\tAll cold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf Erin is cold then Erin is kind.\nFOL:\t(Cold(Erin) -> Kind(Erin))\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tIf someone is rough then they are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tAll kind people are not red.\nFOL:\tall x. (Kind(x) -> -Red(x))\nTEXT:\tIf Charlie is rough and Charlie is furry then Charlie is red.\nFOL:\t(Rough(Charlie) & Furry(Charlie)) -> Red(Charlie)\nTEXT:\tAll cold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf Erin is cold then Erin is kind.\nFOL:\tCold(Erin) -> Kind(Erin)\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tIf someone is rough then they are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tAll kind people are not red.\nFOL:\tall x. (Kind(x) -> -Red(x))\nTEXT:\tIf Charlie is rough and Charlie is furry then Charlie is red.\nFOL:\t(Rough(Charlie) & Furry(Charlie)) -> Red(Charlie)\nTEXT:\tAll cold people are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tIf Erin is cold then Erin is kind.\nFOL:\tCold(Erin) -> Kind(Erin)\nTEXT:\tIf someone is young then they are rough.\nFOL:\tall x. (Young(x) -> Rough(x))\nTEXT:\tIf someone is rough then they are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nANSWER:\tFalse\n"], ["TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not nice.\nFOL:\t-Nice(Fiona)\nTEXT:\tBig things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tBlue, nice things are furry.\nFOL:\tall x. (Blue(x) & Nice(x) -> Furry(x))\nTEXT:\tIf something is white and kind then it is blue.\nFOL:\tall x. (White(x) & Kind(x) -> Blue(x))\nTEXT:\tFurry, round things are blue.\nFOL:\tall x. (Furry(x) & Round(x) -> Blue(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tIf something is blue then it is kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tBob is not white.\nFOL:\t-White(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not nice.\nFOL:\t-Nice(Fiona)\nTEXT:\tBig things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tBlue, nice things are furry.\nFOL:\tall x. (Blue(x) & Nice(x) -> Furry(x))\nTEXT:\tIf something is white and kind then it is blue.\nFOL:\tall x. (White(x) & Kind(x) -> Blue(x))\nTEXT:\tFurry, round things are blue.\nFOL:\tall x. (Furry(x) & Round(x) -> Blue(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tIf something is blue then it is kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tBob is not white.\nFOL:\t-White(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not nice.\nFOL:\t-Nice(Fiona)\nTEXT:\tBig things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tBlue, nice things are furry.\nFOL:\tall x. (Blue(x) & Nice(x) -> Furry(x))\nTEXT:\tIf something is white and kind then it is blue.\nFOL:\tall x. (White(x) & Kind(x) -> Blue(x))\nTEXT:\tFurry, round things are blue.\nFOL:\tall x. (Furry(x) & Round(x) -> Blue(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tIf something is blue then it is kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tBob is not white.\nFOL:\t-White(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not nice.\nFOL:\t-Nice(Fiona)\nTEXT:\tBig things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tBlue, nice things are furry.\nFOL:\tall x. (Blue(x) & Nice(x) -> Furry(x))\nTEXT:\tIf something is white and kind then it is blue.\nFOL:\tall x. (White(x) & Kind(x) -> Blue(x))\nTEXT:\tFurry, round things are blue.\nFOL:\tall x. (Furry(x) & Round(x) -> Blue(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tIf something is blue then it is kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tBob is not white.\nFOL:\t-White(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is not nice.\nFOL:\t-Nice(Fiona)\nTEXT:\tBig things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tBlue, nice things are furry.\nFOL:\tall x. (Blue(x) & Nice(x) -> Furry(x))\nTEXT:\tIf something is white and kind then it is blue.\nFOL:\tall x. (White(x) & Kind(x) -> Blue(x))\nTEXT:\tFurry, round things are blue.\nFOL:\tall x. (Furry(x) & Round(x) -> Blue(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf something is furry then it is white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tIf something is blue then it is kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tBob is not white.\nFOL:\t-White(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tIf someone is kind then they are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tYoung people are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is kind and white then they are blue.\nFOL:\tall x. ((Kind(x) & White(x)) -> Blue(x))\nTEXT:\tAll quiet, kind people are white.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> White(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll blue, kind people are green.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Green(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tTrue\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tIf someone is kind then they are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tYoung people are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is kind and white then they are blue.\nFOL:\tall x. ((Kind(x) & White(x)) -> Blue(x))\nTEXT:\tAll quiet, kind people are white.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> White(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll blue, kind people are green.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Green(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tTrue\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tIf someone is kind then they are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tYoung people are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is kind and white then they are blue.\nFOL:\tall x. ((Kind(x) & White(x)) -> Blue(x))\nTEXT:\tAll quiet, kind people are white.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> White(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll blue, kind people are green.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Green(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tTrue\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tIf someone is kind then they are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tYoung people are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is kind and white then they are blue.\nFOL:\tall x. ((Kind(x) & White(x)) -> Blue(x))\nTEXT:\tAll quiet, kind people are white.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> White(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll blue, kind people are green.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Green(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tTrue\n", "TEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tIf someone is kind then they are white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tYoung people are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is kind and white then they are blue.\nFOL:\tall x. ((Kind(x) & White(x)) -> Blue(x))\nTEXT:\tAll quiet, kind people are white.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> White(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll blue, kind people are green.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Green(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tTrue\n"], ["TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Charlie is quiet then Charlie is green.\nFOL:\tQuiet(Charlie) -> Green(Charlie)\nTEXT:\tGreen, young people are round.\nFOL:\tall x. (Green(x) & Young(x) -> Round(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll round, green people are smart.\nFOL:\tall x. (Round(x) & Green(x) -> Smart(x))\nTEXT:\tIf Charlie is furry then Charlie is young.\nFOL:\tFurry(Charlie) -> Young(Charlie)\nTEXT:\tRough, furry people are green.\nFOL:\tall x. (Rough(x) & Furry(x) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are rough.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Rough(x))\nTEXT:\tIf someone is round and young then they are quiet.\nFOL:\tall x. (Round(x) & Young(x) -> Quiet(x))\nTEXT:\tCharlie is not rough.\nFOL:\t-Rough(Charlie)\nANSWER:\tFalse\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Charlie is quiet then Charlie is green.\nFOL:\tQuiet(Charlie) -> Green(Charlie)\nTEXT:\tGreen, young people are round.\nFOL:\tall x. ((Green(x) & Young(x)) -> Round(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll round, green people are smart.\nFOL:\tall x. ((Round(x) & Green(x)) -> Smart(x))\nTEXT:\tIf Charlie is furry then Charlie is young.\nFOL:\tFurry(Charlie) -> Young(Charlie)\nTEXT:\tRough, furry people are green.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are rough.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is round and young then they are quiet.\nFOL:\tall x. ((Round(x) & Young(x)) -> Quiet(x))\nTEXT:\tCharlie is not rough.\nFOL:\t-Rough(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Charlie is quiet then Charlie is green.\nFOL:\tQuiet(Charlie) -> Green(Charlie)\nTEXT:\tGreen, young people are round.\nFOL:\tall x. ((Green(x) & Young(x)) -> Round(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll round, green people are smart.\nFOL:\tall x. ((Round(x) & Green(x)) -> Smart(x))\nTEXT:\tIf Charlie is furry then Charlie is young.\nFOL:\tFurry(Charlie) -> Young(Charlie)\nTEXT:\tRough, furry people are green.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are rough.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is round and young then they are quiet.\nFOL:\tall x. ((Round(x) & Young(x)) -> Quiet(x))\nTEXT:\tCharlie is not rough.\nFOL:\t-Rough(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Charlie is quiet then Charlie is green.\nFOL:\tQuiet(Charlie) -> Green(Charlie)\nTEXT:\tGreen, young people are round.\nFOL:\tall x. ((Green(x) & Young(x)) -> Round(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll round, green people are smart.\nFOL:\tall x. ((Round(x) & Green(x)) -> Smart(x))\nTEXT:\tIf Charlie is furry then Charlie is young.\nFOL:\tFurry(Charlie) -> Young(Charlie)\nTEXT:\tRough, furry people are green.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are rough.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is round and young then they are quiet.\nFOL:\tall x. ((Round(x) & Young(x)) -> Quiet(x))\nTEXT:\tCharlie is not rough.\nFOL:\t-Rough(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf Charlie is quiet then Charlie is green.\nFOL:\tQuiet(Charlie) -> Green(Charlie)\nTEXT:\tGreen, young people are round.\nFOL:\tall x. ((Green(x) & Young(x)) -> Round(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tAll round, green people are smart.\nFOL:\tall x. ((Round(x) & Green(x)) -> Smart(x))\nTEXT:\tIf Charlie is furry then Charlie is young.\nFOL:\tFurry(Charlie) -> Young(Charlie)\nTEXT:\tRough, furry people are green.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are rough.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is round and young then they are quiet.\nFOL:\tall x. ((Round(x) & Young(x)) -> Quiet(x))\nTEXT:\tCharlie is not rough.\nFOL:\t-Rough(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is not cold.\nFOL:\t- Cold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t- Nice(Dog)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tIf something sees the mouse then it visits the mouse.\nFOL:\tall x. (Sees(x, Mouse) -> Visits(x, Mouse))\nTEXT:\tIf something eats the dog then it visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(x, Mouse))\nTEXT:\tIf something eats the squirrel then it visits the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf something visits the dog then the dog visits the bald eagle.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf something is big and it visits the mouse then the mouse visits the squirrel.\nFOL:\tall x. ((Big(x) & Visits(x, Mouse)) -> Visits(Mouse, Squirrel))\nTEXT:\tIf something visits the bald eagle then the bald eagle sees the mouse.\nFOL:\tall x. (Visits(x, BaldEagle) -> Sees(BaldEagle, Mouse))\nTEXT:\tIf something is big then it visits the bald eagle.\nFOL:\tall x. (Big(x) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the squirrel then it is big.\nFOL:\tall x. (Visits(x, Squirrel) -> Big(x))\nTEXT:\tIf something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.\nFOL:\tall x. ((Eats(x, BaldEagle) & Sees(x, Squirrel)) -> -Sees(x, BaldEagle))\nTEXT:\tThe mouse visits the mouse.\nFOL:\tVisits(Mouse, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is not cold.\nFOL:\t- Cold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t- Nice(Dog)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tIf something sees the mouse then it visits the mouse.\nFOL:\tall x. (Sees(x, Mouse) -> Visits(x, Mouse))\nTEXT:\tIf something eats the dog then it visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(x, Mouse))\nTEXT:\tIf something eats the squirrel then it visits the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf something visits the dog then the dog visits the bald eagle.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf something is big and it visits the mouse then the mouse visits the squirrel.\nFOL:\tall x. ((Big(x) & Visits(x, Mouse)) -> Visits(Mouse, Squirrel))\nTEXT:\tIf something visits the bald eagle then the bald eagle sees the mouse.\nFOL:\tall x. (Visits(x, BaldEagle) -> Sees(BaldEagle, Mouse))\nTEXT:\tIf something is big then it visits the bald eagle.\nFOL:\tall x. (Big(x) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the squirrel then it is big.\nFOL:\tall x. (Visits(x, Squirrel) -> Big(x))\nTEXT:\tIf something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.\nFOL:\tall x. ((Eats(x, BaldEagle) & Sees(x, Squirrel)) -> -Sees(x, BaldEagle))\nTEXT:\tThe mouse visits the mouse.\nFOL:\tVisits(Mouse, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is not cold.\nFOL:\t-IsCold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t-IsNice(Dog)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tIsRed(Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tIf something sees the mouse then it visits the mouse.\nFOL:\tall x. (Sees(x, Mouse) -> Visits(x, Mouse))\nTEXT:\tIf something eats the dog then it visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(x, Mouse))\nTEXT:\tIf something eats the squirrel then it visits the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf something visits the dog then the dog visits the bald eagle.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf something is big and it visits the mouse then the mouse visits the squirrel.\nFOL:\tall x. (Big(x) & Visits(x, Mouse) -> Visits(Mouse, Squirrel))\nTEXT:\tIf something visits the bald eagle then the bald eagle sees the mouse.\nFOL:\tall x. (Visits(x, BaldEagle) -> Sees(BaldEagle, Mouse))\nTEXT:\tIf something is big then it visits the bald eagle.\nFOL:\tall x. (Big(x) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the squirrel then it is big.\nFOL:\tall x. (Visits(x, Squirrel) -> Big(x))\nTEXT:\tIf something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.\nFOL:\tall x. (Eats(x, BaldEagle) & Sees(x, Squirrel) -> -Sees(x, BaldEagle))\nTEXT:\tThe mouse visits the mouse.\nFOL:\tVisits(Mouse, Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is not cold.\nFOL:\t- Cold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t- Nice(Dog)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tIf something sees the mouse then it visits the mouse.\nFOL:\tall x. (Sees(x, Mouse) -> Visits(x, Mouse))\nTEXT:\tIf something eats the dog then it visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(x, Mouse))\nTEXT:\tIf something eats the squirrel then it visits the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf something visits the dog then the dog visits the bald eagle.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf something is big and it visits the mouse then the mouse visits the squirrel.\nFOL:\tall x. ((Big(x) & Visits(x, Mouse)) -> Visits(Mouse, Squirrel))\nTEXT:\tIf something visits the bald eagle then the bald eagle sees the mouse.\nFOL:\tall x. (Visits(x, BaldEagle) -> Sees(BaldEagle, Mouse))\nTEXT:\tIf something is big then it visits the bald eagle.\nFOL:\tall x. (Big(x) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the squirrel then it is big.\nFOL:\tall x. (Visits(x, Squirrel) -> Big(x))\nTEXT:\tIf something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.\nFOL:\tall x. ((Eats(x, BaldEagle) & Sees(x, Squirrel)) -> -Sees(x, BaldEagle))\nTEXT:\tThe mouse visits the mouse.\nFOL:\tVisits(Mouse, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is not cold.\nFOL:\t-IsCold(Dog)\nTEXT:\tThe dog is not nice.\nFOL:\t-IsNice(Dog)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tIsRed(Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tIf something sees the mouse then it visits the mouse.\nFOL:\tall x. (Sees(x, Mouse) -> Visits(x, Mouse))\nTEXT:\tIf something eats the dog then it visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(x, Mouse))\nTEXT:\tIf something eats the squirrel then it visits the mouse.\nFOL:\tall x. (Eats(x, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf something visits the dog then the dog visits the bald eagle.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf something is big and it visits the mouse then the mouse visits the squirrel.\nFOL:\tall x. ((Big(x) & Visits(x, Mouse)) -> Visits(Mouse, Squirrel))\nTEXT:\tIf something visits the bald eagle then the bald eagle sees the mouse.\nFOL:\tall x. (Visits(x, BaldEagle) -> Sees(BaldEagle, Mouse))\nTEXT:\tIf something is big then it visits the bald eagle.\nFOL:\tall x. (Big(x) -> Visits(x, BaldEagle))\nTEXT:\tIf something visits the squirrel then it is big.\nFOL:\tall x. (Visits(x, Squirrel) -> Big(x))\nTEXT:\tIf something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.\nFOL:\tall x. ((Eats(x, BaldEagle) & Sees(x, Squirrel)) -> -Sees(x, BaldEagle))\nTEXT:\tThe mouse visits the mouse.\nFOL:\tVisits(Mouse, Mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, red things are blue.\nFOL:\tall x. (White(x) & Red(x) -> Blue(x))\nTEXT:\tRed things are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is green and white then it is cold.\nFOL:\tall x. (Green(x) & White(x) -> Cold(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is white and green then it is red.\nFOL:\tall x. (White(x) & Green(x) -> Red(x))\nTEXT:\tIf Erin is white and Erin is nice then Erin is green.\nFOL:\t(White(Erin) & Nice(Erin)) -> Green(Erin)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, red things are blue.\nFOL:\tall x. ((White(x) & Red(x)) -> Blue(x))\nTEXT:\tRed things are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is green and white then it is cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is white and green then it is red.\nFOL:\tall x. ((White(x) & Green(x)) -> Red(x))\nTEXT:\tIf Erin is white and Erin is nice then Erin is green.\nFOL:\t(White(Erin) & Nice(Erin)) -> Green(Erin)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, red things are blue.\nFOL:\tall x. ((White(x) & Red(x)) -> Blue(x))\nTEXT:\tRed things are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is green and white then it is cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is white and green then it is red.\nFOL:\tall x. ((White(x) & Green(x)) -> Red(x))\nTEXT:\tIf Erin is white and Erin is nice then Erin is green.\nFOL:\t(White(Erin) & Nice(Erin)) -> Green(Erin)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, red things are blue.\nFOL:\tall x. ((White(x) & Red(x)) -> Blue(x))\nTEXT:\tRed things are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is green and white then it is cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is white and green then it is red.\nFOL:\tall x. ((White(x) & Green(x)) -> Red(x))\nTEXT:\tIf Erin is white and Erin is nice then Erin is green.\nFOL:\t(White(Erin) & Nice(Erin)) -> Green(Erin)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tWhite, red things are blue.\nFOL:\tall x. ((White(x) & Red(x)) -> Blue(x))\nTEXT:\tRed things are white.\nFOL:\tall x. (Red(x) -> White(x))\nTEXT:\tBlue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is green and white then it is cold.\nFOL:\tall x. ((Green(x) & White(x)) -> Cold(x))\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf something is white and green then it is red.\nFOL:\tall x. ((White(x) & Green(x)) -> Red(x))\nTEXT:\tIf Erin is white and Erin is nice then Erin is green.\nFOL:\t(White(Erin) & Nice(Erin) -> Green(Erin))\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tAll big, kind people are red.\nFOL:\tall x. ((Big(x) & Kind(x)) -> Red(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is rough then Dave is big.\nFOL:\tRough(Dave) -> Big(Dave)\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tRed, kind people are white.\nFOL:\tall x. ((Red(x) & Kind(x)) -> White(x))\nTEXT:\tIf Fiona is big then Fiona is quiet.\nFOL:\tBig(Fiona) -> Quiet(Fiona)\nTEXT:\tIf Bob is kind and Bob is not red then Bob is not rough.\nFOL:\t(Kind(Bob) & -Red(Bob)) -> -Rough(Bob)\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tAll big, kind people are red.\nFOL:\tall x. (Big(x) & Kind(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is rough then Dave is big.\nFOL:\tRough(Dave) -> Big(Dave)\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tRed, kind people are white.\nFOL:\tall x. (Red(x) & Kind(x) -> White(x))\nTEXT:\tIf Fiona is big then Fiona is quiet.\nFOL:\tBig(Fiona) -> Quiet(Fiona)\nTEXT:\tIf Bob is kind and Bob is not red then Bob is not rough.\nFOL:\t(Kind(Bob) & -Red(Bob)) -> -Rough(Bob)\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tAll big, kind people are red.\nFOL:\tall x. (Big(x) & Kind(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is rough then Dave is big.\nFOL:\tRough(Dave) -> Big(Dave)\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tRed, kind people are white.\nFOL:\tall x. (Red(x) & Kind(x) -> White(x))\nTEXT:\tIf Fiona is big then Fiona is quiet.\nFOL:\tBig(Fiona) -> Quiet(Fiona)\nTEXT:\tIf Bob is kind and Bob is not red then Bob is not rough.\nFOL:\t(Kind(Bob) & -Red(Bob)) -> -Rough(Bob)\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tAll big, kind people are red.\nFOL:\tall x. (Big(x) & Kind(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is rough then Dave is big.\nFOL:\tRough(Dave) -> Big(Dave)\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tRed, kind people are white.\nFOL:\tall x. (Red(x) & Kind(x) -> White(x))\nTEXT:\tIf Fiona is big then Fiona is quiet.\nFOL:\tBig(Fiona) -> Quiet(Fiona)\nTEXT:\tIf Bob is kind and Bob is not red then Bob is not rough.\nFOL:\t(Kind(Bob) & -Red(Bob)) -> -Rough(Bob)\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tAll big, kind people are red.\nFOL:\tall x. ((Big(x) & Kind(x)) -> Red(x))\nTEXT:\tIf someone is quiet then they are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is rough then Dave is big.\nFOL:\tRough(Dave) -> Big(Dave)\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tRed, kind people are white.\nFOL:\tall x. ((Red(x) & Kind(x)) -> White(x))\nTEXT:\tIf Fiona is big then Fiona is quiet.\nFOL:\tBig(Fiona) -> Quiet(Fiona)\nTEXT:\tIf Bob is kind and Bob is not red then Bob is not rough.\nFOL:\t(Kind(Bob) & -Red(Bob)) -> -Rough(Bob)\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tIsGreen(BaldEagle)\nTEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tIsRough(Mouse)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger is round.\nFOL:\tIsRound(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tIf someone needs the mouse and the mouse chases the dog then the dog likes the tiger.\nFOL:\tall x. ((Needs(x, Mouse) & Chases(Mouse, Dog)) -> Likes(Dog, Tiger))\nTEXT:\tIf the dog likes the tiger and the tiger is green then the dog chases the mouse.\nFOL:\t((Likes(Dog, Tiger) & IsGreen(Tiger)) -> Chases(Dog, Mouse))\nTEXT:\tIf someone needs the dog then the dog needs the tiger.\nFOL:\tall x. (Needs(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone is red then they chase the dog.\nFOL:\tall x. (IsRed(x) -> Chases(x, Dog))\nTEXT:\tIf someone likes the tiger then they are red.\nFOL:\tall x. (Likes(x, Tiger) -> IsRed(x))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (IsRough(x) -> Likes(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger needs the bald eagle.\nFOL:\tall x. (Chases(x, Tiger) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the tiger and they like the bald eagle then the bald eagle needs the mouse.\nFOL:\tall x. ((Needs(x, Tiger) & Likes(x, BaldEagle)) -> Needs(BaldEagle, Mouse))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t- Likes(Dog, Tiger)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tIsGreen(BaldEagle)\nTEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tIsRough(Mouse)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger is round.\nFOL:\tIsRound(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tIf someone needs the mouse and the mouse chases the dog then the dog likes the tiger.\nFOL:\tall x. (Needs(x, Mouse) & Chases(Mouse, Dog) -> Likes(Dog, Tiger))\nTEXT:\tIf the dog likes the tiger and the tiger is green then the dog chases the mouse.\nFOL:\t(Likes(Dog, Tiger) & IsGreen(Tiger) -> Chases(Dog, Mouse))\nTEXT:\tIf someone needs the dog then the dog needs the tiger.\nFOL:\tall x. (Needs(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone is red then they chase the dog.\nFOL:\tall x. (IsRed(x) -> Chases(x, Dog))\nTEXT:\tIf someone likes the tiger then they are red.\nFOL:\tall x. (Likes(x, Tiger) -> IsRed(x))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (IsRough(x) -> Likes(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger needs the bald eagle.\nFOL:\tall x. (Chases(x, Tiger) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the tiger and they like the bald eagle then the bald eagle needs the mouse.\nFOL:\tall x. (Needs(x, Tiger) & Likes(x, BaldEagle) -> Needs(BaldEagle, Mouse))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t-Likes(Dog, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tIf someone needs the mouse and the mouse chases the dog then the dog likes the tiger.\nFOL:\tall x. ((Needs(x, Mouse) & Chases(Mouse, Dog)) -> Likes(Dog, Tiger))\nTEXT:\tIf the dog likes the tiger and the tiger is green then the dog chases the mouse.\nFOL:\t((Likes(Dog, Tiger) & Green(Tiger)) -> Chases(Dog, Mouse))\nTEXT:\tIf someone needs the dog then the dog needs the tiger.\nFOL:\tall x. (Needs(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone is red then they chase the dog.\nFOL:\tall x. (Red(x) -> Chases(x, Dog))\nTEXT:\tIf someone likes the tiger then they are red.\nFOL:\tall x. (Likes(x, Tiger) -> Red(x))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Likes(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger needs the bald eagle.\nFOL:\tall x. (Chases(x, Tiger) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the tiger and they like the bald eagle then the bald eagle needs the mouse.\nFOL:\tall x. ((Needs(x, Tiger) & Likes(x, BaldEagle)) -> Needs(BaldEagle, Mouse))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t-Likes(Dog, Tiger)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChase(baldeagle, tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(baldeagle)\nTEXT:\tThe bald eagle likes the mouse.\nFOL:\tLike(baldeagle, mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLike(baldeagle, tiger)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeed(dog, mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(mouse)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChase(tiger, baldeagle)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChase(tiger, mouse)\nTEXT:\tThe tiger is round.\nFOL:\tRound(tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLike(tiger, baldeagle)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeed(tiger, baldeagle)\nTEXT:\tIf someone needs the mouse and the mouse chases the dog then the dog likes the tiger.\nFOL:\tall x. (Need(x, mouse) & Chase(mouse, dog) -> Like(dog, tiger))\nTEXT:\tIf the dog likes the tiger and the tiger is green then the dog chases the mouse.\nFOL:\tall x. (Like(dog, tiger) & Green(tiger) -> Chase(dog, mouse))\nTEXT:\tIf someone needs the dog then the dog needs the tiger.\nFOL:\tall x. (Need(x, dog) -> Need(dog, tiger))\nTEXT:\tIf someone is red then they chase the dog.\nFOL:\tall x. (Red(x) -> Chase(x, dog))\nTEXT:\tIf someone likes the tiger then they are red.\nFOL:\tall x. (Like(x, tiger) -> Red(x))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Like(x, tiger))\nTEXT:\tIf someone chases the tiger then the tiger needs the bald eagle.\nFOL:\tall x. (Chase(x, tiger) -> Need(tiger, baldeagle))\nTEXT:\tIf someone needs the tiger and they like the bald eagle then the bald eagle needs the mouse.\nFOL:\tall x. (Need(x, tiger) & Like(x, baldeagle) -> Need(baldeagle, mouse))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t- Like(dog, tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle likes the mouse.\nFOL:\tLikes(BaldEagle, Mouse)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the mouse.\nFOL:\tChases(Tiger, Mouse)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tIf someone needs the mouse and the mouse chases the dog then the dog likes the tiger.\nFOL:\tall x. ((Needs(x, Mouse) & Chases(Mouse, Dog)) -> Likes(Dog, Tiger))\nTEXT:\tIf the dog likes the tiger and the tiger is green then the dog chases the mouse.\nFOL:\t(Likes(Dog, Tiger) & Green(Tiger)) -> Chases(Dog, Mouse)\nTEXT:\tIf someone needs the dog then the dog needs the tiger.\nFOL:\tall x. (Needs(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone is red then they chase the dog.\nFOL:\tall x. (Red(x) -> Chases(x, Dog))\nTEXT:\tIf someone likes the tiger then they are red.\nFOL:\tall x. (Likes(x, Tiger) -> Red(x))\nTEXT:\tIf someone is rough then they like the tiger.\nFOL:\tall x. (Rough(x) -> Likes(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger needs the bald eagle.\nFOL:\tall x. (Chases(x, Tiger) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the tiger and they like the bald eagle then the bald eagle needs the mouse.\nFOL:\tall x. ((Needs(x, Tiger) & Likes(x, BaldEagle)) -> Needs(BaldEagle, Mouse))\nTEXT:\tThe dog does not like the tiger.\nFOL:\t- Likes(Dog, Tiger)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is red then they are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf someone is green and round then they are blue.\nFOL:\tall x. (Green(x) & Round(x) -> Blue(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tAll furry, red people are round.\nFOL:\tall x. (Furry(x) & Red(x) -> Round(x))\nTEXT:\tFurry people are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf Dave is round and Dave is young then Dave is green.\nFOL:\t(Round(Dave) & Young(Dave) -> Green(Dave))\nTEXT:\tIf Dave is round then Dave is green.\nFOL:\t(Round(Dave) -> Green(Dave))\nTEXT:\tIf someone is blue then they are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tCharlie is not round.\nFOL:\t-Round(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is red then they are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf someone is green and round then they are blue.\nFOL:\tall x. ((Green(x) & Round(x)) -> Blue(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tAll furry, red people are round.\nFOL:\tall x. ((Furry(x) & Red(x)) -> Round(x))\nTEXT:\tFurry people are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf Dave is round and Dave is young then Dave is green.\nFOL:\t(Round(Dave) & Young(Dave)) -> Green(Dave)\nTEXT:\tIf Dave is round then Dave is green.\nFOL:\tRound(Dave) -> Green(Dave)\nTEXT:\tIf someone is blue then they are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tCharlie is not round.\nFOL:\t-Round(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is red then they are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf someone is green and round then they are blue.\nFOL:\tall x. (Green(x) & Round(x) -> Blue(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tAll furry, red people are round.\nFOL:\tall x. (Furry(x) & Red(x) -> Round(x))\nTEXT:\tFurry people are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf Dave is round and Dave is young then Dave is green.\nFOL:\t(Round(Dave) & Young(Dave) -> Green(Dave))\nTEXT:\tIf Dave is round then Dave is green.\nFOL:\t(Round(Dave) -> Green(Dave))\nTEXT:\tIf someone is blue then they are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tCharlie is not round.\nFOL:\t-Round(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is red then they are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf someone is green and round then they are blue.\nFOL:\tall x. (Green(x) & Round(x) -> Blue(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tAll furry, red people are round.\nFOL:\tall x. (Furry(x) & Red(x) -> Round(x))\nTEXT:\tFurry people are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf Dave is round and Dave is young then Dave is green.\nFOL:\t(Round(Dave) & Young(Dave)) -> Green(Dave)\nTEXT:\tIf Dave is round then Dave is green.\nFOL:\tRound(Dave) -> Green(Dave)\nTEXT:\tIf someone is blue then they are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tCharlie is not round.\nFOL:\t-Round(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is red then they are round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf someone is green and round then they are blue.\nFOL:\tall x. (Green(x) & Round(x) -> Blue(x))\nTEXT:\tAll round people are green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tAll furry, red people are round.\nFOL:\tall x. (Furry(x) & Red(x) -> Round(x))\nTEXT:\tFurry people are blue.\nFOL:\tall x. (Furry(x) -> Blue(x))\nTEXT:\tIf Dave is round and Dave is young then Dave is green.\nFOL:\t(Round(Dave) & Young(Dave)) -> Green(Dave)\nTEXT:\tIf Dave is round then Dave is green.\nFOL:\tRound(Dave) -> Green(Dave)\nTEXT:\tIf someone is blue then they are white.\nFOL:\tall x. (Blue(x) -> White(x))\nTEXT:\tCharlie is not round.\nFOL:\t-Round(Charlie)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-likes(BaldEagle, Rabbit)\nTEXT:\tThe dog likes the lion.\nFOL:\tlikes(Dog, Lion)\nTEXT:\tThe lion is young.\nFOL:\tyoung(Lion)\nTEXT:\tThe lion does not like the dog.\nFOL:\t-likes(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tsees(Lion, BaldEagle)\nTEXT:\tThe rabbit is not blue.\nFOL:\t-blue(Rabbit)\nTEXT:\tThe rabbit is not red.\nFOL:\t-red(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tyoung(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tlikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tlikes(Rabbit, Lion)\nTEXT:\tThe rabbit does not see the bald eagle.\nFOL:\t-sees(Rabbit, BaldEagle)\nTEXT:\tThe rabbit does not see the dog.\nFOL:\t-sees(Rabbit, Dog)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tsees(Rabbit, Lion)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-visit(Rabbit, BaldEagle)\nTEXT:\tIf someone is nice then they are red.\nFOL:\tall x. (nice(x) -> red(x))\nTEXT:\tIf someone likes the dog then the dog sees the rabbit.\nFOL:\tall x. (likes(x, Dog) -> sees(Dog, Rabbit))\nTEXT:\tIf someone is nice and blue then they do not like the dog.\nFOL:\tall x. (nice(x) & blue(x) -> -likes(x, Dog))\nTEXT:\tIf someone is young and red then they visit the dog.\nFOL:\tall x. (young(x) & red(x) -> visit(x, Dog))\nTEXT:\tIf someone sees the rabbit then they visit the lion.\nFOL:\tall x. (sees(x, Rabbit) -> visit(x, Lion))\nTEXT:\tIf the dog visits the lion then the lion is nice.\nFOL:\t(visit(Dog, Lion) -> nice(Lion))\nTEXT:\tIf someone likes the rabbit and they are blue then the rabbit is nice.\nFOL:\tall x. (likes(x, Rabbit) & blue(x) -> nice(Rabbit))\nTEXT:\tIf someone likes the lion and they do not visit the dog then the lion visits the bald eagle.\nFOL:\tall x. (likes(x, Lion) & -visit(x, Dog) -> visit(Lion, BaldEagle))\nTEXT:\tThe lion visits the dog.\nFOL:\tvisit(Lion, Dog)\nANSWER:\tUncertain", "TEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-likes(BaldEagle, Rabbit)\nTEXT:\tThe dog likes the lion.\nFOL:\tlikes(Dog, Lion)\nTEXT:\tThe lion is young.\nFOL:\tyoung(Lion)\nTEXT:\tThe lion does not like the dog.\nFOL:\t-likes(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tsees(Lion, BaldEagle)\nTEXT:\tThe rabbit is not blue.\nFOL:\t-not(blue(Rabbit))\nTEXT:\tThe rabbit is not red.\nFOL:\t-not(red(Rabbit))\nTEXT:\tThe rabbit is young.\nFOL:\tyoung(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tlikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tlikes(Rabbit, Lion)\nTEXT:\tThe rabbit does not see the bald eagle.\nFOL:\t-not(sees(Rabbit, BaldEagle))\nTEXT:\tThe rabbit does not see the dog.\nFOL:\t-not(sees(Rabbit, Dog))\nTEXT:\tThe rabbit sees the lion.\nFOL:\tsees(Rabbit, Lion)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-not(visits(Rabbit, BaldEagle))\nTEXT:\tIf someone is nice then they are red.\nFOL:\tall x. (nice(x) -> red(x))\nTEXT:\tIf someone likes the dog then the dog sees the rabbit.\nFOL:\tall x. (likes(x, Dog) -> sees(Dog, Rabbit))\nTEXT:\tIf someone is nice and blue then they do not like the dog.\nFOL:\tall x. ((nice(x) & blue(x)) -> -likes(x, Dog))\nTEXT:\tIf someone is young and red then they visit the dog.\nFOL:\tall x. ((young(x) & red(x)) -> visits(x, Dog))\nTEXT:\tIf someone sees the rabbit then they visit the lion.\nFOL:\tall x. (sees(x, Rabbit) -> visits(x, Lion))\nTEXT:\tIf the dog visits the lion then the lion is nice.\nFOL:\t(visits(Dog, Lion) -> nice(Lion))\nTEXT:\tIf someone likes the rabbit and they are blue then the rabbit is nice.\nFOL:\tall x. ((likes(x, Rabbit) & blue(x)) -> nice(Rabbit))\nTEXT:\tIf someone likes the lion and they do not visit the dog then the lion visits the bald eagle.\nFOL:\tall x. ((likes(x, Lion) & -visits(x, Dog)) -> visits(Lion, BaldEagle))\nTEXT:\tThe lion visits the dog.\nFOL:\tvisits(Lion, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-likes(BaldEagle, Rabbit)\nTEXT:\tThe dog likes the lion.\nFOL:\tlikes(Dog, Lion)\nTEXT:\tThe lion is young.\nFOL:\tyoung(Lion)\nTEXT:\tThe lion does not like the dog.\nFOL:\t-likes(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tsees(Lion, BaldEagle)\nTEXT:\tThe rabbit is not blue.\nFOL:\t-blue(Rabbit)\nTEXT:\tThe rabbit is not red.\nFOL:\t-red(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tyoung(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tlikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tlikes(Rabbit, Lion)\nTEXT:\tThe rabbit does not see the bald eagle.\nFOL:\t-sees(Rabbit, BaldEagle)\nTEXT:\tThe rabbit does not see the dog.\nFOL:\t-sees(Rabbit, Dog)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tsees(Rabbit, Lion)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-visit(Rabbit, BaldEagle)\nTEXT:\tIf someone is nice then they are red.\nFOL:\tall x. (nice(x) -> red(x))\nTEXT:\tIf someone likes the dog then the dog sees the rabbit.\nFOL:\tall x. (likes(x, Dog) -> sees(Dog, Rabbit))\nTEXT:\tIf someone is nice and blue then they do not like the dog.\nFOL:\tall x. (nice(x) & blue(x) -> -likes(x, Dog))\nTEXT:\tIf someone is young and red then they visit the dog.\nFOL:\tall x. (young(x) & red(x) -> visit(x, Dog))\nTEXT:\tIf someone sees the rabbit then they visit the lion.\nFOL:\tall x. (sees(x, Rabbit) -> visit(x, Lion))\nTEXT:\tIf the dog visits the lion then the lion is nice.\nFOL:\t(visit(Dog, Lion) -> nice(Lion))\nTEXT:\tIf someone likes the rabbit and they are blue then the rabbit is nice.\nFOL:\tall x. (likes(x, Rabbit) & blue(x) -> nice(Rabbit))\nTEXT:\tIf someone likes the lion and they do not visit the dog then the lion visits the bald eagle.\nFOL:\tall x. (likes(x, Lion) & -visit(x, Dog) -> visit(Lion, BaldEagle))\nTEXT:\tThe lion visits the dog.\nFOL:\tvisit(Lion, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-likes(BaldEagle, Rabbit)\nTEXT:\tThe dog likes the lion.\nFOL:\tlikes(Dog, Lion)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe lion does not like the dog.\nFOL:\t-likes(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tsees(Lion, BaldEagle)\nTEXT:\tThe rabbit is not blue.\nFOL:\t-Blue(Rabbit)\nTEXT:\tThe rabbit is not red.\nFOL:\t-Red(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tlikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tlikes(Rabbit, Lion)\nTEXT:\tThe rabbit does not see the bald eagle.\nFOL:\t-sees(Rabbit, BaldEagle)\nTEXT:\tThe rabbit does not see the dog.\nFOL:\t-sees(Rabbit, Dog)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tsees(Rabbit, Lion)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-visit(Rabbit, BaldEagle)\nTEXT:\tIf someone is nice then they are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf someone likes the dog then the dog sees the rabbit.\nFOL:\tall x. (likes(x, Dog) -> sees(Dog, Rabbit))\nTEXT:\tIf someone is nice and blue then they do not like the dog.\nFOL:\tall x. (Nice(x) & Blue(x) -> -likes(x, Dog))\nTEXT:\tIf someone is young and red then they visit the dog.\nFOL:\tall x. (Young(x) & Red(x) -> visit(x, Dog))\nTEXT:\tIf someone sees the rabbit then they visit the lion.\nFOL:\tall x. (sees(x, Rabbit) -> visit(x, Lion))\nTEXT:\tIf the dog visits the lion then the lion is nice.\nFOL:\t(visit(Dog, Lion) -> Nice(Lion))\nTEXT:\tIf someone likes the rabbit and they are blue then the rabbit is nice.\nFOL:\tall x. (likes(x, Rabbit) & Blue(x) -> Nice(Rabbit))\nTEXT:\tIf someone likes the lion and they do not visit the dog then the lion visits the bald eagle.\nFOL:\tall x. (likes(x, Lion) & -visit(x, Dog) -> visit(Lion, BaldEagle))\nTEXT:\tThe lion visits the dog.\nFOL:\tvisit(Lion, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-likes(BaldEagle, Rabbit)\nTEXT:\tThe dog likes the lion.\nFOL:\tlikes(Dog, Lion)\nTEXT:\tThe lion is young.\nFOL:\tyoung(Lion)\nTEXT:\tThe lion does not like the dog.\nFOL:\t-likes(Lion, Dog)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tsees(Lion, BaldEagle)\nTEXT:\tThe rabbit is not blue.\nFOL:\t-blue(Rabbit)\nTEXT:\tThe rabbit is not red.\nFOL:\t-red(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tyoung(Rabbit)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tlikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tlikes(Rabbit, Lion)\nTEXT:\tThe rabbit does not see the bald eagle.\nFOL:\t-sees(Rabbit, BaldEagle)\nTEXT:\tThe rabbit does not see the dog.\nFOL:\t-sees(Rabbit, Dog)\nTEXT:\tThe rabbit sees the lion.\nFOL:\tsees(Rabbit, Lion)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-visits(Rabbit, BaldEagle)\nTEXT:\tIf someone is nice then they are red.\nFOL:\tall x. (nice(x) -> red(x))\nTEXT:\tIf someone likes the dog then the dog sees the rabbit.\nFOL:\tall x. (likes(x, Dog) -> sees(Dog, Rabbit))\nTEXT:\tIf someone is nice and blue then they do not like the dog.\nFOL:\tall x. (nice(x) & blue(x) -> -likes(x, Dog))\nTEXT:\tIf someone is young and red then they visit the dog.\nFOL:\tall x. (young(x) & red(x) -> visits(x, Dog))\nTEXT:\tIf someone sees the rabbit then they visit the lion.\nFOL:\tall x. (sees(x, Rabbit) -> visits(x, Lion))\nTEXT:\tIf the dog visits the lion then the lion is nice.\nFOL:\t(visits(Dog, Lion) -> nice(Lion))\nTEXT:\tIf someone likes the rabbit and they are blue then the rabbit is nice.\nFOL:\tall x. (likes(x, Rabbit) & blue(x) -> nice(Rabbit))\nTEXT:\tIf someone likes the lion and they do not visit the dog then the lion visits the bald eagle.\nFOL:\tall x. (likes(x, Lion) & -visits(x, Dog) -> visits(Lion, BaldEagle))\nTEXT:\tThe lion visits the dog.\nFOL:\tvisits(Lion, Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tBig, quiet things are green.\nFOL:\tall x. (Big(x) & Quiet(x) -> Green(x))\nTEXT:\tIf Bob is round then Bob is nice.\nFOL:\tRound(Bob) -> Nice(Bob)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll quiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tQuiet, round things are big.\nFOL:\tall x. (Quiet(x) & Round(x) -> Big(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tBig, quiet things are green.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Green(x))\nTEXT:\tIf Bob is round then Bob is nice.\nFOL:\tRound(Bob) -> Nice(Bob)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll quiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tQuiet, round things are big.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> Big(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tBig, quiet things are green.\nFOL:\tall x. (Big(x) & Quiet(x) -> Green(x))\nTEXT:\tIf Bob is round then Bob is nice.\nFOL:\tRound(Bob) -> Nice(Bob)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll quiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tQuiet, round things are big.\nFOL:\tall x. (Quiet(x) & Round(x) -> Big(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tBig, quiet things are green.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Green(x))\nTEXT:\tIf Bob is round then Bob is nice.\nFOL:\tRound(Bob) -> Nice(Bob)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll quiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tQuiet, round things are big.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> Big(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tBig, quiet things are green.\nFOL:\tall x. (Big(x) & Quiet(x) -> Green(x))\nTEXT:\tIf Bob is round then Bob is nice.\nFOL:\tRound(Bob) -> Nice(Bob)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll quiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll nice things are young.\nFOL:\tall x. (Nice(x) -> Young(x))\nTEXT:\tQuiet, round things are big.\nFOL:\tall x. (Quiet(x) & Round(x) -> Big(x))\nTEXT:\tErin is not big.\nFOL:\t-Big(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll red people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tBig, white people are green.\nFOL:\tall x. (Big(x) & White(x) -> Green(x))\nTEXT:\tIf someone is green and red then they are big.\nFOL:\tall x. (Green(x) & Red(x) -> Big(x))\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tAll furry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tFalse\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll red people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tBig, white people are green.\nFOL:\tall x. (Big(x) & White(x) -> Green(x))\nTEXT:\tIf someone is green and red then they are big.\nFOL:\tall x. (Green(x) & Red(x) -> Big(x))\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tAll furry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tFalse\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll red people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tBig, white people are green.\nFOL:\tall x. (Big(x) & White(x) -> Green(x))\nTEXT:\tIf someone is green and red then they are big.\nFOL:\tall x. (Green(x) & Red(x) -> Big(x))\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tAll furry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tFalse\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll red people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tBig, white people are green.\nFOL:\tall x. (Big(x) & White(x) -> Green(x))\nTEXT:\tIf someone is green and red then they are big.\nFOL:\tall x. (Green(x) & Red(x) -> Big(x))\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tAll furry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll red people are blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tBig, white people are green.\nFOL:\tall x. (Big(x) & White(x) -> Green(x))\nTEXT:\tIf someone is green and red then they are big.\nFOL:\tall x. (Green(x) & Red(x) -> Big(x))\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tAll furry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tFalse\n"], ["TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe dog needs the lion.\nFOL:\tNeeds(Dog, Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the rabbit then it eats the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(x, Rabbit))\nTEXT:\tIf something sees the lion and it is blue then the lion sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Blue(x)) -> Sees(Lion, Dog))\nTEXT:\tIf something eats the rabbit then it eats the dog.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Dog))\nTEXT:\tIf something is green and it sees the lion then the lion eats the rabbit.\nFOL:\tall x. ((Green(x) & Sees(x, Lion)) -> Eats(Lion, Rabbit))\nTEXT:\tIf something is rough then it eats the lion.\nFOL:\tall x. (Rough(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the dog and it eats the lion then the lion sees the rabbit.\nFOL:\tall x. ((Eats(x, Dog) & Eats(x, Lion)) -> Sees(Lion, Rabbit))\nTEXT:\tIf something is rough and it sees the lion then the lion is blue.\nFOL:\tall x. ((Rough(x) & Sees(x, Lion)) -> Blue(Lion))\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe dog needs the lion.\nFOL:\tNeeds(Dog, Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the rabbit then it eats the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(x, Rabbit))\nTEXT:\tIf something sees the lion and it is blue then the lion sees the dog.\nFOL:\tall x. (Blue(x) & Sees(x, Lion) -> Sees(Lion, Dog))\nTEXT:\tIf something eats the rabbit then it eats the dog.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Dog))\nTEXT:\tIf something is green and it sees the lion then the lion eats the rabbit.\nFOL:\tall x. (Green(x) & Sees(x, Lion) -> Eats(Lion, Rabbit))\nTEXT:\tIf something is rough then it eats the lion.\nFOL:\tall x. (Rough(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the dog and it eats the lion then the lion sees the rabbit.\nFOL:\tall x. ((Eats(x, Dog) & Eats(x, Lion)) -> Sees(Lion, Rabbit))\nTEXT:\tIf something is rough and it sees the lion then the lion is blue.\nFOL:\tall x. (Rough(x) & Sees(x, Lion) -> Blue(Lion))\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nANSWER:\tTrue", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe dog needs the lion.\nFOL:\tNeeds(Dog, Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the rabbit then it eats the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(x, Rabbit))\nTEXT:\tIf something sees the lion and it is blue then the lion sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Blue(x)) -> Sees(Lion, Dog))\nTEXT:\tIf something eats the rabbit then it eats the dog.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Dog))\nTEXT:\tIf something is green and it sees the lion then the lion eats the rabbit.\nFOL:\tall x. ((Green(x) & Sees(x, Lion)) -> Eats(Lion, Rabbit))\nTEXT:\tIf something is rough then it eats the lion.\nFOL:\tall x. (Rough(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the dog and it eats the lion then the lion sees the rabbit.\nFOL:\tall x. ((Eats(x, Dog) & Eats(x, Lion)) -> Sees(Lion, Rabbit))\nTEXT:\tIf something is rough and it sees the lion then the lion is blue.\nFOL:\tall x. ((Rough(x) & Sees(x, Lion)) -> Blue(Lion))\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nANSWER:\tTrue", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe dog needs the lion.\nFOL:\tNeeds(Dog, Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the rabbit then it eats the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(x, Rabbit))\nTEXT:\tIf something sees the lion and it is blue then the lion sees the dog.\nFOL:\tall x. (Sees(x, Lion) & Blue(x) -> Sees(Lion, Dog))\nTEXT:\tIf something eats the rabbit then it eats the dog.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Dog))\nTEXT:\tIf something is green and it sees the lion then the lion eats the rabbit.\nFOL:\tall x. (Green(x) & Sees(x, Lion) -> Eats(Lion, Rabbit))\nTEXT:\tIf something is rough then it eats the lion.\nFOL:\tall x. (Rough(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the dog and it eats the lion then the lion sees the rabbit.\nFOL:\tall x. (Eats(x, Dog) & Eats(x, Lion) -> Sees(Lion, Rabbit))\nTEXT:\tIf something is rough and it sees the lion then the lion is blue.\nFOL:\tall x. (Rough(x) & Sees(x, Lion) -> Blue(Lion))\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe dog eats the bald eagle.\nFOL:\tEats(Dog, BaldEagle)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe dog needs the lion.\nFOL:\tNeeds(Dog, Lion)\nTEXT:\tThe lion needs the bald eagle.\nFOL:\tNeeds(Lion, BaldEagle)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the rabbit then it eats the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(x, Rabbit))\nTEXT:\tIf something sees the lion and it is blue then the lion sees the dog.\nFOL:\tall x. ((Sees(x, Lion) & Blue(x)) -> Sees(Lion, Dog))\nTEXT:\tIf something eats the rabbit then it eats the dog.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Dog))\nTEXT:\tIf something is green and it sees the lion then the lion eats the rabbit.\nFOL:\tall x. ((Green(x) & Sees(x, Lion)) -> Eats(Lion, Rabbit))\nTEXT:\tIf something is rough then it eats the lion.\nFOL:\tall x. (Rough(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the dog and it eats the lion then the lion sees the rabbit.\nFOL:\tall x. ((Eats(x, Dog) & Eats(x, Lion)) -> Sees(Lion, Rabbit))\nTEXT:\tIf something is rough and it sees the lion then the lion is blue.\nFOL:\tall x. ((Rough(x) & Sees(x, Lion)) -> Blue(Lion))\nTEXT:\tThe bald eagle eats the dog.\nFOL:\tEats(BaldEagle, Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t- Likes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle does not see the squirrel.\nFOL:\t- Sees(BaldEagle, Squirrel)\nTEXT:\tThe cat is not green.\nFOL:\t- Green(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tThe squirrel is not blue.\nFOL:\t- Blue(Squirrel)\nTEXT:\tThe squirrel is not cold.\nFOL:\t- Cold(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the cat.\nFOL:\tNeeds(Squirrel, Cat)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf something likes the squirrel then the squirrel is big.\nFOL:\tall x. (Likes(x, Squirrel) -> Big(Squirrel))\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf something is kind and big then it needs the squirrel.\nFOL:\tall x. ((Kind(x) & Big(x)) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and it needs the cat then it does not like the rabbit.\nFOL:\tall x. ((Sees(x, Rabbit) & Needs(x, Cat)) -> - Likes(x, Rabbit))\nTEXT:\tIf something needs the rabbit and the rabbit is kind then it needs the cat.\nFOL:\tall x. ((Needs(x, Rabbit) & Kind(Rabbit)) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle likes the squirrel and the bald eagle needs the squirrel then the squirrel does not like the bald eagle.\nFOL:\t(Likes(BaldEagle, Squirrel) & Needs(BaldEagle, Squirrel)) -> - Likes(Squirrel, BaldEagle)\nTEXT:\tIf something needs the squirrel then it likes the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> Likes(x, Squirrel))\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t- Likes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle does not see the squirrel.\nFOL:\t- Sees(BaldEagle, Squirrel)\nTEXT:\tThe cat is not green.\nFOL:\t- Green(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tThe squirrel is not blue.\nFOL:\t- Blue(Squirrel)\nTEXT:\tThe squirrel is not cold.\nFOL:\t- Cold(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the cat.\nFOL:\tNeeds(Squirrel, Cat)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf something likes the squirrel then the squirrel is big.\nFOL:\tall x. (Likes(x, Squirrel) -> Big(Squirrel))\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf something is kind and big then it needs the squirrel.\nFOL:\tall x. (Kind(x) & Big(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and it needs the cat then it does not like the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) & Needs(x, Cat) -> -Likes(x, Rabbit))\nTEXT:\tIf something needs the rabbit and the rabbit is kind then it needs the cat.\nFOL:\tall x. (Needs(x, Rabbit) & Kind(Rabbit) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle likes the squirrel and the bald eagle needs the squirrel then the squirrel does not like the bald eagle.\nFOL:\t(Likes(BaldEagle, Squirrel) & Needs(BaldEagle, Squirrel)) -> -Likes(Squirrel, BaldEagle)\nTEXT:\tIf something sees the cat and it is blue then the cat does not see the bald eagle.\nFOL:\tall x. (Sees(x, Cat) & Blue(x) -> -Sees(Cat, BaldEagle))\nTEXT:\tIf something needs the squirrel then it likes the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> Likes(x, Squirrel))\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-likes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle does not see the squirrel.\nFOL:\t-See(BaldEagle, Squirrel)\nTEXT:\tThe cat is not green.\nFOL:\t-Green(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tThe squirrel is not blue.\nFOL:\t-Blue(Squirrel)\nTEXT:\tThe squirrel is not cold.\nFOL:\t-Cold(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the cat.\nFOL:\tNeeds(Squirrel, Cat)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf something likes the squirrel then the squirrel is big.\nFOL:\tall x. (Likes(x, Squirrel) -> Big(Squirrel))\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf something is kind and big then it needs the squirrel.\nFOL:\tall x. (Kind(x) & Big(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and it needs the cat then it does not like the rabbit.\nFOL:\tall x. (See(x, Rabbit) & Needs(x, Cat) -> -Likes(x, Rabbit))\nTEXT:\tIf something needs the rabbit and the rabbit is kind then it needs the cat.\nFOL:\tall x. (Needs(x, Rabbit) & Kind(Rabbit) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle likes the squirrel and the bald eagle needs the squirrel then the squirrel does not like the bald eagle.\nFOL:\t((Likes(BaldEagle, Squirrel) & Needs(BaldEagle, Squirrel)) -> -Likes(Squirrel, BaldEagle))\nTEXT:\tIf something sees the cat and it is blue then the cat does not see the bald eagle.\nFOL:\tall x. (See(x, Cat) & Blue(x) -> -See(Cat, BaldEagle))\nTEXT:\tIf something needs the squirrel then it likes the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> Likes(x, Squirrel))\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t- Likes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle does not see the squirrel.\nFOL:\t- Sees(BaldEagle, Squirrel)\nTEXT:\tThe cat is not green.\nFOL:\t- Green(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tThe squirrel is not blue.\nFOL:\t- Blue(Squirrel)\nTEXT:\tThe squirrel is not cold.\nFOL:\t- Cold(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the cat.\nFOL:\tNeeds(Squirrel, Cat)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf something likes the squirrel then the squirrel is big.\nFOL:\tall x. (Likes(x, Squirrel) -> Big(Squirrel))\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf something is kind and big then it needs the squirrel.\nFOL:\tall x. (Kind(x) & Big(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and it needs the cat then it does not like the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) & Needs(x, Cat) -> - Likes(x, Rabbit))\nTEXT:\tIf something needs the rabbit and the rabbit is kind then it needs the cat.\nFOL:\tall x. (Needs(x, Rabbit) & Kind(Rabbit) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle likes the squirrel and the bald eagle needs the squirrel then the squirrel does not like the bald eagle.\nFOL:\t(Likes(BaldEagle, Squirrel) & Needs(BaldEagle, Squirrel) -> - Likes(Squirrel, BaldEagle))\nTEXT:\tIf something sees the cat and it is blue then the cat does not see the bald eagle.\nFOL:\tall x. (Sees(x, Cat) & Blue(x) -> - Sees(Cat, BaldEagle))\nTEXT:\tIf something needs the squirrel then it likes the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> Likes(x, Squirrel))\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-likes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the cat.\nFOL:\tNeeds(BaldEagle, Cat)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle does not see the squirrel.\nFOL:\t-Sees(BaldEagle, Squirrel)\nTEXT:\tThe cat is not green.\nFOL:\t-Green(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe rabbit likes the bald eagle.\nFOL:\tLikes(Rabbit, BaldEagle)\nTEXT:\tThe squirrel is not blue.\nFOL:\t-Blue(Squirrel)\nTEXT:\tThe squirrel is not cold.\nFOL:\t-Cold(Squirrel)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the cat.\nFOL:\tNeeds(Squirrel, Cat)\nTEXT:\tThe squirrel needs the rabbit.\nFOL:\tNeeds(Squirrel, Rabbit)\nTEXT:\tIf something likes the squirrel then the squirrel is big.\nFOL:\tall x. (Likes(x, Squirrel) -> Big(Squirrel))\nTEXT:\tAll big things are green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tIf something is kind and big then it needs the squirrel.\nFOL:\tall x. (Kind(x) & Big(x) -> Needs(x, Squirrel))\nTEXT:\tIf something sees the rabbit and it needs the cat then it does not like the rabbit.\nFOL:\tall x. (Sees(x, Rabbit) & Needs(x, Cat) -> -Likes(x, Rabbit))\nTEXT:\tIf something needs the rabbit and the rabbit is kind then it needs the cat.\nFOL:\tall x. (Needs(x, Rabbit) & Kind(Rabbit) -> Needs(x, Cat))\nTEXT:\tIf the bald eagle likes the squirrel and the bald eagle needs the squirrel then the squirrel does not like the bald eagle.\nFOL:\t(Likes(BaldEagle, Squirrel) & Needs(BaldEagle, Squirrel) -> -Likes(Squirrel, BaldEagle))\nTEXT:\tIf something sees the cat and it is blue then the cat does not see the bald eagle.\nFOL:\tall x. (Sees(x, Cat) & Blue(x) -> -Sees(Cat, BaldEagle))\nTEXT:\tIf something needs the squirrel then it likes the squirrel.\nFOL:\tall x. (Needs(x, Squirrel) -> Likes(x, Squirrel))\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse sees the dog.\nFOL:\tSees(Mouse, Dog)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe mouse visits the dog.\nFOL:\tVisits(Mouse, Dog)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone is young and they see the dog then they are green.\nFOL:\tall x. ((Young(x) & Sees(x, Dog)) -> Green(x))\nTEXT:\tIf someone eats the dog then they see the dog.\nFOL:\tall x. (Eats(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the tiger eats the dog and the dog visits the mouse then the tiger is young.\nFOL:\t(Eats(Tiger, Dog) & Visits(Dog, Mouse)) -> Young(Tiger)\nTEXT:\tIf someone visits the cat and the cat is nice then the cat sees the dog.\nFOL:\tall x. ((Visits(x, Cat) & Nice(Cat)) -> Sees(Cat, Dog))\nTEXT:\tIf someone sees the dog and the dog is green then they see the cat.\nFOL:\tall x. ((Sees(x, Dog) & Green(Dog)) -> Sees(x, Cat))\nTEXT:\tIf someone is rough then they eat the dog.\nFOL:\tall x. (Rough(x) -> Eats(x, Dog))\nTEXT:\tAll green people are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf someone eats the dog then the dog visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse sees the dog.\nFOL:\tSees(Mouse, Dog)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe mouse visits the dog.\nFOL:\tVisits(Mouse, Dog)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone is young and they see the dog then they are green.\nFOL:\tall x. (Young(x) & Sees(x, Dog) -> Green(x))\nTEXT:\tIf someone eats the dog then they see the dog.\nFOL:\tall x. (Eats(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the tiger eats the dog and the dog visits the mouse then the tiger is young.\nFOL:\t(Eats(Tiger, Dog) & Visits(Dog, Mouse)) -> Young(Tiger)\nTEXT:\tIf someone visits the cat and the cat is nice then the cat sees the dog.\nFOL:\tall x. (Visits(x, Cat) & Nice(Cat) -> Sees(Cat, Dog))\nTEXT:\tIf someone sees the dog and the dog is green then they see the cat.\nFOL:\tall x. (Sees(x, Dog) & Green(Dog) -> Sees(x, Cat))\nTEXT:\tIf someone is rough then they eat the dog.\nFOL:\tall x. (Rough(x) -> Eats(x, Dog))\nTEXT:\tAll green people are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf someone eats the dog then the dog visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse sees the dog.\nFOL:\tSees(Mouse, Dog)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe mouse visits the dog.\nFOL:\tVisits(Mouse, Dog)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone is young and they see the dog then they are green.\nFOL:\tall x. (Young(x) & Sees(x, Dog) -> Green(x))\nTEXT:\tIf someone eats the dog then they see the dog.\nFOL:\tall x. (Eats(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the tiger eats the dog and the dog visits the mouse then the tiger is young.\nFOL:\t(Eats(Tiger, Dog) & Visits(Dog, Mouse) -> Young(Tiger))\nTEXT:\tIf someone visits the cat and the cat is nice then the cat sees the dog.\nFOL:\tall x. (Visits(x, Cat) & Nice(Cat) -> Sees(Cat, Dog))\nTEXT:\tIf someone sees the dog and the dog is green then they see the cat.\nFOL:\tall x. (Sees(x, Dog) & Green(Dog) -> Sees(x, Cat))\nTEXT:\tIf someone is rough then they eat the dog.\nFOL:\tall x. (Rough(x) -> Eats(x, Dog))\nTEXT:\tAll green people are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf someone eats the dog then the dog visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse sees the dog.\nFOL:\tSees(Mouse, Dog)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe mouse visits the dog.\nFOL:\tVisits(Mouse, Dog)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone is young and they see the dog then they are green.\nFOL:\tall x. ((Young(x) & Sees(x, Dog)) -> Green(x))\nTEXT:\tIf someone eats the dog then they see the dog.\nFOL:\tall x. (Eats(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the tiger eats the dog and the dog visits the mouse then the tiger is young.\nFOL:\t(Eats(Tiger, Dog) & Visits(Dog, Mouse)) -> Young(Tiger)\nTEXT:\tIf someone visits the cat and the cat is nice then the cat sees the dog.\nFOL:\tall x. ((Visits(x, Cat) & Nice(Cat)) -> Sees(Cat, Dog))\nTEXT:\tIf someone sees the dog and the dog is green then they see the cat.\nFOL:\tall x. ((Sees(x, Dog) & Green(Dog)) -> Sees(x, Cat))\nTEXT:\tIf someone is rough then they eat the dog.\nFOL:\tall x. (Rough(x) -> Eats(x, Dog))\nTEXT:\tAll green people are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf someone eats the dog then the dog visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe mouse sees the dog.\nFOL:\tSees(Mouse, Dog)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe mouse visits the dog.\nFOL:\tVisits(Mouse, Dog)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tThe tiger sees the mouse.\nFOL:\tSees(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone eats the mouse then they are green.\nFOL:\tall x. (Eats(x, Mouse) -> Green(x))\nTEXT:\tIf someone is young and they see the dog then they are green.\nFOL:\tall x. (Young(x) & Sees(x, Dog) -> Green(x))\nTEXT:\tIf someone eats the dog then they see the dog.\nFOL:\tall x. (Eats(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the tiger eats the dog and the dog visits the mouse then the tiger is young.\nFOL:\t(Eats(Tiger, Dog) & Visits(Dog, Mouse)) -> Young(Tiger)\nTEXT:\tIf someone visits the cat and the cat is nice then the cat sees the dog.\nFOL:\tall x. (Visits(x, Cat) & Nice(Cat) -> Sees(Cat, Dog))\nTEXT:\tIf someone sees the dog and the dog is green then they see the cat.\nFOL:\tall x. (Sees(x, Dog) & Green(Dog) -> Sees(x, Cat))\nTEXT:\tIf someone is rough then they eat the dog.\nFOL:\tall x. (Rough(x) -> Eats(x, Dog))\nTEXT:\tAll green people are rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf someone eats the dog then the dog visits the mouse.\nFOL:\tall x. (Eats(x, Dog) -> Visits(Dog, Mouse))\nTEXT:\tThe tiger is green.\nFOL:\tGreen(Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tQuiet, nice things are white.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> White(x))\nTEXT:\tIf something is rough then it is quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Bob is white then Bob is young.\nFOL:\t(White(Bob) -> Young(Bob))\nTEXT:\tIf Anne is big and Anne is blue then Anne is rough.\nFOL:\t((Big(Anne) & Blue(Anne)) -> Rough(Anne))\nTEXT:\tIf Bob is rough and Bob is quiet then Bob is nice.\nFOL:\t((Rough(Bob) & Quiet(Bob)) -> Nice(Bob))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Erin is nice and Erin is young then Erin is big.\nFOL:\t((Nice(Erin) & Young(Erin)) -> Big(Erin))\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tQuiet, nice things are white.\nFOL:\tall x. (Quiet(x) & Nice(x) -> White(x))\nTEXT:\tIf something is rough then it is quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Bob is white then Bob is young.\nFOL:\tWhite(Bob) -> Young(Bob)\nTEXT:\tIf Anne is big and Anne is blue then Anne is rough.\nFOL:\t(Big(Anne) & Blue(Anne)) -> Rough(Anne)\nTEXT:\tIf Bob is rough and Bob is quiet then Bob is nice.\nFOL:\t(Rough(Bob) & Quiet(Bob)) -> Nice(Bob)\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Erin is nice and Erin is young then Erin is big.\nFOL:\t(Nice(Erin) & Young(Erin)) -> Big(Erin)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nANSWER:\tFalse\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tQuiet, nice things are white.\nFOL:\tall x. (Quiet(x) & Nice(x) -> White(x))\nTEXT:\tIf something is rough then it is quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Bob is white then Bob is young.\nFOL:\tWhite(Bob) -> Young(Bob)\nTEXT:\tIf Anne is big and Anne is blue then Anne is rough.\nFOL:\t(Big(Anne) & Blue(Anne)) -> Rough(Anne)\nTEXT:\tIf Bob is rough and Bob is quiet then Bob is nice.\nFOL:\t(Rough(Bob) & Quiet(Bob)) -> Nice(Bob)\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Erin is nice and Erin is young then Erin is big.\nFOL:\t(Nice(Erin) & Young(Erin)) -> Big(Erin)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tQuiet, nice things are white.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> White(x))\nTEXT:\tIf something is rough then it is quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Bob is white then Bob is young.\nFOL:\tWhite(Bob) -> Young(Bob)\nTEXT:\tIf Anne is big and Anne is blue then Anne is rough.\nFOL:\t(Big(Anne) & Blue(Anne)) -> Rough(Anne)\nTEXT:\tIf Bob is rough and Bob is quiet then Bob is nice.\nFOL:\t(Rough(Bob) & Quiet(Bob)) -> Nice(Bob)\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Erin is nice and Erin is young then Erin is big.\nFOL:\t(Nice(Erin) & Young(Erin)) -> Big(Erin)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tQuiet, nice things are white.\nFOL:\tall x. (Quiet(x) & Nice(x) -> White(x))\nTEXT:\tIf something is rough then it is quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf Bob is white then Bob is young.\nFOL:\tWhite(Bob) -> Young(Bob)\nTEXT:\tIf Anne is big and Anne is blue then Anne is rough.\nFOL:\t(Big(Anne) & Blue(Anne)) -> Rough(Anne)\nTEXT:\tIf Bob is rough and Bob is quiet then Bob is nice.\nFOL:\t(Rough(Bob) & Quiet(Bob)) -> Nice(Bob)\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf Erin is nice and Erin is young then Erin is big.\nFOL:\t(Nice(Erin) & Young(Erin)) -> Big(Erin)\nTEXT:\tBob is not quiet.\nFOL:\t-Quiet(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tThe dog does not eat the mouse.\nFOL:\t-Eats(Dog, Mouse)\nTEXT:\tThe dog does not eat the tiger.\nFOL:\t-Eats(Dog, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe mouse is not cold.\nFOL:\t-Cold(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse needs the dog.\nFOL:\tNeeds(Mouse, Dog)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not need the lion.\nFOL:\t-Needs(Tiger, Lion)\nTEXT:\tIf someone likes the mouse and they are blue then the mouse eats the dog.\nFOL:\tall x. (Likes(x, Mouse) & Blue(x) -> Eats(Mouse, Dog))\nTEXT:\tIf someone likes the mouse and the mouse is blue then the mouse is rough.\nFOL:\tall x. (Likes(x, Mouse) & Blue(Mouse) -> Rough(Mouse))\nTEXT:\tIf someone is cold then they need the tiger.\nFOL:\tall x. (Cold(x) -> Needs(x, Tiger))\nTEXT:\tIf someone eats the lion then they need the tiger.\nFOL:\tall x. (Eats(x, Lion) -> Needs(x, Tiger))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Likes(x, Dog) -> Rough(x))\nTEXT:\tIf someone is blue and they eat the lion then the lion is rough.\nFOL:\tall x. (Blue(x) & Eats(x, Lion) -> Rough(Lion))\nTEXT:\tIf someone is rough then they eat the lion.\nFOL:\tall x. (Rough(x) -> Eats(x, Lion))\nTEXT:\tIf someone needs the tiger then they do not like the lion.\nFOL:\tall x. (Needs(x, Tiger) -> -Likes(x, Lion))\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog does not eat the mouse.\nFOL:\t- Eat(Dog, Mouse)\nTEXT:\tThe dog does not eat the tiger.\nFOL:\t- Eat(Dog, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLike(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLike(Dog, Mouse)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEat(Lion, Tiger)\nTEXT:\tThe mouse is not cold.\nFOL:\t- Cold(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse needs the dog.\nFOL:\tNeed(Mouse, Dog)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not need the lion.\nFOL:\t- Need(Tiger, Lion)\nTEXT:\tIf someone likes the mouse and they are blue then the mouse eats the dog.\nFOL:\tall x. ((Like(x, Mouse) & Blue(x)) -> Eat(Mouse, Dog))\nTEXT:\tIf someone likes the mouse and the mouse is blue then the mouse is rough.\nFOL:\tall x. ((Like(x, Mouse) & Blue(Mouse)) -> Rough(Mouse))\nTEXT:\tIf someone is cold then they need the tiger.\nFOL:\tall x. (Cold(x) -> Need(x, Tiger))\nTEXT:\tIf someone eats the lion then they need the tiger.\nFOL:\tall x. (Eat(x, Lion) -> Need(x, Tiger))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Like(x, Dog) -> Rough(x))\nTEXT:\tIf someone is blue and they eat the lion then the lion is rough.\nFOL:\tall x. ((Blue(x) & Eat(x, Lion)) -> Rough(Lion))\nTEXT:\tIf someone is rough then they eat the lion.\nFOL:\tall x. (Rough(x) -> Eat(x, Lion))\nTEXT:\tIf someone needs the tiger then they do not like the lion.\nFOL:\tall x. (Need(x, Tiger) -> -Like(x, Lion))\nTEXT:\tThe mouse eats the lion.\nFOL:\tEat(Mouse, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog does not eat the mouse.\nFOL:\t-Eat(Dog, Mouse)\nTEXT:\tThe dog does not eat the tiger.\nFOL:\t-Eat(Dog, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLike(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLike(Dog, Mouse)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEat(Lion, Tiger)\nTEXT:\tThe mouse is not cold.\nFOL:\t-Cold(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse needs the dog.\nFOL:\tNeed(Mouse, Dog)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not need the lion.\nFOL:\t-Need(Tiger, Lion)\nTEXT:\tIf someone likes the mouse and they are blue then the mouse eats the dog.\nFOL:\tall x. ((Like(x, Mouse) & Blue(x)) -> Eat(Mouse, Dog))\nTEXT:\tIf someone likes the mouse and the mouse is blue then the mouse is rough.\nFOL:\tall x. ((Like(x, Mouse) & Blue(Mouse)) -> Rough(Mouse))\nTEXT:\tIf someone is cold then they need the tiger.\nFOL:\tall x. (Cold(x) -> Need(x, Tiger))\nTEXT:\tIf someone eats the lion then they need the tiger.\nFOL:\tall x. (Eat(x, Lion) -> Need(x, Tiger))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Like(x, Dog) -> Rough(x))\nTEXT:\tIf someone is blue and they eat the lion then the lion is rough.\nFOL:\tall x. ((Blue(x) & Eat(x, Lion)) -> Rough(Lion))\nTEXT:\tIf someone is rough then they eat the lion.\nFOL:\tall x. (Rough(x) -> Eat(x, Lion))\nTEXT:\tIf someone needs the tiger then they do not like the lion.\nFOL:\tall x. (Need(x, Tiger) -> -Like(x, Lion))\nTEXT:\tThe mouse eats the lion.\nFOL:\tEat(Mouse, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog does not eat the mouse.\nFOL:\t-Eat(Dog, Mouse)\nTEXT:\tThe dog does not eat the tiger.\nFOL:\t-Eat(Dog, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLike(Dog, Lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLike(Dog, Mouse)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEat(Lion, Tiger)\nTEXT:\tThe mouse is not cold.\nFOL:\t-Cold(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse needs the dog.\nFOL:\tNeed(Mouse, Dog)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not need the lion.\nFOL:\t-Need(Tiger, Lion)\nTEXT:\tIf someone likes the mouse and they are blue then the mouse eats the dog.\nFOL:\tall x. (Like(x, Mouse) & Blue(x) -> Eat(Mouse, Dog))\nTEXT:\tIf someone likes the mouse and the mouse is blue then the mouse is rough.\nFOL:\tall x. (Like(x, Mouse) & Blue(Mouse) -> Rough(Mouse))\nTEXT:\tIf someone is cold then they need the tiger.\nFOL:\tall x. (Cold(x) -> Need(x, Tiger))\nTEXT:\tIf someone eats the lion then they need the tiger.\nFOL:\tall x. (Eat(x, Lion) -> Need(x, Tiger))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Like(x, Dog) -> Rough(x))\nTEXT:\tIf someone is blue and they eat the lion then the lion is rough.\nFOL:\tall x. (Blue(x) & Eat(x, Lion) -> Rough(Lion))\nTEXT:\tIf someone is rough then they eat the lion.\nFOL:\tall x. (Rough(x) -> Eat(x, Lion))\nTEXT:\tIf someone needs the tiger then they do not like the lion.\nFOL:\tall x. (Need(x, Tiger) -> -Like(x, Lion))\nTEXT:\tThe mouse eats the lion.\nFOL:\tEat(Mouse, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog does not eat the mouse.\nFOL:\t- Eats(dog, mouse)\nTEXT:\tThe dog does not eat the tiger.\nFOL:\t- Eats(dog, tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(dog)\nTEXT:\tThe dog likes the lion.\nFOL:\tLikes(dog, lion)\nTEXT:\tThe dog likes the mouse.\nFOL:\tLikes(dog, mouse)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(lion, tiger)\nTEXT:\tThe mouse is not cold.\nFOL:\t- Cold(mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(mouse)\nTEXT:\tThe mouse needs the dog.\nFOL:\tNeeds(mouse, dog)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(tiger)\nTEXT:\tThe tiger does not need the lion.\nFOL:\t- Needs(tiger, lion)\nTEXT:\tIf someone likes the mouse and they are blue then the mouse eats the dog.\nFOL:\tall x. ((Likes(x, mouse) & Blue(x)) -> Eats(mouse, dog))\nTEXT:\tIf someone likes the mouse and the mouse is blue then the mouse is rough.\nFOL:\tall x. ((Likes(x, mouse) & Blue(mouse)) -> Rough(mouse))\nTEXT:\tIf someone is cold then they need the tiger.\nFOL:\tall x. (Cold(x) -> Needs(x, tiger))\nTEXT:\tIf someone eats the lion then they need the tiger.\nFOL:\tall x. (Eats(x, lion) -> Needs(x, tiger))\nTEXT:\tIf someone likes the dog then they are rough.\nFOL:\tall x. (Likes(x, dog) -> Rough(x))\nTEXT:\tIf someone is blue and they eat the lion then the lion is rough.\nFOL:\tall x. ((Blue(x) & Eats(x, lion)) -> Rough(lion))\nTEXT:\tIf someone is rough then they eat the lion.\nFOL:\tall x. (Rough(x) -> Eats(x, lion))\nTEXT:\tIf someone needs the tiger then they do not like the lion.\nFOL:\tall x. (Needs(x, tiger) -> - Likes(x, lion))\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(mouse, lion)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll big people are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tGreen people are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tAll blue, young people are smart.\nFOL:\tall x. (Blue(x) & Young(x) -> Smart(x))\nTEXT:\tIf someone is blue and smart then they are cold.\nFOL:\tall x. (Blue(x) & Smart(x) -> Cold(x))\nTEXT:\tSmart, blue people are green.\nFOL:\tall x. (Smart(x) & Blue(x) -> Green(x))\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll kind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCharlie is not smart.\nFOL:\t-Smart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll big people are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tGreen people are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tAll blue, young people are smart.\nFOL:\tall x. (Blue(x) & Young(x) -> Smart(x))\nTEXT:\tIf someone is blue and smart then they are cold.\nFOL:\tall x. (Blue(x) & Smart(x) -> Cold(x))\nTEXT:\tSmart, blue people are green.\nFOL:\tall x. (Smart(x) & Blue(x) -> Green(x))\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll kind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCharlie is not smart.\nFOL:\t-Smart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll big people are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tGreen people are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tAll blue, young people are smart.\nFOL:\tall x. (Blue(x) & Young(x) -> Smart(x))\nTEXT:\tIf someone is blue and smart then they are cold.\nFOL:\tall x. (Blue(x) & Smart(x) -> Cold(x))\nTEXT:\tSmart, blue people are green.\nFOL:\tall x. (Smart(x) & Blue(x) -> Green(x))\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll kind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCharlie is not smart.\nFOL:\t-Smart(Charlie)\nANSWER:\tFalse\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll big people are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tGreen people are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tAll blue, young people are smart.\nFOL:\tall x. (Blue(x) & Young(x) -> Smart(x))\nTEXT:\tIf someone is blue and smart then they are cold.\nFOL:\tall x. (Blue(x) & Smart(x) -> Cold(x))\nTEXT:\tSmart, blue people are green.\nFOL:\tall x. (Smart(x) & Blue(x) -> Green(x))\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll kind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCharlie is not smart.\nFOL:\t-Smart(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tAll big people are kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tGreen people are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tAll blue, young people are smart.\nFOL:\tall x. (Blue(x) & Young(x) -> Smart(x))\nTEXT:\tIf someone is blue and smart then they are cold.\nFOL:\tall x. (Blue(x) & Smart(x) -> Cold(x))\nTEXT:\tSmart, blue people are green.\nFOL:\tall x. (Smart(x) & Blue(x) -> Green(x))\nTEXT:\tBlue people are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll kind people are blue.\nFOL:\tall x. (Kind(x) -> Blue(x))\nTEXT:\tCharlie is not smart.\nFOL:\t-Smart(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is not cold.\nFOL:\t-Cold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tIf something is green and not round then it is white.\nFOL:\tall x. ((Green(x) & -Round(x)) -> White(x))\nTEXT:\tCold, round things are nice.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Nice(x))\nTEXT:\tIf Bob is furry then Bob is white.\nFOL:\tFurry(Bob) -> White(Bob)\nTEXT:\tRound things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Anne is white then Anne is furry.\nFOL:\tWhite(Anne) -> Furry(Anne)\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not cold.\nFOL:\t-Cold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tIf something is green and not round then it is white.\nFOL:\tall x. ((Green(x) & -Round(x)) -> White(x))\nTEXT:\tCold, round things are nice.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Nice(x))\nTEXT:\tIf Bob is furry then Bob is white.\nFOL:\t(Furry(Bob) -> White(Bob))\nTEXT:\tRound things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Anne is white then Anne is furry.\nFOL:\t(White(Anne) -> Furry(Anne))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not cold.\nFOL:\t-Cold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tIf something is green and not round then it is white.\nFOL:\tall x. ((Green(x) & -Round(x)) -> White(x))\nTEXT:\tCold, round things are nice.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Nice(x))\nTEXT:\tIf Bob is furry then Bob is white.\nFOL:\t(Furry(Bob) -> White(Bob))\nTEXT:\tRound things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Anne is white then Anne is furry.\nFOL:\t(White(Anne) -> Furry(Anne))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not cold.\nFOL:\t-Cold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tIf something is green and not round then it is white.\nFOL:\tall x. ((Green(x) & -Round(x)) -> White(x))\nTEXT:\tCold, round things are nice.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Nice(x))\nTEXT:\tIf Bob is furry then Bob is white.\nFOL:\t(Furry(Bob) -> White(Bob))\nTEXT:\tRound things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Anne is white then Anne is furry.\nFOL:\t(White(Anne) -> Furry(Anne))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not cold.\nFOL:\t-Cold(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tAll nice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tFurry things are green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tIf something is green and not round then it is white.\nFOL:\tall x. (Green(x) & -Round(x) -> White(x))\nTEXT:\tCold, round things are nice.\nFOL:\tall x. (Cold(x) & Round(x) -> Nice(x))\nTEXT:\tIf Bob is furry then Bob is white.\nFOL:\t(Furry(Bob) -> White(Bob))\nTEXT:\tRound things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tIf Anne is white then Anne is furry.\nFOL:\t(White(Anne) -> Furry(Anne))\nTEXT:\tAll nice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tRough things are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tKind things are not furry.\nFOL:\tall x. (Kind(x) -> -Furry(x))\nTEXT:\tIf Dave is furry then Dave is cold.\nFOL:\tFurry(Dave) -> Cold(Dave)\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tAll quiet, green things are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tAll quiet things are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAll furry things are not cold.\nFOL:\tall x. (Furry(x) -> -Cold(x))\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tKind things are not furry.\nFOL:\tall x. (Kind(x) -> -Furry(x))\nTEXT:\tIf Dave is furry then Dave is cold.\nFOL:\tFurry(Dave) -> Cold(Dave)\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tAll quiet, green things are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tAll quiet things are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAll furry things are not cold.\nFOL:\tall x. (Furry(x) -> -Cold(x))\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tKind things are not furry.\nFOL:\tall x. (Kind(x) -> -Furry(x))\nTEXT:\tIf Dave is furry then Dave is cold.\nFOL:\tFurry(Dave) -> Cold(Dave)\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tAll quiet, green things are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tAll quiet things are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAll furry things are not cold.\nFOL:\tall x. (Furry(x) -> -Cold(x))\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tKind things are not furry.\nFOL:\tall x. (Kind(x) -> -Furry(x))\nTEXT:\tIf Dave is furry then Dave is cold.\nFOL:\tFurry(Dave) -> Cold(Dave)\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tAll quiet, green things are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tAll quiet things are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAll furry things are not cold.\nFOL:\tall x. (Furry(x) -> -Cold(x))\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tAnne is not kind.\nFOL:\t-Kind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tKind things are not furry.\nFOL:\tall x. (Kind(x) -> -Furry(x))\nTEXT:\tIf Dave is furry then Dave is cold.\nFOL:\tFurry(Dave) -> Cold(Dave)\nTEXT:\tCold things are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tAll quiet, green things are round.\nFOL:\tall x. (Quiet(x) & Green(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tAll quiet things are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tAll furry things are not cold.\nFOL:\tall x. (Furry(x) -> -Cold(x))\nTEXT:\tFiona is not round.\nFOL:\t-Round(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear visits the dog.\nFOL:\tVisits(Bear, Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the dog.\nFOL:\t-Needs(Tiger, Dog)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf someone is rough then they are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone visits the bear and the bear is green then the bear is kind.\nFOL:\tall x. (Visits(x, Bear) & Green(Bear) -> Kind(Bear))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Needs(x, Dog) -> -Chases(x, Tiger))\nTEXT:\tIf someone visits the bear and they are not blue then the bear visits the rabbit.\nFOL:\tall x. (Visits(x, Bear) & -Blue(x) -> Visits(Bear, Rabbit))\nTEXT:\tIf someone visits the dog and the dog is green then they chase the dog.\nFOL:\tall x. (Visits(x, Dog) & Green(Dog) -> Chases(x, Dog))\nTEXT:\tIf someone needs the dog then the dog is rough.\nFOL:\tall x. (Needs(x, Dog) -> Rough(Dog))\nTEXT:\tIf someone chases the dog then they are cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(x))\nTEXT:\tIf someone visits the bear and they are not rough then the bear does not chase the rabbit.\nFOL:\tall x. (Visits(x, Bear) & -Rough(x) -> -Chases(Bear, Rabbit))\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear visits the dog.\nFOL:\tVisits(Bear, Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the dog.\nFOL:\t-Needs(Tiger, Dog)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf someone is rough then they are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone visits the bear and the bear is green then the bear is kind.\nFOL:\tall x. ((Visits(x, Bear) & Green(Bear)) -> Kind(Bear))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the tiger.\nFOL:\tall x. ((Cold(x) & Needs(x, Dog)) -> -Chases(x, Tiger))\nTEXT:\tIf someone visits the bear and they are not blue then the bear visits the rabbit.\nFOL:\tall x. ((Visits(x, Bear) & -Blue(x)) -> Visits(Bear, Rabbit))\nTEXT:\tIf someone visits the dog and the dog is green then they chase the dog.\nFOL:\tall x. ((Visits(x, Dog) & Green(Dog)) -> Chases(x, Dog))\nTEXT:\tIf someone needs the dog then the dog is rough.\nFOL:\tall x. (Needs(x, Dog) -> Rough(Dog))\nTEXT:\tIf someone chases the dog then they are cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(x))\nTEXT:\tIf someone visits the bear and they are not rough then the bear does not chase the rabbit.\nFOL:\tall x. ((Visits(x, Bear) & -Rough(x)) -> -Chases(Bear, Rabbit))\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear visits the dog.\nFOL:\tVisits(Bear, Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the dog.\nFOL:\t-Needs(Tiger, Dog)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf someone is rough then they are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone visits the bear and the bear is green then the bear is kind.\nFOL:\tall x. (Visits(x, Bear) & Green(Bear) -> Kind(Bear))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Needs(x, Dog) -> -Chases(x, Tiger))\nTEXT:\tIf someone visits the bear and they are not blue then the bear visits the rabbit.\nFOL:\tall x. (-Blue(x) & Visits(x, Bear) -> Visits(Bear, Rabbit))\nTEXT:\tIf someone visits the dog and the dog is green then they chase the dog.\nFOL:\tall x. (Visits(x, Dog) & Green(Dog) -> Chases(x, Dog))\nTEXT:\tIf someone needs the dog then the dog is rough.\nFOL:\tall x. (Needs(x, Dog) -> Rough(Dog))\nTEXT:\tIf someone chases the dog then they are cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(x))\nTEXT:\tIf someone visits the bear and they are not rough then the bear does not chase the rabbit.\nFOL:\tall x. (-Rough(x) & Visits(x, Bear) -> -Chases(Bear, Rabbit))\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear visits the dog.\nFOL:\tVisits(Bear, Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the dog.\nFOL:\t-Needs(Tiger, Dog)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf someone is rough then they are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone visits the bear and the bear is green then the bear is kind.\nFOL:\tall x. (Visits(x, Bear) & Green(Bear) -> Kind(Bear))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Needs(x, Dog) -> -Chases(x, Tiger))\nTEXT:\tIf someone visits the bear and they are not blue then the bear visits the rabbit.\nFOL:\tall x. (Visits(x, Bear) & -Blue(x) -> Visits(Bear, Rabbit))\nTEXT:\tIf someone visits the dog and the dog is green then they chase the dog.\nFOL:\tall x. (Visits(x, Dog) & Green(Dog) -> Chases(x, Dog))\nTEXT:\tIf someone needs the dog then the dog is rough.\nFOL:\tall x. (Needs(x, Dog) -> Rough(Dog))\nTEXT:\tIf someone chases the dog then they are cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(x))\nTEXT:\tIf someone visits the bear and they are not rough then the bear does not chase the rabbit.\nFOL:\tall x. (Visits(x, Bear) & -Rough(x) -> -Chases(Bear, Rabbit))\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\nTEXT:\tThe bear needs the dog.\nFOL:\tNeeds(Bear, Dog)\nTEXT:\tThe bear visits the dog.\nFOL:\tVisits(Bear, Dog)\nTEXT:\tThe dog needs the tiger.\nFOL:\tNeeds(Dog, Tiger)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the dog.\nFOL:\t-Needs(Tiger, Dog)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf someone is rough then they are green.\nFOL:\tall x. (Rough(x) -> Green(x))\nTEXT:\tIf someone visits the bear and the bear is green then the bear is kind.\nFOL:\tall x. (Visits(x, Bear) & Green(Bear) -> Kind(Bear))\nTEXT:\tIf someone is cold and they need the dog then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Needs(x, Dog) -> -Chases(x, Tiger))\nTEXT:\tIf someone visits the bear and they are not blue then the bear visits the rabbit.\nFOL:\tall x. (-Blue(x) & Visits(x, Bear) -> Visits(Bear, Rabbit))\nTEXT:\tIf someone visits the dog and the dog is green then they chase the dog.\nFOL:\tall x. (Green(Dog) & Visits(x, Dog) -> Chases(x, Dog))\nTEXT:\tIf someone needs the dog then the dog is rough.\nFOL:\tall x. (Needs(x, Dog) -> Rough(Dog))\nTEXT:\tIf someone chases the dog then they are cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(x))\nTEXT:\tIf someone visits the bear and they are not rough then the bear does not chase the rabbit.\nFOL:\tall x. (-Rough(x) & Visits(x, Bear) -> -Chases(Bear, Rabbit))\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tSmart, cold things are white.\nFOL:\tall x. (Smart(x) & Cold(x) -> White(x))\nTEXT:\tIf Dave is green then Dave is not blue.\nFOL:\tGreen(Dave) -> -Blue(Dave)\nTEXT:\tIf Erin is green then Erin is smart.\nFOL:\tGreen(Erin) -> Smart(Erin)\nTEXT:\tIf something is white and furry then it is smart.\nFOL:\tall x. (White(x) & Furry(x) -> Smart(x))\nTEXT:\tIf Fiona is cold and Fiona is quiet then Fiona is smart.\nFOL:\tCold(Fiona) & Quiet(Fiona) -> Smart(Fiona)\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, white things are furry.\nFOL:\tall x. (Green(x) & White(x) -> Furry(x))\nTEXT:\tIf something is white and quiet then it is furry.\nFOL:\tall x. (White(x) & Quiet(x) -> Furry(x))\nTEXT:\tGreen, quiet things are blue.\nFOL:\tall x. (Green(x) & Quiet(x) -> Blue(x))\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tSmart, cold things are white.\nFOL:\tall x. ((Smart(x) & Cold(x)) -> White(x))\nTEXT:\tIf Dave is green then Dave is not blue.\nFOL:\tGreen(Dave) -> -Blue(Dave)\nTEXT:\tIf Erin is green then Erin is smart.\nFOL:\tGreen(Erin) -> Smart(Erin)\nTEXT:\tIf something is white and furry then it is smart.\nFOL:\tall x. ((White(x) & Furry(x)) -> Smart(x))\nTEXT:\tIf Fiona is cold and Fiona is quiet then Fiona is smart.\nFOL:\t((Cold(Fiona) & Quiet(Fiona)) -> Smart(Fiona))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, white things are furry.\nFOL:\tall x. ((Green(x) & White(x)) -> Furry(x))\nTEXT:\tIf something is white and quiet then it is furry.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Furry(x))\nTEXT:\tGreen, quiet things are blue.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Blue(x))\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tSmart, cold things are white.\nFOL:\tall x. ((Smart(x) & Cold(x)) -> White(x))\nTEXT:\tIf Dave is green then Dave is not blue.\nFOL:\tGreen(Dave) -> -Blue(Dave)\nTEXT:\tIf Erin is green then Erin is smart.\nFOL:\tGreen(Erin) -> Smart(Erin)\nTEXT:\tIf something is white and furry then it is smart.\nFOL:\tall x. ((White(x) & Furry(x)) -> Smart(x))\nTEXT:\tIf Fiona is cold and Fiona is quiet then Fiona is smart.\nFOL:\t(Cold(Fiona) & Quiet(Fiona)) -> Smart(Fiona)\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, white things are furry.\nFOL:\tall x. ((Green(x) & White(x)) -> Furry(x))\nTEXT:\tIf something is white and quiet then it is furry.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Furry(x))\nTEXT:\tGreen, quiet things are blue.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Blue(x))\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tSmart, cold things are white.\nFOL:\tall x. (Smart(x) & Cold(x) -> White(x))\nTEXT:\tIf Dave is green then Dave is not blue.\nFOL:\tGreen(Dave) -> -Blue(Dave)\nTEXT:\tIf Erin is green then Erin is smart.\nFOL:\tGreen(Erin) -> Smart(Erin)\nTEXT:\tIf something is white and furry then it is smart.\nFOL:\tall x. (White(x) & Furry(x) -> Smart(x))\nTEXT:\tIf Fiona is cold and Fiona is quiet then Fiona is smart.\nFOL:\t(Cold(Fiona) & Quiet(Fiona)) -> Smart(Fiona)\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, white things are furry.\nFOL:\tall x. (Green(x) & White(x) -> Furry(x))\nTEXT:\tIf something is white and quiet then it is furry.\nFOL:\tall x. (White(x) & Quiet(x) -> Furry(x))\nTEXT:\tGreen, quiet things are blue.\nFOL:\tall x. (Green(x) & Quiet(x) -> Blue(x))\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nANSWER:\tUncertain\n", "TEXT:\tDave is not cold.\nFOL:\t-Cold(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tSmart, cold things are white.\nFOL:\tall x. (Smart(x) & Cold(x) -> White(x))\nTEXT:\tIf Dave is green then Dave is not blue.\nFOL:\tGreen(Dave) -> -Blue(Dave)\nTEXT:\tIf Erin is green then Erin is smart.\nFOL:\tGreen(Erin) -> Smart(Erin)\nTEXT:\tIf something is white and furry then it is smart.\nFOL:\tall x. (White(x) & Furry(x) -> Smart(x))\nTEXT:\tIf Fiona is cold and Fiona is quiet then Fiona is smart.\nFOL:\tCold(Fiona) & Quiet(Fiona) -> Smart(Fiona)\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, white things are furry.\nFOL:\tall x. (Green(x) & White(x) -> Furry(x))\nTEXT:\tIf something is white and quiet then it is furry.\nFOL:\tall x. (White(x) & Quiet(x) -> Furry(x))\nTEXT:\tGreen, quiet things are blue.\nFOL:\tall x. (Green(x) & Quiet(x) -> Blue(x))\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll cold, nice people are furry.\nFOL:\tall x. (Cold(x) & Nice(x) -> Furry(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tRed, cold people are big.\nFOL:\tall x. (Red(x) & Cold(x) -> Big(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll kind, nice people are quiet.\nFOL:\tall x. (Kind(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll furry, cold people are red.\nFOL:\tall x. (Furry(x) & Cold(x) -> Red(x))\nTEXT:\tIf Anne is quiet and Anne is kind then Anne is cold.\nFOL:\t(Quiet(Anne) & Kind(Anne)) -> Cold(Anne)\nTEXT:\tAnne is not quiet.\nFOL:\t-Quiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll cold, nice people are furry.\nFOL:\tall x. ((Cold(x) & Nice(x)) -> Furry(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tRed, cold people are big.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Big(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll kind, nice people are quiet.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Quiet(x))\nTEXT:\tAll furry, cold people are red.\nFOL:\tall x. ((Furry(x) & Cold(x)) -> Red(x))\nTEXT:\tIf Anne is quiet and Anne is kind then Anne is cold.\nFOL:\t(Quiet(Anne) & Kind(Anne)) -> Cold(Anne)\nTEXT:\tAnne is not quiet.\nFOL:\t-Quiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll cold, nice people are furry.\nFOL:\tall x. ((Cold(x) & Nice(x)) -> Furry(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tRed, cold people are big.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Big(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll kind, nice people are quiet.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Quiet(x))\nTEXT:\tAll furry, cold people are red.\nFOL:\tall x. ((Furry(x) & Cold(x)) -> Red(x))\nTEXT:\tIf Anne is quiet and Anne is kind then Anne is cold.\nFOL:\t(Quiet(Anne) & Kind(Anne)) -> Cold(Anne)\nTEXT:\tAnne is not quiet.\nFOL:\t-Quiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll cold, nice people are furry.\nFOL:\tall x. ((Cold(x) & Nice(x)) -> Furry(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tRed, cold people are big.\nFOL:\tall x. ((Red(x) & Cold(x)) -> Big(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll kind, nice people are quiet.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> Quiet(x))\nTEXT:\tAll furry, cold people are red.\nFOL:\tall x. ((Furry(x) & Cold(x)) -> Red(x))\nTEXT:\tIf Anne is quiet and Anne is kind then Anne is cold.\nFOL:\t(Quiet(Anne) & Kind(Anne)) -> Cold(Anne)\nTEXT:\tAnne is not quiet.\nFOL:\t-Quiet(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll cold, nice people are furry.\nFOL:\tall x. (Cold(x) & Nice(x) -> Furry(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tQuiet(Harry) -> Furry(Harry)\nTEXT:\tRed, cold people are big.\nFOL:\tall x. (Red(x) & Cold(x) -> Big(x))\nTEXT:\tIf someone is kind then they are quiet.\nFOL:\tall x. (Kind(x) -> Quiet(x))\nTEXT:\tAll kind, nice people are quiet.\nFOL:\tall x. (Kind(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll furry, cold people are red.\nFOL:\tall x. (Furry(x) & Cold(x) -> Red(x))\nTEXT:\tIf Anne is quiet and Anne is kind then Anne is cold.\nFOL:\t(Quiet(Anne) & Kind(Anne)) -> Cold(Anne)\nTEXT:\tAnne is not quiet.\nFOL:\t-Quiet(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe bald eagle does not visit the bear.\nFOL:\t-Visits(BaldEagle, Bear)\nTEXT:\tThe bald eagle does not visit the lion.\nFOL:\t-Visits(BaldEagle, Lion)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tIf something is kind then it needs the lion.\nFOL:\tall x. (Kind(x) -> Needs(x, Lion))\nTEXT:\tIf something is kind then it sees the lion.\nFOL:\tall x. (Kind(x) -> Sees(x, Lion))\nTEXT:\tIf something is round then it does not see the cat.\nFOL:\tall x. (Round(x) -> -Sees(x, Cat))\nTEXT:\tIf something sees the bear then it does not see the cat.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Cat))\nTEXT:\tIf something visits the lion and it needs the lion then the lion needs the bald eagle.\nFOL:\tall x. ((Visits(x, Lion) & Needs(x, Lion)) -> Needs(Lion, BaldEagle))\nTEXT:\tIf something visits the bear then it needs the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Needs(x, BaldEagle))\nTEXT:\tIf something needs the bald eagle and it is not red then the bald eagle sees the bear.\nFOL:\tall x. ((Needs(x, BaldEagle) & -Red(x)) -> Sees(BaldEagle, Bear))\nTEXT:\tIf something needs the lion and the lion is rough then it visits the bear.\nFOL:\tall x. ((Needs(x, Lion) & Rough(Lion)) -> Visits(x, Bear))\nTEXT:\tIf something visits the cat and the cat visits the bear then it is cold.\nFOL:\tall x. ((Visits(x, Cat) & Visits(Cat, Bear)) -> Cold(x))\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe bald eagle does not visit the bear.\nFOL:\t-Visits(BaldEagle, Bear)\nTEXT:\tThe bald eagle does not visit the lion.\nFOL:\t-Visits(BaldEagle, Lion)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tIf something is kind then it needs the lion.\nFOL:\tall x. (Kind(x) -> Needs(x, Lion))\nTEXT:\tIf something is kind then it sees the lion.\nFOL:\tall x. (Kind(x) -> Sees(x, Lion))\nTEXT:\tIf something is round then it does not see the cat.\nFOL:\tall x. (Round(x) -> -Sees(x, Cat))\nTEXT:\tIf something sees the bear then it does not see the cat.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Cat))\nTEXT:\tIf something visits the lion and it needs the lion then the lion needs the bald eagle.\nFOL:\tall x. (Visits(x, Lion) & Needs(x, Lion) -> Needs(Lion, BaldEagle))\nTEXT:\tIf something visits the bear then it needs the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Needs(x, BaldEagle))\nTEXT:\tIf something needs the bald eagle and it is not red then the bald eagle sees the bear.\nFOL:\tall x. (Needs(x, BaldEagle) & -Red(x) -> Sees(BaldEagle, Bear))\nTEXT:\tIf something needs the lion and the lion is rough then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) & Rough(Lion) -> Visits(x, Bear))\nTEXT:\tIf something visits the cat and the cat visits the bear then it is cold.\nFOL:\tall x. (Visits(x, Cat) & Visits(Cat, Bear) -> Cold(x))\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe bald eagle does not visit the bear.\nFOL:\t-Visits(BaldEagle, Bear)\nTEXT:\tThe bald eagle does not visit the lion.\nFOL:\t-Visits(BaldEagle, Lion)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tIf something is kind then it needs the lion.\nFOL:\tall x. (Kind(x) -> Needs(x, Lion))\nTEXT:\tIf something is kind then it sees the lion.\nFOL:\tall x. (Kind(x) -> Sees(x, Lion))\nTEXT:\tIf something is round then it does not see the cat.\nFOL:\tall x. (Round(x) -> -Sees(x, Cat))\nTEXT:\tIf something sees the bear then it does not see the cat.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Cat))\nTEXT:\tIf something visits the lion and it needs the lion then the lion needs the bald eagle.\nFOL:\tall x. ((Visits(x, Lion) & Needs(x, Lion)) -> Needs(Lion, BaldEagle))\nTEXT:\tIf something visits the bear then it needs the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Needs(x, BaldEagle))\nTEXT:\tIf something needs the bald eagle and it is not red then the bald eagle sees the bear.\nFOL:\tall x. ((Needs(x, BaldEagle) & -Red(x)) -> Sees(BaldEagle, Bear))\nTEXT:\tIf something needs the lion and the lion is rough then it visits the bear.\nFOL:\tall x. ((Needs(x, Lion) & Rough(Lion)) -> Visits(x, Bear))\nTEXT:\tIf something visits the cat and the cat visits the bear then it is cold.\nFOL:\tall x. ((Visits(x, Cat) & Visits(Cat, Bear)) -> Cold(x))\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe bald eagle does not visit the bear.\nFOL:\t-Visits(BaldEagle, Bear)\nTEXT:\tThe bald eagle does not visit the lion.\nFOL:\t-Visits(BaldEagle, Lion)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tIf something is kind then it needs the lion.\nFOL:\tall x. (Kind(x) -> Needs(x, Lion))\nTEXT:\tIf something is kind then it sees the lion.\nFOL:\tall x. (Kind(x) -> Sees(x, Lion))\nTEXT:\tIf something is round then it does not see the cat.\nFOL:\tall x. (Round(x) -> -Sees(x, Cat))\nTEXT:\tIf something sees the bear then it does not see the cat.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Cat))\nTEXT:\tIf something visits the lion and it needs the lion then the lion needs the bald eagle.\nFOL:\tall x. (Visits(x, Lion) & Needs(x, Lion) -> Needs(Lion, BaldEagle))\nTEXT:\tIf something visits the bear then it needs the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Needs(x, BaldEagle))\nTEXT:\tIf something needs the bald eagle and it is not red then the bald eagle sees the bear.\nFOL:\tall x. (Needs(x, BaldEagle) & -Red(x) -> Sees(BaldEagle, Bear))\nTEXT:\tIf something needs the lion and the lion is rough then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) & Rough(Lion) -> Visits(x, Bear))\nTEXT:\tIf something visits the cat and the cat visits the bear then it is cold.\nFOL:\tall x. (Visits(x, Cat) & Visits(Cat, Bear) -> Cold(x))\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe bald eagle does not visit the bear.\nFOL:\t-Visit(BaldEagle, Bear)\nTEXT:\tThe bald eagle does not visit the lion.\nFOL:\t-Visit(BaldEagle, Lion)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisit(Cat, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tIf something is kind then it needs the lion.\nFOL:\tall x. (Kind(x) -> Needs(x, Lion))\nTEXT:\tIf something is kind then it sees the lion.\nFOL:\tall x. (Kind(x) -> Sees(x, Lion))\nTEXT:\tIf something is round then it does not see the cat.\nFOL:\tall x. (Round(x) -> -Sees(x, Cat))\nTEXT:\tIf something sees the bear then it does not see the cat.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Cat))\nTEXT:\tIf something visits the lion and it needs the lion then the lion needs the bald eagle.\nFOL:\tall x. (Visit(x, Lion) & Needs(x, Lion) -> Needs(Lion, BaldEagle))\nTEXT:\tIf something visits the bear then it needs the bald eagle.\nFOL:\tall x. (Visit(x, Bear) -> Needs(x, BaldEagle))\nTEXT:\tIf something needs the bald eagle and it is not red then the bald eagle sees the bear.\nFOL:\tall x. (Needs(x, BaldEagle) & -Red(x) -> Sees(BaldEagle, Bear))\nTEXT:\tIf something needs the lion and the lion is rough then it visits the bear.\nFOL:\tall x. (Needs(x, Lion) & Rough(Lion) -> Visit(x, Bear))\nTEXT:\tIf something visits the cat and the cat visits the bear then it is cold.\nFOL:\tall x. (Visit(x, Cat) & Visit(Cat, Bear) -> Cold(x))\nTEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe rabbit chases the tiger.\nFOL:\tChases(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger sees the bear.\nFOL:\tSees(Tiger, Bear)\nTEXT:\tIf something sees the tiger then it sees the bear.\nFOL:\tall x. (Sees(x, Tiger) -> Sees(x, Bear))\nTEXT:\tIf something chases the tiger and the tiger is red then it is round.\nFOL:\tall x. ((Chases(x, Tiger) & Red(Tiger)) -> Round(x))\nTEXT:\tIf the bear needs the tiger then the tiger needs the lion.\nFOL:\t(Needs(Bear, Tiger) -> Needs(Tiger, Lion))\nTEXT:\tIf something sees the rabbit then the rabbit sees the lion.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Lion))\nTEXT:\tIf something is round then it needs the rabbit.\nFOL:\tall x. (Round(x) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the bear then it sees the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf the lion is red and the lion needs the bear then the bear chases the lion.\nFOL:\t(Red(Lion) & Needs(Lion, Bear) -> Chases(Bear, Lion))\nTEXT:\tIf something sees the lion then it chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(x, Bear))\nTEXT:\tThe rabbit needs the rabbit.\nFOL:\tNeeds(Rabbit, Rabbit)\nANSWER:\tTrue", "TEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe rabbit chases the tiger.\nFOL:\tChases(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger sees the bear.\nFOL:\tSees(Tiger, Bear)\nTEXT:\tIf something sees the tiger then it sees the bear.\nFOL:\tall x. (Sees(x, Tiger) -> Sees(x, Bear))\nTEXT:\tIf something chases the tiger and the tiger is red then it is round.\nFOL:\tall x. ((Chases(x, Tiger) & Red(Tiger)) -> Round(x))\nTEXT:\tIf the bear needs the tiger then the tiger needs the lion.\nFOL:\tNeeds(Bear, Tiger) -> Needs(Tiger, Lion)\nTEXT:\tIf something sees the rabbit then the rabbit sees the lion.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Lion))\nTEXT:\tIf something is round then it needs the rabbit.\nFOL:\tall x. (Round(x) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the bear then it sees the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf the lion is red and the lion needs the bear then the bear chases the lion.\nFOL:\t((Red(Lion) & Needs(Lion, Bear)) -> Chases(Bear, Lion))\nTEXT:\tIf something sees the lion then it chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(x, Bear))\nTEXT:\tThe rabbit needs the rabbit.\nFOL:\tNeeds(Rabbit, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe rabbit chases the tiger.\nFOL:\tChases(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger sees the bear.\nFOL:\tSees(Tiger, Bear)\nTEXT:\tIf something sees the tiger then it sees the bear.\nFOL:\tall x. (Sees(x, Tiger) -> Sees(x, Bear))\nTEXT:\tIf something chases the tiger and the tiger is red then it is round.\nFOL:\tall x. ((Chases(x, Tiger) & Red(Tiger)) -> Round(x))\nTEXT:\tIf the bear needs the tiger then the tiger needs the lion.\nFOL:\t(Needs(Bear, Tiger) -> Needs(Tiger, Lion))\nTEXT:\tIf something sees the rabbit then the rabbit sees the lion.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Lion))\nTEXT:\tIf something is round then it needs the rabbit.\nFOL:\tall x. (Round(x) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the bear then it sees the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf the lion is red and the lion needs the bear then the bear chases the lion.\nFOL:\t(Red(Lion) & Needs(Lion, Bear) -> Chases(Bear, Lion))\nTEXT:\tIf something sees the lion then it chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(x, Bear))\nTEXT:\tThe rabbit needs the rabbit.\nFOL:\tNeeds(Rabbit, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe rabbit chases the tiger.\nFOL:\tChases(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger sees the bear.\nFOL:\tSees(Tiger, Bear)\nTEXT:\tIf something sees the tiger then it sees the bear.\nFOL:\tall x. (Sees(x, Tiger) -> Sees(x, Bear))\nTEXT:\tIf something chases the tiger and the tiger is red then it is round.\nFOL:\tall x. ((Chases(x, Tiger) & Red(Tiger)) -> Round(x))\nTEXT:\tIf the bear needs the tiger then the tiger needs the lion.\nFOL:\t(Needs(Bear, Tiger) -> Needs(Tiger, Lion))\nTEXT:\tIf something sees the rabbit then the rabbit sees the lion.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Lion))\nTEXT:\tIf something is round then it needs the rabbit.\nFOL:\tall x. (Round(x) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the bear then it sees the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf the lion is red and the lion needs the bear then the bear chases the lion.\nFOL:\t((Red(Lion) & Needs(Lion, Bear)) -> Chases(Bear, Lion))\nTEXT:\tIf something sees the lion then it chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(x, Bear))\nTEXT:\tThe rabbit needs the rabbit.\nFOL:\tNeeds(Rabbit, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the rabbit.\nFOL:\tChases(Bear, Rabbit)\nTEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe rabbit chases the tiger.\nFOL:\tChases(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger is round.\nFOL:\tRound(Tiger)\nTEXT:\tThe tiger sees the bear.\nFOL:\tSees(Tiger, Bear)\nTEXT:\tIf something sees the tiger then it sees the bear.\nFOL:\tall x. (Sees(x, Tiger) -> Sees(x, Bear))\nTEXT:\tIf something chases the tiger and the tiger is red then it is round.\nFOL:\tall x. ((Chases(x, Tiger) & Red(Tiger)) -> Round(x))\nTEXT:\tIf the bear needs the tiger then the tiger needs the lion.\nFOL:\t(Needs(Bear, Tiger) -> Needs(Tiger, Lion))\nTEXT:\tIf something sees the rabbit then the rabbit sees the lion.\nFOL:\tall x. (Sees(x, Rabbit) -> Sees(Rabbit, Lion))\nTEXT:\tIf something is round then it needs the rabbit.\nFOL:\tall x. (Round(x) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the bear then it sees the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf the lion is red and the lion needs the bear then the bear chases the lion.\nFOL:\t((Red(Lion) & Needs(Lion, Bear)) -> Chases(Bear, Lion))\nTEXT:\tIf something sees the lion then it chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(x, Bear))\nTEXT:\tThe rabbit needs the rabbit.\nFOL:\tNeeds(Rabbit, Rabbit)\nANSWER:\tFalse\n"], ["TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tBig people are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll furry, white people are kind.\nFOL:\tall x. (Furry(x) & White(x) -> Kind(x))\nTEXT:\tBig people are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll red people are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Gary is smart then Gary is furry.\nFOL:\tSmart(Gary) -> Furry(Gary)\nTEXT:\tAll big, kind people are smart.\nFOL:\tall x. (Big(x) & Kind(x) -> Smart(x))\nTEXT:\tFurry, white people are quiet.\nFOL:\tall x. (Furry(x) & White(x) -> Quiet(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is white and quiet then they are red.\nFOL:\tall x. (White(x) & Quiet(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tBig people are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll furry, white people are kind.\nFOL:\tall x. (Furry(x) & White(x) -> Kind(x))\nTEXT:\tBig people are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll red people are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Gary is smart then Gary is furry.\nFOL:\tSmart(Gary) -> Furry(Gary)\nTEXT:\tAll big, kind people are smart.\nFOL:\tall x. (Big(x) & Kind(x) -> Smart(x))\nTEXT:\tFurry, white people are quiet.\nFOL:\tall x. (Furry(x) & White(x) -> Quiet(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is white and quiet then they are red.\nFOL:\tall x. (White(x) & Quiet(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tBig people are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll furry, white people are kind.\nFOL:\tall x. (Furry(x) & White(x) -> Kind(x))\nTEXT:\tBig people are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll red people are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Gary is smart then Gary is furry.\nFOL:\tSmart(Gary) -> Furry(Gary)\nTEXT:\tAll big, kind people are smart.\nFOL:\tall x. (Big(x) & Kind(x) -> Smart(x))\nTEXT:\tFurry, white people are quiet.\nFOL:\tall x. (Furry(x) & White(x) -> Quiet(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is white and quiet then they are red.\nFOL:\tall x. (White(x) & Quiet(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tBig people are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll furry, white people are kind.\nFOL:\tall x. (Furry(x) & White(x) -> Kind(x))\nTEXT:\tBig people are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll red people are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Gary is smart then Gary is furry.\nFOL:\tSmart(Gary) -> Furry(Gary)\nTEXT:\tAll big, kind people are smart.\nFOL:\tall x. (Big(x) & Kind(x) -> Smart(x))\nTEXT:\tFurry, white people are quiet.\nFOL:\tall x. (Furry(x) & White(x) -> Quiet(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is white and quiet then they are red.\nFOL:\tall x. (White(x) & Quiet(x) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tBig people are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll furry, white people are kind.\nFOL:\tall x. ((Furry(x) & White(x)) -> Kind(x))\nTEXT:\tBig people are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tAll red people are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf Gary is smart then Gary is furry.\nFOL:\t(Smart(Gary) -> Furry(Gary))\nTEXT:\tAll big, kind people are smart.\nFOL:\tall x. ((Big(x) & Kind(x)) -> Smart(x))\nTEXT:\tFurry, white people are quiet.\nFOL:\tall x. ((Furry(x) & White(x)) -> Quiet(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is white and quiet then they are red.\nFOL:\tall x. ((White(x) & Quiet(x)) -> Red(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle does not chase the cow.\nFOL:\t-Chase(BaldEagle, Cow)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the cow.\nFOL:\tChase(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChase(Cow, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-Big(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visit(Tiger, Cat)\nTEXT:\tIf someone eats the cat and they do not eat the tiger then the tiger does not chase the cat.\nFOL:\tall x. ((Eats(x, Cat) & -Eats(x, Tiger)) -> -Chase(Tiger, Cat))\nTEXT:\tIf someone is kind and they visit the cow then they do not visit the tiger.\nFOL:\tall x. ((Kind(x) & Visit(x, Cow)) -> -Visit(x, Tiger))\nTEXT:\tIf someone chases the cat then they visit the tiger.\nFOL:\tall x. (Chase(x, Cat) -> Visit(x, Tiger))\nTEXT:\tIf someone visits the tiger then they visit the bald eagle.\nFOL:\tall x. (Visit(x, Tiger) -> Visit(x, BaldEagle))\nTEXT:\tIf the tiger eats the bald eagle then the tiger eats the cow.\nFOL:\t(Eats(Tiger, BaldEagle) -> Eats(Tiger, Cow))\nTEXT:\tIf someone visits the tiger and they visit the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. ((Visit(x, Tiger) & Visit(x, BaldEagle)) -> Chase(BaldEagle, Cat))\nTEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not chase the cow.\nFOL:\t-Chase(BaldEagle, Cow)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the cow.\nFOL:\tChase(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChase(Cow, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-Big(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visit(Tiger, Cat)\nTEXT:\tIf someone eats the cat and they do not eat the tiger then the tiger does not chase the cat.\nFOL:\tall x. ((Eats(x, Cat) & -Eats(x, Tiger)) -> -Chase(Tiger, Cat))\nTEXT:\tIf someone is kind and they visit the cow then they do not visit the tiger.\nFOL:\tall x. ((Kind(x) & Visit(x, Cow)) -> -Visit(x, Tiger))\nTEXT:\tIf someone chases the cat then they visit the tiger.\nFOL:\tall x. (Chase(x, Cat) -> Visit(x, Tiger))\nTEXT:\tIf someone visits the tiger then they visit the bald eagle.\nFOL:\tall x. (Visit(x, Tiger) -> Visit(x, BaldEagle))\nTEXT:\tIf the tiger eats the bald eagle then the tiger eats the cow.\nFOL:\t(Eats(Tiger, BaldEagle) -> Eats(Tiger, Cow))\nTEXT:\tIf someone visits the tiger and they visit the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. ((Visit(x, Tiger) & Visit(x, BaldEagle)) -> Chase(BaldEagle, Cat))\nTEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not chase the cow.\nFOL:\t-Chase(BaldEagle, Cow)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the cow.\nFOL:\tChase(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChase(Cow, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-Big(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visit(Tiger, Cat)\nTEXT:\tIf someone eats the cat and they do not eat the tiger then the tiger does not chase the cat.\nFOL:\tall x. ((Eats(x, Cat) & -Eats(x, Tiger)) -> -Chase(Tiger, Cat))\nTEXT:\tIf someone is kind and they visit the cow then they do not visit the tiger.\nFOL:\tall x. ((Kind(x) & Visit(x, Cow)) -> -Visit(x, Tiger))\nTEXT:\tIf someone chases the cat then they visit the tiger.\nFOL:\tall x. (Chase(x, Cat) -> Visit(x, Tiger))\nTEXT:\tIf someone visits the tiger then they visit the bald eagle.\nFOL:\tall x. (Visit(x, Tiger) -> Visit(x, BaldEagle))\nTEXT:\tIf the tiger eats the bald eagle then the tiger eats the cow.\nFOL:\t(Eats(Tiger, BaldEagle) -> Eats(Tiger, Cow))\nTEXT:\tIf someone visits the tiger and they visit the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. ((Visit(x, Tiger) & Visit(x, BaldEagle)) -> Chase(BaldEagle, Cat))\nTEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not chase the cow.\nFOL:\t-Chase(BaldEagle, Cow)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the cow.\nFOL:\tChase(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChase(Cow, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-Big(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visit(Tiger, Cat)\nTEXT:\tIf someone eats the cat and they do not eat the tiger then the tiger does not chase the cat.\nFOL:\tall x. ((Eats(x, Cat) & -Eats(x, Tiger)) -> -Chase(Tiger, Cat))\nTEXT:\tIf someone is kind and they visit the cow then they do not visit the tiger.\nFOL:\tall x. ((Kind(x) & Visit(x, Cow)) -> -Visit(x, Tiger))\nTEXT:\tIf someone chases the cat then they visit the tiger.\nFOL:\tall x. (Chase(x, Cat) -> Visit(x, Tiger))\nTEXT:\tIf someone visits the tiger then they visit the bald eagle.\nFOL:\tall x. (Visit(x, Tiger) -> Visit(x, BaldEagle))\nTEXT:\tIf the tiger eats the bald eagle then the tiger eats the cow.\nFOL:\tEats(Tiger, BaldEagle) -> Eats(Tiger, Cow)\nTEXT:\tIf someone visits the tiger and they visit the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. ((Visit(x, Tiger) & Visit(x, BaldEagle)) -> Chase(BaldEagle, Cat))\nTEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle does not chase the cow.\nFOL:\t-Chase(BaldEagle, Cow)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the cow.\nFOL:\tChase(Cat, Cow)\nTEXT:\tThe cat eats the bald eagle.\nFOL:\tEats(Cat, BaldEagle)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChase(Cow, BaldEagle)\nTEXT:\tThe cow chases the cat.\nFOL:\tChase(Cow, Cat)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-Big(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visit(Tiger, Cat)\nTEXT:\tIf someone eats the cat and they do not eat the tiger then the tiger does not chase the cat.\nFOL:\tall x. ((Eats(x, Cat) & -Eats(x, Tiger)) -> -Chase(Tiger, Cat))\nTEXT:\tIf someone is kind and they visit the cow then they do not visit the tiger.\nFOL:\tall x. ((Kind(x) & Visit(x, Cow)) -> -Visit(x, Tiger))\nTEXT:\tIf someone chases the cat then they visit the tiger.\nFOL:\tall x. (Chase(x, Cat) -> Visit(x, Tiger))\nTEXT:\tIf someone visits the tiger then they visit the bald eagle.\nFOL:\tall x. (Visit(x, Tiger) -> Visit(x, BaldEagle))\nTEXT:\tIf the tiger eats the bald eagle then the tiger eats the cow.\nFOL:\tEats(Tiger, BaldEagle) -> Eats(Tiger, Cow)\nTEXT:\tIf someone visits the tiger and they visit the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. ((Visit(x, Tiger) & Visit(x, BaldEagle)) -> Chase(BaldEagle, Cat))\nTEXT:\tThe cat does not chase the tiger.\nFOL:\t-Chase(Cat, Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tCold, red things are green.\nFOL:\tall x. (Cold(x) & Red(x) -> Green(x))\nTEXT:\tIf Harry is kind and Harry is blue then Harry is nice.\nFOL:\t(Kind(Harry) & Blue(Harry) -> Nice(Harry))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tBlue, big things are red.\nFOL:\tall x. (Blue(x) & Big(x) -> Red(x))\nTEXT:\tIf something is green then it is big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf something is kind and red then it is cold.\nFOL:\tall x. (Kind(x) & Red(x) -> Cold(x))\nTEXT:\tIf something is kind then it is red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tCold, red things are green.\nFOL:\tall x. (Cold(x) & Red(x) -> Green(x))\nTEXT:\tIf Harry is kind and Harry is blue then Harry is nice.\nFOL:\t(Kind(Harry) & Blue(Harry) -> Nice(Harry))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tBlue, big things are red.\nFOL:\tall x. (Blue(x) & Big(x) -> Red(x))\nTEXT:\tIf something is green then it is big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf something is kind and red then it is cold.\nFOL:\tall x. (Kind(x) & Red(x) -> Cold(x))\nTEXT:\tIf something is kind then it is red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tCold, red things are green.\nFOL:\tall x. ((Cold(x) & Red(x)) -> Green(x))\nTEXT:\tIf Harry is kind and Harry is blue then Harry is nice.\nFOL:\t(Kind(Harry) & Blue(Harry)) -> Nice(Harry)\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tBlue, big things are red.\nFOL:\tall x. ((Blue(x) & Big(x)) -> Red(x))\nTEXT:\tIf something is green then it is big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf something is kind and red then it is cold.\nFOL:\tall x. ((Kind(x) & Red(x)) -> Cold(x))\nTEXT:\tIf something is kind then it is red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tCold, red things are green.\nFOL:\tall x. (Cold(x) & Red(x) -> Green(x))\nTEXT:\tIf Harry is kind and Harry is blue then Harry is nice.\nFOL:\t(Kind(Harry) & Blue(Harry) -> Nice(Harry))\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tBlue, big things are red.\nFOL:\tall x. (Blue(x) & Big(x) -> Red(x))\nTEXT:\tIf something is green then it is big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf something is kind and red then it is cold.\nFOL:\tall x. (Kind(x) & Red(x) -> Cold(x))\nTEXT:\tIf something is kind then it is red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tCold, red things are green.\nFOL:\tall x. (Cold(x) & Red(x) -> Green(x))\nTEXT:\tIf Harry is kind and Harry is blue then Harry is nice.\nFOL:\t(Kind(Harry) & Blue(Harry)) -> Nice(Harry)\nTEXT:\tNice things are kind.\nFOL:\tall x. (Nice(x) -> Kind(x))\nTEXT:\tBlue, big things are red.\nFOL:\tall x. (Blue(x) & Big(x) -> Red(x))\nTEXT:\tIf something is green then it is big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tIf something is kind and red then it is cold.\nFOL:\tall x. (Kind(x) & Red(x) -> Cold(x))\nTEXT:\tIf something is kind then it is red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tDave is not green.\nFOL:\t-Green(Dave)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tAll furry people are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tNice, red people are rough.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Rough(x))\nTEXT:\tAll nice people are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf someone is red and round then they are furry.\nFOL:\tall x. ((Red(x) & Round(x)) -> Furry(x))\nTEXT:\tAll big, rough people are round.\nFOL:\tall x. ((Big(x) & Rough(x)) -> Round(x))\nTEXT:\tAll red, rough people are big.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Big(x))\nTEXT:\tAll cold, furry people are rough.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is cold and round then they are red.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Red(x))\nTEXT:\tAll furry people are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tAll furry people are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tNice, red people are rough.\nFOL:\tall x. (Nice(x) & Red(x) -> Rough(x))\nTEXT:\tAll nice people are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf someone is red and round then they are furry.\nFOL:\tall x. (Red(x) & Round(x) -> Furry(x))\nTEXT:\tAll big, rough people are round.\nFOL:\tall x. (Big(x) & Rough(x) -> Round(x))\nTEXT:\tAll red, rough people are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tAll cold, furry people are rough.\nFOL:\tall x. (Cold(x) & Furry(x) -> Rough(x))\nTEXT:\tIf someone is cold and round then they are red.\nFOL:\tall x. (Cold(x) & Round(x) -> Red(x))\nTEXT:\tAll furry people are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tTrue\n", "TEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tAll furry people are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tNice, red people are rough.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Rough(x))\nTEXT:\tAll nice people are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf someone is red and round then they are furry.\nFOL:\tall x. ((Red(x) & Round(x)) -> Furry(x))\nTEXT:\tAll big, rough people are round.\nFOL:\tall x. ((Big(x) & Rough(x)) -> Round(x))\nTEXT:\tAll red, rough people are big.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Big(x))\nTEXT:\tAll cold, furry people are rough.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is cold and round then they are red.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Red(x))\nTEXT:\tAll furry people are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tAll furry people are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tNice, red people are rough.\nFOL:\tall x. (Nice(x) & Red(x) -> Rough(x))\nTEXT:\tAll nice people are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf someone is red and round then they are furry.\nFOL:\tall x. (Red(x) & Round(x) -> Furry(x))\nTEXT:\tAll big, rough people are round.\nFOL:\tall x. (Big(x) & Rough(x) -> Round(x))\nTEXT:\tAll red, rough people are big.\nFOL:\tall x. (Red(x) & Rough(x) -> Big(x))\nTEXT:\tAll cold, furry people are rough.\nFOL:\tall x. (Cold(x) & Furry(x) -> Rough(x))\nTEXT:\tIf someone is cold and round then they are red.\nFOL:\tall x. (Cold(x) & Round(x) -> Red(x))\nTEXT:\tAll furry people are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tAll furry people are nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tNice, red people are rough.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Rough(x))\nTEXT:\tAll nice people are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf someone is red and round then they are furry.\nFOL:\tall x. ((Red(x) & Round(x)) -> Furry(x))\nTEXT:\tAll big, rough people are round.\nFOL:\tall x. ((Big(x) & Rough(x)) -> Round(x))\nTEXT:\tAll red, rough people are big.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Big(x))\nTEXT:\tAll cold, furry people are rough.\nFOL:\tall x. ((Cold(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is cold and round then they are red.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Red(x))\nTEXT:\tAll furry people are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tHarry is not red.\nFOL:\t-Red(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the bald eagle.\nFOL:\tSees(Bear, BaldEagle)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cat visits the bald eagle.\nFOL:\tVisits(Cat, BaldEagle)\nTEXT:\tThe cat visits the squirrel.\nFOL:\tVisits(Cat, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tIf the cat sees the bald eagle and the cat sees the bear then the bald eagle is kind.\nFOL:\t(Sees(Cat, BaldEagle) & Sees(Cat, Bear)) -> Kind(BaldEagle)\nTEXT:\tIf someone visits the cat then the cat chases the squirrel.\nFOL:\tall x. (Visits(x, Cat) -> Chases(Cat, Squirrel))\nTEXT:\tIf someone sees the bear then they see the cat.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cat))\nTEXT:\tIf someone sees the cat then the cat sees the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, BaldEagle))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear chases the bald eagle.\nFOL:\tall x. (Sees(x, Bear) & Cold(Bear)) -> Chases(Bear, BaldEagle)\nTEXT:\tIf the cat is blue then the cat is cold.\nFOL:\tBlue(Cat) -> Cold(Cat)\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tIf someone visits the squirrel and they chase the cat then the cat chases the bear.\nFOL:\tall x. ((Visits(x, Squirrel) & Chases(x, Cat)) -> Chases(Cat, Bear))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tThe squirrel does not see the cat.\nFOL:\t-Sees(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the bald eagle.\nFOL:\tSees(Bear, BaldEagle)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cat visits the bald eagle.\nFOL:\tVisits(Cat, BaldEagle)\nTEXT:\tThe cat visits the squirrel.\nFOL:\tVisits(Cat, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tIf the cat sees the bald eagle and the cat sees the bear then the bald eagle is kind.\nFOL:\t(Sees(Cat, BaldEagle) & Sees(Cat, Bear)) -> Kind(BaldEagle)\nTEXT:\tIf someone visits the cat then the cat chases the squirrel.\nFOL:\tall x. (Visits(x, Cat) -> Chases(Cat, Squirrel))\nTEXT:\tIf someone sees the bear then they see the cat.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cat))\nTEXT:\tIf someone sees the cat then the cat sees the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, BaldEagle))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear chases the bald eagle.\nFOL:\tall x. (Sees(x, Bear) & Cold(Bear) -> Chases(Bear, BaldEagle))\nTEXT:\tIf the cat is blue then the cat is cold.\nFOL:\tBlue(Cat) -> Cold(Cat)\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tIf someone visits the squirrel and they chase the cat then the cat chases the bear.\nFOL:\tall x. (Visits(x, Squirrel) & Chases(x, Cat) -> Chases(Cat, Bear))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tThe squirrel does not see the cat.\nFOL:\t-See(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the bald eagle.\nFOL:\tSees(Bear, BaldEagle)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cat visits the bald eagle.\nFOL:\tVisits(Cat, BaldEagle)\nTEXT:\tThe cat visits the squirrel.\nFOL:\tVisits(Cat, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tIf the cat sees the bald eagle and the cat sees the bear then the bald eagle is kind.\nFOL:\t(Sees(Cat, BaldEagle) & Sees(Cat, Bear)) -> Kind(BaldEagle)\nTEXT:\tIf someone visits the cat then the cat chases the squirrel.\nFOL:\tall x. (Visits(x, Cat) -> Chases(Cat, Squirrel))\nTEXT:\tIf someone sees the bear then they see the cat.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cat))\nTEXT:\tIf someone sees the cat then the cat sees the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, BaldEagle))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear chases the bald eagle.\nFOL:\tall x. ((Sees(x, Bear) & Cold(Bear)) -> Chases(Bear, BaldEagle))\nTEXT:\tIf the cat is blue then the cat is cold.\nFOL:\tBlue(Cat) -> Cold(Cat)\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tIf someone visits the squirrel and they chase the cat then the cat chases the bear.\nFOL:\tall x. ((Visits(x, Squirrel) & Chases(x, Cat)) -> Chases(Cat, Bear))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tThe squirrel does not see the cat.\nFOL:\t-Sees(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the bald eagle.\nFOL:\tSees(Bear, BaldEagle)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cat visits the bald eagle.\nFOL:\tVisits(Cat, BaldEagle)\nTEXT:\tThe cat visits the squirrel.\nFOL:\tVisits(Cat, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tIf the cat sees the bald eagle and the cat sees the bear then the bald eagle is kind.\nFOL:\t(Sees(Cat, BaldEagle) & Sees(Cat, Bear)) -> Kind(BaldEagle)\nTEXT:\tIf someone visits the cat then the cat chases the squirrel.\nFOL:\tall x. (Visits(x, Cat) -> Chases(Cat, Squirrel))\nTEXT:\tIf someone sees the bear then they see the cat.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cat))\nTEXT:\tIf someone sees the cat then the cat sees the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, BaldEagle))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear chases the bald eagle.\nFOL:\tall x. ((Sees(x, Bear) & Cold(Bear)) -> Chases(Bear, BaldEagle))\nTEXT:\tIf the cat is blue then the cat is cold.\nFOL:\tBlue(Cat) -> Cold(Cat)\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tIf someone visits the squirrel and they chase the cat then the cat chases the bear.\nFOL:\tall x. ((Visits(x, Squirrel) & Chases(x, Cat)) -> Chases(Cat, Bear))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tThe squirrel does not see the cat.\nFOL:\t-Sees(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the cat.\nFOL:\tChases(BaldEagle, Cat)\nTEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe bear sees the bald eagle.\nFOL:\tSees(Bear, BaldEagle)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cat visits the bald eagle.\nFOL:\tVisits(Cat, BaldEagle)\nTEXT:\tThe cat visits the squirrel.\nFOL:\tVisits(Cat, Squirrel)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel visits the bald eagle.\nFOL:\tVisits(Squirrel, BaldEagle)\nTEXT:\tIf the cat sees the bald eagle and the cat sees the bear then the bald eagle is kind.\nFOL:\t(Sees(Cat, BaldEagle) & Sees(Cat, Bear)) -> Kind(BaldEagle)\nTEXT:\tIf someone visits the cat then the cat chases the squirrel.\nFOL:\tall x. (Visits(x, Cat) -> Chases(Cat, Squirrel))\nTEXT:\tIf someone sees the bear then they see the cat.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cat))\nTEXT:\tIf someone sees the cat then the cat sees the bald eagle.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, BaldEagle))\nTEXT:\tIf someone sees the bear and the bear is cold then the bear chases the bald eagle.\nFOL:\tall x. ((Sees(x, Bear) & Cold(Bear)) -> Chases(Bear, BaldEagle))\nTEXT:\tIf the cat is blue then the cat is cold.\nFOL:\tBlue(Cat) -> Cold(Cat)\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tIf someone visits the squirrel and they chase the cat then the cat chases the bear.\nFOL:\tall x. ((Visits(x, Squirrel) & Chases(x, Cat)) -> Chases(Cat, Bear))\nTEXT:\tIf someone is kind then they chase the bald eagle.\nFOL:\tall x. (Kind(x) -> Chases(x, BaldEagle))\nTEXT:\tThe squirrel does not see the cat.\nFOL:\t-Sees(Squirrel, Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tIf Anne is red and Anne is blue then Anne is rough.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Rough(Anne)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tAll rough, red people are blue.\nFOL:\tall x. (Rough(x) & Red(x)) -> Blue(x)\nTEXT:\tIf someone is green and blue then they are nice.\nFOL:\tall x. (Green(x) & Blue(x)) -> Nice(x)\nTEXT:\tIf Dave is nice then Dave is furry.\nFOL:\tNice(Dave) -> Furry(Dave)\nTEXT:\tIf Erin is blue then Erin is furry.\nFOL:\tBlue(Erin) -> Furry(Erin)\nTEXT:\tIf someone is cold and blue then they are furry.\nFOL:\tall x. (Cold(x) & Blue(x)) -> Furry(x)\nTEXT:\tIf someone is rough and furry then they are green.\nFOL:\tall x. (Rough(x) & Furry(x)) -> Green(x)\nTEXT:\tNice, green people are cold.\nFOL:\tall x. (Nice(x) & Green(x)) -> Cold(x)\nTEXT:\tDave is not furry.\nFOL:\t-Furry(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tIf Anne is red and Anne is blue then Anne is rough.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Rough(Anne)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tAll rough, red people are blue.\nFOL:\tall x. ((Rough(x) & Red(x)) -> Blue(x))\nTEXT:\tIf someone is green and blue then they are nice.\nFOL:\tall x. ((Green(x) & Blue(x)) -> Nice(x))\nTEXT:\tIf Dave is nice then Dave is furry.\nFOL:\tNice(Dave) -> Furry(Dave)\nTEXT:\tIf Erin is blue then Erin is furry.\nFOL:\tBlue(Erin) -> Furry(Erin)\nTEXT:\tIf someone is cold and blue then they are furry.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> Furry(x))\nTEXT:\tIf someone is rough and furry then they are green.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Green(x))\nTEXT:\tNice, green people are cold.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Cold(x))\nTEXT:\tDave is not furry.\nFOL:\t-Furry(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tIf Anne is red and Anne is blue then Anne is rough.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Rough(Anne)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tAll rough, red people are blue.\nFOL:\tall x. ((Rough(x) & Red(x)) -> Blue(x))\nTEXT:\tIf someone is green and blue then they are nice.\nFOL:\tall x. ((Green(x) & Blue(x)) -> Nice(x))\nTEXT:\tIf Dave is nice then Dave is furry.\nFOL:\tNice(Dave) -> Furry(Dave)\nTEXT:\tIf Erin is blue then Erin is furry.\nFOL:\tBlue(Erin) -> Furry(Erin)\nTEXT:\tIf someone is cold and blue then they are furry.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> Furry(x))\nTEXT:\tIf someone is rough and furry then they are green.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> Green(x))\nTEXT:\tNice, green people are cold.\nFOL:\tall x. ((Nice(x) & Green(x)) -> Cold(x))\nTEXT:\tDave is not furry.\nFOL:\t-Furry(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tIf Anne is red and Anne is blue then Anne is rough.\nFOL:\tRed(Anne) & Blue(Anne) -> Rough(Anne)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tAll rough, red people are blue.\nFOL:\tall x. (Rough(x) & Red(x) -> Blue(x))\nTEXT:\tIf someone is green and blue then they are nice.\nFOL:\tall x. (Green(x) & Blue(x) -> Nice(x))\nTEXT:\tIf Dave is nice then Dave is furry.\nFOL:\tNice(Dave) -> Furry(Dave)\nTEXT:\tIf Erin is blue then Erin is furry.\nFOL:\tBlue(Erin) -> Furry(Erin)\nTEXT:\tIf someone is cold and blue then they are furry.\nFOL:\tall x. (Cold(x) & Blue(x) -> Furry(x))\nTEXT:\tIf someone is rough and furry then they are green.\nFOL:\tall x. (Rough(x) & Furry(x) -> Green(x))\nTEXT:\tNice, green people are cold.\nFOL:\tall x. (Nice(x) & Green(x) -> Cold(x))\nTEXT:\tDave is not furry.\nFOL:\t-Furry(Dave)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tIf Anne is red and Anne is blue then Anne is rough.\nFOL:\tRed(Anne) & Blue(Anne) -> Rough(Anne)\nTEXT:\tFurry people are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tAll rough, red people are blue.\nFOL:\tall x. (Rough(x) & Red(x) -> Blue(x))\nTEXT:\tIf someone is green and blue then they are nice.\nFOL:\tall x. (Green(x) & Blue(x) -> Nice(x))\nTEXT:\tIf Dave is nice then Dave is furry.\nFOL:\tNice(Dave) -> Furry(Dave)\nTEXT:\tIf Erin is blue then Erin is furry.\nFOL:\tBlue(Erin) -> Furry(Erin)\nTEXT:\tIf someone is cold and blue then they are furry.\nFOL:\tall x. (Cold(x) & Blue(x) -> Furry(x))\nTEXT:\tIf someone is rough and furry then they are green.\nFOL:\tall x. (Rough(x) & Furry(x) -> Green(x))\nTEXT:\tNice, green people are cold.\nFOL:\tall x. (Nice(x) & Green(x) -> Cold(x))\nTEXT:\tDave is not furry.\nFOL:\t-Furry(Dave)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat needs the mouse.\nFOL:\tNeeds(Cat, Mouse)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger does not eat the cow.\nFOL:\t-Eats(Tiger, Cow)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visits(Tiger, Cat)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf the tiger visits the mouse then the mouse eats the tiger.\nFOL:\tVisits(Tiger, Mouse) -> Eats(Mouse, Tiger)\nTEXT:\tIf someone is young and they need the mouse then they eat the mouse.\nFOL:\tall x. (Young(x) & Needs(x, Mouse)) -> Eats(x, Mouse)\nTEXT:\tIf someone eats the tiger then they are green.\nFOL:\tall x. (Eats(x, Tiger) -> Green(x))\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tIf someone is young then they need the mouse.\nFOL:\tall x. (Young(x) -> Needs(x, Mouse))\nTEXT:\tThe mouse eats the mouse.\nFOL:\tEats(Mouse, Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat needs the mouse.\nFOL:\tNeeds(Cat, Mouse)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger does not eat the cow.\nFOL:\t-Eats(Tiger, Cow)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visits(Tiger, Cat)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf the tiger visits the mouse then the mouse eats the tiger.\nFOL:\tVisits(Tiger, Mouse) -> Eats(Mouse, Tiger)\nTEXT:\tIf someone is young and they need the mouse then they eat the mouse.\nFOL:\tall x. ((Young(x) & Needs(x, Mouse)) -> Eats(x, Mouse))\nTEXT:\tIf someone eats the tiger then they are green.\nFOL:\tall x. (Eats(x, Tiger) -> Green(x))\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tIf someone is young then they need the mouse.\nFOL:\tall x. (Young(x) -> Needs(x, Mouse))\nTEXT:\tThe mouse eats the mouse.\nFOL:\tEats(Mouse, Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat needs the mouse.\nFOL:\tNeeds(Cat, Mouse)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger does not eat the cow.\nFOL:\t-Eats(Tiger, Cow)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visits(Tiger, Cat)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf the tiger visits the mouse then the mouse eats the tiger.\nFOL:\tVisits(Tiger, Mouse) -> Eats(Mouse, Tiger)\nTEXT:\tIf someone is young and they need the mouse then they eat the mouse.\nFOL:\tall x. (Young(x) & Needs(x, Mouse) -> Eats(x, Mouse))\nTEXT:\tIf someone eats the tiger then they are green.\nFOL:\tall x. (Eats(x, Tiger) -> Green(x))\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tIf someone is young then they need the mouse.\nFOL:\tall x. (Young(x) -> Needs(x, Mouse))\nTEXT:\tThe mouse eats the mouse.\nFOL:\tEats(Mouse, Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat needs the mouse.\nFOL:\tNeeds(Cat, Mouse)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger does not eat the cow.\nFOL:\t-Eats(Tiger, Cow)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visits(Tiger, Cat)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf the tiger visits the mouse then the mouse eats the tiger.\nFOL:\tVisits(Tiger, Mouse) -> Eats(Mouse, Tiger)\nTEXT:\tIf someone is young and they need the mouse then they eat the mouse.\nFOL:\tall x. ((Young(x) & Needs(x, Mouse)) -> Eats(x, Mouse))\nTEXT:\tIf someone eats the tiger then they are green.\nFOL:\tall x. (Eats(x, Tiger) -> Green(x))\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tIf someone is young then they need the mouse.\nFOL:\tall x. (Young(x) -> Needs(x, Mouse))\nTEXT:\tThe mouse eats the mouse.\nFOL:\tEats(Mouse, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is not red.\nFOL:\t-Red(Cat)\nTEXT:\tThe cat needs the mouse.\nFOL:\tNeeds(Cat, Mouse)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cow eats the cat.\nFOL:\tEats(Cow, Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe mouse visits the cat.\nFOL:\tVisits(Mouse, Cat)\nTEXT:\tThe tiger eats the cat.\nFOL:\tEats(Tiger, Cat)\nTEXT:\tThe tiger does not eat the cow.\nFOL:\t-Eats(Tiger, Cow)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger does not visit the cat.\nFOL:\t-Visits(Tiger, Cat)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tThe tiger visits the mouse.\nFOL:\tVisits(Tiger, Mouse)\nTEXT:\tIf the tiger visits the mouse then the mouse eats the tiger.\nFOL:\tVisits(Tiger, Mouse) -> Eats(Mouse, Tiger)\nTEXT:\tIf someone is young and they need the mouse then they eat the mouse.\nFOL:\tall x. (Young(x) & Needs(x, Mouse) -> Eats(x, Mouse))\nTEXT:\tIf someone eats the tiger then they are green.\nFOL:\tall x. (Eats(x, Tiger) -> Green(x))\nTEXT:\tIf someone is green then they are young.\nFOL:\tall x. (Green(x) -> Young(x))\nTEXT:\tIf someone is young then they need the mouse.\nFOL:\tall x. (Young(x) -> Needs(x, Mouse))\nTEXT:\tThe mouse eats the mouse.\nFOL:\tEats(Mouse, Mouse)\nANSWER:\tFalse\n"], ["TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white and nice then it is kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tIf something is green then it is white.\nFOL:\tall x. (Green(x) -> White(x))\nTEXT:\tIf something is white then it is smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is green and blue then it is not smart.\nFOL:\tall x. ((Green(x) & Blue(x)) -> -Smart(x))\nTEXT:\tAll red, white things are not blue.\nFOL:\tall x. ((Red(x) & White(x)) -> -Blue(x))\nTEXT:\tAll green things are not blue.\nFOL:\tall x. (Green(x) -> -Blue(x))\nTEXT:\tIf Fiona is smart then Fiona is not blue.\nFOL:\tSmart(Fiona) -> -Blue(Fiona)\nTEXT:\tNice, kind things are red.\nFOL:\tall x. ((Nice(x) & Kind(x)) -> Red(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white and nice then it is kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tIf something is green then it is white.\nFOL:\tall x. (Green(x) -> White(x))\nTEXT:\tIf something is white then it is smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is green and blue then it is not smart.\nFOL:\tall x. ((Green(x) & Blue(x)) -> -Smart(x))\nTEXT:\tAll red, white things are not blue.\nFOL:\tall x. ((Red(x) & White(x)) -> -Blue(x))\nTEXT:\tAll green things are not blue.\nFOL:\tall x. (Green(x) -> -Blue(x))\nTEXT:\tIf Fiona is smart then Fiona is not blue.\nFOL:\tSmart(Fiona) -> -Blue(Fiona)\nTEXT:\tNice, kind things are red.\nFOL:\tall x. ((Nice(x) & Kind(x)) -> Red(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white and nice then it is kind.\nFOL:\tall x. (White(x) & Nice(x) -> Kind(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tIf something is green then it is white.\nFOL:\tall x. (Green(x) -> White(x))\nTEXT:\tIf something is white then it is smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is green and blue then it is not smart.\nFOL:\tall x. (Green(x) & Blue(x) -> -Smart(x))\nTEXT:\tAll red, white things are not blue.\nFOL:\tall x. (Red(x) & White(x) -> -Blue(x))\nTEXT:\tAll green things are not blue.\nFOL:\tall x. (Green(x) -> -Blue(x))\nTEXT:\tIf Fiona is smart then Fiona is not blue.\nFOL:\tSmart(Fiona) -> -Blue(Fiona)\nTEXT:\tNice, kind things are red.\nFOL:\tall x. (Nice(x) & Kind(x) -> Red(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white and nice then it is kind.\nFOL:\tall x. (White(x) & Nice(x) -> Kind(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tIf something is green then it is white.\nFOL:\tall x. (Green(x) -> White(x))\nTEXT:\tIf something is white then it is smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is green and blue then it is not smart.\nFOL:\tall x. (Green(x) & Blue(x) -> -Smart(x))\nTEXT:\tAll red, white things are not blue.\nFOL:\tall x. (Red(x) & White(x) -> -Blue(x))\nTEXT:\tAll green things are not blue.\nFOL:\tall x. (Green(x) -> -Blue(x))\nTEXT:\tIf Fiona is smart then Fiona is not blue.\nFOL:\tSmart(Fiona) -> -Blue(Fiona)\nTEXT:\tNice, kind things are red.\nFOL:\tall x. (Nice(x) & Kind(x) -> Red(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is white and nice then it is kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tIf something is green then it is white.\nFOL:\tall x. (Green(x) -> White(x))\nTEXT:\tIf something is white then it is smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is green and blue then it is not smart.\nFOL:\tall x. ((Green(x) & Blue(x)) -> -Smart(x))\nTEXT:\tAll red, white things are not blue.\nFOL:\tall x. ((Red(x) & White(x)) -> -Blue(x))\nTEXT:\tAll green things are not blue.\nFOL:\tall x. (Green(x) -> -Blue(x))\nTEXT:\tIf Fiona is smart then Fiona is not blue.\nFOL:\tSmart(Fiona) -> -Blue(Fiona)\nTEXT:\tNice, kind things are red.\nFOL:\tall x. ((Nice(x) & Kind(x)) -> Red(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is white and Dave is round then Dave is kind.\nFOL:\t(White(Dave) & Round(Dave)) -> Kind(Dave)\nTEXT:\tIf someone is furry then they are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf Bob is red and Bob is quiet then Bob is furry.\nFOL:\t(Red(Bob) & Quiet(Bob)) -> Furry(Bob)\nTEXT:\tAll white people are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tRed, white people are round.\nFOL:\tall x. ((Red(x) & White(x)) -> Round(x))\nTEXT:\tIf someone is cold then they are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tFiona is not red.\nFOL:\t-Red(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is white and Dave is round then Dave is kind.\nFOL:\t(White(Dave) & Round(Dave)) -> Kind(Dave)\nTEXT:\tIf someone is furry then they are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf Bob is red and Bob is quiet then Bob is furry.\nFOL:\t(Red(Bob) & Quiet(Bob)) -> Furry(Bob)\nTEXT:\tAll white people are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tRed, white people are round.\nFOL:\tall x. (Red(x) & White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tFiona is not red.\nFOL:\t-Red(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is white and Dave is round then Dave is kind.\nFOL:\t(White(Dave) & Round(Dave)) -> Kind(Dave)\nTEXT:\tIf someone is furry then they are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf Bob is red and Bob is quiet then Bob is furry.\nFOL:\t(Red(Bob) & Quiet(Bob)) -> Furry(Bob)\nTEXT:\tAll white people are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tRed, white people are round.\nFOL:\tall x. (Red(x) & White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tFiona is not red.\nFOL:\t-Red(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is white and Dave is round then Dave is kind.\nFOL:\tWhite(Dave) & Round(Dave) -> Kind(Dave)\nTEXT:\tIf someone is furry then they are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf Bob is red and Bob is quiet then Bob is furry.\nFOL:\tRed(Bob) & Quiet(Bob) -> Furry(Bob)\nTEXT:\tAll white people are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tRed, white people are round.\nFOL:\tall x. (Red(x) & White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tFiona is not red.\nFOL:\t-Red(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tIf Dave is white and Dave is round then Dave is kind.\nFOL:\t(White(Dave) & Round(Dave)) -> Kind(Dave)\nTEXT:\tIf someone is furry then they are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tIf Bob is red and Bob is quiet then Bob is furry.\nFOL:\t(Red(Bob) & Quiet(Bob)) -> Furry(Bob)\nTEXT:\tAll white people are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tRed, white people are round.\nFOL:\tall x. (Red(x) & White(x) -> Round(x))\nTEXT:\tIf someone is cold then they are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tAll round people are quiet.\nFOL:\tall x. (Round(x) -> Quiet(x))\nTEXT:\tFiona is not red.\nFOL:\t-Red(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf someone eats the cow then the cow sees the bald eagle.\nFOL:\tall x. (Eats(x, Cow) -> Sees(Cow, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and they eat the bald eagle then they like the cow.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, BaldEagle)) -> Likes(x, Cow))\nTEXT:\tIf someone likes the lion and the lion is cold then they see the bald eagle.\nFOL:\tall x. ((Likes(x, Lion) & Cold(Lion)) -> Sees(x, BaldEagle))\nTEXT:\tAll young people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf someone likes the bald eagle and they see the bald eagle then the bald eagle is red.\nFOL:\tall x. ((Likes(x, BaldEagle) & Sees(x, BaldEagle)) -> Red(BaldEagle))\nTEXT:\tIf someone is red then they eat the bald eagle.\nFOL:\tall x. (Red(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone eats the lion then they like the bald eagle.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, BaldEagle))\nTEXT:\tIf someone likes the cow then they like the tiger.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Tiger))\nTEXT:\tIf the lion sees the cow then the cow eats the tiger.\nFOL:\t(Sees(Lion, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe tiger sees the tiger.\nFOL:\tSees(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf someone eats the cow then the cow sees the bald eagle.\nFOL:\tall x. (Eats(x, Cow) -> Sees(Cow, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and they eat the bald eagle then they like the cow.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, BaldEagle)) -> Likes(x, Cow))\nTEXT:\tIf someone likes the lion and the lion is cold then they see the bald eagle.\nFOL:\tall x. ((Likes(x, Lion) & Cold(Lion)) -> Sees(x, BaldEagle))\nTEXT:\tAll young people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf someone likes the bald eagle and they see the bald eagle then the bald eagle is red.\nFOL:\tall x. ((Likes(x, BaldEagle) & Sees(x, BaldEagle)) -> Red(BaldEagle))\nTEXT:\tIf someone is red then they eat the bald eagle.\nFOL:\tall x. (Red(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone eats the lion then they like the bald eagle.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, BaldEagle))\nTEXT:\tIf someone likes the cow then they like the tiger.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Tiger))\nTEXT:\tIf the lion sees the cow then the cow eats the tiger.\nFOL:\tSees(Lion, Cow) -> Eats(Cow, Tiger)\nTEXT:\tThe tiger sees the tiger.\nFOL:\tSees(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf someone eats the cow then the cow sees the bald eagle.\nFOL:\tall x. (Eats(x, Cow) -> Sees(Cow, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and they eat the bald eagle then they like the cow.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, BaldEagle)) -> Likes(x, Cow))\nTEXT:\tIf someone likes the lion and the lion is cold then they see the bald eagle.\nFOL:\tall x. ((Likes(x, Lion) & Cold(Lion)) -> Sees(x, BaldEagle))\nTEXT:\tAll young people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf someone likes the bald eagle and they see the bald eagle then the bald eagle is red.\nFOL:\tall x. ((Likes(x, BaldEagle) & Sees(x, BaldEagle)) -> Red(BaldEagle))\nTEXT:\tIf someone is red then they eat the bald eagle.\nFOL:\tall x. (Red(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone eats the lion then they like the bald eagle.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, BaldEagle))\nTEXT:\tIf someone likes the cow then they like the tiger.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Tiger))\nTEXT:\tIf the lion sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(Lion, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe tiger sees the tiger.\nFOL:\tSees(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf someone eats the cow then the cow sees the bald eagle.\nFOL:\tall x. (Eats(x, Cow) -> Sees(Cow, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and they eat the bald eagle then they like the cow.\nFOL:\tall x. (Likes(x, BaldEagle) & Eats(x, BaldEagle) -> Likes(x, Cow))\nTEXT:\tIf someone likes the lion and the lion is cold then they see the bald eagle.\nFOL:\tall x. (Likes(x, Lion) & Cold(Lion) -> Sees(x, BaldEagle))\nTEXT:\tAll young people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf someone likes the bald eagle and they see the bald eagle then the bald eagle is red.\nFOL:\tall x. (Likes(x, BaldEagle) & Sees(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tIf someone is red then they eat the bald eagle.\nFOL:\tall x. (Red(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone eats the lion then they like the bald eagle.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, BaldEagle))\nTEXT:\tIf someone likes the cow then they like the tiger.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Tiger))\nTEXT:\tIf the lion sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(Lion, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe tiger sees the tiger.\nFOL:\tSees(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the lion.\nFOL:\tEats(BaldEagle, Lion)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tIf someone eats the cow then the cow sees the bald eagle.\nFOL:\tall x. (Eats(x, Cow) -> Sees(Cow, BaldEagle))\nTEXT:\tIf someone likes the bald eagle and they eat the bald eagle then they like the cow.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, BaldEagle)) -> Likes(x, Cow))\nTEXT:\tIf someone likes the lion and the lion is cold then they see the bald eagle.\nFOL:\tall x. ((Likes(x, Lion) & Cold(Lion)) -> Sees(x, BaldEagle))\nTEXT:\tAll young people are cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tIf someone likes the bald eagle and they see the bald eagle then the bald eagle is red.\nFOL:\tall x. ((Likes(x, BaldEagle) & Sees(x, BaldEagle)) -> Red(BaldEagle))\nTEXT:\tIf someone is red then they eat the bald eagle.\nFOL:\tall x. (Red(x) -> Eats(x, BaldEagle))\nTEXT:\tIf someone eats the lion then they like the bald eagle.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, BaldEagle))\nTEXT:\tIf someone likes the cow then they like the tiger.\nFOL:\tall x. (Likes(x, Cow) -> Likes(x, Tiger))\nTEXT:\tIf the lion sees the cow then the cow eats the tiger.\nFOL:\tall x. (Sees(Lion, Cow) -> Eats(Cow, Tiger))\nTEXT:\tThe tiger sees the tiger.\nFOL:\tSees(Tiger, Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe cow chases the dog.\nFOL:\tChases(Cow, Dog)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe lion needs the cow.\nFOL:\tNeeds(Lion, Cow)\nTEXT:\tThe lion visits the cat.\nFOL:\tVisits(Lion, Cat)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tIf something is young then it needs the dog.\nFOL:\tall x. (Young(x) -> Needs(x, Dog))\nTEXT:\tIf something visits the lion then the lion needs the cow.\nFOL:\tall x. (Visits(x, Lion) -> Needs(Lion, Cow))\nTEXT:\tIf something is rough and it chases the dog then the dog is kind.\nFOL:\tall x. (Rough(x) & Chases(x, Dog) -> Kind(Dog))\nTEXT:\tIf the cow needs the cat then the cow is rough.\nFOL:\tNeeds(Cow, Cat) -> Rough(Cow)\nTEXT:\tIf something needs the dog and the dog needs the cow then it is nice.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it is nice then the cow is young.\nFOL:\tall x. (Chases(x, Cow) & Nice(x) -> Young(Cow))\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe cow chases the dog.\nFOL:\tChases(Cow, Dog)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe lion needs the cow.\nFOL:\tNeeds(Lion, Cow)\nTEXT:\tThe lion visits the cat.\nFOL:\tVisits(Lion, Cat)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tIf something is young then it needs the dog.\nFOL:\tall x. (Young(x) -> Needs(x, Dog))\nTEXT:\tIf something visits the lion then the lion needs the cow.\nFOL:\tall x. (Visits(x, Lion) -> Needs(Lion, Cow))\nTEXT:\tIf something is rough and it chases the dog then the dog is kind.\nFOL:\tall x. (Rough(x) & Chases(x, Dog) -> Kind(Dog))\nTEXT:\tIf the cow needs the cat then the cow is rough.\nFOL:\tNeeds(Cow, Cat) -> Rough(Cow)\nTEXT:\tIf something needs the dog and the dog needs the cow then it is nice.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it is nice then the cow is young.\nFOL:\tall x. (Chases(x, Cow) & Nice(x) -> Young(Cow))\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe cow chases the dog.\nFOL:\tChases(Cow, Dog)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe lion needs the cow.\nFOL:\tNeeds(Lion, Cow)\nTEXT:\tThe lion visits the cat.\nFOL:\tVisits(Lion, Cat)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tIf something is young then it needs the dog.\nFOL:\tall x. (Young(x) -> Needs(x, Dog))\nTEXT:\tIf something visits the lion then the lion needs the cow.\nFOL:\tall x. (Visits(x, Lion) -> Needs(Lion, Cow))\nTEXT:\tIf something is rough and it chases the dog then the dog is kind.\nFOL:\tall x. (Rough(x) & Chases(x, Dog) -> Kind(Dog))\nTEXT:\tIf the cow needs the cat then the cow is rough.\nFOL:\tNeeds(Cow, Cat) -> Rough(Cow)\nTEXT:\tIf something needs the dog and the dog needs the cow then it is nice.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it is nice then the cow is young.\nFOL:\tall x. (Chases(x, Cow) & Nice(x) -> Young(Cow))\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe cow chases the dog.\nFOL:\tChases(Cow, Dog)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe lion needs the cow.\nFOL:\tNeeds(Lion, Cow)\nTEXT:\tThe lion visits the cat.\nFOL:\tVisits(Lion, Cat)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tIf something is young then it needs the dog.\nFOL:\tall x. (Young(x) -> Needs(x, Dog))\nTEXT:\tIf something visits the lion then the lion needs the cow.\nFOL:\tall x. (Visits(x, Lion) -> Needs(Lion, Cow))\nTEXT:\tIf something is rough and it chases the dog then the dog is kind.\nFOL:\tall x. (Rough(x) & Chases(x, Dog) -> Kind(Dog))\nTEXT:\tIf the cow needs the cat then the cow is rough.\nFOL:\tNeeds(Cow, Cat) -> Rough(Cow)\nTEXT:\tIf something needs the dog and the dog needs the cow then it is nice.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it is nice then the cow is young.\nFOL:\tall x. (Chases(x, Cow) & Nice(x) -> Young(Cow))\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe cat visits the lion.\nFOL:\tVisits(Cat, Lion)\nTEXT:\tThe cow chases the dog.\nFOL:\tChases(Cow, Dog)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\nTEXT:\tThe dog chases the cat.\nFOL:\tChases(Dog, Cat)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion is young.\nFOL:\tYoung(Lion)\nTEXT:\tThe lion needs the cow.\nFOL:\tNeeds(Lion, Cow)\nTEXT:\tThe lion visits the cat.\nFOL:\tVisits(Lion, Cat)\nTEXT:\tThe lion visits the dog.\nFOL:\tVisits(Lion, Dog)\nTEXT:\tIf something is young then it needs the dog.\nFOL:\tall x. (Young(x) -> Needs(x, Dog))\nTEXT:\tIf something visits the lion then the lion needs the cow.\nFOL:\tall x. (Visits(x, Lion) -> Needs(Lion, Cow))\nTEXT:\tIf something is rough and it chases the dog then the dog is kind.\nFOL:\tall x. (Rough(x) & Chases(x, Dog) -> Kind(Dog))\nTEXT:\tIf the cow needs the cat then the cow is rough.\nFOL:\tNeeds(Cow, Cat) -> Rough(Cow)\nTEXT:\tIf something needs the dog and the dog needs the cow then it is nice.\nFOL:\tall x. ((Needs(x, Dog) & Needs(Dog, Cow)) -> Nice(x))\nTEXT:\tIf something chases the cow and it is nice then the cow is young.\nFOL:\tall x. ((Chases(x, Cow) & Nice(x)) -> Young(Cow))\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tKind people are not young.\nFOL:\tall x. (Kind(x) -> -Young(x))\nTEXT:\tIf someone is nice then they are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tYoung, kind people are smart.\nFOL:\tall x. (Young(x) & Kind(x) -> Smart(x))\nTEXT:\tAll white, young people are kind.\nFOL:\tall x. (White(x) & Young(x) -> Kind(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Anne is smart then Anne is young.\nFOL:\tSmart(Anne) -> Young(Anne)\nTEXT:\tIf Charlie is furry then Charlie is kind.\nFOL:\tFurry(Charlie) -> Kind(Charlie)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tKind people are not young.\nFOL:\tall x. (Kind(x) -> -Young(x))\nTEXT:\tIf someone is nice then they are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tYoung, kind people are smart.\nFOL:\tall x. (Young(x) & Kind(x) -> Smart(x))\nTEXT:\tAll white, young people are kind.\nFOL:\tall x. (White(x) & Young(x) -> Kind(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Anne is smart then Anne is young.\nFOL:\tSmart(Anne) -> Young(Anne)\nTEXT:\tIf Charlie is furry then Charlie is kind.\nFOL:\tFurry(Charlie) -> Kind(Charlie)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tKind people are not young.\nFOL:\tall x. (Kind(x) -> -Young(x))\nTEXT:\tIf someone is nice then they are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tYoung, kind people are smart.\nFOL:\tall x. (Young(x) & Kind(x) -> Smart(x))\nTEXT:\tAll white, young people are kind.\nFOL:\tall x. (White(x) & Young(x) -> Kind(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Anne is smart then Anne is young.\nFOL:\tSmart(Anne) -> Young(Anne)\nTEXT:\tIf Charlie is furry then Charlie is kind.\nFOL:\tFurry(Charlie) -> Kind(Charlie)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tKind people are not young.\nFOL:\tall x. (Kind(x) -> -Young(x))\nTEXT:\tIf someone is nice then they are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tYoung, kind people are smart.\nFOL:\tall x. (Young(x) & Kind(x) -> Smart(x))\nTEXT:\tAll white, young people are kind.\nFOL:\tall x. (White(x) & Young(x) -> Kind(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Anne is smart then Anne is young.\nFOL:\tSmart(Anne) -> Young(Anne)\nTEXT:\tIf Charlie is furry then Charlie is kind.\nFOL:\tFurry(Charlie) -> Kind(Charlie)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tKind people are not young.\nFOL:\tall x. (Kind(x) -> -Young(x))\nTEXT:\tIf someone is nice then they are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tYoung, kind people are smart.\nFOL:\tall x. (Young(x) & Kind(x) -> Smart(x))\nTEXT:\tAll white, young people are kind.\nFOL:\tall x. (White(x) & Young(x) -> Kind(x))\nTEXT:\tIf someone is kind then they are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf someone is smart then they are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf someone is white then they are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tIf Anne is smart then Anne is young.\nFOL:\t(Smart(Anne) -> Young(Anne))\nTEXT:\tIf Charlie is furry then Charlie is kind.\nFOL:\t(Furry(Charlie) -> Kind(Charlie))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tIf someone is smart and cold then they are nice.\nFOL:\tall x. (Smart(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tRough, nice people are red.\nFOL:\tall x. (Rough(x) & Nice(x) -> Red(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf Fiona is red then Fiona is big.\nFOL:\t(Red(Fiona) -> Big(Fiona))\nTEXT:\tAll furry people are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tIf someone is smart and cold then they are nice.\nFOL:\tall x. ((Smart(x) & Cold(x)) -> Nice(x))\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tRough, nice people are red.\nFOL:\tall x. ((Rough(x) & Nice(x)) -> Red(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf Fiona is red then Fiona is big.\nFOL:\tRed(Fiona) -> Big(Fiona)\nTEXT:\tAll furry people are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tIf someone is smart and cold then they are nice.\nFOL:\tall x. (Smart(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tRough, nice people are red.\nFOL:\tall x. (Rough(x) & Nice(x) -> Red(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf Fiona is red then Fiona is big.\nFOL:\tRed(Fiona) -> Big(Fiona)\nTEXT:\tAll furry people are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tIf someone is smart and cold then they are nice.\nFOL:\tall x. (Smart(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tRough, nice people are red.\nFOL:\tall x. (Rough(x) & Nice(x) -> Red(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf Fiona is red then Fiona is big.\nFOL:\tRed(Fiona) -> Big(Fiona)\nTEXT:\tAll furry people are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tIf someone is smart and cold then they are nice.\nFOL:\tall x. (Smart(x) & Cold(x) -> Nice(x))\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tRough, nice people are red.\nFOL:\tall x. (Rough(x) & Nice(x) -> Red(x))\nTEXT:\tIf someone is rough then they are smart.\nFOL:\tall x. (Rough(x) -> Smart(x))\nTEXT:\tIf Fiona is red then Fiona is big.\nFOL:\tRed(Fiona) -> Big(Fiona)\nTEXT:\tAll furry people are rough.\nFOL:\tall x. (Furry(x) -> Rough(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nANSWER:\tTrue\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart people are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf someone is red then they are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. (Nice(x) & Red(x) -> Green(x))\nTEXT:\tAll red, rough people are round.\nFOL:\tall x. (Red(x) & Rough(x) -> Round(x))\nTEXT:\tIf someone is rough and round then they are smart.\nFOL:\tall x. (Rough(x) & Round(x) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is cold then Gary is nice.\nFOL:\t(Smart(Gary) & Cold(Gary)) -> Nice(Gary)\nTEXT:\tGreen, smart people are red.\nFOL:\tall x. (Green(x) & Smart(x) -> Red(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart people are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf someone is red then they are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. (Nice(x) & Red(x) -> Green(x))\nTEXT:\tAll red, rough people are round.\nFOL:\tall x. (Red(x) & Rough(x) -> Round(x))\nTEXT:\tIf someone is rough and round then they are smart.\nFOL:\tall x. (Rough(x) & Round(x) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is cold then Gary is nice.\nFOL:\t(Smart(Gary) & Cold(Gary) -> Nice(Gary))\nTEXT:\tGreen, smart people are red.\nFOL:\tall x. (Green(x) & Smart(x) -> Red(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart people are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf someone is red then they are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. (Nice(x) & Red(x) -> Green(x))\nTEXT:\tAll red, rough people are round.\nFOL:\tall x. (Red(x) & Rough(x) -> Round(x))\nTEXT:\tIf someone is rough and round then they are smart.\nFOL:\tall x. (Rough(x) & Round(x) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is cold then Gary is nice.\nFOL:\t(Smart(Gary) & Cold(Gary) -> Nice(Gary))\nTEXT:\tGreen, smart people are red.\nFOL:\tall x. (Green(x) & Smart(x) -> Red(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart people are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf someone is red then they are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. (Nice(x) & Red(x) -> Green(x))\nTEXT:\tAll red, rough people are round.\nFOL:\tall x. (Red(x) & Rough(x) -> Round(x))\nTEXT:\tIf someone is rough and round then they are smart.\nFOL:\tall x. (Rough(x) & Round(x) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is cold then Gary is nice.\nFOL:\t(Smart(Gary) & Cold(Gary)) -> Nice(Gary)\nTEXT:\tGreen, smart people are red.\nFOL:\tall x. (Green(x) & Smart(x) -> Red(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll smart people are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf someone is red then they are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. (Nice(x) & Red(x) -> Green(x))\nTEXT:\tAll red, rough people are round.\nFOL:\tall x. (Red(x) & Rough(x) -> Round(x))\nTEXT:\tIf someone is rough and round then they are smart.\nFOL:\tall x. (Rough(x) & Round(x) -> Smart(x))\nTEXT:\tIf Gary is smart and Gary is cold then Gary is nice.\nFOL:\t(Smart(Gary) & Cold(Gary)) -> Nice(Gary)\nTEXT:\tGreen, smart people are red.\nFOL:\tall x. (Green(x) & Smart(x) -> Red(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is red and nice then they are not quiet.\nFOL:\tall x. ((Red(x) & Nice(x)) -> -Quiet(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is quiet and round then they are not red.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> -Red(x))\nTEXT:\tIf someone is green and quiet then they are round.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Round(x))\nTEXT:\tIf someone is cold then they are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is red and nice then they are not quiet.\nFOL:\tall x. (Red(x) & Nice(x) -> -Quiet(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is quiet and round then they are not red.\nFOL:\tall x. (Quiet(x) & Round(x) -> -Red(x))\nTEXT:\tIf someone is green and quiet then they are round.\nFOL:\tall x. (Green(x) & Quiet(x) -> Round(x))\nTEXT:\tIf someone is cold then they are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is red and nice then they are not quiet.\nFOL:\tall x. ((Red(x) & Nice(x)) -> -Quiet(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is quiet and round then they are not red.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> -Red(x))\nTEXT:\tIf someone is green and quiet then they are round.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Round(x))\nTEXT:\tIf someone is cold then they are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is red and nice then they are not quiet.\nFOL:\tall x. ((Red(x) & Nice(x)) -> -Quiet(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is quiet and round then they are not red.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> -Red(x))\nTEXT:\tIf someone is green and quiet then they are round.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Round(x))\nTEXT:\tIf someone is cold then they are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is not red.\nFOL:\t-Red(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tNice people are quiet.\nFOL:\tall x. (Nice(x) -> Quiet(x))\nTEXT:\tIf someone is red and nice then they are not quiet.\nFOL:\tall x. ((Red(x) & Nice(x)) -> -Quiet(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is quiet and round then they are not red.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> -Red(x))\nTEXT:\tIf someone is green and quiet then they are round.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Round(x))\nTEXT:\tIf someone is cold then they are green.\nFOL:\tall x. (Cold(x) -> Green(x))\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tFurry things are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tIf Fiona is green then Fiona is white.\nFOL:\tGreen(Fiona) -> White(Fiona)\nTEXT:\tAll kind, white things are young.\nFOL:\tall x. ((Kind(x) & White(x)) -> Young(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tFurry things are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tIf Fiona is green then Fiona is white.\nFOL:\tGreen(Fiona) -> White(Fiona)\nTEXT:\tAll kind, white things are young.\nFOL:\tall x. (Kind(x) & White(x) -> Young(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tFurry things are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tIf Fiona is green then Fiona is white.\nFOL:\tGreen(Fiona) -> White(Fiona)\nTEXT:\tAll kind, white things are young.\nFOL:\tall x. ((Kind(x) & White(x)) -> Young(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tFurry things are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tIf Fiona is green then Fiona is white.\nFOL:\tGreen(Fiona) -> White(Fiona)\nTEXT:\tAll kind, white things are young.\nFOL:\tall x. ((Kind(x) & White(x)) -> Young(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n", "TEXT:\tCharlie is not big.\nFOL:\t-Big(Charlie)\nTEXT:\tCharlie is not furry.\nFOL:\t-Furry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is not quiet.\nFOL:\t-Quiet(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tFurry things are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tIf Fiona is green then Fiona is white.\nFOL:\tGreen(Fiona) -> White(Fiona)\nTEXT:\tAll kind, white things are young.\nFOL:\tall x. ((Kind(x) & White(x)) -> Young(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf something is young and rough then it is round.\nFOL:\tall x. (Young(x) & Rough(x) -> Round(x))\nTEXT:\tAll smart things are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tIf something is round then it is green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf something is rough and big then it is young.\nFOL:\tall x. (Rough(x) & Big(x) -> Young(x))\nTEXT:\tBlue things are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tRough, smart things are young.\nFOL:\tall x. (Rough(x) & Smart(x) -> Young(x))\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf something is young and rough then it is round.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart things are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tIf something is round then it is green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf something is rough and big then it is young.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Young(x))\nTEXT:\tBlue things are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tRough, smart things are young.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> Young(x))\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf something is young and rough then it is round.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart things are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tIf something is round then it is green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf something is rough and big then it is young.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Young(x))\nTEXT:\tBlue things are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tRough, smart things are young.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> Young(x))\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf something is young and rough then it is round.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart things are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tIf something is round then it is green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf something is rough and big then it is young.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Young(x))\nTEXT:\tBlue things are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tRough, smart things are young.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> Young(x))\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nANSWER:\tTrue\n", "TEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf something is young and rough then it is round.\nFOL:\tall x. ((Young(x) & Rough(x)) -> Round(x))\nTEXT:\tAll smart things are rough.\nFOL:\tall x. (Smart(x) -> Rough(x))\nTEXT:\tIf something is round then it is green.\nFOL:\tall x. (Round(x) -> Green(x))\nTEXT:\tIf something is rough and big then it is young.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Young(x))\nTEXT:\tBlue things are smart.\nFOL:\tall x. (Blue(x) -> Smart(x))\nTEXT:\tRough, smart things are young.\nFOL:\tall x. ((Rough(x) & Smart(x)) -> Young(x))\nTEXT:\tDave is not rough.\nFOL:\t-Rough(Dave)\nANSWER:\tFalse\n"], ["TEXT:\tThe bald eagle eats the squirrel.\nFOL:\tEats(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle does not visit the squirrel.\nFOL:\t-Visits(BaldEagle, Squirrel)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the cow and they do not eat the cat then they do not eat the bald eagle.\nFOL:\tall x. (Likes(x, Cow) & -Eats(x, Cat) -> -Eats(x, BaldEagle))\nTEXT:\tIf someone eats the cat then they are blue.\nFOL:\tall x. (Eats(x, Cat) -> Blue(x))\nTEXT:\tIf someone is big then they do not like the cat.\nFOL:\tall x. (Big(x) -> -Likes(x, Cat))\nTEXT:\tIf the cow eats the cat and the cat is big then the cow visits the bald eagle.\nFOL:\t(Eats(Cow, Cat) & Big(Cat) -> Visits(Cow, BaldEagle))\nTEXT:\tIf someone visits the cat then the cat is round.\nFOL:\tall x. (Visits(x, Cat) -> Round(Cat))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone is kind then they like the squirrel.\nFOL:\tall x. (Kind(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone visits the cat and the cat is round then they are big.\nFOL:\tall x. (Visits(x, Cat) & Round(Cat) -> Big(x))\nTEXT:\tIf someone eats the squirrel and they like the squirrel then the squirrel visits the cat.\nFOL:\tall x. (Eats(x, Squirrel) & Likes(x, Squirrel) -> Visits(Squirrel, Cat))\nTEXT:\tThe squirrel does not like the cat.\nFOL:\t-Likes(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the squirrel.\nFOL:\tEats(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle does not visit the squirrel.\nFOL:\t-Visit(BaldEagle, Squirrel)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisit(Cow, Squirrel)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the cow and they do not eat the cat then they do not eat the bald eagle.\nFOL:\tall x. (Likes(x, Cow) & -Eats(x, Cat) -> -Eats(x, BaldEagle))\nTEXT:\tIf someone eats the cat then they are blue.\nFOL:\tall x. (Eats(x, Cat) -> Blue(x))\nTEXT:\tIf someone is big then they do not like the cat.\nFOL:\tall x. (Big(x) -> -Likes(x, Cat))\nTEXT:\tIf the cow eats the cat and the cat is big then the cow visits the bald eagle.\nFOL:\t(Eats(Cow, Cat) & Big(Cat) -> Visit(Cow, BaldEagle))\nTEXT:\tIf someone visits the cat then the cat is round.\nFOL:\tall x. (Visit(x, Cat) -> Round(Cat))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visit(x, Cow) -> Round(x))\nTEXT:\tIf someone is kind then they like the squirrel.\nFOL:\tall x. (Kind(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone visits the cat and the cat is round then they are big.\nFOL:\tall x. (Visit(x, Cat) & Round(Cat) -> Big(x))\nTEXT:\tIf someone eats the squirrel and they like the squirrel then the squirrel visits the cat.\nFOL:\tall x. (Eats(x, Squirrel) & Likes(x, Squirrel) -> Visit(Squirrel, Cat))\nTEXT:\tThe squirrel does not like the cat.\nFOL:\t-Likes(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the squirrel.\nFOL:\tEats(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle does not visit the squirrel.\nFOL:\t-Visits(BaldEagle, Squirrel)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the cow and they do not eat the cat then they do not eat the bald eagle.\nFOL:\tall x. ((Likes(x, Cow) & -Eats(x, Cat)) -> -Eats(x, BaldEagle))\nTEXT:\tIf someone eats the cat then they are blue.\nFOL:\tall x. (Eats(x, Cat) -> Blue(x))\nTEXT:\tIf someone is big then they do not like the cat.\nFOL:\tall x. (Big(x) -> -Likes(x, Cat))\nTEXT:\tIf the cow eats the cat and the cat is big then the cow visits the bald eagle.\nFOL:\t(Eats(Cow, Cat) & Big(Cat)) -> Visits(Cow, BaldEagle)\nTEXT:\tIf someone visits the cat then the cat is round.\nFOL:\tall x. (Visits(x, Cat) -> Round(Cat))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone is kind then they like the squirrel.\nFOL:\tall x. (Kind(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone visits the cat and the cat is round then they are big.\nFOL:\tall x. ((Visits(x, Cat) & Round(Cat)) -> Big(x))\nTEXT:\tIf someone eats the squirrel and they like the squirrel then the squirrel visits the cat.\nFOL:\tall x. ((Eats(x, Squirrel) & Likes(x, Squirrel)) -> Visits(Squirrel, Cat))\nTEXT:\tThe squirrel does not like the cat.\nFOL:\t-Likes(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the squirrel.\nFOL:\tEats(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle does not visit the squirrel.\nFOL:\t-Visits(BaldEagle, Squirrel)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the cow and they do not eat the cat then they do not eat the bald eagle.\nFOL:\tall x. ((Likes(x, Cow) & -Eats(x, Cat)) -> -Eats(x, BaldEagle))\nTEXT:\tIf someone eats the cat then they are blue.\nFOL:\tall x. (Eats(x, Cat) -> Blue(x))\nTEXT:\tIf someone is big then they do not like the cat.\nFOL:\tall x. (Big(x) -> -Likes(x, Cat))\nTEXT:\tIf the cow eats the cat and the cat is big then the cow visits the bald eagle.\nFOL:\t(Eats(Cow, Cat) & Big(Cat)) -> Visits(Cow, BaldEagle)\nTEXT:\tIf someone visits the cat then the cat is round.\nFOL:\tall x. (Visits(x, Cat) -> Round(Cat))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone is kind then they like the squirrel.\nFOL:\tall x. (Kind(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone visits the cat and the cat is round then they are big.\nFOL:\tall x. ((Visits(x, Cat) & Round(Cat)) -> Big(x))\nTEXT:\tIf someone eats the squirrel and they like the squirrel then the squirrel visits the cat.\nFOL:\tall x. ((Eats(x, Squirrel) & Likes(x, Squirrel)) -> Visits(Squirrel, Cat))\nTEXT:\tThe squirrel does not like the cat.\nFOL:\t-Likes(Squirrel, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the squirrel.\nFOL:\tEats(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle does not visit the squirrel.\nFOL:\t-Visits(BaldEagle, Squirrel)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat likes the squirrel.\nFOL:\tLikes(Cat, Squirrel)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow likes the squirrel.\nFOL:\tLikes(Cow, Squirrel)\nTEXT:\tThe cow visits the squirrel.\nFOL:\tVisits(Cow, Squirrel)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel likes the bald eagle.\nFOL:\tLikes(Squirrel, BaldEagle)\nTEXT:\tIf someone likes the cow and they do not eat the cat then they do not eat the bald eagle.\nFOL:\tall x. ((Likes(x, Cow) & -Eats(x, Cat)) -> -Eats(x, BaldEagle))\nTEXT:\tIf someone eats the cat then they are blue.\nFOL:\tall x. (Eats(x, Cat) -> Blue(x))\nTEXT:\tIf someone is big then they do not like the cat.\nFOL:\tall x. (Big(x) -> -Likes(x, Cat))\nTEXT:\tIf the cow eats the cat and the cat is big then the cow visits the bald eagle.\nFOL:\t((Eats(Cow, Cat) & Big(Cat)) -> Visits(Cow, BaldEagle))\nTEXT:\tIf someone visits the cat then the cat is round.\nFOL:\tall x. (Visits(x, Cat) -> Round(Cat))\nTEXT:\tIf someone visits the cow then they are round.\nFOL:\tall x. (Visits(x, Cow) -> Round(x))\nTEXT:\tIf someone is kind then they like the squirrel.\nFOL:\tall x. (Kind(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone visits the cat and the cat is round then they are big.\nFOL:\tall x. ((Visits(x, Cat) & Round(Cat)) -> Big(x))\nTEXT:\tIf someone eats the squirrel and they like the squirrel then the squirrel visits the cat.\nFOL:\tall x. ((Eats(x, Squirrel) & Likes(x, Squirrel)) -> Visits(Squirrel, Cat))\nTEXT:\tThe squirrel does not like the cat.\nFOL:\t-Likes(Squirrel, Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-IsCold(BaldEagle)\nTEXT:\tThe cow is not big.\nFOL:\t-IsBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tIsGreen(Cow)\nTEXT:\tThe dog does not chase the tiger.\nFOL:\t-Chases(Dog, Tiger)\nTEXT:\tThe tiger chases the cow.\nFOL:\tChases(Tiger, Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-IsBig(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tIsYoung(Tiger)\nTEXT:\tThe tiger visits the bald eagle.\nFOL:\tVisits(Tiger, BaldEagle)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf someone eats the tiger and they are green then they do not eat the cow.\nFOL:\tall x. ((Eats(x, Tiger) & IsGreen(x)) -> -Eats(x, Cow))\nTEXT:\tIf someone visits the dog then they eat the cow.\nFOL:\tall x. (Visits(x, Dog) -> Eats(x, Cow))\nTEXT:\tIf someone chases the cow then they visit the dog.\nFOL:\tall x. (Chases(x, Cow) -> Visits(x, Dog))\nTEXT:\tIf someone eats the tiger and they do not chase the cow then they eat the dog.\nFOL:\tall x. ((Eats(x, Tiger) & -Chases(x, Cow)) -> Eats(x, Dog))\nTEXT:\tIf the tiger eats the cow and the cow visits the tiger then the tiger is not green.\nFOL:\t(Eats(Tiger, Cow) & Visits(Cow, Tiger)) -> -IsGreen(Tiger)\nTEXT:\tIf someone eats the cow then the cow visits the dog.\nFOL:\tall x. (Eats(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tIf someone eats the tiger and they chase the dog then the dog is not green.\nFOL:\tall x. ((Eats(x, Tiger) & Chases(x, Dog)) -> -IsGreen(Dog))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tIf the cow chases the tiger and the cow chases the dog then the cow eats the bald eagle.\nFOL:\t(Chases(Cow, Tiger) & Chases(Cow, Dog)) -> Eats(Cow, BaldEagle)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-IsCold(BaldEagle)\nTEXT:\tThe cow is not big.\nFOL:\t-IsBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tIsGreen(Cow)\nTEXT:\tThe dog does not chase the tiger.\nFOL:\t-Chases(Dog, Tiger)\nTEXT:\tThe tiger chases the cow.\nFOL:\tChases(Tiger, Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-IsBig(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tIsYoung(Tiger)\nTEXT:\tThe tiger visits the bald eagle.\nFOL:\tVisits(Tiger, BaldEagle)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf someone eats the tiger and they are green then they do not eat the cow.\nFOL:\tall x. ((Eats(x, Tiger) & IsGreen(x)) -> -Eats(x, Cow))\nTEXT:\tIf someone visits the dog then they eat the cow.\nFOL:\tall x. (Visits(x, Dog) -> Eats(x, Cow))\nTEXT:\tIf someone chases the cow then they visit the dog.\nFOL:\tall x. (Chases(x, Cow) -> Visits(x, Dog))\nTEXT:\tIf someone eats the tiger and they do not chase the cow then they eat the dog.\nFOL:\tall x. ((Eats(x, Tiger) & -Chases(x, Cow)) -> Eats(x, Dog))\nTEXT:\tIf the tiger eats the cow and the cow visits the tiger then the tiger is not green.\nFOL:\t((Eats(Tiger, Cow) & Visits(Cow, Tiger)) -> -IsGreen(Tiger))\nTEXT:\tIf someone eats the cow then the cow visits the dog.\nFOL:\tall x. (Eats(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tIf someone eats the tiger and they chase the dog then the dog is not green.\nFOL:\tall x. ((Eats(x, Tiger) & Chases(x, Dog)) -> -IsGreen(Dog))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tIf the cow chases the tiger and the cow chases the dog then the cow eats the bald eagle.\nFOL:\t((Chases(Cow, Tiger) & Chases(Cow, Dog)) -> Eats(Cow, BaldEagle))\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-IsCold(BaldEagle)\nTEXT:\tThe cow is not big.\nFOL:\t-IsBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tIsGreen(Cow)\nTEXT:\tThe dog does not chase the tiger.\nFOL:\t-Chases(Dog, Tiger)\nTEXT:\tThe tiger chases the cow.\nFOL:\tChases(Tiger, Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-IsBig(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tIsYoung(Tiger)\nTEXT:\tThe tiger visits the bald eagle.\nFOL:\tVisits(Tiger, BaldEagle)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf someone eats the tiger and they are green then they do not eat the cow.\nFOL:\tall x. ((Eats(x, Tiger) & IsGreen(x)) -> -Eats(x, Cow))\nTEXT:\tIf someone visits the dog then they eat the cow.\nFOL:\tall x. (Visits(x, Dog) -> Eats(x, Cow))\nTEXT:\tIf someone chases the cow then they visit the dog.\nFOL:\tall x. (Chases(x, Cow) -> Visits(x, Dog))\nTEXT:\tIf someone eats the tiger and they do not chase the cow then they eat the dog.\nFOL:\tall x. ((Eats(x, Tiger) & -Chases(x, Cow)) -> Eats(x, Dog))\nTEXT:\tIf the tiger eats the cow and the cow visits the tiger then the tiger is not green.\nFOL:\t((Eats(Tiger, Cow) & Visits(Cow, Tiger)) -> -IsGreen(Tiger))\nTEXT:\tIf someone eats the cow then the cow visits the dog.\nFOL:\tall x. (Eats(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tIf someone eats the tiger and they chase the dog then the dog is not green.\nFOL:\tall x. ((Eats(x, Tiger) & Chases(x, Dog)) -> -IsGreen(Dog))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tIf the cow chases the tiger and the cow chases the dog then the cow eats the bald eagle.\nFOL:\t((Chases(Cow, Tiger) & Chases(Cow, Dog)) -> Eats(Cow, BaldEagle))\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-Cold(BaldEagle)\nTEXT:\tThe cow is not big.\nFOL:\t-Big(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe dog does not chase the tiger.\nFOL:\t-Chases(Dog, Tiger)\nTEXT:\tThe tiger chases the cow.\nFOL:\tChases(Tiger, Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-Big(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger visits the bald eagle.\nFOL:\tVisits(Tiger, BaldEagle)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf someone eats the tiger and they are green then they do not eat the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Green(x)) -> -Eats(x, Cow))\nTEXT:\tIf someone visits the dog then they eat the cow.\nFOL:\tall x. (Visits(x, Dog) -> Eats(x, Cow))\nTEXT:\tIf someone chases the cow then they visit the dog.\nFOL:\tall x. (Chases(x, Cow) -> Visits(x, Dog))\nTEXT:\tIf someone eats the tiger and they do not chase the cow then they eat the dog.\nFOL:\tall x. ((Eats(x, Tiger) & -Chases(x, Cow)) -> Eats(x, Dog))\nTEXT:\tIf the tiger eats the cow and the cow visits the tiger then the tiger is not green.\nFOL:\t((Eats(Tiger, Cow) & Visits(Cow, Tiger)) -> -Green(Tiger))\nTEXT:\tIf someone eats the cow then the cow visits the dog.\nFOL:\tall x. (Eats(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tIf someone eats the tiger and they chase the dog then the dog is not green.\nFOL:\tall x. ((Eats(x, Tiger) & Chases(x, Dog)) -> -Green(Dog))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tIf the cow chases the tiger and the cow chases the dog then the cow eats the bald eagle.\nFOL:\t((Chases(Cow, Tiger) & Chases(Cow, Dog)) -> Eats(Cow, BaldEagle))\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle eats the tiger.\nFOL:\tEats(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is not cold.\nFOL:\t-Cold(BaldEagle)\nTEXT:\tThe cow is not big.\nFOL:\t-Big(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe dog does not chase the tiger.\nFOL:\t-Chases(Dog, Tiger)\nTEXT:\tThe tiger chases the cow.\nFOL:\tChases(Tiger, Cow)\nTEXT:\tThe tiger is not big.\nFOL:\t-Big(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger visits the bald eagle.\nFOL:\tVisits(Tiger, BaldEagle)\nTEXT:\tThe tiger visits the cow.\nFOL:\tVisits(Tiger, Cow)\nTEXT:\tIf someone eats the tiger and they are green then they do not eat the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Green(x)) -> -Eats(x, Cow))\nTEXT:\tIf someone visits the dog then they eat the cow.\nFOL:\tall x. (Visits(x, Dog) -> Eats(x, Cow))\nTEXT:\tIf someone chases the cow then they visit the dog.\nFOL:\tall x. (Chases(x, Cow) -> Visits(x, Dog))\nTEXT:\tIf someone eats the tiger and they do not chase the cow then they eat the dog.\nFOL:\tall x. ((Eats(x, Tiger) & -Chases(x, Cow)) -> Eats(x, Dog))\nTEXT:\tIf the tiger eats the cow and the cow visits the tiger then the tiger is not green.\nFOL:\t((Eats(Tiger, Cow) & Visits(Cow, Tiger)) -> -Green(Tiger))\nTEXT:\tIf someone eats the cow then the cow visits the dog.\nFOL:\tall x. (Eats(x, Cow) -> Visits(Cow, Dog))\nTEXT:\tIf someone eats the tiger and they chase the dog then the dog is not green.\nFOL:\tall x. ((Eats(x, Tiger) & Chases(x, Dog)) -> -Green(Dog))\nTEXT:\tIf someone eats the cow then they visit the cow.\nFOL:\tall x. (Eats(x, Cow) -> Visits(x, Cow))\nTEXT:\tIf the cow chases the tiger and the cow chases the dog then the cow eats the bald eagle.\nFOL:\t((Chases(Cow, Tiger) & Chases(Cow, Dog)) -> Eats(Cow, BaldEagle))\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf the rabbit eats the lion and the rabbit sees the dog then the lion sees the cat.\nFOL:\t(Eats(Rabbit, Lion) & Sees(Rabbit, Dog)) -> Sees(Lion, Cat)\nTEXT:\tIf something is green and it eats the lion then it is red.\nFOL:\tall x. ((Green(x) & Eats(x, Lion)) -> Red(x))\nTEXT:\tIf something sees the rabbit then the rabbit eats the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Dog))\nTEXT:\tIf something is green and red then it sees the dog.\nFOL:\tall x. ((Green(x) & Red(x)) -> Sees(x, Dog))\nTEXT:\tIf something sees the cat then the cat sees the rabbit.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, Rabbit))\nTEXT:\tIf something sees the dog and it visits the lion then the lion visits the cat.\nFOL:\tall x. ((Sees(x, Dog) & Visits(x, Lion)) -> Visits(Lion, Cat))\nTEXT:\tIf something is round and it sees the dog then the dog sees the cat.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(Dog, Cat))\nTEXT:\tIf something sees the lion then it sees the dog.\nFOL:\tall x. (Sees(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog and it is red then the dog is big.\nFOL:\tall x. ((Visits(x, Dog) & Red(x)) -> Big(Dog))\nTEXT:\tThe rabbit does not eat the dog.\nFOL:\t-Eats(Rabbit, Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf the rabbit eats the lion and the rabbit sees the dog then the lion sees the cat.\nFOL:\t(Eats(Rabbit, Lion) & Sees(Rabbit, Dog)) -> Sees(Lion, Cat)\nTEXT:\tIf something is green and it eats the lion then it is red.\nFOL:\tall x. ((Green(x) & Eats(x, Lion)) -> Red(x))\nTEXT:\tIf something sees the rabbit then the rabbit eats the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Dog))\nTEXT:\tIf something is green and red then it sees the dog.\nFOL:\tall x. ((Green(x) & Red(x)) -> Sees(x, Dog))\nTEXT:\tIf something sees the cat then the cat sees the rabbit.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, Rabbit))\nTEXT:\tIf something sees the dog and it visits the lion then the lion visits the cat.\nFOL:\tall x. ((Sees(x, Dog) & Visits(x, Lion)) -> Visits(Lion, Cat))\nTEXT:\tIf something is round and it sees the dog then the dog sees the cat.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(Dog, Cat))\nTEXT:\tIf something sees the lion then it sees the dog.\nFOL:\tall x. (Sees(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog and it is red then the dog is big.\nFOL:\tall x. ((Visits(x, Dog) & Red(x)) -> Big(Dog))\nTEXT:\tThe rabbit does not eat the dog.\nFOL:\t-Eats(Rabbit, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf the rabbit eats the lion and the rabbit sees the dog then the lion sees the cat.\nFOL:\tall x. (Eats(x, Lion) & Sees(x, Dog) -> Sees(Lion, Cat))\nTEXT:\tIf something is green and it eats the lion then it is red.\nFOL:\tall x. (Green(x) & Eats(x, Lion) -> Red(x))\nTEXT:\tIf something sees the rabbit then the rabbit eats the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Dog))\nTEXT:\tIf something is green and red then it sees the dog.\nFOL:\tall x. (Green(x) & Red(x) -> Sees(x, Dog))\nTEXT:\tIf something sees the cat then the cat sees the rabbit.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, Rabbit))\nTEXT:\tIf something sees the dog and it visits the lion then the lion visits the cat.\nFOL:\tall x. (Sees(x, Dog) & Visits(x, Lion) -> Visits(Lion, Cat))\nTEXT:\tIf something is round and it sees the dog then the dog sees the cat.\nFOL:\tall x. (Round(x) & Sees(x, Dog) -> Sees(Dog, Cat))\nTEXT:\tIf something sees the lion then it sees the dog.\nFOL:\tall x. (Sees(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog and it is red then the dog is big.\nFOL:\tall x. (Visits(x, Dog) & Red(x) -> Big(Dog))\nTEXT:\tThe rabbit does not eat the dog.\nFOL:\t-Eats(Rabbit, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf the rabbit eats the lion and the rabbit sees the dog then the lion sees the cat.\nFOL:\tall x. ((Eats(x, Lion) & Sees(x, Dog)) -> Sees(Lion, Cat)) (x=Rabbit)\nTEXT:\tIf something is green and it eats the lion then it is red.\nFOL:\tall x. ((Green(x) & Eats(x, Lion)) -> Red(x))\nTEXT:\tIf something sees the rabbit then the rabbit eats the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Dog))\nTEXT:\tIf something is green and red then it sees the dog.\nFOL:\tall x. ((Green(x) & Red(x)) -> Sees(x, Dog))\nTEXT:\tIf something sees the cat then the cat sees the rabbit.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, Rabbit))\nTEXT:\tIf something sees the dog and it visits the lion then the lion visits the cat.\nFOL:\tall x. ((Sees(x, Dog) & Visits(x, Lion)) -> Visits(Lion, Cat))\nTEXT:\tIf something is round and it sees the dog then the dog sees the cat.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(Dog, Cat))\nTEXT:\tIf something sees the lion then it sees the dog.\nFOL:\tall x. (Sees(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog and it is red then the dog is big.\nFOL:\tall x. ((Visits(x, Dog) & Red(x)) -> Big(Dog))\nTEXT:\tThe rabbit does not eat the dog.\nFOL:\t-Eats(Rabbit, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat visits the dog.\nFOL:\tVisits(Cat, Dog)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf the rabbit eats the lion and the rabbit sees the dog then the lion sees the cat.\nFOL:\t(Eats(Rabbit, Lion) & Sees(Rabbit, Dog)) -> Sees(Lion, Cat)\nTEXT:\tIf something is green and it eats the lion then it is red.\nFOL:\tall x. ((Green(x) & Eats(x, Lion)) -> Red(x))\nTEXT:\tIf something sees the rabbit then the rabbit eats the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> Eats(Rabbit, Dog))\nTEXT:\tIf something is green and red then it sees the dog.\nFOL:\tall x. ((Green(x) & Red(x)) -> Sees(x, Dog))\nTEXT:\tIf something sees the cat then the cat sees the rabbit.\nFOL:\tall x. (Sees(x, Cat) -> Sees(Cat, Rabbit))\nTEXT:\tIf something sees the dog and it visits the lion then the lion visits the cat.\nFOL:\tall x. ((Sees(x, Dog) & Visits(x, Lion)) -> Visits(Lion, Cat))\nTEXT:\tIf something is round and it sees the dog then the dog sees the cat.\nFOL:\tall x. ((Round(x) & Sees(x, Dog)) -> Sees(Dog, Cat))\nTEXT:\tIf something sees the lion then it sees the dog.\nFOL:\tall x. (Sees(x, Lion) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog and it is red then the dog is big.\nFOL:\tall x. ((Visits(x, Dog) & Red(x)) -> Big(Dog))\nTEXT:\tThe rabbit does not eat the dog.\nFOL:\t-Eats(Rabbit, Dog)\nANSWER:\tTrue\n"], ["TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tBlue, quiet things are big.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Big(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tQuiet, rough things are big.\nFOL:\tall x. (Quiet(x) & Rough(x) -> Big(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll big things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tIf Gary is white then Gary is rough.\nFOL:\tWhite(Gary) -> Rough(Gary)\nTEXT:\tIf something is white and big then it is blue.\nFOL:\tall x. (White(x) & Big(x) -> Blue(x))\nTEXT:\tAll rough, blue things are white.\nFOL:\tall x. (Rough(x) & Blue(x) -> White(x))\nTEXT:\tIf something is quiet and red then it is kind.\nFOL:\tall x. (Quiet(x) & Red(x) -> Kind(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tBlue, quiet things are big.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Big(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tQuiet, rough things are big.\nFOL:\tall x. (Quiet(x) & Rough(x) -> Big(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll big things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tIf Gary is white then Gary is rough.\nFOL:\tWhite(Gary) -> Rough(Gary)\nTEXT:\tIf something is white and big then it is blue.\nFOL:\tall x. (White(x) & Big(x) -> Blue(x))\nTEXT:\tAll rough, blue things are white.\nFOL:\tall x. (Rough(x) & Blue(x) -> White(x))\nTEXT:\tIf something is quiet and red then it is kind.\nFOL:\tall x. (Quiet(x) & Red(x) -> Kind(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tBlue, quiet things are big.\nFOL:\tall x. ((Blue(x) & Quiet(x)) -> Big(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tQuiet, rough things are big.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Big(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll big things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tIf Gary is white then Gary is rough.\nFOL:\tWhite(Gary) -> Rough(Gary)\nTEXT:\tIf something is white and big then it is blue.\nFOL:\tall x. ((White(x) & Big(x)) -> Blue(x))\nTEXT:\tAll rough, blue things are white.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> White(x))\nTEXT:\tIf something is quiet and red then it is kind.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Kind(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tBlue, quiet things are big.\nFOL:\tall x. (Blue(x) & Quiet(x) -> Big(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tQuiet, rough things are big.\nFOL:\tall x. (Quiet(x) & Rough(x) -> Big(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll big things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tIf Gary is white then Gary is rough.\nFOL:\tWhite(Gary) -> Rough(Gary)\nTEXT:\tIf something is white and big then it is blue.\nFOL:\tall x. (White(x) & Big(x) -> Blue(x))\nTEXT:\tAll rough, blue things are white.\nFOL:\tall x. (Rough(x) & Blue(x) -> White(x))\nTEXT:\tIf something is quiet and red then it is kind.\nFOL:\tall x. (Quiet(x) & Red(x) -> Kind(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tBlue, quiet things are big.\nFOL:\tall x. ((Blue(x) & Quiet(x)) -> Big(x))\nTEXT:\tAll quiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tQuiet, rough things are big.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Big(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll big things are red.\nFOL:\tall x. (Big(x) -> Red(x))\nTEXT:\tIf Gary is white then Gary is rough.\nFOL:\tWhite(Gary) -> Rough(Gary)\nTEXT:\tIf something is white and big then it is blue.\nFOL:\tall x. ((White(x) & Big(x)) -> Blue(x))\nTEXT:\tAll rough, blue things are white.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> White(x))\nTEXT:\tIf something is quiet and red then it is kind.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Kind(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe cow sees the dog.\nFOL:\tSees(Cow, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tIf someone sees the bald eagle and they are nice then the bald eagle needs the bear.\nFOL:\tall x. ((Sees(x, BaldEagle) & Nice(x)) -> Needs(BaldEagle, Bear))\nTEXT:\tIf someone is nice and young then they need the dog.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Needs(x, Dog))\nTEXT:\tIf someone likes the cow and the cow needs the dog then the cow is kind.\nFOL:\tall x. ((Likes(x, Cow) & Needs(Cow, Dog)) -> Kind(Cow))\nTEXT:\tIf someone is young and blue then they like the bear.\nFOL:\tall x. ((Young(x) & Blue(x)) -> Likes(x, Bear))\nTEXT:\tIf someone is blue and they like the bear then the bear likes the cow.\nFOL:\tall x. ((Blue(x) & Likes(x, Bear)) -> Likes(Bear, Cow))\nTEXT:\tIf someone is green and they need the bear then they need the dog.\nFOL:\tall x. ((Green(x) & Needs(x, Bear)) -> Needs(x, Dog))\nTEXT:\tIf someone sees the bear then they are nice.\nFOL:\tall x. (Sees(x, Bear) -> Nice(x))\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tThe bear likes the cow.\nFOL:\tLikes(Bear, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe cow sees the dog.\nFOL:\tSees(Cow, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tIf someone sees the bald eagle and they are nice then the bald eagle needs the bear.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(x) -> Needs(BaldEagle, Bear))\nTEXT:\tIf someone is nice and young then they need the dog.\nFOL:\tall x. (Nice(x) & Young(x) -> Needs(x, Dog))\nTEXT:\tIf someone likes the cow and the cow needs the dog then the cow is kind.\nFOL:\tall x. (Likes(x, Cow) & Needs(Cow, Dog) -> Kind(Cow))\nTEXT:\tIf someone is young and blue then they like the bear.\nFOL:\tall x. (Young(x) & Blue(x) -> Likes(x, Bear))\nTEXT:\tIf someone is blue and they like the bear then the bear likes the cow.\nFOL:\tall x. (Blue(x) & Likes(x, Bear) -> Likes(Bear, Cow))\nTEXT:\tIf someone is green and they need the bear then they need the dog.\nFOL:\tall x. (Green(x) & Needs(x, Bear) -> Needs(x, Dog))\nTEXT:\tIf someone sees the bear then they are nice.\nFOL:\tall x. (Sees(x, Bear) -> Nice(x))\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tThe bear likes the cow.\nFOL:\tLikes(Bear, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe cow sees the dog.\nFOL:\tSees(Cow, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tIf someone sees the bald eagle and they are nice then the bald eagle needs the bear.\nFOL:\tall x. ((Sees(x, BaldEagle) & Nice(x)) -> Needs(BaldEagle, Bear))\nTEXT:\tIf someone is nice and young then they need the dog.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Needs(x, Dog))\nTEXT:\tIf someone likes the cow and the cow needs the dog then the cow is kind.\nFOL:\tall x. ((Likes(x, Cow) & Needs(Cow, Dog)) -> Kind(Cow))\nTEXT:\tIf someone is young and blue then they like the bear.\nFOL:\tall x. ((Young(x) & Blue(x)) -> Likes(x, Bear))\nTEXT:\tIf someone is blue and they like the bear then the bear likes the cow.\nFOL:\tall x. ((Blue(x) & Likes(x, Bear)) -> Likes(Bear, Cow))\nTEXT:\tIf someone is green and they need the bear then they need the dog.\nFOL:\tall x. ((Green(x) & Needs(x, Bear)) -> Needs(x, Dog))\nTEXT:\tIf someone sees the bear then they are nice.\nFOL:\tall x. ((Sees(x, Bear)) -> Nice(x))\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. ((Kind(x)) -> Sees(x, Bear))\nTEXT:\tThe bear likes the cow.\nFOL:\tLikes(Bear, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe cow sees the dog.\nFOL:\tSees(Cow, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tIf someone sees the bald eagle and they are nice then the bald eagle needs the bear.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(x) -> Needs(BaldEagle, Bear))\nTEXT:\tIf someone is nice and young then they need the dog.\nFOL:\tall x. (Nice(x) & Young(x) -> Needs(x, Dog))\nTEXT:\tIf someone likes the cow and the cow needs the dog then the cow is kind.\nFOL:\tall x. (Likes(x, Cow) & Needs(Cow, Dog) -> Kind(Cow))\nTEXT:\tIf someone is young and blue then they like the bear.\nFOL:\tall x. (Young(x) & Blue(x) -> Likes(x, Bear))\nTEXT:\tIf someone is blue and they like the bear then the bear likes the cow.\nFOL:\tall x. (Blue(x) & Likes(x, Bear) -> Likes(Bear, Cow))\nTEXT:\tIf someone is green and they need the bear then they need the dog.\nFOL:\tall x. (Green(x) & Needs(x, Bear) -> Needs(x, Dog))\nTEXT:\tIf someone sees the bear then they are nice.\nFOL:\tall x. (Sees(x, Bear) -> Nice(x))\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tThe bear likes the cow.\nFOL:\tLikes(Bear, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is young.\nFOL:\tYoung(BaldEagle)\nTEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe bear likes the dog.\nFOL:\tLikes(Bear, Dog)\nTEXT:\tThe bear needs the cow.\nFOL:\tNeeds(Bear, Cow)\nTEXT:\tThe cow needs the dog.\nFOL:\tNeeds(Cow, Dog)\nTEXT:\tThe cow sees the dog.\nFOL:\tSees(Cow, Dog)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tIf someone sees the bald eagle and they are nice then the bald eagle needs the bear.\nFOL:\tall x. (Sees(x, BaldEagle) & Nice(x) -> Needs(BaldEagle, Bear))\nTEXT:\tIf someone is nice and young then they need the dog.\nFOL:\tall x. (Nice(x) & Young(x) -> Needs(x, Dog))\nTEXT:\tIf someone likes the cow and the cow needs the dog then the cow is kind.\nFOL:\tall x. (Likes(x, Cow) & Needs(Cow, Dog) -> Kind(Cow))\nTEXT:\tIf someone is young and blue then they like the bear.\nFOL:\tall x. (Young(x) & Blue(x) -> Likes(x, Bear))\nTEXT:\tIf someone is blue and they like the bear then the bear likes the cow.\nFOL:\tall x. (Blue(x) & Likes(x, Bear) -> Likes(Bear, Cow))\nTEXT:\tIf someone is green and they need the bear then they need the dog.\nFOL:\tall x. (Green(x) & Needs(x, Bear) -> Needs(x, Dog))\nTEXT:\tIf someone sees the bear then they are nice.\nFOL:\tall x. (Sees(x, Bear) -> Nice(x))\nTEXT:\tIf someone is kind then they see the bear.\nFOL:\tall x. (Kind(x) -> Sees(x, Bear))\nTEXT:\tThe bear likes the cow.\nFOL:\tLikes(Bear, Cow)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is not blue.\nFOL:\t-Blue(Cow)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLikes(Tiger, Cow)\nTEXT:\tThe tiger likes the dog.\nFOL:\tLikes(Tiger, Dog)\nTEXT:\tIf the cow likes the dog and the dog sees the cow then the dog is round.\nFOL:\t(Likes(Cow, Dog) & Sees(Dog, Cow)) -> Round(Dog)\nTEXT:\tIf something sees the tiger then it eats the tiger.\nFOL:\tall x. (Sees(x, Tiger) -> Eats(x, Tiger))\nTEXT:\tIf something is kind and it does not like the cow then the cow sees the bear.\nFOL:\tall x. ((Kind(x) & -Likes(x, Cow)) -> Sees(Cow, Bear))\nTEXT:\tIf something sees the cow then it sees the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Tiger))\nTEXT:\tIf something eats the tiger and it sees the tiger then the tiger sees the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Sees(x, Tiger)) -> Sees(Tiger, Cow))\nTEXT:\tIf the tiger does not see the cow and the tiger does not like the bear then the tiger likes the dog.\nFOL:\t(-Sees(Tiger, Cow) & -Likes(Tiger, Bear)) -> Likes(Tiger, Dog)\nTEXT:\tIf something sees the bear then the bear does not eat the cow.\nFOL:\tall x. (Sees(x, Bear) -> -Eats(Bear, Cow))\nTEXT:\tIf the bear likes the cow then the bear eats the cow.\nFOL:\tLikes(Bear, Cow) -> Eats(Bear, Cow)\nTEXT:\tIf the tiger likes the dog then the tiger does not see the bear.\nFOL:\tLikes(Tiger, Dog) -> -Sees(Tiger, Bear)\nTEXT:\tThe tiger does not eat the tiger.\nFOL:\t-Eats(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is not blue.\nFOL:\t-Blue(Cow)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLikes(Tiger, Cow)\nTEXT:\tThe tiger likes the dog.\nFOL:\tLikes(Tiger, Dog)\nTEXT:\tIf the cow likes the dog and the dog sees the cow then the dog is round.\nFOL:\t(Likes(Cow, Dog) & Sees(Dog, Cow)) -> Round(Dog)\nTEXT:\tIf something sees the tiger then it eats the tiger.\nFOL:\tall x. (Sees(x, Tiger) -> Eats(x, Tiger))\nTEXT:\tIf something is kind and it does not like the cow then the cow sees the bear.\nFOL:\tall x. ((Kind(x) & -Likes(x, Cow)) -> Sees(Cow, Bear))\nTEXT:\tIf something sees the cow then it sees the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Tiger))\nTEXT:\tIf something eats the tiger and it sees the tiger then the tiger sees the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Sees(x, Tiger)) -> Sees(Tiger, Cow))\nTEXT:\tIf the tiger does not see the cow and the tiger does not like the bear then the tiger likes the dog.\nFOL:\t(-Sees(Tiger, Cow) & -Likes(Tiger, Bear)) -> Likes(Tiger, Dog)\nTEXT:\tIf something sees the bear then the bear does not eat the cow.\nFOL:\tall x. (Sees(x, Bear) -> -Eats(Bear, Cow))\nTEXT:\tIf the bear likes the cow then the bear eats the cow.\nFOL:\tLikes(Bear, Cow) -> Eats(Bear, Cow)\nTEXT:\tIf the tiger likes the dog then the tiger does not see the bear.\nFOL:\tLikes(Tiger, Dog) -> -Sees(Tiger, Bear)\nTEXT:\tThe tiger does not eat the tiger.\nFOL:\t-Eats(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is not blue.\nFOL:\t-Blue(Cow)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLikes(Tiger, Cow)\nTEXT:\tThe tiger likes the dog.\nFOL:\tLikes(Tiger, Dog)\nTEXT:\tIf the cow likes the dog and the dog sees the cow then the dog is round.\nFOL:\t(Likes(Cow, Dog) & Sees(Dog, Cow)) -> Round(Dog)\nTEXT:\tIf something sees the tiger then it eats the tiger.\nFOL:\tall x. (Sees(x, Tiger) -> Eats(x, Tiger))\nTEXT:\tIf something is kind and it does not like the cow then the cow sees the bear.\nFOL:\tall x. ((Kind(x) & -Likes(x, Cow)) -> Sees(Cow, Bear))\nTEXT:\tIf something sees the cow then it sees the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Tiger))\nTEXT:\tIf something eats the tiger and it sees the tiger then the tiger sees the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Sees(x, Tiger)) -> Sees(Tiger, Cow))\nTEXT:\tIf the tiger does not see the cow and the tiger does not like the bear then the tiger likes the dog.\nFOL:\t(-Sees(Tiger, Cow) & -Likes(Tiger, Bear)) -> Likes(Tiger, Dog)\nTEXT:\tIf something sees the bear then the bear does not eat the cow.\nFOL:\tall x. (Sees(x, Bear) -> -Eats(Bear, Cow))\nTEXT:\tIf the bear likes the cow then the bear eats the cow.\nFOL:\tLikes(Bear, Cow) -> Eats(Bear, Cow)\nTEXT:\tIf the tiger likes the dog then the tiger does not see the bear.\nFOL:\tLikes(Tiger, Dog) -> -Sees(Tiger, Bear)\nTEXT:\tThe tiger does not eat the tiger.\nFOL:\t-Eats(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is not blue.\nFOL:\t-Blue(Cow)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLikes(Tiger, Cow)\nTEXT:\tThe tiger likes the dog.\nFOL:\tLikes(Tiger, Dog)\nTEXT:\tIf the cow likes the dog and the dog sees the cow then the dog is round.\nFOL:\tLikes(Cow, Dog) & Sees(Dog, Cow) -> Round(Dog)\nTEXT:\tIf something sees the tiger then it eats the tiger.\nFOL:\tall x. Sees(x, Tiger) -> Eats(x, Tiger)\nTEXT:\tIf something is kind and it does not like the cow then the cow sees the bear.\nFOL:\tall x. (Kind(x) & -Likes(x, Cow)) -> Sees(Cow, Bear)\nTEXT:\tIf something sees the cow then it sees the tiger.\nFOL:\tall x. Sees(x, Cow) -> Sees(x, Tiger)\nTEXT:\tIf something eats the tiger and it sees the tiger then the tiger sees the cow.\nFOL:\tall x. (Eats(x, Tiger) & Sees(x, Tiger)) -> Sees(Tiger, Cow)\nTEXT:\tIf the tiger does not see the cow and the tiger does not like the bear then the tiger likes the dog.\nFOL:\t(-Sees(Tiger, Cow) & -Likes(Tiger, Bear)) -> Likes(Tiger, Dog)\nTEXT:\tIf something sees the bear then the bear does not eat the cow.\nFOL:\tall x. Sees(x, Bear) -> -Eats(Bear, Cow)\nTEXT:\tIf the bear likes the cow then the bear eats the cow.\nFOL:\tLikes(Bear, Cow) -> Eats(Bear, Cow)\nTEXT:\tIf the tiger likes the dog then the tiger does not see the bear.\nFOL:\tLikes(Tiger, Dog) -> -Sees(Tiger, Bear)\nTEXT:\tThe tiger does not eat the tiger.\nFOL:\t-Eats(Tiger, Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is not blue.\nFOL:\t-Blue(Cow)\nTEXT:\tThe cow is not kind.\nFOL:\t-Kind(Cow)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog sees the cow.\nFOL:\tSees(Dog, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tThe tiger likes the cow.\nFOL:\tLikes(Tiger, Cow)\nTEXT:\tThe tiger likes the dog.\nFOL:\tLikes(Tiger, Dog)\nTEXT:\tIf the cow likes the dog and the dog sees the cow then the dog is round.\nFOL:\t(Likes(Cow, Dog) & Sees(Dog, Cow)) -> Round(Dog)\nTEXT:\tIf something sees the tiger then it eats the tiger.\nFOL:\tall x. (Sees(x, Tiger) -> Eats(x, Tiger))\nTEXT:\tIf something is kind and it does not like the cow then the cow sees the bear.\nFOL:\tall x. ((Kind(x) & -Likes(x, Cow)) -> Sees(Cow, Bear))\nTEXT:\tIf something sees the cow then it sees the tiger.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Tiger))\nTEXT:\tIf something eats the tiger and it sees the tiger then the tiger sees the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Sees(x, Tiger)) -> Sees(Tiger, Cow))\nTEXT:\tIf the tiger does not see the cow and the tiger does not like the bear then the tiger likes the dog.\nFOL:\t(-Sees(Tiger, Cow) & -Likes(Tiger, Bear)) -> Likes(Tiger, Dog)\nTEXT:\tIf something sees the bear then the bear does not eat the cow.\nFOL:\tall x. (Sees(x, Bear) -> -Eats(Bear, Cow))\nTEXT:\tIf the bear likes the cow then the bear eats the cow.\nFOL:\tLikes(Bear, Cow) -> Eats(Bear, Cow)\nTEXT:\tIf the tiger likes the dog then the tiger does not see the bear.\nFOL:\tLikes(Tiger, Dog) -> -Sees(Tiger, Bear)\nTEXT:\tThe tiger does not eat the tiger.\nFOL:\t-Eats(Tiger, Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tIf something is smart and not blue then it is not cold.\nFOL:\tall x. ((Smart(x) & -Blue(x)) -> -Cold(x))\nTEXT:\tIf something is furry then it is kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tBlue, smart things are kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll kind things are smart.\nFOL:\tall x. (Kind(x) -> Smart(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll red things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tRed things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tBlue, kind things are red.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Red(x))\nTEXT:\tIf something is furry and not cold then it is green.\nFOL:\tall x. ((Furry(x) & -Cold(x)) -> Green(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tIf something is smart and not blue then it is not cold.\nFOL:\tall x. ((Smart(x) & -Blue(x)) -> -Cold(x))\nTEXT:\tIf something is furry then it is kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tBlue, smart things are kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll kind things are smart.\nFOL:\tall x. (Kind(x) -> Smart(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll red things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tRed things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tBlue, kind things are red.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Red(x))\nTEXT:\tIf something is furry and not cold then it is green.\nFOL:\tall x. ((Furry(x) & -Cold(x)) -> Green(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tIf something is smart and not blue then it is not cold.\nFOL:\tall x. ((Smart(x) & -Blue(x)) -> -Cold(x))\nTEXT:\tIf something is furry then it is kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tBlue, smart things are kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll kind things are smart.\nFOL:\tall x. (Kind(x) -> Smart(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll red things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tRed things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tBlue, kind things are red.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Red(x))\nTEXT:\tIf something is furry and not cold then it is green.\nFOL:\tall x. ((Furry(x) & -Cold(x)) -> Green(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tIf something is smart and not blue then it is not cold.\nFOL:\tall x. ((Smart(x) & -Blue(x)) -> -Cold(x))\nTEXT:\tIf something is furry then it is kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tBlue, smart things are kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll kind things are smart.\nFOL:\tall x. (Kind(x) -> Smart(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll red things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tRed things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tBlue, kind things are red.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Red(x))\nTEXT:\tIf something is furry and not cold then it is green.\nFOL:\tall x. ((Furry(x) & -Cold(x)) -> Green(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is not blue.\nFOL:\t-Blue(Dave)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tIf something is smart and not blue then it is not cold.\nFOL:\tall x. ((Smart(x) & -Blue(x)) -> -Cold(x))\nTEXT:\tIf something is furry then it is kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tBlue, smart things are kind.\nFOL:\tall x. ((Blue(x) & Smart(x)) -> Kind(x))\nTEXT:\tAll kind things are smart.\nFOL:\tall x. (Kind(x) -> Smart(x))\nTEXT:\tIf something is blue then it is furry.\nFOL:\tall x. (Blue(x) -> Furry(x))\nTEXT:\tAll red things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tRed things are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tBlue, kind things are red.\nFOL:\tall x. ((Blue(x) & Kind(x)) -> Red(x))\nTEXT:\tIf something is furry and not cold then it is green.\nFOL:\tall x. ((Furry(x) & -Cold(x)) -> Green(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe squirrel is rough.\nFOL:\tRough(Squirrel)\nTEXT:\tThe squirrel does not like the lion.\nFOL:\t- Likes(Squirrel, Lion)\nTEXT:\tThe squirrel needs the dog.\nFOL:\tNeeds(Squirrel, Dog)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone likes the lion then they are kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(x))\nTEXT:\tIf someone is cold and kind then they are rough.\nFOL:\tall x. (Cold(x) & Kind(x) -> Rough(x))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and the dog is rough then they are not cold.\nFOL:\tall x. (Likes(x, Dog) & Rough(Dog) -> -Cold(x))\nTEXT:\tIf someone is kind and they need the lion then the lion likes the squirrel.\nFOL:\tall x. (Kind(x) & Needs(x, Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf someone is cold and they like the squirrel then they like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Squirrel) -> Likes(x, Lion))\nTEXT:\tThe lion likes the lion.\nFOL:\tLikes(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe squirrel is rough.\nFOL:\tRough(Squirrel)\nTEXT:\tThe squirrel does not like the lion.\nFOL:\t-Likes(Squirrel, Lion)\nTEXT:\tThe squirrel needs the dog.\nFOL:\tNeeds(Squirrel, Dog)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone likes the lion then they are kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(x))\nTEXT:\tIf someone is cold and kind then they are rough.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> Rough(x))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and the dog is rough then they are not cold.\nFOL:\tall x. ((Likes(x, Dog) & Rough(Dog)) -> -Cold(x))\nTEXT:\tIf someone is kind and they need the lion then the lion likes the squirrel.\nFOL:\tall x. ((Kind(x) & Needs(x, Lion)) -> Likes(Lion, Squirrel))\nTEXT:\tIf someone is cold and they like the squirrel then they like the lion.\nFOL:\tall x. ((Cold(x) & Likes(x, Squirrel)) -> Likes(x, Lion))\nTEXT:\tThe lion likes the lion.\nFOL:\tLikes(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe squirrel is rough.\nFOL:\tRough(Squirrel)\nTEXT:\tThe squirrel does not like the lion.\nFOL:\t- Likes(Squirrel, Lion)\nTEXT:\tThe squirrel needs the dog.\nFOL:\tNeeds(Squirrel, Dog)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone likes the lion then they are kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(x))\nTEXT:\tIf someone is cold and kind then they are rough.\nFOL:\tall x. (Cold(x) & Kind(x) -> Rough(x))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and the dog is rough then they are not cold.\nFOL:\tall x. (Likes(x, Dog) & Rough(Dog) -> -Cold(x))\nTEXT:\tIf someone is kind and they need the lion then the lion likes the squirrel.\nFOL:\tall x. ((Kind(x) & Needs(x, Lion)) -> Likes(Lion, Squirrel))\nTEXT:\tIf someone is cold and they like the squirrel then they like the lion.\nFOL:\tall x. ((Cold(x) & Likes(x, Squirrel)) -> Likes(x, Lion))\nTEXT:\tThe lion likes the lion.\nFOL:\tLikes(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe squirrel is rough.\nFOL:\tRough(Squirrel)\nTEXT:\tThe squirrel does not like the lion.\nFOL:\t- Likes(Squirrel, Lion)\nTEXT:\tThe squirrel needs the dog.\nFOL:\tNeeds(Squirrel, Dog)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone likes the lion then they are kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(x))\nTEXT:\tIf someone is cold and kind then they are rough.\nFOL:\tall x. (Cold(x) & Kind(x) -> Rough(x))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and the dog is rough then they are not cold.\nFOL:\tall x. (Likes(x, Dog) & Rough(Dog) -> -Cold(x))\nTEXT:\tIf someone is kind and they need the lion then the lion likes the squirrel.\nFOL:\tall x. (Kind(x) & Needs(x, Lion) -> Likes(Lion, Squirrel))\nTEXT:\tIf someone is cold and they like the squirrel then they like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Squirrel) -> Likes(x, Lion))\nTEXT:\tThe lion likes the lion.\nFOL:\tLikes(Lion, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe dog is cold.\nFOL:\tCold(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion needs the dog.\nFOL:\tNeeds(Lion, Dog)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe squirrel is rough.\nFOL:\tRough(Squirrel)\nTEXT:\tThe squirrel does not like the lion.\nFOL:\t\u00acLikes(Squirrel, Lion)\nTEXT:\tThe squirrel needs the dog.\nFOL:\tNeeds(Squirrel, Dog)\nTEXT:\tThe squirrel needs the tiger.\nFOL:\tNeeds(Squirrel, Tiger)\nTEXT:\tThe tiger likes the lion.\nFOL:\tLikes(Tiger, Lion)\nTEXT:\tThe tiger likes the squirrel.\nFOL:\tLikes(Tiger, Squirrel)\nTEXT:\tThe tiger needs the lion.\nFOL:\tNeeds(Tiger, Lion)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone likes the lion then they are kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(x))\nTEXT:\tIf someone is cold and kind then they are rough.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> Rough(x))\nTEXT:\tIf someone is kind then they like the dog.\nFOL:\tall x. (Kind(x) -> Likes(x, Dog))\nTEXT:\tIf someone likes the dog and the dog is rough then they are not cold.\nFOL:\tall x. ((Likes(x, Dog) & Rough(Dog)) -> \u00acCold(x))\nTEXT:\tIf someone is kind and they need the lion then the lion likes the squirrel.\nFOL:\tall x. ((Kind(x) & Needs(x, Lion)) -> Likes(Lion, Squirrel))\nTEXT:\tIf someone is cold and they like the squirrel then they like the lion.\nFOL:\tall x. ((Cold(x) & Likes(x, Squirrel)) -> Likes(x, Lion))\nTEXT:\tThe lion likes the lion.\nFOL:\tLikes(Lion, Lion)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf something eats the tiger and it is round then the tiger eats the bear.\nFOL:\tall x. (Eats(x, Tiger) & Round(x) -> Eats(Tiger, Bear))\nTEXT:\tIf something needs the tiger then it is red.\nFOL:\tall x. (Needs(x, Tiger) -> Red(x))\nTEXT:\tIf something eats the bald eagle then it is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(x))\nTEXT:\tIf something eats the rabbit then it eats the tiger.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Tiger))\nTEXT:\tIf something is round and it does not need the bald eagle then it eats the rabbit.\nFOL:\tall x. (Round(x) & -Needs(x, BaldEagle) -> Eats(x, Rabbit))\nTEXT:\tIf something needs the bear and it is young then it needs the tiger.\nFOL:\tall x. (Needs(x, Bear) & Young(x) -> Needs(x, Tiger))\nTEXT:\tIf something is red and it eats the bald eagle then it is round.\nFOL:\tall x. (Red(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is red and it eats the rabbit then it visits the bear.\nFOL:\tall x. (Red(x) & Eats(x, Rabbit) -> Visits(x, Bear))\nTEXT:\tThe tiger eats the tiger.\nFOL:\tEats(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf something eats the tiger and it is round then the tiger eats the bear.\nFOL:\tall x. ((Eats(x, Tiger) & Round(x)) -> Eats(Tiger, Bear))\nTEXT:\tIf something needs the tiger then it is red.\nFOL:\tall x. (Needs(x, Tiger) -> Red(x))\nTEXT:\tIf something eats the bald eagle then it is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(x))\nTEXT:\tIf something eats the rabbit then it eats the tiger.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Tiger))\nTEXT:\tIf something is round and it does not need the bald eagle then it eats the rabbit.\nFOL:\tall x. ((Round(x) & -Needs(x, BaldEagle)) -> Eats(x, Rabbit))\nTEXT:\tIf something needs the bear and it is young then it needs the tiger.\nFOL:\tall x. ((Needs(x, Bear) & Young(x)) -> Needs(x, Tiger))\nTEXT:\tIf something is red and it eats the bald eagle then it is round.\nFOL:\tall x. ((Red(x) & Eats(x, BaldEagle)) -> Round(x))\nTEXT:\tIf something is red and it eats the rabbit then it visits the bear.\nFOL:\tall x. ((Red(x) & Eats(x, Rabbit)) -> Visits(x, Bear))\nTEXT:\tThe tiger eats the tiger.\nFOL:\tEats(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf something eats the tiger and it is round then the tiger eats the bear.\nFOL:\tall x. ((Eats(x, Tiger) & Round(x)) -> Eats(Tiger, Bear))\nTEXT:\tIf something needs the tiger then it is red.\nFOL:\tall x. (Needs(x, Tiger) -> Red(x))\nTEXT:\tIf something eats the bald eagle then it is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(x))\nTEXT:\tIf something eats the rabbit then it eats the tiger.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Tiger))\nTEXT:\tIf something is round and it does not need the bald eagle then it eats the rabbit.\nFOL:\tall x. ((Round(x) & -Needs(x, BaldEagle)) -> Eats(x, Rabbit))\nTEXT:\tIf something needs the bear and it is young then it needs the tiger.\nFOL:\tall x. ((Needs(x, Bear) & Young(x)) -> Needs(x, Tiger))\nTEXT:\tIf something is red and it eats the bald eagle then it is round.\nFOL:\tall x. ((Red(x) & Eats(x, BaldEagle)) -> Round(x))\nTEXT:\tIf something is red and it eats the rabbit then it visits the bear.\nFOL:\tall x. ((Red(x) & Eats(x, Rabbit)) -> Visits(x, Bear))\nTEXT:\tThe tiger eats the tiger.\nFOL:\tEats(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf something eats the tiger and it is round then the tiger eats the bear.\nFOL:\tall x. (Eats(x, Tiger) & Round(x) -> Eats(Tiger, Bear))\nTEXT:\tIf something needs the tiger then it is red.\nFOL:\tall x. (Needs(x, Tiger) -> Red(x))\nTEXT:\tIf something eats the bald eagle then it is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(x))\nTEXT:\tIf something eats the rabbit then it eats the tiger.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Tiger))\nTEXT:\tIf something is round and it does not need the bald eagle then it eats the rabbit.\nFOL:\tall x. (Round(x) & -Needs(x, BaldEagle) -> Eats(x, Rabbit))\nTEXT:\tIf something needs the bear and it is young then it needs the tiger.\nFOL:\tall x. (Needs(x, Bear) & Young(x) -> Needs(x, Tiger))\nTEXT:\tIf something is red and it eats the bald eagle then it is round.\nFOL:\tall x. (Red(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is red and it eats the rabbit then it visits the bear.\nFOL:\tall x. (Red(x) & Eats(x, Rabbit) -> Visits(x, Bear))\nTEXT:\tThe tiger eats the tiger.\nFOL:\tEats(Tiger, Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle visits the tiger.\nFOL:\tVisits(BaldEagle, Tiger)\nTEXT:\tThe bear eats the bald eagle.\nFOL:\tEats(Bear, BaldEagle)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear needs the bald eagle.\nFOL:\tNeeds(Bear, BaldEagle)\nTEXT:\tThe rabbit eats the bald eagle.\nFOL:\tEats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit does not need the bald eagle.\nFOL:\t-Needs(Rabbit, BaldEagle)\nTEXT:\tThe rabbit needs the bear.\nFOL:\tNeeds(Rabbit, Bear)\nTEXT:\tThe rabbit needs the tiger.\nFOL:\tNeeds(Rabbit, Tiger)\nTEXT:\tThe rabbit does not visit the bald eagle.\nFOL:\t-Visits(Rabbit, BaldEagle)\nTEXT:\tThe tiger needs the rabbit.\nFOL:\tNeeds(Tiger, Rabbit)\nTEXT:\tIf something eats the tiger and it is round then the tiger eats the bear.\nFOL:\tall x. (Eats(x, Tiger) & Round(x) -> Eats(Tiger, Bear))\nTEXT:\tIf something needs the tiger then it is red.\nFOL:\tall x. (Needs(x, Tiger) -> Red(x))\nTEXT:\tIf something eats the bald eagle then it is red.\nFOL:\tall x. (Eats(x, BaldEagle) -> Red(x))\nTEXT:\tIf something eats the rabbit then it eats the tiger.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(x, Tiger))\nTEXT:\tIf something is round and it does not need the bald eagle then it eats the rabbit.\nFOL:\tall x. (Round(x) & -Needs(x, BaldEagle) -> Eats(x, Rabbit))\nTEXT:\tIf something needs the bear and it is young then it needs the tiger.\nFOL:\tall x. (Needs(x, Bear) & Young(x) -> Needs(x, Tiger))\nTEXT:\tIf something is red and it eats the bald eagle then it is round.\nFOL:\tall x. (Red(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is red and it eats the rabbit then it visits the bear.\nFOL:\tall x. (Red(x) & Eats(x, Rabbit) -> Visits(x, Bear))\nTEXT:\tThe tiger eats the tiger.\nFOL:\tEats(Tiger, Tiger)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear is not big.\nFOL:\t-Big(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow does not chase the dog.\nFOL:\t-Chase(Cow, Dog)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe cow does not like the squirrel.\nFOL:\t-Likes(Cow, Squirrel)\nTEXT:\tThe dog does not eat the bear.\nFOL:\t-Eat(Dog, Bear)\nTEXT:\tThe dog eats the cow.\nFOL:\tEat(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChase(Squirrel, Bear)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChase(Squirrel, Dog)\nTEXT:\tIf someone eats the bear and they like the squirrel then the squirrel chases the dog.\nFOL:\tall x. ((Eat(x, Bear) & Likes(x, Squirrel)) -> Chase(Squirrel, Dog))\nTEXT:\tIf someone chases the cow then the cow is rough.\nFOL:\tall x. (Chase(x, Cow) -> Rough(Cow))\nTEXT:\tIf someone is rough then they like the squirrel.\nFOL:\tall x. (Rough(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then the squirrel is rough.\nFOL:\tall x. (Likes(x, Squirrel) -> Rough(Squirrel))\nTEXT:\tIf the dog eats the cow then the dog is rough.\nFOL:\t(Eat(Dog, Cow) -> Rough(Dog))\nTEXT:\tIf someone likes the squirrel and the squirrel eats the cow then they are round.\nFOL:\tall x. ((Likes(x, Squirrel) & Eat(Squirrel, Cow)) -> Round(x))\nTEXT:\tIf someone likes the bear then they like the cow.\nFOL:\tall x. (Likes(x, Bear) -> Likes(x, Cow))\nTEXT:\tIf someone likes the squirrel then they eat the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Eat(x, Squirrel))\nTEXT:\tIf someone chases the cow and the cow is not rough then they eat the squirrel.\nFOL:\tall x. ((Chase(x, Cow) & -Rough(Cow)) -> Eat(x, Squirrel))\nTEXT:\tThe squirrel does not eat the squirrel.\nFOL:\t-Eat(Squirrel, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is not big.\nFOL:\t- Big(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow does not chase the dog.\nFOL:\t- Chases(Cow, Dog)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe cow does not like the squirrel.\nFOL:\t- Likes(Cow, Squirrel)\nTEXT:\tThe dog does not eat the bear.\nFOL:\t- Eats(Dog, Bear)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tIf someone eats the bear and they like the squirrel then the squirrel chases the dog.\nFOL:\tall x. ((Eats(x, Bear) & Likes(x, Squirrel)) -> Chases(Squirrel, Dog))\nTEXT:\tIf someone chases the cow then the cow is rough.\nFOL:\tall x. (Chases(x, Cow) -> Rough(Cow))\nTEXT:\tIf someone is rough then they like the squirrel.\nFOL:\tall x. (Rough(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then the squirrel is rough.\nFOL:\tall x. (Likes(x, Squirrel) -> Rough(Squirrel))\nTEXT:\tIf the dog eats the cow then the dog is rough.\nFOL:\t(Eats(Dog, Cow) -> Rough(Dog))\nTEXT:\tIf someone likes the squirrel and the squirrel eats the cow then they are round.\nFOL:\tall x. ((Likes(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(x))\nTEXT:\tIf someone likes the bear then they like the cow.\nFOL:\tall x. (Likes(x, Bear) -> Likes(x, Cow))\nTEXT:\tIf someone likes the squirrel then they eat the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Eats(x, Squirrel))\nTEXT:\tIf someone chases the cow and the cow is not rough then they eat the squirrel.\nFOL:\tall x. ((Chases(x, Cow) & -Rough(Cow)) -> Eats(x, Squirrel))\nTEXT:\tThe squirrel does not eat the squirrel.\nFOL:\t- Eats(Squirrel, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is not big.\nFOL:\t-Big(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow does not chase the dog.\nFOL:\t-Chase(Cow, Dog)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe cow does not like the squirrel.\nFOL:\t-Likes(Cow, Squirrel)\nTEXT:\tThe dog does not eat the bear.\nFOL:\t-Eats(Dog, Bear)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChase(Squirrel, Bear)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChase(Squirrel, Dog)\nTEXT:\tIf someone eats the bear and they like the squirrel then the squirrel chases the dog.\nFOL:\tall x. ((Eats(x, Bear) & Likes(x, Squirrel)) -> Chase(Squirrel, Dog))\nTEXT:\tIf someone chases the cow then the cow is rough.\nFOL:\tall x. (Chase(x, Cow) -> Rough(Cow))\nTEXT:\tIf someone is rough then they like the squirrel.\nFOL:\tall x. (Rough(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then the squirrel is rough.\nFOL:\tall x. (Likes(x, Squirrel) -> Rough(Squirrel))\nTEXT:\tIf the dog eats the cow then the dog is rough.\nFOL:\tEats(Dog, Cow) -> Rough(Dog)\nTEXT:\tIf someone likes the squirrel and the squirrel eats the cow then they are round.\nFOL:\tall x. ((Likes(x, Squirrel) & Eats(Squirrel, Cow)) -> Round(x))\nTEXT:\tIf someone likes the bear then they like the cow.\nFOL:\tall x. (Likes(x, Bear) -> Likes(x, Cow))\nTEXT:\tIf someone likes the squirrel then they eat the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Eats(x, Squirrel))\nTEXT:\tIf someone chases the cow and the cow is not rough then they eat the squirrel.\nFOL:\tall x. ((Chase(x, Cow) & -Rough(Cow)) -> Eats(x, Squirrel))\nTEXT:\tThe squirrel does not eat the squirrel.\nFOL:\t-Eats(Squirrel, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is not big.\nFOL:\t-Big(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow does not chase the dog.\nFOL:\t-Chase(Cow, Dog)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe cow does not like the squirrel.\nFOL:\t-Likes(Cow, Squirrel)\nTEXT:\tThe dog does not eat the bear.\nFOL:\t-Eats(Dog, Bear)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChase(Squirrel, Bear)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChase(Squirrel, Dog)\nTEXT:\tIf someone eats the bear and they like the squirrel then the squirrel chases the dog.\nFOL:\tall x. (Eats(x, Bear) & Likes(x, Squirrel) -> Chase(Squirrel, Dog))\nTEXT:\tIf someone chases the cow then the cow is rough.\nFOL:\tall x. (Chase(x, Cow) -> Rough(Cow))\nTEXT:\tIf someone is rough then they like the squirrel.\nFOL:\tall x. (Rough(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then the squirrel is rough.\nFOL:\tall x. (Likes(x, Squirrel) -> Rough(Squirrel))\nTEXT:\tIf the dog eats the cow then the dog is rough.\nFOL:\tEats(Dog, Cow) -> Rough(Dog)\nTEXT:\tIf someone likes the squirrel and the squirrel eats the cow then they are round.\nFOL:\tall x. (Likes(x, Squirrel) & Eats(Squirrel, Cow) -> Round(x))\nTEXT:\tIf someone likes the bear then they like the cow.\nFOL:\tall x. (Likes(x, Bear) -> Likes(x, Cow))\nTEXT:\tIf someone likes the squirrel then they eat the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Eats(x, Squirrel))\nTEXT:\tIf someone chases the cow and the cow is not rough then they eat the squirrel.\nFOL:\tall x. (Chase(x, Cow) & -Rough(Cow) -> Eats(x, Squirrel))\nTEXT:\tThe squirrel does not eat the squirrel.\nFOL:\t-Eats(Squirrel, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bear is not big.\nFOL:\t\u00acBig(Bear)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow does not chase the dog.\nFOL:\t\u00acChases(Cow, Dog)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe cow likes the bear.\nFOL:\tLikes(Cow, Bear)\nTEXT:\tThe cow does not like the squirrel.\nFOL:\t\u00acLikes(Cow, Squirrel)\nTEXT:\tThe dog does not eat the bear.\nFOL:\t\u00acEats(Dog, Bear)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe squirrel chases the bear.\nFOL:\tChases(Squirrel, Bear)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tIf someone eats the bear and they like the squirrel then the squirrel chases the dog.\nFOL:\tall x. (Eats(x, Bear) & Likes(x, Squirrel) -> Chases(Squirrel, Dog))\nTEXT:\tIf someone chases the cow then the cow is rough.\nFOL:\tall x. (Chases(x, Cow) -> Rough(Cow))\nTEXT:\tIf someone is rough then they like the squirrel.\nFOL:\tall x. (Rough(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the squirrel then the squirrel is rough.\nFOL:\tall x. (Likes(x, Squirrel) -> Rough(Squirrel))\nTEXT:\tIf the dog eats the cow then the dog is rough.\nFOL:\tEats(Dog, Cow) -> Rough(Dog)\nTEXT:\tIf someone likes the squirrel and the squirrel eats the cow then they are round.\nFOL:\tall x. (Likes(x, Squirrel) & Eats(Squirrel, Cow) -> Round(x))\nTEXT:\tIf someone likes the bear then they like the cow.\nFOL:\tall x. (Likes(x, Bear) -> Likes(x, Cow))\nTEXT:\tIf someone likes the squirrel then they eat the squirrel.\nFOL:\tall x. (Likes(x, Squirrel) -> Eats(x, Squirrel))\nTEXT:\tIf someone chases the cow and the cow is not rough then they eat the squirrel.\nFOL:\tall x. (Chases(x, Cow) & \u00acRough(Cow) -> Eats(x, Squirrel))\nTEXT:\tThe squirrel does not eat the squirrel.\nFOL:\t\u00acEats(Squirrel, Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue things are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tAll nice, white things are young.\nFOL:\tall x. (Nice(x) & White(x) -> Young(x))\nTEXT:\tIf something is big then it is blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tAll blue, big things are nice.\nFOL:\tall x. (Blue(x) & Big(x) -> Nice(x))\nTEXT:\tBig, rough things are kind.\nFOL:\tall x. (Big(x) & Rough(x) -> Kind(x))\nTEXT:\tAll white, rough things are big.\nFOL:\tall x. (White(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is rough then it is white.\nFOL:\tall x. (Rough(x) -> White(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue things are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tAll nice, white things are young.\nFOL:\tall x. (Nice(x) & White(x) -> Young(x))\nTEXT:\tIf something is big then it is blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tAll blue, big things are nice.\nFOL:\tall x. (Blue(x) & Big(x) -> Nice(x))\nTEXT:\tBig, rough things are kind.\nFOL:\tall x. (Big(x) & Rough(x) -> Kind(x))\nTEXT:\tAll white, rough things are big.\nFOL:\tall x. (White(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is rough then it is white.\nFOL:\tall x. (Rough(x) -> White(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue things are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tAll nice, white things are young.\nFOL:\tall x. (Nice(x) & White(x) -> Young(x))\nTEXT:\tIf something is big then it is blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tAll blue, big things are nice.\nFOL:\tall x. (Blue(x) & Big(x) -> Nice(x))\nTEXT:\tBig, rough things are kind.\nFOL:\tall x. (Big(x) & Rough(x) -> Kind(x))\nTEXT:\tAll white, rough things are big.\nFOL:\tall x. (White(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is rough then it is white.\nFOL:\tall x. (Rough(x) -> White(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue things are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tAll nice, white things are young.\nFOL:\tall x. (Nice(x) & White(x) -> Young(x))\nTEXT:\tIf something is big then it is blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tAll blue, big things are nice.\nFOL:\tall x. (Blue(x) & Big(x) -> Nice(x))\nTEXT:\tBig, rough things are kind.\nFOL:\tall x. (Big(x) & Rough(x) -> Kind(x))\nTEXT:\tAll white, rough things are big.\nFOL:\tall x. (White(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is rough then it is white.\nFOL:\tall x. (Rough(x) -> White(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue things are rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tAll nice, white things are young.\nFOL:\tall x. (Nice(x) & White(x) -> Young(x))\nTEXT:\tIf something is big then it is blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tAll blue, big things are nice.\nFOL:\tall x. (Blue(x) & Big(x) -> Nice(x))\nTEXT:\tBig, rough things are kind.\nFOL:\tall x. (Big(x) & Rough(x) -> Kind(x))\nTEXT:\tAll white, rough things are big.\nFOL:\tall x. (White(x) & Rough(x) -> Big(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is rough then it is white.\nFOL:\tall x. (Rough(x) -> White(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tIf something is red and it likes the cat then it is blue.\nFOL:\tall x. ((Red(x) & Likes(x, Cat)) -> Blue(x))\nTEXT:\tIf something needs the cat then it needs the cow.\nFOL:\tall x. (Needs(x, Cat) -> Needs(x, Cow))\nTEXT:\tIf something is rough and young then it likes the cow.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Likes(x, Cow))\nTEXT:\tIf something is blue then it needs the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf something needs the cow then it chases the cow.\nFOL:\tall x. (Needs(x, Cow) -> Chases(x, Cow))\nTEXT:\tIf something likes the rabbit and the rabbit is kind then it needs the rabbit.\nFOL:\tall x. ((Likes(x, Rabbit) & Kind(Rabbit)) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the cow then the cow likes the cat.\nFOL:\tall x. (Chases(x, Cow) -> Likes(Cow, Cat))\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tIf something is red and it likes the cat then it is blue.\nFOL:\tall x. ((Red(x) & Likes(x, Cat)) -> Blue(x))\nTEXT:\tIf something needs the cat then it needs the cow.\nFOL:\tall x. (Needs(x, Cat) -> Needs(x, Cow))\nTEXT:\tIf something is rough and young then it likes the cow.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Likes(x, Cow))\nTEXT:\tIf something is blue then it needs the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf something needs the cow then it chases the cow.\nFOL:\tall x. (Needs(x, Cow) -> Chases(x, Cow))\nTEXT:\tIf something likes the rabbit and the rabbit is kind then it needs the rabbit.\nFOL:\tall x. ((Likes(x, Rabbit) & Kind(Rabbit)) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the cow then the cow likes the cat.\nFOL:\tall x. (Chases(x, Cow) -> Likes(Cow, Cat))\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tIf something is red and it likes the cat then it is blue.\nFOL:\tall x. (Red(x) & Likes(x, Cat) -> Blue(x))\nTEXT:\tIf something needs the cat then it needs the cow.\nFOL:\tall x. (Needs(x, Cat) -> Needs(x, Cow))\nTEXT:\tIf something is rough and young then it likes the cow.\nFOL:\tall x. (Rough(x) & Young(x) -> Likes(x, Cow))\nTEXT:\tIf something is blue then it needs the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf something needs the cow then it chases the cow.\nFOL:\tall x. (Needs(x, Cow) -> Chases(x, Cow))\nTEXT:\tIf something likes the rabbit and the rabbit is kind then it needs the rabbit.\nFOL:\tall x. (Likes(x, Rabbit) & Kind(Rabbit) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the cow then the cow likes the cat.\nFOL:\tall x. (Chases(x, Cow) -> Likes(Cow, Cat))\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tIf something is red and it likes the cat then it is blue.\nFOL:\tall x. (Red(x) & Likes(x, Cat) -> Blue(x))\nTEXT:\tIf something needs the cat then it needs the cow.\nFOL:\tall x. (Needs(x, Cat) -> Needs(x, Cow))\nTEXT:\tIf something is rough and young then it likes the cow.\nFOL:\tall x. (Rough(x) & Young(x) -> Likes(x, Cow))\nTEXT:\tIf something is blue then it needs the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf something needs the cow then it chases the cow.\nFOL:\tall x. (Needs(x, Cow) -> Chases(x, Cow))\nTEXT:\tIf something likes the rabbit and the rabbit is kind then it needs the rabbit.\nFOL:\tall x. (Likes(x, Rabbit) & Kind(Rabbit) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the cow then the cow likes the cat.\nFOL:\tall x. (Chases(x, Cow) -> Likes(Cow, Cat))\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe cat chases the bald eagle.\nFOL:\tChases(Cat, BaldEagle)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat needs the bald eagle.\nFOL:\tNeeds(Cat, BaldEagle)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow is rough.\nFOL:\tRough(Cow)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tIf something is red and it likes the cat then it is blue.\nFOL:\tall x. ((Red(x) & Likes(x, Cat)) -> Blue(x))\nTEXT:\tIf something needs the cat then it needs the cow.\nFOL:\tall x. (Needs(x, Cat) -> Needs(x, Cow))\nTEXT:\tIf something is rough and young then it likes the cow.\nFOL:\tall x. ((Rough(x) & Young(x)) -> Likes(x, Cow))\nTEXT:\tIf something is blue then it needs the cat.\nFOL:\tall x. (Blue(x) -> Needs(x, Cat))\nTEXT:\tIf something needs the cow then it chases the cow.\nFOL:\tall x. (Needs(x, Cow) -> Chases(x, Cow))\nTEXT:\tIf something likes the rabbit and the rabbit is kind then it needs the rabbit.\nFOL:\tall x. ((Likes(x, Rabbit) & Kind(Rabbit)) -> Needs(x, Rabbit))\nTEXT:\tIf something chases the cow then the cow likes the cat.\nFOL:\tall x. (Chases(x, Cow) -> Likes(Cow, Cat))\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tAll kind, white people are red.\nFOL:\tall x. ((Kind(x) & White(x)) -> Red(x))\nTEXT:\tAll kind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll blue, round people are white.\nFOL:\tall x. ((Blue(x) & Round(x)) -> White(x))\nTEXT:\tAll nice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll green, white people are round.\nFOL:\tall x. ((Green(x) & White(x)) -> Round(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Green(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tAll kind, white people are red.\nFOL:\tall x. ((Kind(x) & White(x)) -> Red(x))\nTEXT:\tAll kind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll blue, round people are white.\nFOL:\tall x. ((Blue(x) & Round(x)) -> White(x))\nTEXT:\tAll nice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll green, white people are round.\nFOL:\tall x. ((Green(x) & White(x)) -> Round(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Green(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tAll kind, white people are red.\nFOL:\tall x. ((Kind(x) & White(x)) -> Red(x))\nTEXT:\tAll kind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll blue, round people are white.\nFOL:\tall x. ((Blue(x) & Round(x)) -> White(x))\nTEXT:\tAll nice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll green, white people are round.\nFOL:\tall x. ((Green(x) & White(x)) -> Round(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Green(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tAll kind, white people are red.\nFOL:\tall x. ((Kind(x) & White(x)) -> Red(x))\nTEXT:\tAll kind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll blue, round people are white.\nFOL:\tall x. ((Blue(x) & Round(x)) -> White(x))\nTEXT:\tAll nice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll green, white people are round.\nFOL:\tall x. ((Green(x) & White(x)) -> Round(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Green(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tAll kind, white people are red.\nFOL:\tall x. ((Kind(x) & White(x)) -> Red(x))\nTEXT:\tAll kind people are nice.\nFOL:\tall x. (Kind(x) -> Nice(x))\nTEXT:\tAll blue, round people are white.\nFOL:\tall x. ((Blue(x) & Round(x)) -> White(x))\nTEXT:\tAll nice people are white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tAll green, white people are round.\nFOL:\tall x. ((Green(x) & White(x)) -> Round(x))\nTEXT:\tAll nice, red people are green.\nFOL:\tall x. ((Nice(x) & Red(x)) -> Green(x))\nTEXT:\tGary is not round.\nFOL:\t-Round(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the bear.\nFOL:\tSees(Dog, Bear)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf something is red then it visits the dog.\nFOL:\tall x. (Red(x) -> Visits(x, Dog))\nTEXT:\tIf something is cold and red then it needs the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> Needs(x, Tiger))\nTEXT:\tIf the lion is cold and the lion sees the bear then the bear sees the tiger.\nFOL:\t(Cold(Lion) & Sees(Lion, Bear) -> Sees(Bear, Tiger))\nTEXT:\tIf something visits the dog then it is big.\nFOL:\tall x. (Visits(x, Dog) -> Big(x))\nTEXT:\tIf the tiger is big then the tiger is cold.\nFOL:\t(Big(Tiger) -> Cold(Tiger))\nTEXT:\tIf something needs the tiger then the tiger is round.\nFOL:\tall x. (Needs(x, Tiger) -> Round(Tiger))\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the bear.\nFOL:\tSees(Dog, Bear)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf something is red then it visits the dog.\nFOL:\tall x. (Red(x) -> Visits(x, Dog))\nTEXT:\tIf something is cold and red then it needs the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> Needs(x, Tiger))\nTEXT:\tIf the lion is cold and the lion sees the bear then the bear sees the tiger.\nFOL:\t(Cold(Lion) & Sees(Lion, Bear) -> Sees(Bear, Tiger))\nTEXT:\tIf something visits the dog then it is big.\nFOL:\tall x. (Visits(x, Dog) -> Big(x))\nTEXT:\tIf the tiger is big then the tiger is cold.\nFOL:\t(Big(Tiger) -> Cold(Tiger))\nTEXT:\tIf something needs the tiger then the tiger is round.\nFOL:\tall x. (Needs(x, Tiger) -> Round(Tiger))\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the bear.\nFOL:\tSees(Dog, Bear)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf something is red then it visits the dog.\nFOL:\tall x. (Red(x) -> Visits(x, Dog))\nTEXT:\tIf something is cold and red then it needs the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> Needs(x, Tiger))\nTEXT:\tIf the lion is cold and the lion sees the bear then the bear sees the tiger.\nFOL:\tCold(Lion) & Sees(Lion, Bear) -> Sees(Bear, Tiger)\nTEXT:\tIf something visits the dog then it is big.\nFOL:\tall x. (Visits(x, Dog) -> Big(x))\nTEXT:\tIf the tiger is big then the tiger is cold.\nFOL:\tBig(Tiger) -> Cold(Tiger)\nTEXT:\tIf something needs the tiger then the tiger is round.\nFOL:\tall x. (Needs(x, Tiger) -> Round(Tiger))\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the bear.\nFOL:\tSees(Dog, Bear)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf something is red then it visits the dog.\nFOL:\tall x. (Red(x) -> Visits(x, Dog))\nTEXT:\tIf something is cold and red then it needs the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> Needs(x, Tiger))\nTEXT:\tIf the lion is cold and the lion sees the bear then the bear sees the tiger.\nFOL:\t(Cold(Lion) & Sees(Lion, Bear)) -> Sees(Bear, Tiger)\nTEXT:\tIf something visits the dog then it is big.\nFOL:\tall x. (Visits(x, Dog) -> Big(x))\nTEXT:\tIf the tiger is big then the tiger is cold.\nFOL:\tBig(Tiger) -> Cold(Tiger)\nTEXT:\tIf something needs the tiger then the tiger is round.\nFOL:\tall x. (Needs(x, Tiger) -> Round(Tiger))\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the bear.\nFOL:\tSees(Dog, Bear)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe dog visits the tiger.\nFOL:\tVisits(Dog, Tiger)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger needs the bear.\nFOL:\tNeeds(Tiger, Bear)\nTEXT:\tIf something is red then it visits the dog.\nFOL:\tall x. (Red(x) -> Visits(x, Dog))\nTEXT:\tIf something is cold and red then it needs the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> Needs(x, Tiger))\nTEXT:\tIf the lion is cold and the lion sees the bear then the bear sees the tiger.\nFOL:\tCold(Lion) & Sees(Lion, Bear) -> Sees(Bear, Tiger)\nTEXT:\tIf something visits the dog then it is big.\nFOL:\tall x. (Visits(x, Dog) -> Big(x))\nTEXT:\tIf the tiger is big then the tiger is cold.\nFOL:\tBig(Tiger) -> Cold(Tiger)\nTEXT:\tIf something needs the tiger then the tiger is round.\nFOL:\tall x. (Needs(x, Tiger) -> Round(Tiger))\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nTEXT:\tIf the tiger likes the mouse and the squirrel does not eat the tiger then the mouse likes the squirrel.\nFOL:\tall x. all y. (Likes(Tiger, Mouse) & -Eats(Squirrel, Tiger) -> Likes(Mouse, Squirrel))\nTEXT:\tIf the dog is red and the dog eats the tiger then the tiger is red.\nFOL:\tall x. all y. (Red(Dog) & Eats(Dog, Tiger) -> Red(Tiger))\nTEXT:\tIf something eats the tiger then it eats the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(x, Dog))\nTEXT:\tAll blue things are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf something chases the tiger and it likes the tiger then it chases the squirrel.\nFOL:\tall x. (Chases(x, Tiger) & Likes(x, Tiger) -> Chases(x, Squirrel))\nTEXT:\tIf something is green then it chases the squirrel.\nFOL:\tall x. (Green(x) -> Chases(x, Squirrel))\nTEXT:\tIf the mouse chases the squirrel then the squirrel is blue.\nFOL:\tall x. (Chases(Mouse, Squirrel) -> Blue(Squirrel))\nTEXT:\tIf the mouse chases the squirrel and the mouse likes the tiger then the mouse is not big.\nFOL:\tall x. all y. (Chases(Mouse, Squirrel) & Likes(Mouse, Tiger) -> -Big(Mouse))\nTEXT:\tIf something likes the tiger and it is not blue then it is big.\nFOL:\tall x. (Likes(x, Tiger) & -Blue(x) -> Big(x))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tFalse", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nTEXT:\tIf the tiger likes the mouse and the squirrel does not eat the tiger then the mouse likes the squirrel.\nFOL:\tall x. all y. all z. ((Likes(x, y) & Tiger(x) & Mouse(y) & Squirrel(z) & -Eats(z, x)) -> Likes(y, z))\nTEXT:\tIf the dog is red and the dog eats the tiger then the tiger is red.\nFOL:\tall x. all y. ((Red(x) & Dog(x) & Eats(x, y) & Tiger(y)) -> Red(y))\nTEXT:\tIf something eats the tiger then it eats the dog.\nFOL:\tall x. all y. all z. ((Eats(x, y) & Tiger(y) & Dog(z)) -> Eats(x, z))\nTEXT:\tAll blue things are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf something chases the tiger and it likes the tiger then it chases the squirrel.\nFOL:\tall x. all y. all z. ((Chases(x, y) & Tiger(y) & Likes(x, y) & Squirrel(z)) -> Chases(x, z))\nTEXT:\tIf something is green then it chases the squirrel.\nFOL:\tall x. all y. ((Green(x) & Squirrel(y)) -> Chases(x, y))\nTEXT:\tIf the mouse chases the squirrel then the squirrel is blue.\nFOL:\tall x. all y. ((Chases(x, y) & Mouse(x) & Squirrel(y)) -> Blue(y))\nTEXT:\tIf the mouse chases the squirrel and the mouse likes the tiger then the mouse is not big.\nFOL:\tall x. all y. all z. ((Chases(x, y) & Mouse(x) & Squirrel(y) & Likes(x, z) & Tiger(z)) -> -Big(x))\nTEXT:\tIf something likes the tiger and it is not blue then it is big.\nFOL:\tall x. all y. ((Likes(x, y) & Tiger(y) & -Blue(x)) -> Big(x))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nTEXT:\tIf the tiger likes the mouse and the squirrel does not eat the tiger then the mouse likes the squirrel.\nFOL:\tall x. all y. all z. ((Likes(x, y) & Tiger(x) & Mouse(y) & -Eats(z, x) & Squirrel(z)) -> Likes(y, z))\nTEXT:\tIf the dog is red and the dog eats the tiger then the tiger is red.\nFOL:\tall x. all y. ((Red(x) & Dog(x) & Eats(x, y) & Tiger(y)) -> Red(y))\nTEXT:\tIf something eats the tiger then it eats the dog.\nFOL:\tall x. all y. ((Eats(x, y) & Tiger(y)) -> Eats(x, Dog))\nTEXT:\tAll blue things are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf something chases the tiger and it likes the tiger then it chases the squirrel.\nFOL:\tall x. all y. ((Chases(x, y) & Tiger(y) & Likes(x, y)) -> Chases(x, Squirrel))\nTEXT:\tIf something is green then it chases the squirrel.\nFOL:\tall x. (Green(x) -> Chases(x, Squirrel))\nTEXT:\tIf the mouse chases the squirrel then the squirrel is blue.\nFOL:\tall x. all y. ((Chases(x, y) & Mouse(x) & Squirrel(y)) -> Blue(y))\nTEXT:\tIf the mouse chases the squirrel and the mouse likes the tiger then the mouse is not big.\nFOL:\tall x. all y. all z. ((Chases(x, y) & Mouse(x) & Squirrel(y) & Likes(x, z) & Tiger(z)) -> -Big(x))\nTEXT:\tIf something likes the tiger and it is not blue then it is big.\nFOL:\tall x. all y. ((Likes(x, y) & Tiger(y) & -Blue(x)) -> Big(x))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tFalse\n", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nTEXT:\tIf the tiger likes the mouse and the squirrel does not eat the tiger then the mouse likes the squirrel.\nFOL:\tall x. all y. all z. (Likes(x, y) & Tiger(x) & Mouse(y) & Squirrel(z) & -Eats(z, x) -> Likes(y, z))\nTEXT:\tIf the dog is red and the dog eats the tiger then the tiger is red.\nFOL:\tall x. all y. (Red(x) & Dog(x) & Eats(x, y) & Tiger(y) -> Red(y))\nTEXT:\tIf something eats the tiger then it eats the dog.\nFOL:\tall x. all y. (Eats(x, y) & Tiger(y) -> Eats(x, Dog))\nTEXT:\tAll blue things are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf something chases the tiger and it likes the tiger then it chases the squirrel.\nFOL:\tall x. all y. all z. (Chases(x, y) & Tiger(y) & Likes(x, y) -> Chases(x, z) & Squirrel(z))\nTEXT:\tIf something is green then it chases the squirrel.\nFOL:\tall x. (Green(x) -> Chases(x, Squirrel))\nTEXT:\tIf the mouse chases the squirrel then the squirrel is blue.\nFOL:\tall x. all y. (Chases(x, y) & Mouse(x) & Squirrel(y) -> Blue(y))\nTEXT:\tIf the mouse chases the squirrel and the mouse likes the tiger then the mouse is not big.\nFOL:\tall x. all y. all z. (Chases(x, y) & Mouse(x) & Squirrel(y) & Likes(x, z) & Tiger(z) -> -Big(x))\nTEXT:\tIf something likes the tiger and it is not blue then it is big.\nFOL:\tall x. all y. (Likes(x, y) & Tiger(y) & -Blue(x) -> Big(x))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tFalse", "TEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel eats the tiger.\nFOL:\tEats(Squirrel, Tiger)\nTEXT:\tThe tiger chases the dog.\nFOL:\tChases(Tiger, Dog)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nTEXT:\tIf the tiger likes the mouse and the squirrel does not eat the tiger then the mouse likes the squirrel.\nFOL:\t(Likes(Tiger, Mouse) & -Eats(Squirrel, Tiger)) -> Likes(Mouse, Squirrel)\nTEXT:\tIf the dog is red and the dog eats the tiger then the tiger is red.\nFOL:\t((Red(Dog) & Eats(Dog, Tiger)) -> Red(Tiger))\nTEXT:\tIf something eats the tiger then it eats the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Eats(x, Dog))\nTEXT:\tAll blue things are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tIf something chases the tiger and it likes the tiger then it chases the squirrel.\nFOL:\tall x. ((Chases(x, Tiger) & Likes(x, Tiger)) -> Chases(x, Squirrel))\nTEXT:\tIf something is green then it chases the squirrel.\nFOL:\tall x. (Green(x) -> Chases(x, Squirrel))\nTEXT:\tIf the mouse chases the squirrel then the squirrel is blue.\nFOL:\tChases(Mouse, Squirrel) -> Blue(Squirrel)\nTEXT:\tIf the mouse chases the squirrel and the mouse likes the tiger then the mouse is not big.\nFOL:\t((Chases(Mouse, Squirrel) & Likes(Mouse, Tiger)) -> -Big(Mouse))\nTEXT:\tIf something likes the tiger and it is not blue then it is big.\nFOL:\tall x. ((Likes(x, Tiger) & -Blue(x)) -> Big(x))\nTEXT:\tThe mouse is not green.\nFOL:\t-Green(Mouse)\nANSWER:\tFalse\n"], ["TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf something sees the bald eagle and the bald eagle is young then it needs the bald eagle.\nFOL:\tall x. (Sees(x, BaldEagle) & Young(BaldEagle) -> Needs(x, BaldEagle))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is young and it chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Young(x) & Chases(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf the cat needs the rabbit then the rabbit is nice.\nFOL:\t(Needs(Cat, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Cat))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf something sees the bald eagle and the bald eagle is young then it needs the bald eagle.\nFOL:\tall x. (Sees(x, BaldEagle) & Young(BaldEagle) -> Needs(x, BaldEagle))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is young and it chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Young(x) & Chases(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf the cat needs the rabbit then the rabbit is nice.\nFOL:\tNeeds(Cat, Rabbit) -> Nice(Rabbit)\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Cat))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf something sees the bald eagle and the bald eagle is young then it needs the bald eagle.\nFOL:\tall x. ((Sees(x, BaldEagle) & Young(BaldEagle)) -> Needs(x, BaldEagle))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is young and it chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Young(x) & Chases(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf the cat needs the rabbit then the rabbit is nice.\nFOL:\t(Needs(Cat, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Cat))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChase(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChase(Cat, Tiger)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChase(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChase(Tiger, Cat)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf something sees the bald eagle and the bald eagle is young then it needs the bald eagle.\nFOL:\tall x. ((Sees(x, BaldEagle) & Young(BaldEagle)) -> Needs(x, BaldEagle))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is young and it chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Young(x) & Chase(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf the cat needs the rabbit then the rabbit is nice.\nFOL:\t(Needs(Cat, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chase(BaldEagle, Cat))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the tiger.\nFOL:\tChases(BaldEagle, Tiger)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle sees the rabbit.\nFOL:\tSees(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the tiger.\nFOL:\tChases(Cat, Tiger)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe tiger chases the bald eagle.\nFOL:\tChases(Tiger, BaldEagle)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger is kind.\nFOL:\tKind(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger is rough.\nFOL:\tRough(Tiger)\nTEXT:\tIf something sees the bald eagle and the bald eagle is young then it needs the bald eagle.\nFOL:\tall x. ((Sees(x, BaldEagle) & Young(BaldEagle)) -> Needs(x, BaldEagle))\nTEXT:\tIf something is rough then it is young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tIf something is young and it chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Young(x) & Chases(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf the cat needs the rabbit then the rabbit is nice.\nFOL:\t(Needs(Cat, Rabbit) -> Nice(Rabbit))\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the cat.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Cat))\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tNice, furry people are big.\nFOL:\tall x. (Nice(x) & Furry(x) -> Big(x))\nTEXT:\tIf someone is green and nice then they are red.\nFOL:\tall x. (Green(x) & Nice(x) -> Red(x))\nTEXT:\tNice people are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tFurry people are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is nice and Dave is young then Dave is green.\nFOL:\t(Nice(Dave) & Young(Dave) -> Green(Dave))\nTEXT:\tAll furry, big people are green.\nFOL:\tall x. (Furry(x) & Big(x) -> Green(x))\nTEXT:\tRed, furry people are not kind.\nFOL:\tall x. (Red(x) & Furry(x) -> -Kind(x))\nTEXT:\tIf Bob is not furry then Bob is young.\nFOL:\t(-Furry(Bob) -> Young(Bob))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tNice, furry people are big.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Big(x))\nTEXT:\tIf someone is green and nice then they are red.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Red(x))\nTEXT:\tNice people are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tFurry people are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is nice and Dave is young then Dave is green.\nFOL:\t((Nice(Dave) & Young(Dave)) -> Green(Dave))\nTEXT:\tAll furry, big people are green.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Green(x))\nTEXT:\tRed, furry people are not kind.\nFOL:\tall x. ((Red(x) & Furry(x)) -> -Kind(x))\nTEXT:\tIf Bob is not furry then Bob is young.\nFOL:\t(-Furry(Bob) -> Young(Bob))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tNice, furry people are big.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Big(x))\nTEXT:\tIf someone is green and nice then they are red.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Red(x))\nTEXT:\tNice people are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tFurry people are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is nice and Dave is young then Dave is green.\nFOL:\t((Nice(Dave) & Young(Dave)) -> Green(Dave))\nTEXT:\tAll furry, big people are green.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Green(x))\nTEXT:\tRed, furry people are not kind.\nFOL:\tall x. ((Red(x) & Furry(x)) -> -Kind(x))\nTEXT:\tIf Bob is not furry then Bob is young.\nFOL:\t(-Furry(Bob) -> Young(Bob))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tNice, furry people are big.\nFOL:\tall x. (Nice(x) & Furry(x) -> Big(x))\nTEXT:\tIf someone is green and nice then they are red.\nFOL:\tall x. (Green(x) & Nice(x) -> Red(x))\nTEXT:\tNice people are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tFurry people are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is nice and Dave is young then Dave is green.\nFOL:\t(Nice(Dave) & Young(Dave) -> Green(Dave))\nTEXT:\tAll furry, big people are green.\nFOL:\tall x. (Furry(x) & Big(x) -> Green(x))\nTEXT:\tRed, furry people are not kind.\nFOL:\tall x. (Red(x) & Furry(x) -> -Kind(x))\nTEXT:\tIf Bob is not furry then Bob is young.\nFOL:\t(-Furry(Bob) -> Young(Bob))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tFalse\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tNice, furry people are big.\nFOL:\tall x. (Nice(x) & Furry(x) -> Big(x))\nTEXT:\tIf someone is green and nice then they are red.\nFOL:\tall x. (Green(x) & Nice(x) -> Red(x))\nTEXT:\tNice people are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf someone is big then they are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tFurry people are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is nice and Dave is young then Dave is green.\nFOL:\t(Nice(Dave) & Young(Dave) -> Green(Dave))\nTEXT:\tAll furry, big people are green.\nFOL:\tall x. (Furry(x) & Big(x) -> Green(x))\nTEXT:\tRed, furry people are not kind.\nFOL:\tall x. (Red(x) & Furry(x) -> -Kind(x))\nTEXT:\tIf Bob is not furry then Bob is young.\nFOL:\t(-Furry(Bob) -> Young(Bob))\nTEXT:\tErin is not green.\nFOL:\t-Green(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tQuiet, nice things are not blue.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> -Blue(x))\nTEXT:\tIf something is quiet and rough then it is kind.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Kind(x))\nTEXT:\tIf something is nice and blue then it is rough.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf something is young and not blue then it is rough.\nFOL:\tall x. ((Young(x) & -Blue(x)) -> Rough(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tQuiet, nice things are not blue.\nFOL:\tall x. (Quiet(x) & Nice(x) -> -Blue(x))\nTEXT:\tIf something is quiet and rough then it is kind.\nFOL:\tall x. (Quiet(x) & Rough(x) -> Kind(x))\nTEXT:\tIf something is nice and blue then it is rough.\nFOL:\tall x. (Nice(x) & Blue(x) -> Rough(x))\nTEXT:\tIf something is young and not blue then it is rough.\nFOL:\tall x. (Young(x) & -Blue(x) -> Rough(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tQuiet, nice things are not blue.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> -Blue(x))\nTEXT:\tIf something is quiet and rough then it is kind.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Kind(x))\nTEXT:\tIf something is nice and blue then it is rough.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf something is young and not blue then it is rough.\nFOL:\tall x. ((Young(x) & -Blue(x)) -> Rough(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tQuiet, nice things are not blue.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> -Blue(x))\nTEXT:\tIf something is quiet and rough then it is kind.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Kind(x))\nTEXT:\tIf something is nice and blue then it is rough.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf something is young and not blue then it is rough.\nFOL:\tall x. ((Young(x) & -Blue(x)) -> Rough(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n", "TEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is not nice.\nFOL:\t-Nice(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tQuiet, nice things are not blue.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> -Blue(x))\nTEXT:\tIf something is quiet and rough then it is kind.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Kind(x))\nTEXT:\tIf something is nice and blue then it is rough.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Rough(x))\nTEXT:\tIf something is young and not blue then it is rough.\nFOL:\tall x. ((Young(x) & -Blue(x)) -> Rough(x))\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tYoung, furry people are rough.\nFOL:\tall x. (Young(x) & Furry(x) -> Rough(x))\nTEXT:\tCold, rough people are young.\nFOL:\tall x. (Cold(x) & Rough(x) -> Young(x))\nTEXT:\tAll cold, red people are kind.\nFOL:\tall x. (Cold(x) & Red(x) -> Kind(x))\nTEXT:\tYoung, furry people are cold.\nFOL:\tall x. (Young(x) & Furry(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is rough then they are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll kind, round people are furry.\nFOL:\tall x. (Kind(x) & Round(x) -> Furry(x))\nTEXT:\tCold, young people are red.\nFOL:\tall x. (Cold(x) & Young(x) -> Red(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tYoung, furry people are rough.\nFOL:\tall x. (Young(x) & Furry(x) -> Rough(x))\nTEXT:\tCold, rough people are young.\nFOL:\tall x. (Cold(x) & Rough(x) -> Young(x))\nTEXT:\tAll cold, red people are kind.\nFOL:\tall x. (Cold(x) & Red(x) -> Kind(x))\nTEXT:\tYoung, furry people are cold.\nFOL:\tall x. (Young(x) & Furry(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is rough then they are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll kind, round people are furry.\nFOL:\tall x. (Kind(x) & Round(x) -> Furry(x))\nTEXT:\tCold, young people are red.\nFOL:\tall x. (Cold(x) & Young(x) -> Red(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tYoung, furry people are rough.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Rough(x))\nTEXT:\tCold, rough people are young.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Young(x))\nTEXT:\tAll cold, red people are kind.\nFOL:\tall x. ((Cold(x) & Red(x)) -> Kind(x))\nTEXT:\tYoung, furry people are cold.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Cold(x))\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is rough then they are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll kind, round people are furry.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Furry(x))\nTEXT:\tCold, young people are red.\nFOL:\tall x. ((Cold(x) & Young(x)) -> Red(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tYoung, furry people are rough.\nFOL:\tall x. (Young(x) & Furry(x) -> Rough(x))\nTEXT:\tCold, rough people are young.\nFOL:\tall x. (Cold(x) & Rough(x) -> Young(x))\nTEXT:\tAll cold, red people are kind.\nFOL:\tall x. (Cold(x) & Red(x) -> Kind(x))\nTEXT:\tYoung, furry people are cold.\nFOL:\tall x. (Young(x) & Furry(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is rough then they are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll kind, round people are furry.\nFOL:\tall x. (Kind(x) & Round(x) -> Furry(x))\nTEXT:\tCold, young people are red.\nFOL:\tall x. (Cold(x) & Young(x) -> Red(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tYoung, furry people are rough.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Rough(x))\nTEXT:\tCold, rough people are young.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> Young(x))\nTEXT:\tAll cold, red people are kind.\nFOL:\tall x. ((Cold(x) & Red(x)) -> Kind(x))\nTEXT:\tYoung, furry people are cold.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Cold(x))\nTEXT:\tIf someone is cold then they are young.\nFOL:\tall x. (Cold(x) -> Young(x))\nTEXT:\tIf someone is rough then they are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tAll kind, round people are furry.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Furry(x))\nTEXT:\tCold, young people are red.\nFOL:\tall x. ((Cold(x) & Young(x)) -> Red(x))\nTEXT:\tAll rough people are young.\nFOL:\tall x. (Rough(x) -> Young(x))\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cow.\nFOL:\tSees(BaldEagle, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse eats the cow.\nFOL:\tEats(Mouse, Cow)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tIf something eats the bald eagle then the bald eagle chases the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Cow))\nTEXT:\tIf something eats the mouse then it chases the mouse.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(x, Mouse))\nTEXT:\tIf the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit.\nFOL:\t(Chases(Cow, BaldEagle) & Sees(BaldEagle, Cow)) -> Chases(BaldEagle, Rabbit)\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tIf something chases the cow then the cow is kind.\nFOL:\tall x. (Chases(x, Cow) -> Kind(Cow))\nTEXT:\tIf the cow eats the bald eagle then the bald eagle is nice.\nFOL:\tEats(Cow, BaldEagle) -> Nice(BaldEagle)\nTEXT:\tIf something sees the mouse then it sees the bald eagle.\nFOL:\tall x. (Sees(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf something is young then it eats the bald eagle.\nFOL:\tall x. (Young(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cow.\nFOL:\tSees(BaldEagle, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse eats the cow.\nFOL:\tEats(Mouse, Cow)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tIf something eats the bald eagle then the bald eagle chases the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Cow))\nTEXT:\tIf something eats the mouse then it chases the mouse.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(x, Mouse))\nTEXT:\tIf the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit.\nFOL:\t(Chases(Cow, BaldEagle) & Sees(BaldEagle, Cow)) -> Chases(BaldEagle, Rabbit)\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tIf something chases the cow then the cow is kind.\nFOL:\tall x. (Chases(x, Cow) -> Kind(Cow))\nTEXT:\tIf the cow eats the bald eagle then the bald eagle is nice.\nFOL:\tEats(Cow, BaldEagle) -> Nice(BaldEagle)\nTEXT:\tIf something sees the mouse then it sees the bald eagle.\nFOL:\tall x. (Sees(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf something is young then it eats the bald eagle.\nFOL:\tall x. (Young(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cow.\nFOL:\tSees(BaldEagle, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse eats the cow.\nFOL:\tEats(Mouse, Cow)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tIf something eats the bald eagle then the bald eagle chases the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Cow))\nTEXT:\tIf something eats the mouse then it chases the mouse.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(x, Mouse))\nTEXT:\tIf the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit.\nFOL:\t(Chases(Cow, BaldEagle) & Sees(BaldEagle, Cow)) -> Chases(BaldEagle, Rabbit)\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tIf something chases the cow then the cow is kind.\nFOL:\tall x. (Chases(x, Cow) -> Kind(Cow))\nTEXT:\tIf the cow eats the bald eagle then the bald eagle is nice.\nFOL:\tEats(Cow, BaldEagle) -> Nice(BaldEagle)\nTEXT:\tIf something sees the mouse then it sees the bald eagle.\nFOL:\tall x. (Sees(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf something is young then it eats the bald eagle.\nFOL:\tall x. (Young(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cow.\nFOL:\tSees(BaldEagle, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse eats the cow.\nFOL:\tEats(Mouse, Cow)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tIf something eats the bald eagle then the bald eagle chases the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Cow))\nTEXT:\tIf something eats the mouse then it chases the mouse.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(x, Mouse))\nTEXT:\tIf the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit.\nFOL:\t(Chases(Cow, BaldEagle) & Sees(BaldEagle, Cow)) -> Chases(BaldEagle, Rabbit)\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tIf something chases the cow then the cow is kind.\nFOL:\tall x. (Chases(x, Cow) -> Kind(Cow))\nTEXT:\tIf the cow eats the bald eagle then the bald eagle is nice.\nFOL:\tEats(Cow, BaldEagle) -> Nice(BaldEagle)\nTEXT:\tIf something sees the mouse then it sees the bald eagle.\nFOL:\tall x. (Sees(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf something is young then it eats the bald eagle.\nFOL:\tall x. (Young(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle sees the cow.\nFOL:\tSees(BaldEagle, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow sees the mouse.\nFOL:\tSees(Cow, Mouse)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse eats the cow.\nFOL:\tEats(Mouse, Cow)\nTEXT:\tThe mouse is blue.\nFOL:\tBlue(Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe mouse sees the cow.\nFOL:\tSees(Mouse, Cow)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tThe rabbit sees the mouse.\nFOL:\tSees(Rabbit, Mouse)\nTEXT:\tIf something eats the bald eagle then the bald eagle chases the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Cow))\nTEXT:\tIf something eats the mouse then it chases the mouse.\nFOL:\tall x. (Eats(x, Mouse) -> Chases(x, Mouse))\nTEXT:\tIf the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit.\nFOL:\t(Chases(Cow, BaldEagle) & Sees(BaldEagle, Cow)) -> Chases(BaldEagle, Rabbit)\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tIf something chases the cow then the cow is kind.\nFOL:\tall x. (Chases(x, Cow) -> Kind(Cow))\nTEXT:\tIf the cow eats the bald eagle then the bald eagle is nice.\nFOL:\tEats(Cow, BaldEagle) -> Nice(BaldEagle)\nTEXT:\tIf something sees the mouse then it sees the bald eagle.\nFOL:\tall x. (Sees(x, Mouse) -> Sees(x, BaldEagle))\nTEXT:\tIf something is young then it eats the bald eagle.\nFOL:\tall x. (Young(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is kind then it sees the cow.\nFOL:\tall x. (Kind(x) -> Sees(x, Cow))\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tIf something is big then it chases the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf the cow is rough and the cow chases the dog then the dog is nice.\nFOL:\t(Rough(Cow) & Chases(Cow, Dog)) -> Nice(Dog)\nTEXT:\tIf something chases the cow then the cow eats the bear.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something eats the dog then the dog likes the cow.\nFOL:\tall x. (Eats(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf something eats the cow then it likes the dog.\nFOL:\tall x. (Eats(x, Cow) -> Likes(x, Dog))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf the bear is round and the bear likes the cow then the cow eats the mouse.\nFOL:\t(Round(Bear) & Likes(Bear, Cow)) -> Eats(Cow, Mouse)\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and it eats the cow then it is round.\nFOL:\tall x. ((Rough(x) & Eats(x, Cow)) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tIf something is big then it chases the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf the cow is rough and the cow chases the dog then the dog is nice.\nFOL:\t(Rough(Cow) & Chases(Cow, Dog)) -> Nice(Dog)\nTEXT:\tIf something chases the cow then the cow eats the bear.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something eats the dog then the dog likes the cow.\nFOL:\tall x. (Eats(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf something eats the cow then it likes the dog.\nFOL:\tall x. (Eats(x, Cow) -> Likes(x, Dog))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf the bear is round and the bear likes the cow then the cow eats the mouse.\nFOL:\t(Round(Bear) & Likes(Bear, Cow)) -> Eats(Cow, Mouse)\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and it eats the cow then it is round.\nFOL:\tall x. ((Rough(x) & Eats(x, Cow)) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tIf something is big then it chases the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf the cow is rough and the cow chases the dog then the dog is nice.\nFOL:\t(Rough(Cow) & Chases(Cow, Dog)) -> Nice(Dog)\nTEXT:\tIf something chases the cow then the cow eats the bear.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something eats the dog then the dog likes the cow.\nFOL:\tall x. (Eats(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf something eats the cow then it likes the dog.\nFOL:\tall x. (Eats(x, Cow) -> Likes(x, Dog))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf the bear is round and the bear likes the cow then the cow eats the mouse.\nFOL:\t(Round(Bear) & Likes(Bear, Cow)) -> Eats(Cow, Mouse)\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and it eats the cow then it is round.\nFOL:\tall x. (Rough(x) & Eats(x, Cow) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tFalse", "TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tIf something is big then it chases the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf the cow is rough and the cow chases the dog then the dog is nice.\nFOL:\t(Rough(Cow) & Chases(Cow, Dog)) -> Nice(Dog)\nTEXT:\tIf something chases the cow then the cow eats the bear.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something eats the dog then the dog likes the cow.\nFOL:\tall x. (Eats(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf something eats the cow then it likes the dog.\nFOL:\tall x. (Eats(x, Cow) -> Likes(x, Dog))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf the bear is round and the bear likes the cow then the cow eats the mouse.\nFOL:\t(Round(Bear) & Likes(Bear, Cow)) -> Eats(Cow, Mouse)\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and it eats the cow then it is round.\nFOL:\tall x. (Rough(x) & Eats(x, Cow) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe mouse chases the bear.\nFOL:\tChases(Mouse, Bear)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tIf something is big then it chases the dog.\nFOL:\tall x. (Big(x) -> Chases(x, Dog))\nTEXT:\tIf the cow is rough and the cow chases the dog then the dog is nice.\nFOL:\t(Rough(Cow) & Chases(Cow, Dog)) -> Nice(Dog)\nTEXT:\tIf something chases the cow then the cow eats the bear.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something eats the dog then the dog likes the cow.\nFOL:\tall x. (Eats(x, Dog) -> Likes(Dog, Cow))\nTEXT:\tIf something eats the cow then it likes the dog.\nFOL:\tall x. (Eats(x, Cow) -> Likes(x, Dog))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf the bear is round and the bear likes the cow then the cow eats the mouse.\nFOL:\t(Round(Bear) & Likes(Bear, Cow)) -> Eats(Cow, Mouse)\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is rough and it eats the cow then it is round.\nFOL:\tall x. (Rough(x) & Eats(x, Cow) -> Round(x))\nTEXT:\tThe bear does not chase the dog.\nFOL:\t-Chases(Bear, Dog)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow does not visit the dog.\nFOL:\t-Visits(Cow, Dog)\nTEXT:\tThe dog is not big.\nFOL:\t-Big(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone sees the dog then they visit the dog.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Dog))\nTEXT:\tIf someone visits the bald eagle and they are round then the bald eagle chases the cow.\nFOL:\tall x. ((Visits(x, BaldEagle) & Round(x)) -> Chases(BaldEagle, Cow))\nTEXT:\tIf someone is round then they see the rabbit.\nFOL:\tall x. (Round(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone sees the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone chases the dog then the dog visits the bald eagle.\nFOL:\tall x. (Chases(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf the dog is young then the dog does not visit the bald eagle.\nFOL:\t(Young(Dog) -> -Visits(Dog, BaldEagle))\nTEXT:\tIf someone visits the dog then the dog is round.\nFOL:\tall x. (Visits(x, Dog) -> Round(Dog))\nTEXT:\tIf the dog is nice then the dog sees the cow.\nFOL:\t(Nice(Dog) -> Sees(Dog, Cow))\nTEXT:\tIf the rabbit sees the bald eagle and the bald eagle chases the cow then the cow sees the bald eagle.\nFOL:\t((Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow)) -> Sees(Cow, BaldEagle))\nTEXT:\tThe dog does not visit the dog.\nFOL:\t-Visits(Dog, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow does not visit the dog.\nFOL:\t-Visits(Cow, Dog)\nTEXT:\tThe dog is not big.\nFOL:\t-Big(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone sees the dog then they visit the dog.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Dog))\nTEXT:\tIf someone visits the bald eagle and they are round then the bald eagle chases the cow.\nFOL:\tall x. (Visits(x, BaldEagle) & Round(x) -> Chases(BaldEagle, Cow))\nTEXT:\tIf someone is round then they see the rabbit.\nFOL:\tall x. (Round(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone sees the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone chases the dog then the dog visits the bald eagle.\nFOL:\tall x. (Chases(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf the dog is young then the dog does not visit the bald eagle.\nFOL:\tYoung(Dog) -> -Visits(Dog, BaldEagle)\nTEXT:\tIf someone visits the dog then the dog is round.\nFOL:\tall x. (Visits(x, Dog) -> Round(Dog))\nTEXT:\tIf the dog is nice then the dog sees the cow.\nFOL:\tNice(Dog) -> Sees(Dog, Cow)\nTEXT:\tIf the rabbit sees the bald eagle and the bald eagle chases the cow then the cow sees the bald eagle.\nFOL:\t(Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow)) -> Sees(Cow, BaldEagle)\nTEXT:\tThe dog does not visit the dog.\nFOL:\t-Visits(Dog, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow does not visit the dog.\nFOL:\t-Visits(Cow, Dog)\nTEXT:\tThe dog is not big.\nFOL:\t-Big(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone sees the dog then they visit the dog.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Dog))\nTEXT:\tIf someone visits the bald eagle and they are round then the bald eagle chases the cow.\nFOL:\tall x. ((Visits(x, BaldEagle) & Round(x)) -> Chases(BaldEagle, Cow))\nTEXT:\tIf someone is round then they see the rabbit.\nFOL:\tall x. (Round(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone sees the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone chases the dog then the dog visits the bald eagle.\nFOL:\tall x. (Chases(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf the dog is young then the dog does not visit the bald eagle.\nFOL:\t(Young(Dog) -> -Visits(Dog, BaldEagle))\nTEXT:\tIf someone visits the dog then the dog is round.\nFOL:\tall x. (Visits(x, Dog) -> Round(Dog))\nTEXT:\tIf the dog is nice then the dog sees the cow.\nFOL:\t(Nice(Dog) -> Sees(Dog, Cow))\nTEXT:\tIf the rabbit sees the bald eagle and the bald eagle chases the cow then the cow sees the bald eagle.\nFOL:\t((Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow)) -> Sees(Cow, BaldEagle))\nTEXT:\tThe dog does not visit the dog.\nFOL:\t-Visits(Dog, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow does not visit the dog.\nFOL:\t-Visits(Cow, Dog)\nTEXT:\tThe dog is not big.\nFOL:\t-Big(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone sees the dog then they visit the dog.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Dog))\nTEXT:\tIf someone visits the bald eagle and they are round then the bald eagle chases the cow.\nFOL:\tall x. ((Visits(x, BaldEagle) & Round(x)) -> Chases(BaldEagle, Cow))\nTEXT:\tIf someone is round then they see the rabbit.\nFOL:\tall x. (Round(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone sees the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone chases the dog then the dog visits the bald eagle.\nFOL:\tall x. (Chases(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf the dog is young then the dog does not visit the bald eagle.\nFOL:\t(Young(Dog) -> -Visits(Dog, BaldEagle))\nTEXT:\tIf someone visits the dog then the dog is round.\nFOL:\tall x. (Visits(x, Dog) -> Round(Dog))\nTEXT:\tIf the dog is nice then the dog sees the cow.\nFOL:\t(Nice(Dog) -> Sees(Dog, Cow))\nTEXT:\tIf the rabbit sees the bald eagle and the bald eagle chases the cow then the cow sees the bald eagle.\nFOL:\t(Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow)) -> Sees(Cow, BaldEagle)\nTEXT:\tThe dog does not visit the dog.\nFOL:\t-Visits(Dog, Dog)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow does not visit the dog.\nFOL:\t-Visits(Cow, Dog)\nTEXT:\tThe dog is not big.\nFOL:\t-Big(Dog)\nTEXT:\tThe dog is young.\nFOL:\tYoung(Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone sees the dog then they visit the dog.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Dog))\nTEXT:\tIf someone visits the bald eagle and they are round then the bald eagle chases the cow.\nFOL:\tall x. ((Visits(x, BaldEagle) & Round(x)) -> Chases(BaldEagle, Cow))\nTEXT:\tIf someone is round then they see the rabbit.\nFOL:\tall x. (Round(x) -> Sees(x, Rabbit))\nTEXT:\tIf someone sees the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf someone chases the dog then the dog visits the bald eagle.\nFOL:\tall x. (Chases(x, Dog) -> Visits(Dog, BaldEagle))\nTEXT:\tIf the dog is young then the dog does not visit the bald eagle.\nFOL:\tYoung(Dog) -> -Visits(Dog, BaldEagle)\nTEXT:\tIf someone visits the dog then the dog is round.\nFOL:\tall x. (Visits(x, Dog) -> Round(Dog))\nTEXT:\tIf the dog is nice then the dog sees the cow.\nFOL:\tNice(Dog) -> Sees(Dog, Cow)\nTEXT:\tIf the rabbit sees the bald eagle and the bald eagle chases the cow then the cow sees the bald eagle.\nFOL:\t(Sees(Rabbit, BaldEagle) & Chases(BaldEagle, Cow)) -> Sees(Cow, BaldEagle)\nTEXT:\tThe dog does not visit the dog.\nFOL:\t-Visits(Dog, Dog)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Need(BaldEagle, Cat)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the bald eagle.\nFOL:\t-Need(Cat, BaldEagle)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeed(Cat, Tiger)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisit(Cat, Cow)\nTEXT:\tThe cow does not eat the tiger.\nFOL:\t-Eat(Cow, Tiger)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeed(Cow, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Need(Tiger, Cat)\nTEXT:\tIf someone needs the tiger then they do not visit the bald eagle.\nFOL:\tall x. (Need(x, Tiger) -> -Visit(x, BaldEagle))\nTEXT:\tIf someone eats the cow then they need the cow.\nFOL:\tall x. (Eat(x, Cow) -> Need(x, Cow))\nTEXT:\tIf someone eats the bald eagle then they need the cow.\nFOL:\tall x. (Eat(x, BaldEagle) -> Need(x, Cow))\nTEXT:\tIf someone is big then they eat the cow.\nFOL:\tall x. (Big(x) -> Eat(x, Cow))\nTEXT:\tIf someone eats the bald eagle and they need the tiger then they are round.\nFOL:\tall x. (Eat(x, BaldEagle) & Need(x, Tiger) -> Round(x))\nTEXT:\tIf someone needs the cow then the cow is big.\nFOL:\tall x. (Need(x, Cow) -> Big(Cow))\nTEXT:\tIf the cow needs the tiger and the cow is cold then the tiger eats the bald eagle.\nFOL:\tNeed(Cow, Tiger) & Cold(Cow) -> Eat(Tiger, BaldEagle)\nTEXT:\tIf someone is round and red then they are cold.\nFOL:\tall x. (Round(x) & Red(x) -> Cold(x))\nTEXT:\tIf the bald eagle is not round then the bald eagle visits the cat.\nFOL:\t-Round(BaldEagle) -> Visit(BaldEagle, Cat)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tTrue", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the bald eagle.\nFOL:\t-Needs(Cat, BaldEagle)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow does not eat the tiger.\nFOL:\t-Eats(Cow, Tiger)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone needs the tiger then they do not visit the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Visits(x, BaldEagle))\nTEXT:\tIf someone eats the cow then they need the cow.\nFOL:\tall x. (Eats(x, Cow) -> Needs(x, Cow))\nTEXT:\tIf someone eats the bald eagle then they need the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(x, Cow))\nTEXT:\tIf someone is big then they eat the cow.\nFOL:\tall x. (Big(x) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bald eagle and they need the tiger then they are round.\nFOL:\tall x. (Eats(x, BaldEagle) & Needs(x, Tiger) -> Round(x))\nTEXT:\tIf someone needs the cow then the cow is big.\nFOL:\tall x. (Needs(x, Cow) -> Big(Cow))\nTEXT:\tIf the cow needs the tiger and the cow is cold then the tiger eats the bald eagle.\nFOL:\t(Needs(Cow, Tiger) & Cold(Cow) -> Eats(Tiger, BaldEagle))\nTEXT:\tIf someone is round and red then they are cold.\nFOL:\tall x. (Round(x) & Red(x) -> Cold(x))\nTEXT:\tIf the bald eagle is not round then the bald eagle visits the cat.\nFOL:\t(-Round(BaldEagle) -> Visits(BaldEagle, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tTrue", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Need(BaldEagle, Cat)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the bald eagle.\nFOL:\t-Need(Cat, BaldEagle)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeed(Cat, Tiger)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisit(Cat, Cow)\nTEXT:\tThe cow does not eat the tiger.\nFOL:\t-Eat(Cow, Tiger)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeed(Cow, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Need(Tiger, Cat)\nTEXT:\tIf someone needs the tiger then they do not visit the bald eagle.\nFOL:\tall x. (Need(x, Tiger) -> -Visit(x, BaldEagle))\nTEXT:\tIf someone eats the cow then they need the cow.\nFOL:\tall x. (Eat(x, Cow) -> Need(x, Cow))\nTEXT:\tIf someone eats the bald eagle then they need the cow.\nFOL:\tall x. (Eat(x, BaldEagle) -> Need(x, Cow))\nTEXT:\tIf someone is big then they eat the cow.\nFOL:\tall x. (Big(x) -> Eat(x, Cow))\nTEXT:\tIf someone eats the bald eagle and they need the tiger then they are round.\nFOL:\tall x. ((Eat(x, BaldEagle) & Need(x, Tiger)) -> Round(x))\nTEXT:\tIf someone needs the cow then the cow is big.\nFOL:\tall x. (Need(x, Cow) -> Big(Cow))\nTEXT:\tIf the cow needs the tiger and the cow is cold then the tiger eats the bald eagle.\nFOL:\t((Need(Cow, Tiger) & Cold(Cow)) -> Eat(Tiger, BaldEagle))\nTEXT:\tIf someone is round and red then they are cold.\nFOL:\tall x. ((Round(x) & Red(x)) -> Cold(x))\nTEXT:\tIf the bald eagle is not round then the bald eagle visits the cat.\nFOL:\t(-Round(BaldEagle) -> Visit(BaldEagle, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the bald eagle.\nFOL:\t-Needs(Cat, BaldEagle)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow does not eat the tiger.\nFOL:\t-Eats(Cow, Tiger)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone needs the tiger then they do not visit the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Visits(x, BaldEagle))\nTEXT:\tIf someone eats the cow then they need the cow.\nFOL:\tall x. (Eats(x, Cow) -> Needs(x, Cow))\nTEXT:\tIf someone eats the bald eagle then they need the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(x, Cow))\nTEXT:\tIf someone is big then they eat the cow.\nFOL:\tall x. (Big(x) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bald eagle and they need the tiger then they are round.\nFOL:\tall x. (Eats(x, BaldEagle) & Needs(x, Tiger) -> Round(x))\nTEXT:\tIf someone needs the cow then the cow is big.\nFOL:\tall x. (Needs(x, Cow) -> Big(Cow))\nTEXT:\tIf the cow needs the tiger and the cow is cold then the tiger eats the bald eagle.\nFOL:\tNeeds(Cow, Tiger) & Cold(Cow) -> Eats(Tiger, BaldEagle)\nTEXT:\tIf someone is round and red then they are cold.\nFOL:\tall x. (Round(x) & Red(x) -> Cold(x))\nTEXT:\tIf the bald eagle is not round then the bald eagle visits the cat.\nFOL:\t-Round(BaldEagle) -> Visits(BaldEagle, Cat)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is big.\nFOL:\tBig(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the bald eagle.\nFOL:\t-Needs(Cat, BaldEagle)\nTEXT:\tThe cat needs the tiger.\nFOL:\tNeeds(Cat, Tiger)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow does not eat the tiger.\nFOL:\t-Eats(Cow, Tiger)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger does not need the cat.\nFOL:\t-Needs(Tiger, Cat)\nTEXT:\tIf someone needs the tiger then they do not visit the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Visits(x, BaldEagle))\nTEXT:\tIf someone eats the cow then they need the cow.\nFOL:\tall x. (Eats(x, Cow) -> Needs(x, Cow))\nTEXT:\tIf someone eats the bald eagle then they need the cow.\nFOL:\tall x. (Eats(x, BaldEagle) -> Needs(x, Cow))\nTEXT:\tIf someone is big then they eat the cow.\nFOL:\tall x. (Big(x) -> Eats(x, Cow))\nTEXT:\tIf someone eats the bald eagle and they need the tiger then they are round.\nFOL:\tall x. ((Eats(x, BaldEagle) & Needs(x, Tiger)) -> Round(x))\nTEXT:\tIf someone needs the cow then the cow is big.\nFOL:\tall x. (Needs(x, Cow) -> Big(Cow))\nTEXT:\tIf the cow needs the tiger and the cow is cold then the tiger eats the bald eagle.\nFOL:\t((Needs(Cow, Tiger) & Cold(Cow)) -> Eats(Tiger, BaldEagle))\nTEXT:\tIf someone is round and red then they are cold.\nFOL:\tall x. ((Round(x) & Red(x)) -> Cold(x))\nTEXT:\tIf the bald eagle is not round then the bald eagle visits the cat.\nFOL:\t(-Round(BaldEagle) -> Visits(BaldEagle, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nANSWER:\tTrue\n"], ["TEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tIf someone sees the lion and they are blue then the lion likes the tiger.\nFOL:\tall x. (Sees(x, Lion) & Blue(x) -> Likes(Lion, Tiger))\nTEXT:\tIf someone likes the dog and they need the dog then the dog likes the lion.\nFOL:\tall x. (Likes(x, Dog) & Needs(x, Dog) -> Likes(Dog, Lion))\nTEXT:\tIf someone is blue and round then they need the tiger.\nFOL:\tall x. (Blue(x) & Round(x) -> Needs(x, Tiger))\nTEXT:\tIf someone likes the rabbit and they like the tiger then the tiger is not blue.\nFOL:\tall x. (Likes(x, Rabbit) & Likes(x, Tiger) -> -Blue(Tiger))\nTEXT:\tRound people are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf someone needs the dog then the dog sees the rabbit.\nFOL:\tall x. (Needs(x, Dog) -> Sees(Dog, Rabbit))\nTEXT:\tIf someone needs the tiger then they need the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf someone likes the lion then the lion sees the rabbit.\nFOL:\tall x. (Likes(x, Lion) -> Sees(Lion, Rabbit))\nTEXT:\tIf someone sees the rabbit then they do not see the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> -Sees(x, Dog))\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tIf someone sees the lion and they are blue then the lion likes the tiger.\nFOL:\tall x. ((Sees(x, Lion) & Blue(x)) -> Likes(Lion, Tiger))\nTEXT:\tIf someone likes the dog and they need the dog then the dog likes the lion.\nFOL:\tall x. ((Likes(x, Dog) & Needs(x, Dog)) -> Likes(Dog, Lion))\nTEXT:\tIf someone is blue and round then they need the tiger.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Needs(x, Tiger))\nTEXT:\tIf someone likes the rabbit and they like the tiger then the tiger is not blue.\nFOL:\tall x. ((Likes(x, Rabbit) & Likes(x, Tiger)) -> -Blue(Tiger))\nTEXT:\tRound people are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf someone needs the dog then the dog sees the rabbit.\nFOL:\tall x. (Needs(x, Dog) -> Sees(Dog, Rabbit))\nTEXT:\tIf someone needs the tiger then they need the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf someone likes the lion then the lion sees the rabbit.\nFOL:\tall x. (Likes(x, Lion) -> Sees(Lion, Rabbit))\nTEXT:\tIf someone sees the rabbit then they do not see the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> -Sees(x, Dog))\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tIf someone sees the lion and they are blue then the lion likes the tiger.\nFOL:\tall x. ((Sees(x, Lion) & Blue(x)) -> Likes(Lion, Tiger))\nTEXT:\tIf someone likes the dog and they need the dog then the dog likes the lion.\nFOL:\tall x. ((Likes(x, Dog) & Needs(x, Dog)) -> Likes(Dog, Lion))\nTEXT:\tIf someone is blue and round then they need the tiger.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Needs(x, Tiger))\nTEXT:\tIf someone likes the rabbit and they like the tiger then the tiger is not blue.\nFOL:\tall x. ((Likes(x, Rabbit) & Likes(x, Tiger)) -> - Blue(Tiger))\nTEXT:\tRound people are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf someone needs the dog then the dog sees the rabbit.\nFOL:\tall x. (Needs(x, Dog) -> Sees(Dog, Rabbit))\nTEXT:\tIf someone needs the tiger then they need the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf someone likes the lion then the lion sees the rabbit.\nFOL:\tall x. (Likes(x, Lion) -> Sees(Lion, Rabbit))\nTEXT:\tIf someone sees the rabbit then they do not see the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> - Sees(x, Dog))\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tIf someone sees the lion and they are blue then the lion likes the tiger.\nFOL:\tall x. ((Sees(x, Lion) & Blue(x)) -> Likes(Lion, Tiger))\nTEXT:\tIf someone likes the dog and they need the dog then the dog likes the lion.\nFOL:\tall x. ((Likes(x, Dog) & Needs(x, Dog)) -> Likes(Dog, Lion))\nTEXT:\tIf someone is blue and round then they need the tiger.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Needs(x, Tiger))\nTEXT:\tIf someone likes the rabbit and they like the tiger then the tiger is not blue.\nFOL:\tall x. ((Likes(x, Rabbit) & Likes(x, Tiger)) -> - Blue(Tiger))\nTEXT:\tRound people are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf someone needs the dog then the dog sees the rabbit.\nFOL:\tall x. (Needs(x, Dog) -> Sees(Dog, Rabbit))\nTEXT:\tIf someone needs the tiger then they need the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf someone likes the lion then the lion sees the rabbit.\nFOL:\tall x. (Likes(x, Lion) -> Sees(Lion, Rabbit))\nTEXT:\tIf someone sees the rabbit then they do not see the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> - Sees(x, Dog))\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nANSWER:\tTrue\n", "TEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nTEXT:\tThe dog likes the tiger.\nFOL:\tLikes(Dog, Tiger)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe rabbit does not need the lion.\nFOL:\t- Needs(Rabbit, Lion)\nTEXT:\tThe tiger sees the dog.\nFOL:\tSees(Tiger, Dog)\nTEXT:\tIf someone sees the lion and they are blue then the lion likes the tiger.\nFOL:\tall x. ((Sees(x, Lion) & Blue(x)) -> Likes(Lion, Tiger))\nTEXT:\tIf someone likes the dog and they need the dog then the dog likes the lion.\nFOL:\tall x. ((Likes(x, Dog) & Needs(x, Dog)) -> Likes(Dog, Lion))\nTEXT:\tIf someone is blue and round then they need the tiger.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Needs(x, Tiger))\nTEXT:\tIf someone likes the rabbit and they like the tiger then the tiger is not blue.\nFOL:\tall x. ((Likes(x, Rabbit) & Likes(x, Tiger)) -> -Blue(Tiger))\nTEXT:\tRound people are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf someone needs the dog then the dog sees the rabbit.\nFOL:\tall x. (Needs(x, Dog) -> Sees(Dog, Rabbit))\nTEXT:\tIf someone needs the tiger then they need the dog.\nFOL:\tall x. (Needs(x, Tiger) -> Needs(x, Dog))\nTEXT:\tIf someone likes the lion then the lion sees the rabbit.\nFOL:\tall x. (Likes(x, Lion) -> Sees(Lion, Rabbit))\nTEXT:\tIf someone sees the rabbit then they do not see the dog.\nFOL:\tall x. (Sees(x, Rabbit) -> -Sees(x, Dog))\nTEXT:\tThe dog does not like the rabbit.\nFOL:\t- Likes(Dog, Rabbit)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tAll round things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tRough, blue things are kind.\nFOL:\tall x. (Rough(x) & Blue(x) -> Kind(x))\nTEXT:\tIf something is smart and kind then it is quiet.\nFOL:\tall x. (Smart(x) & Kind(x) -> Quiet(x))\nTEXT:\tIf Fiona is red and Fiona is smart then Fiona is round.\nFOL:\t(Red(Fiona) & Smart(Fiona) -> Round(Fiona))\nTEXT:\tAll round, blue things are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, red things are kind.\nFOL:\tall x. (Quiet(x) & Red(x) -> Kind(x))\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tAll round things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tRough, blue things are kind.\nFOL:\tall x. (Rough(x) & Blue(x) -> Kind(x))\nTEXT:\tIf something is smart and kind then it is quiet.\nFOL:\tall x. (Smart(x) & Kind(x) -> Quiet(x))\nTEXT:\tIf Fiona is red and Fiona is smart then Fiona is round.\nFOL:\t(Red(Fiona) & Smart(Fiona)) -> Round(Fiona)\nTEXT:\tAll round, blue things are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, red things are kind.\nFOL:\tall x. (Quiet(x) & Red(x) -> Kind(x))\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tAll round things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tRough, blue things are kind.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Kind(x))\nTEXT:\tIf something is smart and kind then it is quiet.\nFOL:\tall x. ((Smart(x) & Kind(x)) -> Quiet(x))\nTEXT:\tIf Fiona is red and Fiona is smart then Fiona is round.\nFOL:\t((Red(Fiona) & Smart(Fiona)) -> Round(Fiona))\nTEXT:\tAll round, blue things are rough.\nFOL:\tall x. ((Round(x) & Blue(x)) -> Rough(x))\nTEXT:\tQuiet, red things are kind.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> Kind(x))\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tAll round things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tRough, blue things are kind.\nFOL:\tall x. (Rough(x) & Blue(x) -> Kind(x))\nTEXT:\tIf something is smart and kind then it is quiet.\nFOL:\tall x. (Smart(x) & Kind(x) -> Quiet(x))\nTEXT:\tIf Fiona is red and Fiona is smart then Fiona is round.\nFOL:\t(Red(Fiona) & Smart(Fiona) -> Round(Fiona))\nTEXT:\tAll round, blue things are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, red things are kind.\nFOL:\tall x. (Quiet(x) & Red(x) -> Kind(x))\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tAll round things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tRough, blue things are kind.\nFOL:\tall x. (Rough(x) & Blue(x) -> Kind(x))\nTEXT:\tIf something is smart and kind then it is quiet.\nFOL:\tall x. (Smart(x) & Kind(x) -> Quiet(x))\nTEXT:\tIf Fiona is red and Fiona is smart then Fiona is round.\nFOL:\t(Red(Fiona) & Smart(Fiona) -> Round(Fiona))\nTEXT:\tAll round, blue things are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, red things are kind.\nFOL:\tall x. (Quiet(x) & Red(x) -> Kind(x))\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle needs the dog.\nFOL:\tNeeds(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bald eagle.\nFOL:\tNeeds(Dog, BaldEagle)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tIf the bald eagle is round and the bald eagle visits the bear then the bald eagle sees the lion.\nFOL:\tall x. (BaldEagle(x) & Round(x) & Visits(x, Bear) -> Sees(x, Lion))\nTEXT:\tIf the bald eagle visits the dog then the dog sees the bear.\nFOL:\tall x. (BaldEagle(x) & Visits(x, Dog) -> Sees(Dog, Bear))\nTEXT:\tIf someone visits the dog then they see the dog.\nFOL:\tall x. (Visits(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the lion needs the dog and the dog sees the bald eagle then the dog needs the bear.\nFOL:\tall x. (Lion(x) & Needs(x, Dog) & Sees(Dog, BaldEagle) -> Needs(Dog, Bear))\nTEXT:\tIf someone is kind and they visit the lion then they see the bald eagle.\nFOL:\tall x. (Kind(x) & Visits(x, Lion) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is kind then they see the dog.\nFOL:\tall x. (Kind(x) -> Sees(x, Dog))\nTEXT:\tIf someone sees the lion then they visit the dog.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf someone is kind and they see the bald eagle then the bald eagle is round.\nFOL:\tall x. (Kind(x) & Sees(x, BaldEagle) -> Round(BaldEagle))\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle needs the dog.\nFOL:\tNeeds(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bald eagle.\nFOL:\tNeeds(Dog, BaldEagle)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tIf the bald eagle is round and the bald eagle visits the bear then the bald eagle sees the lion.\nFOL:\t(Round(BaldEagle) & Visits(BaldEagle, Bear)) -> Sees(BaldEagle, Lion)\nTEXT:\tIf the bald eagle visits the dog then the dog sees the bear.\nFOL:\tVisits(BaldEagle, Dog) -> Sees(Dog, Bear)\nTEXT:\tIf someone visits the dog then they see the dog.\nFOL:\tall x. Visits(x, Dog) -> Sees(x, Dog)\nTEXT:\tIf the lion needs the dog and the dog sees the bald eagle then the dog needs the bear.\nFOL:\t(Needs(Lion, Dog) & Sees(Dog, BaldEagle)) -> Needs(Dog, Bear)\nTEXT:\tIf someone is kind and they visit the lion then they see the bald eagle.\nFOL:\tall x. (Kind(x) & Visits(x, Lion)) -> Sees(x, BaldEagle)\nTEXT:\tIf someone is kind then they see the dog.\nFOL:\tall x. Kind(x) -> Sees(x, Dog)\nTEXT:\tIf someone sees the lion then they visit the dog.\nFOL:\tall x. Sees(x, Lion) -> Visits(x, Dog)\nTEXT:\tIf someone is kind and they see the bald eagle then the bald eagle is round.\nFOL:\tall x. (Kind(x) & Sees(x, BaldEagle)) -> Round(BaldEagle)\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle needs the dog.\nFOL:\tNeeds(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bald eagle.\nFOL:\tNeeds(Dog, BaldEagle)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tIf the bald eagle is round and the bald eagle visits the bear then the bald eagle sees the lion.\nFOL:\t((Round(BaldEagle) & Visits(BaldEagle, Bear)) -> Sees(BaldEagle, Lion))\nTEXT:\tIf the bald eagle visits the dog then the dog sees the bear.\nFOL:\t(Visits(BaldEagle, Dog) -> Sees(Dog, Bear))\nTEXT:\tIf someone visits the dog then they see the dog.\nFOL:\tall x. (Visits(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the lion needs the dog and the dog sees the bald eagle then the dog needs the bear.\nFOL:\t((Needs(Lion, Dog) & Sees(Dog, BaldEagle)) -> Needs(Dog, Bear))\nTEXT:\tIf someone is kind and they visit the lion then they see the bald eagle.\nFOL:\tall x. ((Kind(x) & Visits(x, Lion)) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is kind then they see the dog.\nFOL:\tall x. (Kind(x) -> Sees(x, Dog))\nTEXT:\tIf someone sees the lion then they visit the dog.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf someone is kind and they see the bald eagle then the bald eagle is round.\nFOL:\tall x. ((Kind(x) & Sees(x, BaldEagle)) -> Round(BaldEagle))\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle needs the dog.\nFOL:\tNeeds(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bald eagle.\nFOL:\tNeeds(Dog, BaldEagle)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tIf the bald eagle is round and the bald eagle visits the bear then the bald eagle sees the lion.\nFOL:\tall x. ((Round(x) & Visits(x, Bear) & BaldEagle(x)) -> Sees(x, Lion))\nTEXT:\tIf the bald eagle visits the dog then the dog sees the bear.\nFOL:\tall x. ((Visits(x, Dog) & BaldEagle(x)) -> Sees(Dog, Bear))\nTEXT:\tIf someone visits the dog then they see the dog.\nFOL:\tall x. (Visits(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the lion needs the dog and the dog sees the bald eagle then the dog needs the bear.\nFOL:\tall x. ((Needs(x, Dog) & Sees(Dog, BaldEagle) & Lion(x)) -> Needs(Dog, Bear))\nTEXT:\tIf someone is kind and they visit the lion then they see the bald eagle.\nFOL:\tall x. ((Kind(x) & Visits(x, Lion)) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is kind then they see the dog.\nFOL:\tall x. (Kind(x) -> Sees(x, Dog))\nTEXT:\tIf someone sees the lion then they visit the dog.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf someone is kind and they see the bald eagle then the bald eagle is round.\nFOL:\tall x. ((Kind(x) & Sees(x, BaldEagle)) -> Round(BaldEagle))\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle needs the dog.\nFOL:\tNeeds(BaldEagle, Dog)\nTEXT:\tThe bald eagle visits the bear.\nFOL:\tVisits(BaldEagle, Bear)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog needs the bald eagle.\nFOL:\tNeeds(Dog, BaldEagle)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tIf the bald eagle is round and the bald eagle visits the bear then the bald eagle sees the lion.\nFOL:\tall x. ((Round(x) & Visits(x, Bear)) -> Sees(x, Lion))\nTEXT:\tIf the bald eagle visits the dog then the dog sees the bear.\nFOL:\tall x. (Visits(x, Dog) -> Sees(Dog, Bear))\nTEXT:\tIf someone visits the dog then they see the dog.\nFOL:\tall x. (Visits(x, Dog) -> Sees(x, Dog))\nTEXT:\tIf the lion needs the dog and the dog sees the bald eagle then the dog needs the bear.\nFOL:\tall x. ((Needs(Lion, Dog) & Sees(Dog, x)) -> Needs(Dog, Bear))\nTEXT:\tIf someone is kind and they visit the lion then they see the bald eagle.\nFOL:\tall x. ((Kind(x) & Visits(x, Lion)) -> Sees(x, BaldEagle))\nTEXT:\tIf someone is kind then they see the dog.\nFOL:\tall x. (Kind(x) -> Sees(x, Dog))\nTEXT:\tIf someone sees the lion then they visit the dog.\nFOL:\tall x. (Sees(x, Lion) -> Visits(x, Dog))\nTEXT:\tIf someone is kind and they see the bald eagle then the bald eagle is round.\nFOL:\tall x. ((Kind(x) & Sees(x, BaldEagle)) -> Round(BaldEagle))\nTEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit does not like the cow.\nFOL:\t-Like(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tThe squirrel visits the cat.\nFOL:\tVisits(Squirrel, Cat)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf someone visits the cat and the cat visits the squirrel then the cat does not eat the cow.\nFOL:\tall x. ((Visits(x, Cat) & Visits(Cat, Squirrel)) -> -Eats(Cat, Cow))\nTEXT:\tIf someone likes the squirrel then the squirrel visits the cow.\nFOL:\tall x. ((Likes(x, Squirrel)) -> Visits(Squirrel, Cow))\nTEXT:\tIf someone eats the cat and the cat eats the cow then the cow visits the rabbit.\nFOL:\tall x. ((Eats(x, Cat) & Eats(Cat, Cow)) -> Visits(Cow, Rabbit))\nTEXT:\tIf someone likes the rabbit and they are not round then they do not like the cat.\nFOL:\tall x. ((Likes(x, Rabbit) & -Round(x)) -> -Likes(x, Cat))\nTEXT:\tIf someone is big then they like the squirrel.\nFOL:\tall x. ((Big(x)) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the cat then the cat is not nice.\nFOL:\tall x. ((Likes(x, Cat)) -> -Nice(Cat))\nTEXT:\tIf someone visits the cow and the cow likes the squirrel then the cow visits the cat.\nFOL:\tall x. ((Visits(x, Cow) & Likes(Cow, Squirrel)) -> Visits(Cow, Cat))\nTEXT:\tIf someone visits the cow then the cow is big.\nFOL:\tall x. ((Visits(x, Cow)) -> Big(Cow))\nTEXT:\tIf someone is round and they like the cat then they are nice.\nFOL:\tall x. ((Round(x) & Likes(x, Cat)) -> Nice(x))\nTEXT:\tThe cat does not like the squirrel.\nFOL:\t-Likes(Cat, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit does not like the cow.\nFOL:\t- Likes(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tThe squirrel visits the cat.\nFOL:\tVisits(Squirrel, Cat)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf someone visits the cat and the cat visits the squirrel then the cat does not eat the cow.\nFOL:\tall x. ((Visits(x, Cat) & Visits(Cat, Squirrel)) -> -Eats(Cat, Cow))\nTEXT:\tIf someone likes the squirrel then the squirrel visits the cow.\nFOL:\tall x. (Likes(x, Squirrel) -> Visits(Squirrel, Cow))\nTEXT:\tIf someone eats the cat and the cat eats the cow then the cow visits the rabbit.\nFOL:\tall x. ((Eats(x, Cat) & Eats(Cat, Cow)) -> Visits(Cow, Rabbit))\nTEXT:\tIf someone likes the rabbit and they are not round then they do not like the cat.\nFOL:\tall x. ((Likes(x, Rabbit) & -Round(x)) -> -Likes(x, Cat))\nTEXT:\tIf someone is big then they like the squirrel.\nFOL:\tall x. (Big(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the cat then the cat is not nice.\nFOL:\tall x. (Likes(x, Cat) -> -Nice(Cat))\nTEXT:\tIf someone visits the cow and the cow likes the squirrel then the cow visits the cat.\nFOL:\tall x. ((Visits(x, Cow) & Likes(Cow, Squirrel)) -> Visits(Cow, Cat))\nTEXT:\tIf someone visits the cow then the cow is big.\nFOL:\tall x. (Visits(x, Cow) -> Big(Cow))\nTEXT:\tIf someone is round and they like the cat then they are nice.\nFOL:\tall x. ((Round(x) & Likes(x, Cat)) -> Nice(x))\nTEXT:\tThe cat does not like the squirrel.\nFOL:\t-Likes(Cat, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit does not like the cow.\nFOL:\t-Likes(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tThe squirrel visits the cat.\nFOL:\tVisits(Squirrel, Cat)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf someone visits the cat and the cat visits the squirrel then the cat does not eat the cow.\nFOL:\tall x. (Visits(x, Cat) & Visits(Cat, Squirrel) -> -Eats(Cat, Cow))\nTEXT:\tIf someone likes the squirrel then the squirrel visits the cow.\nFOL:\tall x. (Likes(x, Squirrel) -> Visits(Squirrel, Cow))\nTEXT:\tIf someone eats the cat and the cat eats the cow then the cow visits the rabbit.\nFOL:\tall x. (Eats(x, Cat) & Eats(Cat, Cow) -> Visits(Cow, Rabbit))\nTEXT:\tIf someone likes the rabbit and they are not round then they do not like the cat.\nFOL:\tall x. (Likes(x, Rabbit) & -Round(x) -> -Likes(x, Cat))\nTEXT:\tIf someone is big then they like the squirrel.\nFOL:\tall x. (Big(x) -> Likes(x, Squirrel))\nTEXT:\tIf someone likes the cat then the cat is not nice.\nFOL:\tall x. (Likes(x, Cat) -> -Nice(Cat))\nTEXT:\tIf someone visits the cow and the cow likes the squirrel then the cow visits the cat.\nFOL:\tall x. (Visits(x, Cow) & Likes(Cow, Squirrel) -> Visits(Cow, Cat))\nTEXT:\tIf someone visits the cow then the cow is big.\nFOL:\tall x. (Visits(x, Cow) -> Big(Cow))\nTEXT:\tIf someone is round and they like the cat then they are nice.\nFOL:\tall x. (Round(x) & Likes(x, Cat) -> Nice(x))\nTEXT:\tThe cat does not like the squirrel.\nFOL:\t-Likes(Cat, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit does not like the cow.\nFOL:\t-Like(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisit(Rabbit, Cat)\nTEXT:\tThe squirrel visits the cat.\nFOL:\tVisit(Squirrel, Cat)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisit(Squirrel, Rabbit)\nTEXT:\tIf someone visits the cat and the cat visits the squirrel then the cat does not eat the cow.\nFOL:\tall x. ((Visit(x, Cat) & Visit(Cat, Squirrel)) -> -Eat(Cat, Cow))\nTEXT:\tIf someone likes the squirrel then the squirrel visits the cow.\nFOL:\tall x. (Like(x, Squirrel) -> Visit(Squirrel, Cow))\nTEXT:\tIf someone eats the cat and the cat eats the cow then the cow visits the rabbit.\nFOL:\tall x. ((Eat(x, Cat) & Eat(Cat, Cow)) -> Visit(Cow, Rabbit))\nTEXT:\tIf someone likes the rabbit and they are not round then they do not like the cat.\nFOL:\tall x. ((Like(x, Rabbit) & -Round(x)) -> -Like(x, Cat))\nTEXT:\tIf someone is big then they like the squirrel.\nFOL:\tall x. (Big(x) -> Like(x, Squirrel))\nTEXT:\tIf someone likes the cat then the cat is not nice.\nFOL:\tall x. (Like(x, Cat) -> -Nice(Cat))\nTEXT:\tIf someone visits the cow and the cow likes the squirrel then the cow visits the cat.\nFOL:\tall x. ((Visit(x, Cow) & Like(Cow, Squirrel)) -> Visit(Cow, Cat))\nTEXT:\tIf someone visits the cow then the cow is big.\nFOL:\tall x. (Visit(x, Cow) -> Big(Cow))\nTEXT:\tIf someone is round and they like the cat then they are nice.\nFOL:\tall x. ((Round(x) & Like(x, Cat)) -> Nice(x))\nTEXT:\tThe cat does not like the squirrel.\nFOL:\t-Like(Cat, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is big.\nFOL:\tBig(Cat)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit does not like the cow.\nFOL:\t\u00acLikes(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cat.\nFOL:\tVisits(Rabbit, Cat)\nTEXT:\tThe squirrel visits the cat.\nFOL:\tVisits(Squirrel, Cat)\nTEXT:\tThe squirrel visits the rabbit.\nFOL:\tVisits(Squirrel, Rabbit)\nTEXT:\tIf someone visits the cat and the cat visits the squirrel then the cat does not eat the cow.\nFOL:\t\u2200x. (Visits(x, Cat) \u2227 Visits(Cat, Squirrel) \u2192 \u00acEats(Cat, Cow))\nTEXT:\tIf someone likes the squirrel then the squirrel visits the cow.\nFOL:\t\u2200x. (Likes(x, Squirrel) \u2192 Visits(Squirrel, Cow))\nTEXT:\tIf someone eats the cat and the cat eats the cow then the cow visits the rabbit.\nFOL:\t\u2200x. (Eats(x, Cat) \u2227 Eats(Cat, Cow) \u2192 Visits(Cow, Rabbit))\nTEXT:\tIf someone likes the rabbit and they are not round then they do not like the cat.\nFOL:\t\u2200x. (Likes(x, Rabbit) \u2227 \u00acRound(x) \u2192 \u00acLikes(x, Cat))\nTEXT:\tIf someone is big then they like the squirrel.\nFOL:\t\u2200x. (Big(x) \u2192 Likes(x, Squirrel))\nTEXT:\tIf someone likes the cat then the cat is not nice.\nFOL:\t\u2200x. (Likes(x, Cat) \u2192 \u00acNice(Cat))\nTEXT:\tIf someone visits the cow and the cow likes the squirrel then the cow visits the cat.\nFOL:\t\u2200x. (Visits(x, Cow) \u2227 Likes(Cow, Squirrel) \u2192 Visits(Cow, Cat))\nTEXT:\tIf someone visits the cow then the cow is big.\nFOL:\t\u2200x. (Visits(x, Cow) \u2192 Big(Cow))\nTEXT:\tIf someone is round and they like the cat then they are nice.\nFOL:\t\u2200x. (Round(x) \u2227 Likes(x, Cat) \u2192 Nice(x))\nTEXT:\tThe cat does not like the squirrel.\nFOL:\t\u00acLikes(Cat, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe lion does not see the rabbit.\nFOL:\t-Sees(Lion, Rabbit)\nTEXT:\tThe lion does not see the squirrel.\nFOL:\t-Sees(Lion, Squirrel)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tIf something needs the rabbit then the rabbit is red.\nFOL:\tall x. (Needs(x, Rabbit) -> Red(Rabbit))\nTEXT:\tIf something sees the rabbit and it does not see the bear then the rabbit is not red.\nFOL:\tall x. (Sees(x, Rabbit) & -Sees(x, Bear) -> -Red(Rabbit))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf something sees the rabbit and the rabbit is green then it needs the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) & Green(Rabbit) -> Needs(x, Squirrel))\nTEXT:\tIf something is green then it chases the bear.\nFOL:\tall x. (Green(x) -> Chases(x, Bear))\nTEXT:\tIf something sees the bear then it does not see the rabbit.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Rabbit))\nTEXT:\tAll red, big things are kind.\nFOL:\tall x. (Red(x) & Big(x) -> Kind(x))\nTEXT:\tIf something is big and it chases the lion then it sees the lion.\nFOL:\tall x. (Big(x) & Chases(x, Lion) -> Sees(x, Lion))\nTEXT:\tIf something chases the bear then it needs the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Rabbit))\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe lion does not see the rabbit.\nFOL:\t-Sees(Lion, Rabbit)\nTEXT:\tThe lion does not see the squirrel.\nFOL:\t-Sees(Lion, Squirrel)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tIf something needs the rabbit then the rabbit is red.\nFOL:\tall x. (Needs(x, Rabbit) -> Red(Rabbit))\nTEXT:\tIf something sees the rabbit and it does not see the bear then the rabbit is not red.\nFOL:\tall x. ((Sees(x, Rabbit) & -Sees(x, Bear)) -> -Red(Rabbit))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf something sees the rabbit and the rabbit is green then it needs the squirrel.\nFOL:\tall x. ((Sees(x, Rabbit) & Green(Rabbit)) -> Needs(x, Squirrel))\nTEXT:\tIf something is green then it chases the bear.\nFOL:\tall x. (Green(x) -> Chases(x, Bear))\nTEXT:\tIf something sees the bear then it does not see the rabbit.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Rabbit))\nTEXT:\tAll red, big things are kind.\nFOL:\tall x. ((Red(x) & Big(x)) -> Kind(x))\nTEXT:\tIf something is big and it chases the lion then it sees the lion.\nFOL:\tall x. ((Big(x) & Chases(x, Lion)) -> Sees(x, Lion))\nTEXT:\tIf something chases the bear then it needs the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Rabbit))\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe lion does not see the rabbit.\nFOL:\t-Sees(Lion, Rabbit)\nTEXT:\tThe lion does not see the squirrel.\nFOL:\t-Sees(Lion, Squirrel)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tIf something needs the rabbit then the rabbit is red.\nFOL:\tall x. (Needs(x, Rabbit) -> Red(Rabbit))\nTEXT:\tIf something sees the rabbit and it does not see the bear then the rabbit is not red.\nFOL:\tall x. ((Sees(x, Rabbit) & -Sees(x, Bear)) -> -Red(Rabbit))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf something sees the rabbit and the rabbit is green then it needs the squirrel.\nFOL:\tall x. ((Sees(x, Rabbit) & Green(Rabbit)) -> Needs(x, Squirrel))\nTEXT:\tIf something is green then it chases the bear.\nFOL:\tall x. (Green(x) -> Chases(x, Bear))\nTEXT:\tIf something sees the bear then it does not see the rabbit.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Rabbit))\nTEXT:\tAll red, big things are kind.\nFOL:\tall x. (Red(x) & Big(x) -> Kind(x))\nTEXT:\tIf something is big and it chases the lion then it sees the lion.\nFOL:\tall x. ((Big(x) & Chases(x, Lion)) -> Sees(x, Lion))\nTEXT:\tIf something chases the bear then it needs the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Rabbit))\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe lion does not see the rabbit.\nFOL:\t-Sees(Lion, Rabbit)\nTEXT:\tThe lion does not see the squirrel.\nFOL:\t-Sees(Lion, Squirrel)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tIf something needs the rabbit then the rabbit is red.\nFOL:\tall x. (Needs(x, Rabbit) -> Red(Rabbit))\nTEXT:\tIf something sees the rabbit and it does not see the bear then the rabbit is not red.\nFOL:\tall x. (Sees(x, Rabbit) & -Sees(x, Bear) -> -Red(Rabbit))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf something sees the rabbit and the rabbit is green then it needs the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) & Green(Rabbit) -> Needs(x, Squirrel))\nTEXT:\tIf something is green then it chases the bear.\nFOL:\tall x. (Green(x) -> Chases(x, Bear))\nTEXT:\tIf something sees the bear then it does not see the rabbit.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Rabbit))\nTEXT:\tAll red, big things are kind.\nFOL:\tall x. (Red(x) & Big(x) -> Kind(x))\nTEXT:\tIf something is big and it chases the lion then it sees the lion.\nFOL:\tall x. (Big(x) & Chases(x, Lion) -> Sees(x, Lion))\nTEXT:\tIf something chases the bear then it needs the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Rabbit))\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear chases the lion.\nFOL:\tChases(Bear, Lion)\nTEXT:\tThe bear chases the squirrel.\nFOL:\tChases(Bear, Squirrel)\nTEXT:\tThe bear is cold.\nFOL:\tCold(Bear)\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nTEXT:\tThe bear needs the squirrel.\nFOL:\tNeeds(Bear, Squirrel)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe lion does not see the rabbit.\nFOL:\t-Sees(Lion, Rabbit)\nTEXT:\tThe lion does not see the squirrel.\nFOL:\t-Sees(Lion, Squirrel)\nTEXT:\tThe rabbit needs the lion.\nFOL:\tNeeds(Rabbit, Lion)\nTEXT:\tThe squirrel is not big.\nFOL:\t-Big(Squirrel)\nTEXT:\tIf something needs the rabbit then the rabbit is red.\nFOL:\tall x. (Needs(x, Rabbit) -> Red(Rabbit))\nTEXT:\tIf something sees the rabbit and it does not see the bear then the rabbit is not red.\nFOL:\tall x. (Sees(x, Rabbit) & -Sees(x, Bear) -> -Red(Rabbit))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf something sees the rabbit and the rabbit is green then it needs the squirrel.\nFOL:\tall x. (Sees(x, Rabbit) & Green(Rabbit) -> Needs(x, Squirrel))\nTEXT:\tIf something is green then it chases the bear.\nFOL:\tall x. (Green(x) -> Chases(x, Bear))\nTEXT:\tIf something sees the bear then it does not see the rabbit.\nFOL:\tall x. (Sees(x, Bear) -> -Sees(x, Rabbit))\nTEXT:\tAll red, big things are kind.\nFOL:\tall x. (Red(x) & Big(x) -> Kind(x))\nTEXT:\tIf something is big and it chases the lion then it sees the lion.\nFOL:\tall x. (Big(x) & Chases(x, Lion) -> Sees(x, Lion))\nTEXT:\tIf something chases the bear then it needs the rabbit.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Rabbit))\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tGreen, blue things are young.\nFOL:\tall x. (Green(x) & Blue(x) -> Young(x))\nTEXT:\tIf something is furry and young then it is nice.\nFOL:\tall x. (Furry(x) & Young(x) -> Nice(x))\nTEXT:\tAll big, round things are nice.\nFOL:\tall x. (Big(x) & Round(x) -> Nice(x))\nTEXT:\tAll nice, blue things are green.\nFOL:\tall x. (Nice(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is green and young then it is not furry.\nFOL:\tall x. (Green(x) & Young(x) -> -Furry(x))\nTEXT:\tIf Harry is young then Harry is nice.\nFOL:\tYoung(Harry) -> Nice(Harry)\nTEXT:\tBig things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tBig things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tGreen, blue things are young.\nFOL:\tall x. (Green(x) & Blue(x) -> Young(x))\nTEXT:\tIf something is furry and young then it is nice.\nFOL:\tall x. (Furry(x) & Young(x) -> Nice(x))\nTEXT:\tAll big, round things are nice.\nFOL:\tall x. (Big(x) & Round(x) -> Nice(x))\nTEXT:\tAll nice, blue things are green.\nFOL:\tall x. (Nice(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is green and young then it is not furry.\nFOL:\tall x. (Green(x) & Young(x) -> -Furry(x))\nTEXT:\tIf Harry is young then Harry is nice.\nFOL:\tYoung(Harry) -> Nice(Harry)\nTEXT:\tBig things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tBig things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tGreen, blue things are young.\nFOL:\tall x. ((Green(x) & Blue(x)) -> Young(x))\nTEXT:\tIf something is furry and young then it is nice.\nFOL:\tall x. ((Furry(x) & Young(x)) -> Nice(x))\nTEXT:\tAll big, round things are nice.\nFOL:\tall x. ((Big(x) & Round(x)) -> Nice(x))\nTEXT:\tAll nice, blue things are green.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Green(x))\nTEXT:\tIf something is green and young then it is not furry.\nFOL:\tall x. ((Green(x) & Young(x)) -> -Furry(x))\nTEXT:\tIf Harry is young then Harry is nice.\nFOL:\tYoung(Harry) -> Nice(Harry)\nTEXT:\tBig things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tBig things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tGreen, blue things are young.\nFOL:\tall x. ((Green(x) & Blue(x)) -> Young(x))\nTEXT:\tIf something is furry and young then it is nice.\nFOL:\tall x. ((Furry(x) & Young(x)) -> Nice(x))\nTEXT:\tAll big, round things are nice.\nFOL:\tall x. ((Big(x) & Round(x)) -> Nice(x))\nTEXT:\tAll nice, blue things are green.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Green(x))\nTEXT:\tIf something is green and young then it is not furry.\nFOL:\tall x. ((Green(x) & Young(x)) -> -Furry(x))\nTEXT:\tIf Harry is young then Harry is nice.\nFOL:\tYoung(Harry) -> Nice(Harry)\nTEXT:\tBig things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tBig things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is not round.\nFOL:\t-Round(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tGreen, blue things are young.\nFOL:\tall x. (Green(x) & Blue(x) -> Young(x))\nTEXT:\tIf something is furry and young then it is nice.\nFOL:\tall x. (Furry(x) & Young(x) -> Nice(x))\nTEXT:\tAll big, round things are nice.\nFOL:\tall x. (Big(x) & Round(x) -> Nice(x))\nTEXT:\tAll nice, blue things are green.\nFOL:\tall x. (Nice(x) & Blue(x) -> Green(x))\nTEXT:\tIf something is green and young then it is not furry.\nFOL:\tall x. (Green(x) & Young(x) -> -Furry(x))\nTEXT:\tIf Harry is young then Harry is nice.\nFOL:\tYoung(Harry) -> Nice(Harry)\nTEXT:\tBig things are blue.\nFOL:\tall x. (Big(x) -> Blue(x))\nTEXT:\tBig things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the cow.\nFOL:\tLikes(Squirrel, Cow)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf the dog likes the squirrel and the dog sees the squirrel then the dog is round.\nFOL:\t(Likes(Dog, Squirrel) & Sees(Dog, Squirrel)) -> Round(Dog)\nTEXT:\tIf something is rough then it eats the squirrel.\nFOL:\tall x. (Rough(x) -> Eats(x, Squirrel))\nTEXT:\tIf something sees the cow and it is blue then the cow sees the dog.\nFOL:\tall x. (Sees(x, Cow) & Blue(x) -> Sees(Cow, Dog))\nTEXT:\tIf something likes the bald eagle then it eats the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something eats the dog then it is blue.\nFOL:\tall x. (Eats(x, Dog) -> Blue(x))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf the dog likes the bald eagle then the bald eagle likes the squirrel.\nFOL:\t(Likes(Dog, BaldEagle) -> Likes(BaldEagle, Squirrel))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something sees the dog then it eats the bald eagle.\nFOL:\tall x. (Sees(x, Dog) -> Eats(x, BaldEagle))\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the cow.\nFOL:\tLikes(Squirrel, Cow)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf the dog likes the squirrel and the dog sees the squirrel then the dog is round.\nFOL:\tLikes(Dog, Squirrel) & Sees(Dog, Squirrel) -> Round(Dog)\nTEXT:\tIf something is rough then it eats the squirrel.\nFOL:\tall x. (Rough(x) -> Eats(x, Squirrel))\nTEXT:\tIf something sees the cow and it is blue then the cow sees the dog.\nFOL:\tall x. (Sees(x, Cow) & Blue(x) -> Sees(Cow, Dog))\nTEXT:\tIf something likes the bald eagle then it eats the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something eats the dog then it is blue.\nFOL:\tall x. (Eats(x, Dog) -> Blue(x))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf the dog likes the bald eagle then the bald eagle likes the squirrel.\nFOL:\tLikes(Dog, BaldEagle) -> Likes(BaldEagle, Squirrel)\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something sees the dog then it eats the bald eagle.\nFOL:\tall x. (Sees(x, Dog) -> Eats(x, BaldEagle))\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the cow.\nFOL:\tLikes(Squirrel, Cow)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf the dog likes the squirrel and the dog sees the squirrel then the dog is round.\nFOL:\t((Likes(Dog, Squirrel) & Sees(Dog, Squirrel)) -> Round(Dog))\nTEXT:\tIf something is rough then it eats the squirrel.\nFOL:\tall x. (Rough(x) -> Eats(x, Squirrel))\nTEXT:\tIf something sees the cow and it is blue then the cow sees the dog.\nFOL:\tall x. ((Sees(x, Cow) & Blue(x)) -> Sees(Cow, Dog))\nTEXT:\tIf something likes the bald eagle then it eats the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something eats the dog then it is blue.\nFOL:\tall x. (Eats(x, Dog) -> Blue(x))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf the dog likes the bald eagle then the bald eagle likes the squirrel.\nFOL:\t(Likes(Dog, BaldEagle) -> Likes(BaldEagle, Squirrel))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something sees the dog then it eats the bald eagle.\nFOL:\tall x. (Sees(x, Dog) -> Eats(x, BaldEagle))\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the cow.\nFOL:\tLikes(Squirrel, Cow)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf the dog likes the squirrel and the dog sees the squirrel then the dog is round.\nFOL:\tall x. (Likes(x, Squirrel) & Sees(x, Squirrel) -> Round(x))\nTEXT:\tIf something is rough then it eats the squirrel.\nFOL:\tall x. (Rough(x) -> Eats(x, Squirrel))\nTEXT:\tIf something sees the cow and it is blue then the cow sees the dog.\nFOL:\tall x. (Sees(x, Cow) & Blue(x) -> Sees(Cow, Dog))\nTEXT:\tIf something likes the bald eagle then it eats the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something eats the dog then it is blue.\nFOL:\tall x. (Eats(x, Dog) -> Blue(x))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf the dog likes the bald eagle then the bald eagle likes the squirrel.\nFOL:\tall x. (Likes(Dog, x) -> Likes(x, Squirrel))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something sees the dog then it eats the bald eagle.\nFOL:\tall x. (Sees(x, Dog) -> Eats(x, BaldEagle))\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the dog.\nFOL:\tSees(BaldEagle, Dog)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow sees the bald eagle.\nFOL:\tSees(Cow, BaldEagle)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\nTEXT:\tThe dog likes the cow.\nFOL:\tLikes(Dog, Cow)\nTEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe squirrel eats the bald eagle.\nFOL:\tEats(Squirrel, BaldEagle)\nTEXT:\tThe squirrel is red.\nFOL:\tRed(Squirrel)\nTEXT:\tThe squirrel likes the cow.\nFOL:\tLikes(Squirrel, Cow)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel sees the cow.\nFOL:\tSees(Squirrel, Cow)\nTEXT:\tIf the dog likes the squirrel and the dog sees the squirrel then the dog is round.\nFOL:\tall x. (Dog(x) & Likes(x, Squirrel) & Sees(x, Squirrel) -> Round(x))\nTEXT:\tIf something is rough then it eats the squirrel.\nFOL:\tall x. (Rough(x) -> Eats(x, Squirrel))\nTEXT:\tIf something sees the cow and it is blue then the cow sees the dog.\nFOL:\tall x. (Sees(x, Cow) & Blue(x) -> Sees(Cow, Dog))\nTEXT:\tIf something likes the bald eagle then it eats the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something eats the dog then it is blue.\nFOL:\tall x. (Eats(x, Dog) -> Blue(x))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf the dog likes the bald eagle then the bald eagle likes the squirrel.\nFOL:\tall x. (Dog(x) & Likes(x, BaldEagle) -> Likes(BaldEagle, Squirrel))\nTEXT:\tIf something eats the bald eagle then it eats the dog.\nFOL:\tall x. (Eats(x, BaldEagle) -> Eats(x, Dog))\nTEXT:\tIf something sees the dog then it eats the bald eagle.\nFOL:\tall x. (Sees(x, Dog) -> Eats(x, BaldEagle))\nTEXT:\tThe cow eats the squirrel.\nFOL:\tEats(Cow, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tIf something is cold and green then it is kind.\nFOL:\tall x. (Cold(x) & Green(x) -> Kind(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is quiet and kind then it is white.\nFOL:\tall x. (Quiet(x) & Kind(x) -> White(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Dave is cold then Dave is kind.\nFOL:\tCold(Dave) -> Kind(Dave)\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tAll cold, white things are young.\nFOL:\tall x. (Cold(x) & White(x) -> Young(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tIf something is cold and green then it is kind.\nFOL:\tall x. (Cold(x) & Green(x) -> Kind(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is quiet and kind then it is white.\nFOL:\tall x. (Quiet(x) & Kind(x) -> White(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Dave is cold then Dave is kind.\nFOL:\tCold(Dave) -> Kind(Dave)\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tAll cold, white things are young.\nFOL:\tall x. ((Cold(x) & White(x)) -> Young(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tIf something is cold and green then it is kind.\nFOL:\tall x. ((Cold(x) & Green(x)) -> Kind(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is quiet and kind then it is white.\nFOL:\tall x. ((Quiet(x) & Kind(x)) -> White(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Dave is cold then Dave is kind.\nFOL:\tCold(Dave) -> Kind(Dave)\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tAll cold, white things are young.\nFOL:\tall x. ((Cold(x) & White(x)) -> Young(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tIf something is cold and green then it is kind.\nFOL:\tall x. (Cold(x) & Green(x) -> Kind(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is quiet and kind then it is white.\nFOL:\tall x. (Quiet(x) & Kind(x) -> White(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Dave is cold then Dave is kind.\nFOL:\t(Cold(Dave) -> Kind(Dave))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tAll cold, white things are young.\nFOL:\tall x. (Cold(x) & White(x) -> Young(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n", "TEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tIf something is cold and green then it is kind.\nFOL:\tall x. (Cold(x) & Green(x) -> Kind(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf something is cold then it is kind.\nFOL:\tall x. (Cold(x) -> Kind(x))\nTEXT:\tIf something is quiet and kind then it is white.\nFOL:\tall x. (Quiet(x) & Kind(x) -> White(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Dave is cold then Dave is kind.\nFOL:\tCold(Dave) -> Kind(Dave)\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tAll cold, white things are young.\nFOL:\tall x. ((Cold(x) & White(x)) -> Young(x))\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tAll smart people are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is blue and smart then they are kind.\nFOL:\tall x. (Blue(x) & Smart(x) -> Kind(x))\nTEXT:\tNice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf someone is kind and cold then they are furry.\nFOL:\tall x. (Kind(x) & Cold(x) -> Furry(x))\nTEXT:\tAll furry, kind people are smart.\nFOL:\tall x. (Furry(x) & Kind(x) -> Smart(x))\nTEXT:\tSmart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tIf Gary is kind and Gary is not blue then Gary is cold.\nFOL:\t(Kind(Gary) & -Blue(Gary)) -> Cold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tAll smart people are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is blue and smart then they are kind.\nFOL:\tall x. (Blue(x) & Smart(x) -> Kind(x))\nTEXT:\tNice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf someone is kind and cold then they are furry.\nFOL:\tall x. (Kind(x) & Cold(x) -> Furry(x))\nTEXT:\tAll furry, kind people are smart.\nFOL:\tall x. (Furry(x) & Kind(x) -> Smart(x))\nTEXT:\tSmart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tIf Gary is kind and Gary is not blue then Gary is cold.\nFOL:\t(Kind(Gary) & -Blue(Gary) -> Cold(Gary))\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tAll smart people are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is blue and smart then they are kind.\nFOL:\tall x. (Blue(x) & Smart(x) -> Kind(x))\nTEXT:\tNice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf someone is kind and cold then they are furry.\nFOL:\tall x. (Kind(x) & Cold(x) -> Furry(x))\nTEXT:\tAll furry, kind people are smart.\nFOL:\tall x. (Furry(x) & Kind(x) -> Smart(x))\nTEXT:\tSmart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tIf Gary is kind and Gary is not blue then Gary is cold.\nFOL:\t(Kind(Gary) & -Blue(Gary)) -> Cold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tAll smart people are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is blue and smart then they are kind.\nFOL:\tall x. (Blue(x) & Smart(x) -> Kind(x))\nTEXT:\tNice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf someone is kind and cold then they are furry.\nFOL:\tall x. (Kind(x) & Cold(x) -> Furry(x))\nTEXT:\tAll furry, kind people are smart.\nFOL:\tall x. (Furry(x) & Kind(x) -> Smart(x))\nTEXT:\tSmart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tIf Gary is kind and Gary is not blue then Gary is cold.\nFOL:\t(Kind(Gary) & -Blue(Gary) -> Cold(Gary))\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tAll smart people are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tIf someone is blue and smart then they are kind.\nFOL:\tall x. (Blue(x) & Smart(x) -> Kind(x))\nTEXT:\tNice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf someone is kind and cold then they are furry.\nFOL:\tall x. (Kind(x) & Cold(x) -> Furry(x))\nTEXT:\tAll furry, kind people are smart.\nFOL:\tall x. (Furry(x) & Kind(x) -> Smart(x))\nTEXT:\tSmart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tIf Gary is kind and Gary is not blue then Gary is cold.\nFOL:\t(Kind(Gary) & -Blue(Gary) -> Cold(Gary))\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe bald eagle does not need the dog.\nFOL:\t-Needs(BaldEagle, Dog)\nTEXT:\tThe cat likes the bald eagle.\nFOL:\tLikes(Cat, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf something is red and it needs the tiger then the tiger does not like the cat.\nFOL:\tall x. ((Red(x) & Needs(x, Tiger)) -> -Likes(Tiger, Cat))\nTEXT:\tIf something needs the dog and it eats the dog then it likes the dog.\nFOL:\tall x. ((Needs(x, Dog) & Eats(x, Dog)) -> Likes(x, Dog))\nTEXT:\tIf the tiger needs the dog and the dog is big then the tiger needs the bald eagle.\nFOL:\t((Needs(Tiger, Dog) & Big(Dog)) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the tiger then the tiger does not need the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the dog then the dog is cold.\nFOL:\tall x. (Needs(x, Dog) -> Cold(Dog))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something is cold then it needs the tiger.\nFOL:\tall x. (Cold(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the bald eagle and the bald eagle is big then it likes the tiger.\nFOL:\tall x. ((Likes(x, BaldEagle) & Big(BaldEagle)) -> Likes(x, Tiger))\nTEXT:\tIf something likes the bald eagle and it does not need the bald eagle then the bald eagle is big.\nFOL:\tall x. ((Likes(x, BaldEagle) & -Needs(x, BaldEagle)) -> Big(BaldEagle))\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe bald eagle does not need the dog.\nFOL:\t-Needs(BaldEagle, Dog)\nTEXT:\tThe cat likes the bald eagle.\nFOL:\tLikes(Cat, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf something is red and it needs the tiger then the tiger does not like the cat.\nFOL:\tall x. ((Red(x) & Needs(x, Tiger)) -> -Likes(Tiger, Cat))\nTEXT:\tIf something needs the dog and it eats the dog then it likes the dog.\nFOL:\tall x. ((Needs(x, Dog) & Eats(x, Dog)) -> Likes(x, Dog))\nTEXT:\tIf the tiger needs the dog and the dog is big then the tiger needs the bald eagle.\nFOL:\t((Needs(Tiger, Dog) & Big(Dog)) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the tiger then the tiger does not need the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the dog then the dog is cold.\nFOL:\tall x. (Needs(x, Dog) -> Cold(Dog))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something is cold then it needs the tiger.\nFOL:\tall x. (Cold(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the bald eagle and the bald eagle is big then it likes the tiger.\nFOL:\tall x. ((Likes(x, BaldEagle) & Big(BaldEagle)) -> Likes(x, Tiger))\nTEXT:\tIf something likes the bald eagle and it does not need the bald eagle then the bald eagle is big.\nFOL:\tall x. ((Likes(x, BaldEagle) & -Needs(x, BaldEagle)) -> Big(BaldEagle))\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe bald eagle does not need the dog.\nFOL:\t-Needs(BaldEagle, Dog)\nTEXT:\tThe cat likes the bald eagle.\nFOL:\tLikes(Cat, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf something is red and it needs the tiger then the tiger does not like the cat.\nFOL:\tall x. (Red(x) & Needs(x, Tiger) -> -Likes(Tiger, Cat))\nTEXT:\tIf something needs the dog and it eats the dog then it likes the dog.\nFOL:\tall x. (Needs(x, Dog) & Eats(x, Dog) -> Likes(x, Dog))\nTEXT:\tIf the tiger needs the dog and the dog is big then the tiger needs the bald eagle.\nFOL:\t(Needs(Tiger, Dog) & Big(Dog) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the tiger then the tiger does not need the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the dog then the dog is cold.\nFOL:\tall x. (Needs(x, Dog) -> Cold(Dog))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something is cold then it needs the tiger.\nFOL:\tall x. (Cold(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the bald eagle and the bald eagle is big then it likes the tiger.\nFOL:\tall x. (Likes(x, BaldEagle) & Big(BaldEagle) -> Likes(x, Tiger))\nTEXT:\tIf something likes the bald eagle and it does not need the bald eagle then the bald eagle is big.\nFOL:\tall x. (Likes(x, BaldEagle) & -Needs(x, BaldEagle) -> Big(BaldEagle))\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe bald eagle does not need the dog.\nFOL:\t-Needs(BaldEagle, Dog)\nTEXT:\tThe cat likes the bald eagle.\nFOL:\tLikes(Cat, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf something is red and it needs the tiger then the tiger does not like the cat.\nFOL:\tall x. ((Red(x) & Needs(x, Tiger)) -> -Likes(Tiger, Cat))\nTEXT:\tIf something needs the dog and it eats the dog then it likes the dog.\nFOL:\tall x. ((Needs(x, Dog) & Eats(x, Dog)) -> Likes(x, Dog))\nTEXT:\tIf the tiger needs the dog and the dog is big then the tiger needs the bald eagle.\nFOL:\t((Needs(Tiger, Dog) & Big(Dog)) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the tiger then the tiger does not need the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the dog then the dog is cold.\nFOL:\tall x. (Needs(x, Dog) -> Cold(Dog))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something is cold then it needs the tiger.\nFOL:\tall x. (Cold(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the bald eagle and the bald eagle is big then it likes the tiger.\nFOL:\tall x. ((Likes(x, BaldEagle) & Big(BaldEagle)) -> Likes(x, Tiger))\nTEXT:\tIf something likes the bald eagle and it does not need the bald eagle then the bald eagle is big.\nFOL:\tall x. ((Likes(x, BaldEagle) & -Needs(x, BaldEagle)) -> Big(BaldEagle))\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle likes the tiger.\nFOL:\tLikes(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not need the cat.\nFOL:\t-Needs(BaldEagle, Cat)\nTEXT:\tThe bald eagle does not need the dog.\nFOL:\t-Needs(BaldEagle, Dog)\nTEXT:\tThe cat likes the bald eagle.\nFOL:\tLikes(Cat, BaldEagle)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf something is red and it needs the tiger then the tiger does not like the cat.\nFOL:\tall x. ((Red(x) & Needs(x, Tiger)) -> -Likes(Tiger, Cat))\nTEXT:\tIf something needs the dog and it eats the dog then it likes the dog.\nFOL:\tall x. ((Needs(x, Dog) & Eats(x, Dog)) -> Likes(x, Dog))\nTEXT:\tIf the tiger needs the dog and the dog is big then the tiger needs the bald eagle.\nFOL:\t((Needs(Tiger, Dog) & Big(Dog)) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the tiger then the tiger does not need the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) -> -Needs(Tiger, BaldEagle))\nTEXT:\tIf something needs the dog then the dog is cold.\nFOL:\tall x. (Needs(x, Dog) -> Cold(Dog))\nTEXT:\tAll blue things are cold.\nFOL:\tall x. (Blue(x) -> Cold(x))\nTEXT:\tIf something is cold then it needs the tiger.\nFOL:\tall x. (Cold(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the bald eagle and the bald eagle is big then it likes the tiger.\nFOL:\tall x. ((Likes(x, BaldEagle) & Big(BaldEagle)) -> Likes(x, Tiger))\nTEXT:\tIf something likes the bald eagle and it does not need the bald eagle then the bald eagle is big.\nFOL:\tall x. ((Likes(x, BaldEagle) & -Needs(x, BaldEagle)) -> Big(BaldEagle))\nTEXT:\tThe dog is not cold.\nFOL:\t-Cold(Dog)\nANSWER:\tFalse\n"], ["TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the lion.\nFOL:\tSees(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel chases the bald eagle.\nFOL:\tChases(Squirrel, BaldEagle)\nTEXT:\tThe squirrel chases the mouse.\nFOL:\tChases(Squirrel, Mouse)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tIf the lion visits the squirrel and the lion sees the squirrel then the lion chases the mouse.\nFOL:\tall x. ((Visits(x, Squirrel) & Sees(x, Squirrel)) -> Chases(x, Mouse))\nTEXT:\tAll nice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf someone is kind then they chase the lion.\nFOL:\tall x. (Kind(x) -> Chases(x, Lion))\nTEXT:\tIf someone chases the lion and the lion chases the squirrel then they visit the mouse.\nFOL:\tall x. ((Chases(x, Lion) & Chases(Lion, Squirrel)) -> Visits(x, Mouse))\nTEXT:\tIf someone chases the mouse then the mouse is nice.\nFOL:\tall x. (Chases(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf someone is green and they see the lion then the lion is nice.\nFOL:\tall x. ((Green(x) & Sees(x, Lion)) -> Nice(Lion))\nTEXT:\tIf someone sees the mouse then they are green.\nFOL:\tall x. (Sees(x, Mouse) -> Green(x))\nTEXT:\tIf someone is nice and they see the lion then the lion chases the squirrel.\nFOL:\tall x. ((Nice(x) & Sees(x, Lion)) -> Chases(Lion, Squirrel))\nTEXT:\tIf someone chases the squirrel then they are kind.\nFOL:\tall x. (Chases(x, Squirrel) -> Kind(x))\nTEXT:\tThe lion does not visit the mouse.\nFOL:\t-Visits(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the lion.\nFOL:\tSees(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel chases the bald eagle.\nFOL:\tChases(Squirrel, BaldEagle)\nTEXT:\tThe squirrel chases the mouse.\nFOL:\tChases(Squirrel, Mouse)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tIf the lion visits the squirrel and the lion sees the squirrel then the lion chases the mouse.\nFOL:\t(Visits(Lion, Squirrel) & Sees(Lion, Squirrel)) -> Chases(Lion, Mouse)\nTEXT:\tAll nice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf someone is kind then they chase the lion.\nFOL:\tall x. (Kind(x) -> Chases(x, Lion))\nTEXT:\tIf someone chases the lion and the lion chases the squirrel then they visit the mouse.\nFOL:\tall x. ((Chases(x, Lion) & Chases(Lion, Squirrel)) -> Visits(x, Mouse))\nTEXT:\tIf someone chases the mouse then the mouse is nice.\nFOL:\tall x. (Chases(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf someone is green and they see the lion then the lion is nice.\nFOL:\tall x. ((Green(x) & Sees(x, Lion)) -> Nice(Lion))\nTEXT:\tIf someone sees the mouse then they are green.\nFOL:\tall x. (Sees(x, Mouse) -> Green(x))\nTEXT:\tIf someone is nice and they see the lion then the lion chases the squirrel.\nFOL:\tall x. ((Nice(x) & Sees(x, Lion)) -> Chases(Lion, Squirrel))\nTEXT:\tIf someone chases the squirrel then they are kind.\nFOL:\tall x. (Chases(x, Squirrel) -> Kind(x))\nTEXT:\tThe lion does not visit the mouse.\nFOL:\t-Visits(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the lion.\nFOL:\tSees(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel chases the bald eagle.\nFOL:\tChases(Squirrel, BaldEagle)\nTEXT:\tThe squirrel chases the mouse.\nFOL:\tChases(Squirrel, Mouse)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tIf the lion visits the squirrel and the lion sees the squirrel then the lion chases the mouse.\nFOL:\tall x. all y. ((Visits(x, y) & Sees(x, y)) -> Chases(x, Mouse))\nTEXT:\tAll nice people are green.\nFOL:\tall x. (NicePeople(x) -> Green(x))\nTEXT:\tIf someone is kind then they chase the lion.\nFOL:\tall x. (Kind(x) -> Chases(x, Lion))\nTEXT:\tIf someone chases the lion and the lion chases the squirrel then they visit the mouse.\nFOL:\tall x. ((Chases(x, Lion) & Chases(Lion, Squirrel)) -> Visits(x, Mouse))\nTEXT:\tIf someone chases the mouse then the mouse is nice.\nFOL:\tall x. (Chases(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf someone is green and they see the lion then the lion is nice.\nFOL:\tall x. ((Green(x) & Sees(x, Lion)) -> Nice(Lion))\nTEXT:\tIf someone sees the mouse then they are green.\nFOL:\tall x. (Sees(x, Mouse) -> Green(x))\nTEXT:\tIf someone is nice and they see the lion then the lion chases the squirrel.\nFOL:\tall x. ((Nice(x) & Sees(x, Lion)) -> Chases(Lion, Squirrel))\nTEXT:\tIf someone chases the squirrel then they are kind.\nFOL:\tall x. (Chases(x, Squirrel) -> Kind(x))\nTEXT:\tThe lion does not visit the mouse.\nFOL:\t-Visits(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the lion.\nFOL:\tSees(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel chases the bald eagle.\nFOL:\tChases(Squirrel, BaldEagle)\nTEXT:\tThe squirrel chases the mouse.\nFOL:\tChases(Squirrel, Mouse)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tIf the lion visits the squirrel and the lion sees the squirrel then the lion chases the mouse.\nFOL:\tall x. (Visits(x, Squirrel) & Sees(x, Squirrel) -> Chases(x, Mouse))\nTEXT:\tAll nice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf someone is kind then they chase the lion.\nFOL:\tall x. (Kind(x) -> Chases(x, Lion))\nTEXT:\tIf someone chases the lion and the lion chases the squirrel then they visit the mouse.\nFOL:\tall x. (Chases(x, Lion) & Chases(Lion, Squirrel) -> Visits(x, Mouse))\nTEXT:\tIf someone chases the mouse then the mouse is nice.\nFOL:\tall x. (Chases(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf someone is green and they see the lion then the lion is nice.\nFOL:\tall x. (Green(x) & Sees(x, Lion) -> Nice(Lion))\nTEXT:\tIf someone sees the mouse then they are green.\nFOL:\tall x. (Sees(x, Mouse) -> Green(x))\nTEXT:\tIf someone is nice and they see the lion then the lion chases the squirrel.\nFOL:\tall x. (Nice(x) & Sees(x, Lion) -> Chases(Lion, Squirrel))\nTEXT:\tIf someone chases the squirrel then they are kind.\nFOL:\tall x. (Chases(x, Squirrel) -> Kind(x))\nTEXT:\tThe lion does not visit the mouse.\nFOL:\t-Visits(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the lion.\nFOL:\tSees(BaldEagle, Lion)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion sees the squirrel.\nFOL:\tSees(Lion, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse sees the lion.\nFOL:\tSees(Mouse, Lion)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel chases the bald eagle.\nFOL:\tChases(Squirrel, BaldEagle)\nTEXT:\tThe squirrel chases the mouse.\nFOL:\tChases(Squirrel, Mouse)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tIf the lion visits the squirrel and the lion sees the squirrel then the lion chases the mouse.\nFOL:\tall x. ((Visits(x, Squirrel) & Sees(x, Squirrel) & Lion(x)) -> Chases(x, Mouse))\nTEXT:\tAll nice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tIf someone is kind then they chase the lion.\nFOL:\tall x. (Kind(x) -> Chases(x, Lion))\nTEXT:\tIf someone chases the lion and the lion chases the squirrel then they visit the mouse.\nFOL:\tall x. ((Chases(x, Lion) & Chases(Lion, Squirrel)) -> Visits(x, Mouse))\nTEXT:\tIf someone chases the mouse then the mouse is nice.\nFOL:\tall x. (Chases(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf someone is green and they see the lion then the lion is nice.\nFOL:\tall x. ((Green(x) & Sees(x, Lion)) -> Nice(Lion))\nTEXT:\tIf someone sees the mouse then they are green.\nFOL:\tall x. (Sees(x, Mouse) -> Green(x))\nTEXT:\tIf someone is nice and they see the lion then the lion chases the squirrel.\nFOL:\tall x. ((Nice(x) & Sees(x, Lion)) -> Chases(Lion, Squirrel))\nTEXT:\tIf someone chases the squirrel then they are kind.\nFOL:\tall x. (Chases(x, Squirrel) -> Kind(x))\nTEXT:\tThe lion does not visit the mouse.\nFOL:\t-Visits(Lion, Mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf someone is kind and rough then they are young.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Young(x))\nTEXT:\tIf someone is furry and kind then they are big.\nFOL:\tall x. ((Furry(x) & Kind(x)) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tYoung, kind people are big.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Big(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. ((Furry(x) & White(x)) -> Big(x))\nTEXT:\tKind, big people are white.\nFOL:\tall x. ((Kind(x) & Big(x)) -> White(x))\nTEXT:\tAll young, kind people are quiet.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Quiet(x))\nTEXT:\tAll white, furry people are rough.\nFOL:\tall x. ((White(x) & Furry(x)) -> Rough(x))\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf someone is kind and rough then they are young.\nFOL:\tall x. (Kind(x) & Rough(x) -> Young(x))\nTEXT:\tIf someone is furry and kind then they are big.\nFOL:\tall x. (Furry(x) & Kind(x) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tYoung, kind people are big.\nFOL:\tall x. (Young(x) & Kind(x) -> Big(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. (Furry(x) & White(x) -> Big(x))\nTEXT:\tKind, big people are white.\nFOL:\tall x. (Kind(x) & Big(x) -> White(x))\nTEXT:\tAll young, kind people are quiet.\nFOL:\tall x. (Young(x) & Kind(x) -> Quiet(x))\nTEXT:\tAll white, furry people are rough.\nFOL:\tall x. (White(x) & Furry(x) -> Rough(x))\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf someone is kind and rough then they are young.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Young(x))\nTEXT:\tIf someone is furry and kind then they are big.\nFOL:\tall x. ((Furry(x) & Kind(x)) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tYoung, kind people are big.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Big(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. ((Furry(x) & White(x)) -> Big(x))\nTEXT:\tKind, big people are white.\nFOL:\tall x. ((Kind(x) & Big(x)) -> White(x))\nTEXT:\tAll young, kind people are quiet.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Quiet(x))\nTEXT:\tAll white, furry people are rough.\nFOL:\tall x. ((White(x) & Furry(x)) -> Rough(x))\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf someone is kind and rough then they are young.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Young(x))\nTEXT:\tIf someone is furry and kind then they are big.\nFOL:\tall x. ((Furry(x) & Kind(x)) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tYoung, kind people are big.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Big(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. ((Furry(x) & White(x)) -> Big(x))\nTEXT:\tKind, big people are white.\nFOL:\tall x. ((Kind(x) & Big(x)) -> White(x))\nTEXT:\tAll young, kind people are quiet.\nFOL:\tall x. ((Young(x) & Kind(x)) -> Quiet(x))\nTEXT:\tAll white, furry people are rough.\nFOL:\tall x. ((White(x) & Furry(x)) -> Rough(x))\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nANSWER:\tTrue\n", "TEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tIf someone is kind and rough then they are young.\nFOL:\tall x. (Kind(x) & Rough(x) -> Young(x))\nTEXT:\tIf someone is furry and kind then they are big.\nFOL:\tall x. (Furry(x) & Kind(x) -> Big(x))\nTEXT:\tWhite people are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tYoung, kind people are big.\nFOL:\tall x. (Young(x) & Kind(x) -> Big(x))\nTEXT:\tQuiet people are big.\nFOL:\tall x. (Quiet(x) -> Big(x))\nTEXT:\tFurry, white people are big.\nFOL:\tall x. (Furry(x) & White(x) -> Big(x))\nTEXT:\tKind, big people are white.\nFOL:\tall x. (Kind(x) & Big(x) -> White(x))\nTEXT:\tAll young, kind people are quiet.\nFOL:\tall x. (Young(x) & Kind(x) -> Quiet(x))\nTEXT:\tAll white, furry people are rough.\nFOL:\tall x. (White(x) & Furry(x) -> Rough(x))\nTEXT:\tFiona is not rough.\nFOL:\t-Rough(Fiona)\nANSWER:\tTrue\n"], ["TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe cat visits the rabbit.\nFOL:\tVisits(Cat, Rabbit)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf someone is kind and they visit the cat then they are big.\nFOL:\tall x. ((Kind(x) & Visits(x, Cat)) -> Big(x))\nTEXT:\tIf someone is young then they eat the cat.\nFOL:\tall x. (Young(x) -> Eats(x, Cat))\nTEXT:\tIf someone is cold and they like the rabbit then the rabbit likes the cat.\nFOL:\tall x. ((Cold(x) & Likes(x, Rabbit)) -> Likes(Rabbit, Cat))\nTEXT:\tIf someone likes the tiger then the tiger visits the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Cat))\nTEXT:\tIf someone is big then they eat the tiger.\nFOL:\tall x. (Big(x) -> Eats(x, Tiger))\nTEXT:\tIf someone eats the rabbit and they are cold then they visit the rabbit.\nFOL:\tall x. ((Eats(x, Rabbit) & Cold(x)) -> Visits(x, Rabbit))\nTEXT:\tIf someone likes the bear then they are kind.\nFOL:\tall x. (Likes(x, Bear) -> Kind(x))\nTEXT:\tIf someone likes the rabbit and they eat the rabbit then the rabbit visits the cat.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(x, Rabbit)) -> Visits(Rabbit, Cat))\nTEXT:\tIf someone eats the tiger and the tiger visits the cat then they are young.\nFOL:\tall x. ((Eats(x, Tiger) & Visits(Tiger, Cat)) -> Young(x))\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe cat visits the rabbit.\nFOL:\tVisits(Cat, Rabbit)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf someone is kind and they visit the cat then they are big.\nFOL:\tall x. ((Kind(x) & Visits(x, Cat)) -> Big(x))\nTEXT:\tIf someone is young then they eat the cat.\nFOL:\tall x. (Young(x) -> Eats(x, Cat))\nTEXT:\tIf someone is cold and they like the rabbit then the rabbit likes the cat.\nFOL:\tall x. ((Cold(x) & Likes(x, Rabbit)) -> Likes(Rabbit, Cat))\nTEXT:\tIf someone likes the tiger then the tiger visits the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Cat))\nTEXT:\tIf someone is big then they eat the tiger.\nFOL:\tall x. (Big(x) -> Eats(x, Tiger))\nTEXT:\tIf someone eats the rabbit and they are cold then they visit the rabbit.\nFOL:\tall x. ((Eats(x, Rabbit) & Cold(x)) -> Visits(x, Rabbit))\nTEXT:\tIf someone likes the bear then they are kind.\nFOL:\tall x. (Likes(x, Bear) -> Kind(x))\nTEXT:\tIf someone likes the rabbit and they eat the rabbit then the rabbit visits the cat.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(x, Rabbit)) -> Visits(Rabbit, Cat))\nTEXT:\tIf someone eats the tiger and the tiger visits the cat then they are young.\nFOL:\tall x. ((Eats(x, Tiger) & Visits(Tiger, Cat)) -> Young(x))\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe cat visits the rabbit.\nFOL:\tVisits(Cat, Rabbit)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf someone is kind and they visit the cat then they are big.\nFOL:\tall x. (Kind(x) & Visits(x, Cat) -> Big(x))\nTEXT:\tIf someone is young then they eat the cat.\nFOL:\tall x. (Young(x) -> Eats(x, Cat))\nTEXT:\tIf someone is cold and they like the rabbit then the rabbit likes the cat.\nFOL:\tall x. (Cold(x) & Likes(x, Rabbit) -> Likes(Rabbit, Cat))\nTEXT:\tIf someone likes the tiger then the tiger visits the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Cat))\nTEXT:\tIf someone is big then they eat the tiger.\nFOL:\tall x. (Big(x) -> Eats(x, Tiger))\nTEXT:\tIf someone eats the rabbit and they are cold then they visit the rabbit.\nFOL:\tall x. (Eats(x, Rabbit) & Cold(x) -> Visits(x, Rabbit))\nTEXT:\tIf someone likes the bear then they are kind.\nFOL:\tall x. (Likes(x, Bear) -> Kind(x))\nTEXT:\tIf someone likes the rabbit and they eat the rabbit then the rabbit visits the cat.\nFOL:\tall x. (Likes(x, Rabbit) & Eats(x, Rabbit) -> Visits(Rabbit, Cat))\nTEXT:\tIf someone eats the tiger and the tiger visits the cat then they are young.\nFOL:\tall x. (Eats(x, Tiger) & Visits(Tiger, Cat) -> Young(x))\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nANSWER:\tUncertain\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe cat visits the rabbit.\nFOL:\tVisits(Cat, Rabbit)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf someone is kind and they visit the cat then they are big.\nFOL:\tall x. (Kind(x) & Visits(x, Cat) -> Big(x))\nTEXT:\tIf someone is young then they eat the cat.\nFOL:\tall x. (Young(x) -> Eats(x, Cat))\nTEXT:\tIf someone is cold and they like the rabbit then the rabbit likes the cat.\nFOL:\tall x. (Cold(x) & Likes(x, Rabbit) -> Likes(Rabbit, Cat))\nTEXT:\tIf someone likes the tiger then the tiger visits the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Cat))\nTEXT:\tIf someone is big then they eat the tiger.\nFOL:\tall x. (Big(x) -> Eats(x, Tiger))\nTEXT:\tIf someone eats the rabbit and they are cold then they visit the rabbit.\nFOL:\tall x. (Eats(x, Rabbit) & Cold(x) -> Visits(x, Rabbit))\nTEXT:\tIf someone likes the bear then they are kind.\nFOL:\tall x. (Likes(x, Bear) -> Kind(x))\nTEXT:\tIf someone likes the rabbit and they eat the rabbit then the rabbit visits the cat.\nFOL:\tall x. (Likes(x, Rabbit) & Eats(x, Rabbit) -> Visits(Rabbit, Cat))\nTEXT:\tIf someone eats the tiger and the tiger visits the cat then they are young.\nFOL:\tall x. (Eats(x, Tiger) & Visits(Tiger, Cat) -> Young(x))\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nANSWER:\tTrue\n", "TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear likes the cat.\nFOL:\tLikes(Bear, Cat)\nTEXT:\tThe bear likes the tiger.\nFOL:\tLikes(Bear, Tiger)\nTEXT:\tThe cat eats the bear.\nFOL:\tEats(Cat, Bear)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is kind.\nFOL:\tKind(Cat)\nTEXT:\tThe cat likes the rabbit.\nFOL:\tLikes(Cat, Rabbit)\nTEXT:\tThe cat visits the rabbit.\nFOL:\tVisits(Cat, Rabbit)\nTEXT:\tThe rabbit likes the tiger.\nFOL:\tLikes(Rabbit, Tiger)\nTEXT:\tThe rabbit visits the tiger.\nFOL:\tVisits(Rabbit, Tiger)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger likes the bear.\nFOL:\tLikes(Tiger, Bear)\nTEXT:\tIf someone is kind and they visit the cat then they are big.\nFOL:\tall x. ((Kind(x) & Visits(x, Cat)) -> Big(x))\nTEXT:\tIf someone is young then they eat the cat.\nFOL:\tall x. (Young(x) -> Eats(x, Cat))\nTEXT:\tIf someone is cold and they like the rabbit then the rabbit likes the cat.\nFOL:\tall x. ((Cold(x) & Likes(x, Rabbit)) -> Likes(Rabbit, Cat))\nTEXT:\tIf someone likes the tiger then the tiger visits the cat.\nFOL:\tall x. (Likes(x, Tiger) -> Visits(Tiger, Cat))\nTEXT:\tIf someone is big then they eat the tiger.\nFOL:\tall x. (Big(x) -> Eats(x, Tiger))\nTEXT:\tIf someone eats the rabbit and they are cold then they visit the rabbit.\nFOL:\tall x. ((Eats(x, Rabbit) & Cold(x)) -> Visits(x, Rabbit))\nTEXT:\tIf someone likes the bear then they are kind.\nFOL:\tall x. (Likes(x, Bear) -> Kind(x))\nTEXT:\tIf someone likes the rabbit and they eat the rabbit then the rabbit visits the cat.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(x, Rabbit)) -> Visits(Rabbit, Cat))\nTEXT:\tIf someone eats the tiger and the tiger visits the cat then they are young.\nFOL:\tall x. ((Eats(x, Tiger) & Visits(Tiger, Cat)) -> Young(x))\nTEXT:\tThe tiger is not young.\nFOL:\t-Young(Tiger)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tIf Anne is quiet then Anne is blue.\nFOL:\tQuiet(Anne) -> Blue(Anne)\nTEXT:\tIf Anne is green then Anne is quiet.\nFOL:\tGreen(Anne) -> Quiet(Anne)\nTEXT:\tBlue people are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Anne is white and Anne is not blue then Anne is nice.\nFOL:\t(White(Anne) & -Blue(Anne)) -> Nice(Anne)\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is big and not nice then they are round.\nFOL:\tall x. (Big(x) & -Nice(x) -> Round(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tIf Anne is quiet then Anne is blue.\nFOL:\tQuiet(Anne) -> Blue(Anne)\nTEXT:\tIf Anne is green then Anne is quiet.\nFOL:\tGreen(Anne) -> Quiet(Anne)\nTEXT:\tBlue people are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Anne is white and Anne is not blue then Anne is nice.\nFOL:\t(White(Anne) & -Blue(Anne)) -> Nice(Anne)\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is big and not nice then they are round.\nFOL:\tall x. ((Big(x) & -Nice(x)) -> Round(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tIf Anne is quiet then Anne is blue.\nFOL:\tQuiet(Anne) -> Blue(Anne)\nTEXT:\tIf Anne is green then Anne is quiet.\nFOL:\tGreen(Anne) -> Quiet(Anne)\nTEXT:\tBlue people are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Anne is white and Anne is not blue then Anne is nice.\nFOL:\t(White(Anne) & -Blue(Anne)) -> Nice(Anne)\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is big and not nice then they are round.\nFOL:\tall x. ((Big(x) & -Nice(x)) -> Round(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tIf Anne is quiet then Anne is blue.\nFOL:\tQuiet(Anne) -> Blue(Anne)\nTEXT:\tIf Anne is green then Anne is quiet.\nFOL:\tGreen(Anne) -> Quiet(Anne)\nTEXT:\tBlue people are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Anne is white and Anne is not blue then Anne is nice.\nFOL:\t(White(Anne) & -Blue(Anne)) -> Nice(Anne)\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is big and not nice then they are round.\nFOL:\tall x. (Big(x) & -Nice(x) -> Round(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is not nice.\nFOL:\t-Nice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBlue people are big.\nFOL:\tall x. (Blue(x) -> Big(x))\nTEXT:\tIf someone is white then they are green.\nFOL:\tall x. (White(x) -> Green(x))\nTEXT:\tIf Anne is quiet then Anne is blue.\nFOL:\tQuiet(Anne) -> Blue(Anne)\nTEXT:\tIf Anne is green then Anne is quiet.\nFOL:\tGreen(Anne) -> Quiet(Anne)\nTEXT:\tBlue people are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tIf Anne is white and Anne is not blue then Anne is nice.\nFOL:\t(White(Anne) & -Blue(Anne)) -> Nice(Anne)\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is big and not nice then they are round.\nFOL:\tall x. ((Big(x) & -Nice(x)) -> Round(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit needs the mouse.\nFOL:\tNeeds(Rabbit, Mouse)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe squirrel is not blue.\nFOL:\t-Blue(Squirrel)\nTEXT:\tIf something is young then it needs the lion.\nFOL:\tall x. (Young(x) -> Needs(x, Lion))\nTEXT:\tIf something is round then it needs the lion.\nFOL:\tall x. (Round(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the lion then it needs the rabbit.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Rabbit))\nTEXT:\tIf something is rough and it visits the mouse then the mouse is red.\nFOL:\tall x. (Rough(x) & Visits(x, Mouse) -> Red(Mouse))\nTEXT:\tIf the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit.\nFOL:\t(Visits(Rabbit, Squirrel) & Chases(Squirrel, Lion) -> Needs(Squirrel, Rabbit))\nTEXT:\tIf something is red then it is not blue.\nFOL:\tall x. (Red(x) -> -Blue(x))\nTEXT:\tIf something is young and it does not need the mouse then it visits the rabbit.\nFOL:\tall x. (Young(x) & -Needs(x, Mouse) -> Visits(x, Rabbit))\nTEXT:\tIf something needs the rabbit then it visits the mouse.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, Mouse))\nTEXT:\tIf the lion visits the mouse and the lion is blue then the mouse chases the squirrel.\nFOL:\t(Visits(Lion, Mouse) & Blue(Lion) -> Chases(Mouse, Squirrel))\nTEXT:\tThe rabbit does not chase the squirrel.\nFOL:\t-Chases(Rabbit, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit needs the mouse.\nFOL:\tNeeds(Rabbit, Mouse)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe squirrel is not blue.\nFOL:\t-Blue(Squirrel)\nTEXT:\tIf something is young then it needs the lion.\nFOL:\tall x. (Young(x) -> Needs(x, Lion))\nTEXT:\tIf something is round then it needs the lion.\nFOL:\tall x. (Round(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the lion then it needs the rabbit.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Rabbit))\nTEXT:\tIf something is rough and it visits the mouse then the mouse is red.\nFOL:\tall x. (Rough(x) & Visits(x, Mouse) -> Red(Mouse))\nTEXT:\tIf the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit.\nFOL:\t(Visits(Rabbit, Squirrel) & Chases(Squirrel, Lion) -> Needs(Squirrel, Rabbit))\nTEXT:\tIf something is red then it is not blue.\nFOL:\tall x. (Red(x) -> -Blue(x))\nTEXT:\tIf something is young and it does not need the mouse then it visits the rabbit.\nFOL:\tall x. (Young(x) & -Needs(x, Mouse) -> Visits(x, Rabbit))\nTEXT:\tIf something needs the rabbit then it visits the mouse.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, Mouse))\nTEXT:\tIf the lion visits the mouse and the lion is blue then the mouse chases the squirrel.\nFOL:\t(Visits(Lion, Mouse) & Blue(Lion) -> Chases(Mouse, Squirrel))\nTEXT:\tThe rabbit does not chase the squirrel.\nFOL:\t-Chases(Rabbit, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit needs the mouse.\nFOL:\tNeeds(Rabbit, Mouse)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe squirrel is not blue.\nFOL:\t-Blue(Squirrel)\nTEXT:\tIf something is young then it needs the lion.\nFOL:\tall x. (Young(x) -> Needs(x, Lion))\nTEXT:\tIf something is round then it needs the lion.\nFOL:\tall x. (Round(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the lion then it needs the rabbit.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Rabbit))\nTEXT:\tIf something is rough and it visits the mouse then the mouse is red.\nFOL:\tall x. (Rough(x) & Visits(x, Mouse) -> Red(Mouse))\nTEXT:\tIf the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit.\nFOL:\t(Visits(Rabbit, Squirrel) & Chases(Squirrel, Lion) -> Needs(Squirrel, Rabbit))\nTEXT:\tIf something is red then it is not blue.\nFOL:\tall x. (Red(x) -> -Blue(x))\nTEXT:\tIf something is young and it does not need the mouse then it visits the rabbit.\nFOL:\tall x. (Young(x) & -Needs(x, Mouse) -> Visits(x, Rabbit))\nTEXT:\tIf something needs the rabbit then it visits the mouse.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, Mouse))\nTEXT:\tIf the lion visits the mouse and the lion is blue then the mouse chases the squirrel.\nFOL:\t(Visits(Lion, Mouse) & Blue(Lion) -> Chases(Mouse, Squirrel))\nTEXT:\tThe rabbit does not chase the squirrel.\nFOL:\t-Chases(Rabbit, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit needs the mouse.\nFOL:\tNeeds(Rabbit, Mouse)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe squirrel is not blue.\nFOL:\t-Blue(Squirrel)\nTEXT:\tIf something is young then it needs the lion.\nFOL:\tall x. (Young(x) -> Needs(x, Lion))\nTEXT:\tIf something is round then it needs the lion.\nFOL:\tall x. (Round(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the lion then it needs the rabbit.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Rabbit))\nTEXT:\tIf something is rough and it visits the mouse then the mouse is red.\nFOL:\tall x. (Rough(x) & Visits(x, Mouse) -> Red(Mouse))\nTEXT:\tIf the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit.\nFOL:\t((Visits(Rabbit, Squirrel) & Chases(Squirrel, Lion)) -> Needs(Squirrel, Rabbit))\nTEXT:\tIf something is red then it is not blue.\nFOL:\tall x. (Red(x) -> -Blue(x))\nTEXT:\tIf something is young and it does not need the mouse then it visits the rabbit.\nFOL:\tall x. (Young(x) & -Needs(x, Mouse) -> Visits(x, Rabbit))\nTEXT:\tIf something needs the rabbit then it visits the mouse.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, Mouse))\nTEXT:\tIf the lion visits the mouse and the lion is blue then the mouse chases the squirrel.\nFOL:\t((Visits(Lion, Mouse) & Blue(Lion)) -> Chases(Mouse, Squirrel))\nTEXT:\tThe rabbit does not chase the squirrel.\nFOL:\t-Chases(Rabbit, Squirrel)\nANSWER:\tUncertain\n", "TEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe mouse is rough.\nFOL:\tRough(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit needs the mouse.\nFOL:\tNeeds(Rabbit, Mouse)\nTEXT:\tThe rabbit needs the squirrel.\nFOL:\tNeeds(Rabbit, Squirrel)\nTEXT:\tThe squirrel is not blue.\nFOL:\t-Blue(Squirrel)\nTEXT:\tIf something is young then it needs the lion.\nFOL:\tall x. (Young(x) -> Needs(x, Lion))\nTEXT:\tIf something is round then it needs the lion.\nFOL:\tall x. (Round(x) -> Needs(x, Lion))\nTEXT:\tIf something needs the lion then it needs the rabbit.\nFOL:\tall x. (Needs(x, Lion) -> Needs(x, Rabbit))\nTEXT:\tIf something is rough and it visits the mouse then the mouse is red.\nFOL:\tall x. (Rough(x) & Visits(x, Mouse) -> Red(Mouse))\nTEXT:\tIf the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit.\nFOL:\t(Visits(Rabbit, Squirrel) & Chases(Squirrel, Lion) -> Needs(Squirrel, Rabbit))\nTEXT:\tIf something is red then it is not blue.\nFOL:\tall x. (Red(x) -> -Blue(x))\nTEXT:\tIf something is young and it does not need the mouse then it visits the rabbit.\nFOL:\tall x. (Young(x) & -Needs(x, Mouse) -> Visits(x, Rabbit))\nTEXT:\tIf something needs the rabbit then it visits the mouse.\nFOL:\tall x. (Needs(x, Rabbit) -> Visits(x, Mouse))\nTEXT:\tIf the lion visits the mouse and the lion is blue then the mouse chases the squirrel.\nFOL:\t(Visits(Lion, Mouse) & Blue(Lion) -> Chases(Mouse, Squirrel))\nTEXT:\tThe rabbit does not chase the squirrel.\nFOL:\t-Chases(Rabbit, Squirrel)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat does not chase the mouse.\nFOL:\t-Chases(Cat, Mouse)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the cat.\nFOL:\tChases(Squirrel, Cat)\nTEXT:\tIf the bald eagle is cold and the bald eagle does not chase the squirrel then the bald eagle is nice.\nFOL:\tall x. ((Cold(x) & -Chases(x, Squirrel)) -> Nice(x))\nTEXT:\tIf someone eats the cat then they are cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(x))\nTEXT:\tIf someone eats the cat and the cat is cold then they are kind.\nFOL:\tall x. ((Eats(x, Cat) & Cold(Cat)) -> Kind(x))\nTEXT:\tIf the mouse eats the bald eagle then the mouse is cold.\nFOL:\t(Eats(Mouse, BaldEagle) -> Cold(Mouse))\nTEXT:\tIf someone eats the cat then the cat is cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(Cat))\nTEXT:\tCold, kind people are not nice.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> -Nice(x))\nTEXT:\tIf someone chases the squirrel and the squirrel does not chase the cat then the squirrel chases the bald eagle.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(Squirrel, Cat)) -> Chases(Squirrel, BaldEagle))\nTEXT:\tIf someone is cold then they eat the cat.\nFOL:\tall x. (Cold(x) -> Eats(x, Cat))\nTEXT:\tIf someone chases the squirrel and they do not chase the bald eagle then the bald eagle does not chase the cat.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(x, BaldEagle)) -> -Chases(BaldEagle, Cat))\nTEXT:\tThe mouse does not eat the cat.\nFOL:\t-Eats(Mouse, Cat)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat does not chase the mouse.\nFOL:\t-Chases(Cat, Mouse)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the cat.\nFOL:\tChases(Squirrel, Cat)\nTEXT:\tIf the bald eagle is cold and the bald eagle does not chase the squirrel then the bald eagle is nice.\nFOL:\tall x. ((Cold(x) & -Chases(x, Squirrel)) -> Nice(x))\nTEXT:\tIf someone eats the cat then they are cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(x))\nTEXT:\tIf someone eats the cat and the cat is cold then they are kind.\nFOL:\tall x. ((Eats(x, Cat) & Cold(Cat)) -> Kind(x))\nTEXT:\tIf the mouse eats the bald eagle then the mouse is cold.\nFOL:\t(Eats(Mouse, BaldEagle) -> Cold(Mouse))\nTEXT:\tIf someone eats the cat then the cat is cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(Cat))\nTEXT:\tCold, kind people are not nice.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> -Nice(x))\nTEXT:\tIf someone chases the squirrel and the squirrel does not chase the cat then the squirrel chases the bald eagle.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(Squirrel, Cat)) -> Chases(Squirrel, BaldEagle))\nTEXT:\tIf someone is cold then they eat the cat.\nFOL:\tall x. (Cold(x) -> Eats(x, Cat))\nTEXT:\tIf someone chases the squirrel and they do not chase the bald eagle then the bald eagle does not chase the cat.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(x, BaldEagle)) -> -Chases(BaldEagle, Cat))\nTEXT:\tThe mouse does not eat the cat.\nFOL:\t-Eats(Mouse, Cat)\nANSWER:\tFalse", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat does not chase the mouse.\nFOL:\t-Chases(Cat, Mouse)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the cat.\nFOL:\tChases(Squirrel, Cat)\nTEXT:\tIf the bald eagle is cold and the bald eagle does not chase the squirrel then the bald eagle is nice.\nFOL:\tall x. ((Cold(x) & BaldEagle(x) & -Chases(x, Squirrel)) -> Nice(x))\nTEXT:\tIf someone eats the cat then they are cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(x))\nTEXT:\tIf someone eats the cat and the cat is cold then they are kind.\nFOL:\tall x. all y. ((Eats(x, y) & Cold(y) & Cat(y)) -> Kind(x))\nTEXT:\tIf the mouse eats the bald eagle then the mouse is cold.\nFOL:\t(Eats(Mouse, BaldEagle) -> Cold(Mouse))\nTEXT:\tIf someone eats the cat then the cat is cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(Cat))\nTEXT:\tCold, kind people are not nice.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> -Nice(x))\nTEXT:\tIf someone chases the squirrel and the squirrel does not chase the cat then the squirrel chases the bald eagle.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(Squirrel, Cat)) -> Chases(Squirrel, BaldEagle))\nTEXT:\tIf someone is cold then they eat the cat.\nFOL:\tall x. (Cold(x) -> Eats(x, Cat))\nTEXT:\tIf someone chases the squirrel and they do not chase the bald eagle then the bald eagle does not chase the cat.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(x, BaldEagle)) -> -Chases(BaldEagle, Cat))\nTEXT:\tThe mouse does not eat the cat.\nFOL:\t-Eats(Mouse, Cat)\nANSWER:\tUncertain", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat does not chase the mouse.\nFOL:\t-Chases(Cat, Mouse)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the cat.\nFOL:\tChases(Squirrel, Cat)\nTEXT:\tIf the bald eagle is cold and the bald eagle does not chase the squirrel then the bald eagle is nice.\nFOL:\tall x. (BaldEagle(x) & Cold(x) & -Chases(x, Squirrel) -> Nice(x))\nTEXT:\tIf someone eats the cat then they are cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(x))\nTEXT:\tIf someone eats the cat and the cat is cold then they are kind.\nFOL:\tall x. all y. (Eats(x, y) & Cat(y) & Cold(y) -> Kind(x))\nTEXT:\tIf the mouse eats the bald eagle then the mouse is cold.\nFOL:\tall x. (Mouse(x) & Eats(x, BaldEagle) -> Cold(x))\nTEXT:\tIf someone eats the cat then the cat is cold.\nFOL:\tall x. all y. (Eats(x, y) & Cat(y) -> Cold(y))\nTEXT:\tCold, kind people are not nice.\nFOL:\tall x. (Person(x) & Cold(x) & Kind(x) -> -Nice(x))\nTEXT:\tIf someone chases the squirrel and the squirrel does not chase the cat then the squirrel chases the bald eagle.\nFOL:\tall x. all y. (Chases(x, y) & Squirrel(y) & -Chases(y, Cat) -> Chases(y, BaldEagle))\nTEXT:\tIf someone is cold then they eat the cat.\nFOL:\tall x. (Cold(x) -> Eats(x, Cat))\nTEXT:\tIf someone chases the squirrel and they do not chase the bald eagle then the bald eagle does not chase the cat.\nFOL:\tall x. (Chases(x, Squirrel) & -Chases(x, BaldEagle) -> -Chases(BaldEagle, Cat))\nTEXT:\tThe mouse does not eat the cat.\nFOL:\t-Eats(Mouse, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the squirrel.\nFOL:\tChases(BaldEagle, Squirrel)\nTEXT:\tThe bald eagle is cold.\nFOL:\tCold(BaldEagle)\nTEXT:\tThe cat does not chase the mouse.\nFOL:\t-Chases(Cat, Mouse)\nTEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the squirrel.\nFOL:\tEats(Mouse, Squirrel)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe mouse sees the bald eagle.\nFOL:\tSees(Mouse, BaldEagle)\nTEXT:\tThe squirrel chases the cat.\nFOL:\tChases(Squirrel, Cat)\nTEXT:\tIf the bald eagle is cold and the bald eagle does not chase the squirrel then the bald eagle is nice.\nFOL:\tall x. ((Cold(x) & -Chases(x, Squirrel)) -> Nice(x))\nTEXT:\tIf someone eats the cat then they are cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(x))\nTEXT:\tIf someone eats the cat and the cat is cold then they are kind.\nFOL:\tall x. ((Eats(x, Cat) & Cold(Cat)) -> Kind(x))\nTEXT:\tIf the mouse eats the bald eagle then the mouse is cold.\nFOL:\t(Eats(Mouse, BaldEagle) -> Cold(Mouse))\nTEXT:\tIf someone eats the cat then the cat is cold.\nFOL:\tall x. (Eats(x, Cat) -> Cold(Cat))\nTEXT:\tCold, kind people are not nice.\nFOL:\tall x. ((Cold(x) & Kind(x)) -> -Nice(x))\nTEXT:\tIf someone chases the squirrel and the squirrel does not chase the cat then the squirrel chases the bald eagle.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(Squirrel, Cat)) -> Chases(Squirrel, BaldEagle))\nTEXT:\tIf someone is cold then they eat the cat.\nFOL:\tall x. (Cold(x) -> Eats(x, Cat))\nTEXT:\tIf someone chases the squirrel and they do not chase the bald eagle then the bald eagle does not chase the cat.\nFOL:\tall x. ((Chases(x, Squirrel) & -Chases(x, BaldEagle)) -> -Chases(BaldEagle, Cat))\nTEXT:\tThe mouse does not eat the cat.\nFOL:\t-Eats(Mouse, Cat)\nANSWER:\tFalse"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf someone is white then they are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tAll smart people are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tNice, furry people are kind.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Kind(x))\nTEXT:\tIf someone is red then they are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Harry is smart then Harry is furry.\nFOL:\tSmart(Harry) -> Furry(Harry)\nTEXT:\tIf Dave is furry then Dave is white.\nFOL:\tFurry(Dave) -> White(Dave)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf Dave is red then Dave is not rough.\nFOL:\tRed(Dave) -> -Rough(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf someone is white then they are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tAll smart people are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tNice, furry people are kind.\nFOL:\tall x. (Nice(x) & Furry(x) -> Kind(x))\nTEXT:\tIf someone is red then they are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Harry is smart then Harry is furry.\nFOL:\t(Smart(Harry) -> Furry(Harry))\nTEXT:\tIf Dave is furry then Dave is white.\nFOL:\t(Furry(Dave) -> White(Dave))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf Dave is red then Dave is not rough.\nFOL:\t(Red(Dave) -> -Rough(Dave))\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf someone is white then they are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tAll smart people are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tNice, furry people are kind.\nFOL:\tall x. ((Nice(x) & Furry(x)) -> Kind(x))\nTEXT:\tIf someone is red then they are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Harry is smart then Harry is furry.\nFOL:\tSmart(Harry) -> Furry(Harry)\nTEXT:\tIf Dave is furry then Dave is white.\nFOL:\tFurry(Dave) -> White(Dave)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf Dave is red then Dave is not rough.\nFOL:\tRed(Dave) -> -Rough(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf someone is white then they are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tAll smart people are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tNice, furry people are kind.\nFOL:\tall x. (Nice(x) & Furry(x) -> Kind(x))\nTEXT:\tIf someone is red then they are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Harry is smart then Harry is furry.\nFOL:\tSmart(Harry) -> Furry(Harry)\nTEXT:\tIf Dave is furry then Dave is white.\nFOL:\tFurry(Dave) -> White(Dave)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf Dave is red then Dave is not rough.\nFOL:\tRed(Dave) -> -Rough(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf someone is white then they are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tAll smart people are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tNice, furry people are kind.\nFOL:\tall x. (Nice(x) & Furry(x) -> Kind(x))\nTEXT:\tIf someone is red then they are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf Harry is smart then Harry is furry.\nFOL:\tSmart(Harry) -> Furry(Harry)\nTEXT:\tIf Dave is furry then Dave is white.\nFOL:\tFurry(Dave) -> White(Dave)\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf Dave is red then Dave is not rough.\nFOL:\tRed(Dave) -> -Rough(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll cold things are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tSmart, cold things are blue.\nFOL:\tall x. ((Smart(x) & Cold(x)) -> Blue(x))\nTEXT:\tQuiet, cold things are red.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Red(x))\nTEXT:\tIf something is blue and round then it is rough.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Rough(x))\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll cold things are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tSmart, cold things are blue.\nFOL:\tall x. (Smart(x) & Cold(x) -> Blue(x))\nTEXT:\tQuiet, cold things are red.\nFOL:\tall x. (Quiet(x) & Cold(x) -> Red(x))\nTEXT:\tIf something is blue and round then it is rough.\nFOL:\tall x. (Blue(x) & Round(x) -> Rough(x))\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll cold things are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tSmart, cold things are blue.\nFOL:\tall x. ((Smart(x) & Cold(x)) -> Blue(x))\nTEXT:\tQuiet, cold things are red.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Red(x))\nTEXT:\tIf something is blue and round then it is rough.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Rough(x))\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll cold things are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tSmart, cold things are blue.\nFOL:\tall x. (Smart(x) & Cold(x) -> Blue(x))\nTEXT:\tQuiet, cold things are red.\nFOL:\tall x. (Quiet(x) & Cold(x) -> Red(x))\nTEXT:\tIf something is blue and round then it is rough.\nFOL:\tall x. (Blue(x) & Round(x) -> Rough(x))\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll cold things are rough.\nFOL:\tall x. (Cold(x) -> Rough(x))\nTEXT:\tSmart, cold things are blue.\nFOL:\tall x. ((Smart(x) & Cold(x)) -> Blue(x))\nTEXT:\tQuiet, cold things are red.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Red(x))\nTEXT:\tIf something is blue and round then it is rough.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Rough(x))\nTEXT:\tAll round things are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tIf something is furry and not big then it is kind.\nFOL:\tall x. ((Furry(x) & -Big(x)) -> Kind(x))\nTEXT:\tIf something is round then it is kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Harry is white then Harry is blue.\nFOL:\tWhite(Harry) -> Blue(Harry)\nTEXT:\tAll furry things are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll big things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll blue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Harry is green and Harry is big then Harry is furry.\nFOL:\t(Green(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tIf something is furry and not big then it is kind.\nFOL:\tall x. ((Furry(x) & -Big(x)) -> Kind(x))\nTEXT:\tIf something is round then it is kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Harry is white then Harry is blue.\nFOL:\tWhite(Harry) -> Blue(Harry)\nTEXT:\tAll furry things are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll big things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll blue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Harry is green and Harry is big then Harry is furry.\nFOL:\t(Green(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tTrue\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tIf something is furry and not big then it is kind.\nFOL:\tall x. ((Furry(x) & -Big(x)) -> Kind(x))\nTEXT:\tIf something is round then it is kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Harry is white then Harry is blue.\nFOL:\t(White(Harry) -> Blue(Harry))\nTEXT:\tAll furry things are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll big things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll blue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Harry is green and Harry is big then Harry is furry.\nFOL:\t((Green(Harry) & Big(Harry)) -> Furry(Harry))\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tIf something is furry and not big then it is kind.\nFOL:\tall x. ((Furry(x) & -Big(x)) -> Kind(x))\nTEXT:\tIf something is round then it is kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Harry is white then Harry is blue.\nFOL:\tWhite(Harry) -> Blue(Harry)\nTEXT:\tAll furry things are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll big things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll blue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Harry is green and Harry is big then Harry is furry.\nFOL:\t(Green(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tIf something is furry and not big then it is kind.\nFOL:\tall x. ((Furry(x) & -Big(x)) -> Kind(x))\nTEXT:\tIf something is round then it is kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is green then it is kind.\nFOL:\tall x. (Green(x) -> Kind(x))\nTEXT:\tIf Harry is white then Harry is blue.\nFOL:\t(White(Harry) -> Blue(Harry))\nTEXT:\tAll furry things are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tRound things are white.\nFOL:\tall x. (Round(x) -> White(x))\nTEXT:\tAll big things are furry.\nFOL:\tall x. (Big(x) -> Furry(x))\nTEXT:\tAll blue things are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Harry is green and Harry is big then Harry is furry.\nFOL:\t((Green(Harry) & Big(Harry)) -> Furry(Harry))\nTEXT:\tHarry is not kind.\nFOL:\t-Kind(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tAll round things are red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tIf something is blue and it eats the bald eagle then it is round.\nFOL:\tall x. (Blue(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is green and big then it sees the dog.\nFOL:\tall x. (Green(x) & Big(x) -> Sees(x, Dog))\nTEXT:\tIf something eats the rabbit and the rabbit is red then it is red.\nFOL:\tall x. (Eats(x, Rabbit) & Red(Rabbit) -> Red(x))\nTEXT:\tIf something is blue then it eats the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tIf the rabbit is round then the rabbit sees the bald eagle.\nFOL:\tRound(Rabbit) -> Sees(Rabbit, BaldEagle)\nTEXT:\tIf something sees the cat and it is green then the cat is round.\nFOL:\tall x. (Sees(x, Cat) & Green(x) -> Round(Cat))\nTEXT:\tIf something is red then it is round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is big and it chases the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Big(x) & Chases(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tThe rabbit sees the bald eagle.\nFOL:\tSees(Rabbit, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tAll round things are red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tIf something is blue and it eats the bald eagle then it is round.\nFOL:\tall x. (Blue(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is green and big then it sees the dog.\nFOL:\tall x. (Green(x) & Big(x) -> Sees(x, Dog))\nTEXT:\tIf something eats the rabbit and the rabbit is red then it is red.\nFOL:\tall x. (Eats(x, Rabbit) & Red(Rabbit) -> Red(x))\nTEXT:\tIf something is blue then it eats the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tIf the rabbit is round then the rabbit sees the bald eagle.\nFOL:\tRound(Rabbit) -> Sees(Rabbit, BaldEagle)\nTEXT:\tIf something sees the cat and it is green then the cat is round.\nFOL:\tall x. (Sees(x, Cat) & Green(x) -> Round(Cat))\nTEXT:\tIf something is red then it is round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is big and it chases the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Big(x) & Chases(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tThe rabbit sees the bald eagle.\nFOL:\tSees(Rabbit, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tAll round things are red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tIf something is blue and it eats the bald eagle then it is round.\nFOL:\tall x. (Blue(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is green and big then it sees the dog.\nFOL:\tall x. (Green(x) & Big(x) -> Sees(x, Dog))\nTEXT:\tIf something eats the rabbit and the rabbit is red then it is red.\nFOL:\tall x. (Eats(x, Rabbit) & Red(Rabbit) -> Red(x))\nTEXT:\tIf something is blue then it eats the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tIf the rabbit is round then the rabbit sees the bald eagle.\nFOL:\t(Round(Rabbit) -> Sees(Rabbit, BaldEagle))\nTEXT:\tIf something sees the cat and it is green then the cat is round.\nFOL:\tall x. (Sees(x, Cat) & Green(x) -> Round(Cat))\nTEXT:\tIf something is red then it is round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is big and it chases the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Big(x) & Chases(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tThe rabbit sees the bald eagle.\nFOL:\tSees(Rabbit, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tAll round things are red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tIf something is blue and it eats the bald eagle then it is round.\nFOL:\tall x. (Blue(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is green and big then it sees the dog.\nFOL:\tall x. (Green(x) & Big(x) -> Sees(x, Dog))\nTEXT:\tIf something eats the rabbit and the rabbit is red then it is red.\nFOL:\tall x. (Eats(x, Rabbit) & Red(Rabbit) -> Red(x))\nTEXT:\tIf something is blue then it eats the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tIf the rabbit is round then the rabbit sees the bald eagle.\nFOL:\t(Round(Rabbit) -> Sees(Rabbit, BaldEagle))\nTEXT:\tIf something sees the cat and it is green then the cat is round.\nFOL:\tall x. (Sees(x, Cat) & Green(x) -> Round(Cat))\nTEXT:\tIf something is red then it is round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is big and it chases the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Big(x) & Chases(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tThe rabbit sees the bald eagle.\nFOL:\tSees(Rabbit, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle eats the cat.\nFOL:\tEats(BaldEagle, Cat)\nTEXT:\tThe bald eagle eats the rabbit.\nFOL:\tEats(BaldEagle, Rabbit)\nTEXT:\tThe cat chases the rabbit.\nFOL:\tChases(Cat, Rabbit)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tAll round things are red.\nFOL:\tall x. (Round(x) -> Red(x))\nTEXT:\tIf something is blue and it eats the bald eagle then it is round.\nFOL:\tall x. (Blue(x) & Eats(x, BaldEagle) -> Round(x))\nTEXT:\tIf something is green and big then it sees the dog.\nFOL:\tall x. (Green(x) & Big(x) -> Sees(x, Dog))\nTEXT:\tIf something eats the rabbit and the rabbit is red then it is red.\nFOL:\tall x. (Eats(x, Rabbit) & Red(Rabbit) -> Red(x))\nTEXT:\tIf something is blue then it eats the bald eagle.\nFOL:\tall x. (Blue(x) -> Eats(x, BaldEagle))\nTEXT:\tIf the rabbit is round then the rabbit sees the bald eagle.\nFOL:\tRound(Rabbit) -> Sees(Rabbit, BaldEagle)\nTEXT:\tIf something sees the cat and it is green then the cat is round.\nFOL:\tall x. (Sees(x, Cat) & Green(x) -> Round(Cat))\nTEXT:\tIf something is red then it is round.\nFOL:\tall x. (Red(x) -> Round(x))\nTEXT:\tIf something is big and it chases the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Big(x) & Chases(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tThe rabbit sees the bald eagle.\nFOL:\tSees(Rabbit, BaldEagle)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRound things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf something is round and not big then it is not nice.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Nice(x))\nTEXT:\tQuiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll blue, round things are nice.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Nice(x))\nTEXT:\tNice, rough things are round.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Round(x))\nTEXT:\tIf something is furry then it is round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tFurry, blue things are quiet.\nFOL:\tall x. ((Furry(x) & Blue(x)) -> Quiet(x))\nTEXT:\tNice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is round and blue then it is not rough.\nFOL:\tall x. ((Round(x) & Blue(x)) -> -Rough(x))\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRound things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf something is round and not big then it is not nice.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Nice(x))\nTEXT:\tQuiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll blue, round things are nice.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Nice(x))\nTEXT:\tNice, rough things are round.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Round(x))\nTEXT:\tIf something is furry then it is round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tFurry, blue things are quiet.\nFOL:\tall x. ((Furry(x) & Blue(x)) -> Quiet(x))\nTEXT:\tNice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is round and blue then it is not rough.\nFOL:\tall x. ((Round(x) & Blue(x)) -> -Rough(x))\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRound things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf something is round and not big then it is not nice.\nFOL:\tall x. (Round(x) & -Big(x) -> -Nice(x))\nTEXT:\tQuiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll blue, round things are nice.\nFOL:\tall x. (Blue(x) & Round(x) -> Nice(x))\nTEXT:\tNice, rough things are round.\nFOL:\tall x. (Nice(x) & Rough(x) -> Round(x))\nTEXT:\tIf something is furry then it is round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tFurry, blue things are quiet.\nFOL:\tall x. (Furry(x) & Blue(x) -> Quiet(x))\nTEXT:\tNice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is round and blue then it is not rough.\nFOL:\tall x. (Round(x) & Blue(x) -> -Rough(x))\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRound things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf something is round and not big then it is not nice.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Nice(x))\nTEXT:\tQuiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll blue, round things are nice.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Nice(x))\nTEXT:\tNice, rough things are round.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Round(x))\nTEXT:\tIf something is furry then it is round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tFurry, blue things are quiet.\nFOL:\tall x. ((Furry(x) & Blue(x)) -> Quiet(x))\nTEXT:\tNice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is round and blue then it is not rough.\nFOL:\tall x. ((Round(x) & Blue(x)) -> -Rough(x))\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is not rough.\nFOL:\t-Rough(Harry)\nTEXT:\tRound things are blue.\nFOL:\tall x. (Round(x) -> Blue(x))\nTEXT:\tIf something is round and not big then it is not nice.\nFOL:\tall x. ((Round(x) & -Big(x)) -> -Nice(x))\nTEXT:\tQuiet things are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll blue, round things are nice.\nFOL:\tall x. ((Blue(x) & Round(x)) -> Nice(x))\nTEXT:\tNice, rough things are round.\nFOL:\tall x. ((Nice(x) & Rough(x)) -> Round(x))\nTEXT:\tIf something is furry then it is round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tFurry, blue things are quiet.\nFOL:\tall x. ((Furry(x) & Blue(x)) -> Quiet(x))\nTEXT:\tNice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tIf something is round and blue then it is not rough.\nFOL:\tall x. ((Round(x) & Blue(x)) -> -Rough(x))\nTEXT:\tErin is not blue.\nFOL:\t-Blue(Erin)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the mouse.\nFOL:\tChases(Dog, Mouse)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tIf the bald eagle eats the mouse and the mouse is nice then the mouse is rough.\nFOL:\tall x. all y. ((Eats(x, y) & Nice(y)) -> Rough(y))\nTEXT:\tIf something chases the bald eagle and the bald eagle is rough then the bald eagle eats the cow.\nFOL:\tall x. ((Chases(x, BaldEagle) & Rough(BaldEagle)) -> Eats(BaldEagle, Cow))\nTEXT:\tIf something chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Chases(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf something chases the cow and it is nice then the cow chases the mouse.\nFOL:\tall x. ((Chases(x, Cow) & Nice(x)) -> Chases(Cow, Mouse))\nTEXT:\tIf something needs the bald eagle then it is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tIf something chases the dog then the dog eats the cow.\nFOL:\tall x. (Chases(x, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf something eats the dog and the dog chases the mouse then the dog needs the bald eagle.\nFOL:\tall x. ((Eats(x, Dog) & Chases(Dog, Mouse)) -> Needs(Dog, BaldEagle))\nTEXT:\tIf something is green and it needs the mouse then the mouse eats the cow.\nFOL:\tall x. ((Green(x) & Needs(x, Mouse)) -> Eats(Mouse, Cow))\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the mouse.\nFOL:\tChases(Dog, Mouse)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tIf the bald eagle eats the mouse and the mouse is nice then the mouse is rough.\nFOL:\tall x. all y. ((Eats(x, y) & Nice(y) & BaldEagle(x)) -> Rough(y))\nTEXT:\tIf something chases the bald eagle and the bald eagle is rough then the bald eagle eats the cow.\nFOL:\tall x. (Chases(x, BaldEagle) & Rough(BaldEagle) -> Eats(BaldEagle, Cow))\nTEXT:\tIf something chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Chases(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf something chases the cow and it is nice then the cow chases the mouse.\nFOL:\tall x. ((Chases(x, Cow) & Nice(Cow)) -> Chases(Cow, Mouse))\nTEXT:\tIf something needs the bald eagle then it is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tIf something chases the dog then the dog eats the cow.\nFOL:\tall x. (Chases(x, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf something eats the dog and the dog chases the mouse then the dog needs the bald eagle.\nFOL:\tall x. ((Eats(x, Dog) & Chases(Dog, Mouse)) -> Needs(Dog, BaldEagle))\nTEXT:\tIf something is green and it needs the mouse then the mouse eats the cow.\nFOL:\tall x. ((Green(x) & Needs(x, Mouse)) -> Eats(Mouse, Cow))\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the mouse.\nFOL:\tChases(Dog, Mouse)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tIf the bald eagle eats the mouse and the mouse is nice then the mouse is rough.\nFOL:\tall x. all y. (Eats(x, y) & Nice(y) -> Rough(y)) where x=BaldEagle, y=Mouse\nTEXT:\tIf something chases the bald eagle and the bald eagle is rough then the bald eagle eats the cow.\nFOL:\tall x. (Chases(x, BaldEagle) & Rough(BaldEagle) -> Eats(BaldEagle, Cow))\nTEXT:\tIf something chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Chases(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf something chases the cow and it is nice then the cow chases the mouse.\nFOL:\tall x. (Chases(x, Cow) & Nice(x) -> Chases(Cow, Mouse))\nTEXT:\tIf something needs the bald eagle then it is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tIf something chases the dog then the dog eats the cow.\nFOL:\tall x. (Chases(x, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf something eats the dog and the dog chases the mouse then the dog needs the bald eagle.\nFOL:\tall x. (Eats(x, Dog) & Chases(Dog, Mouse) -> Needs(Dog, BaldEagle))\nTEXT:\tIf something is green and it needs the mouse then the mouse eats the cow.\nFOL:\tall x. (Green(x) & Needs(x, Mouse) -> Eats(Mouse, Cow))\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the mouse.\nFOL:\tChases(Dog, Mouse)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tIf the bald eagle eats the mouse and the mouse is nice then the mouse is rough.\nFOL:\tall x. (Eats(BaldEagle, x) & Nice(x) -> Rough(x))\nTEXT:\tIf something chases the bald eagle and the bald eagle is rough then the bald eagle eats the cow.\nFOL:\tall x. (Chases(x, BaldEagle) & Rough(BaldEagle) -> Eats(BaldEagle, Cow))\nTEXT:\tIf something chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Chases(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf something chases the cow and it is nice then the cow chases the mouse.\nFOL:\tall x. all y. (Chases(x, Cow) & Nice(y) -> Chases(Cow, Mouse))\nTEXT:\tIf something needs the bald eagle then it is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tIf something chases the dog then the dog eats the cow.\nFOL:\tall x. (Chases(x, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf something eats the dog and the dog chases the mouse then the dog needs the bald eagle.\nFOL:\tall x. (Eats(x, Dog) & Chases(Dog, Mouse) -> Needs(Dog, BaldEagle))\nTEXT:\tIf something is green and it needs the mouse then the mouse eats the cow.\nFOL:\tall x. (Green(x) & Needs(x, Mouse) -> Eats(Mouse, Cow))\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the mouse.\nFOL:\tNeeds(BaldEagle, Mouse)\nTEXT:\tThe cow chases the bald eagle.\nFOL:\tChases(Cow, BaldEagle)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the bald eagle.\nFOL:\tChases(Dog, BaldEagle)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the mouse.\nFOL:\tChases(Dog, Mouse)\nTEXT:\tThe dog eats the mouse.\nFOL:\tEats(Dog, Mouse)\nTEXT:\tThe dog is green.\nFOL:\tGreen(Dog)\nTEXT:\tThe mouse needs the bald eagle.\nFOL:\tNeeds(Mouse, BaldEagle)\nTEXT:\tIf the bald eagle eats the mouse and the mouse is nice then the mouse is rough.\nFOL:\tall x. all y. ((Eats(x, y) & Nice(y) & BaldEagle(x) & Mouse(y)) -> Rough(y))\nTEXT:\tIf something chases the bald eagle and the bald eagle is rough then the bald eagle eats the cow.\nFOL:\tall x. ((Chases(x, BaldEagle) & Rough(BaldEagle)) -> Eats(BaldEagle, Cow))\nTEXT:\tIf something chases the bald eagle then the bald eagle is rough.\nFOL:\tall x. (Chases(x, BaldEagle) -> Rough(BaldEagle))\nTEXT:\tIf something chases the cow and it is nice then the cow chases the mouse.\nFOL:\tall x. (Chases(x, Cow) & Nice(x) -> Chases(Cow, Mouse))\nTEXT:\tIf something needs the bald eagle then it is blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf something eats the cow then it is green.\nFOL:\tall x. (Eats(x, Cow) -> Green(x))\nTEXT:\tIf something chases the dog then the dog eats the cow.\nFOL:\tall x. (Chases(x, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf something eats the dog and the dog chases the mouse then the dog needs the bald eagle.\nFOL:\tall x. ((Eats(x, Dog) & Chases(Dog, Mouse)) -> Needs(Dog, BaldEagle))\nTEXT:\tIf something is green and it needs the mouse then the mouse eats the cow.\nFOL:\tall x. ((Green(x) & Needs(x, Mouse)) -> Eats(Mouse, Cow))\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nANSWER:\tFalse\n"], ["TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is kind and Gary is nice then Gary is blue.\nFOL:\t(Kind(Gary) & Nice(Gary)) -> Blue(Gary)\nTEXT:\tIf something is nice and not furry then it is kind.\nFOL:\tall x. ((Nice(x) & -Furry(x)) -> Kind(x))\nTEXT:\tIf something is green then it is nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf Bob is nice then Bob is kind.\nFOL:\tNice(Bob) -> Kind(Bob)\nTEXT:\tIf Bob is big then Bob is white.\nFOL:\tBig(Bob) -> White(Bob)\nTEXT:\tIf Bob is white and Bob is kind then Bob is blue.\nFOL:\t(White(Bob) & Kind(Bob)) -> Blue(Bob)\nTEXT:\tIf something is blue and not green then it is big.\nFOL:\tall x. ((Blue(x) & -Green(x)) -> Big(x))\nTEXT:\tIf something is kind then it is big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is kind and Gary is nice then Gary is blue.\nFOL:\t(Kind(Gary) & Nice(Gary)) -> Blue(Gary)\nTEXT:\tIf something is nice and not furry then it is kind.\nFOL:\tall x. ((Nice(x) & -Furry(x)) -> Kind(x))\nTEXT:\tIf something is green then it is nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf Bob is nice then Bob is kind.\nFOL:\tNice(Bob) -> Kind(Bob)\nTEXT:\tIf Bob is big then Bob is white.\nFOL:\tBig(Bob) -> White(Bob)\nTEXT:\tIf Bob is white and Bob is kind then Bob is blue.\nFOL:\t(White(Bob) & Kind(Bob)) -> Blue(Bob)\nTEXT:\tIf something is blue and not green then it is big.\nFOL:\tall x. ((Blue(x) & -Green(x)) -> Big(x))\nTEXT:\tIf something is kind then it is big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is kind and Gary is nice then Gary is blue.\nFOL:\t(Kind(Gary) & Nice(Gary)) -> Blue(Gary)\nTEXT:\tIf something is nice and not furry then it is kind.\nFOL:\tall x. ((Nice(x) & -Furry(x)) -> Kind(x))\nTEXT:\tIf something is green then it is nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf Bob is nice then Bob is kind.\nFOL:\tNice(Bob) -> Kind(Bob)\nTEXT:\tIf Bob is big then Bob is white.\nFOL:\tBig(Bob) -> White(Bob)\nTEXT:\tIf Bob is white and Bob is kind then Bob is blue.\nFOL:\t(White(Bob) & Kind(Bob)) -> Blue(Bob)\nTEXT:\tIf something is blue and not green then it is big.\nFOL:\tall x. ((Blue(x) & -Green(x)) -> Big(x))\nTEXT:\tIf something is kind then it is big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is kind and Gary is nice then Gary is blue.\nFOL:\t(Kind(Gary) & Nice(Gary)) -> Blue(Gary)\nTEXT:\tIf something is nice and not furry then it is kind.\nFOL:\tall x. ((Nice(x) & -Furry(x)) -> Kind(x))\nTEXT:\tIf something is green then it is nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf Bob is nice then Bob is kind.\nFOL:\tNice(Bob) -> Kind(Bob)\nTEXT:\tIf Bob is big then Bob is white.\nFOL:\tBig(Bob) -> White(Bob)\nTEXT:\tIf Bob is white and Bob is kind then Bob is blue.\nFOL:\t(White(Bob) & Kind(Bob)) -> Blue(Bob)\nTEXT:\tIf something is blue and not green then it is big.\nFOL:\tall x. ((Blue(x) & -Green(x)) -> Big(x))\nTEXT:\tIf something is kind then it is big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tIf Gary is kind and Gary is nice then Gary is blue.\nFOL:\t(Kind(Gary) & Nice(Gary)) -> Blue(Gary)\nTEXT:\tIf something is nice and not furry then it is kind.\nFOL:\tall x. ((Nice(x) & -Furry(x)) -> Kind(x))\nTEXT:\tIf something is green then it is nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf Bob is nice then Bob is kind.\nFOL:\tNice(Bob) -> Kind(Bob)\nTEXT:\tIf Bob is big then Bob is white.\nFOL:\tBig(Bob) -> White(Bob)\nTEXT:\tIf Bob is white and Bob is kind then Bob is blue.\nFOL:\t(White(Bob) & Kind(Bob)) -> Blue(Bob)\nTEXT:\tIf something is blue and not green then it is big.\nFOL:\tall x. ((Blue(x) & -Green(x)) -> Big(x))\nTEXT:\tIf something is kind then it is big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tQuiet people are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tGreen, furry people are white.\nFOL:\tall x. ((Green(x) & Furry(x)) -> White(x))\nTEXT:\tAll white people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf someone is furry then they are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tKind people are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll cold people are white.\nFOL:\tall x. (Cold(x) -> White(x))\nTEXT:\tQuiet, round people are green.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> Green(x))\nTEXT:\tRound, white people are cold.\nFOL:\tall x. ((Round(x) & White(x)) -> Cold(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tQuiet people are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tGreen, furry people are white.\nFOL:\tall x. ((Green(x) & Furry(x)) -> White(x))\nTEXT:\tAll white people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf someone is furry then they are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tKind people are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll cold people are white.\nFOL:\tall x. (Cold(x) -> White(x))\nTEXT:\tQuiet, round people are green.\nFOL:\tall x. ((Quiet(x) & Round(x)) -> Green(x))\nTEXT:\tRound, white people are cold.\nFOL:\tall x. ((Round(x) & White(x)) -> Cold(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tQuiet people are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tGreen, furry people are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tAll white people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf someone is furry then they are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tKind people are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll cold people are white.\nFOL:\tall x. (Cold(x) -> White(x))\nTEXT:\tQuiet, round people are green.\nFOL:\tall x. (Quiet(x) & Round(x) -> Green(x))\nTEXT:\tRound, white people are cold.\nFOL:\tall x. (Round(x) & White(x) -> Cold(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tQuiet people are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tGreen, furry people are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tAll white people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf someone is furry then they are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tKind people are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll cold people are white.\nFOL:\tall x. (Cold(x) -> White(x))\nTEXT:\tQuiet, round people are green.\nFOL:\tall x. (Quiet(x) & Round(x) -> Green(x))\nTEXT:\tRound, white people are cold.\nFOL:\tall x. (Round(x) & White(x) -> Cold(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tQuiet people are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tGreen, furry people are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tAll white people are quiet.\nFOL:\tall x. (White(x) -> Quiet(x))\nTEXT:\tIf someone is furry then they are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tKind people are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll cold people are white.\nFOL:\tall x. (Cold(x) -> White(x))\nTEXT:\tQuiet, round people are green.\nFOL:\tall x. (Quiet(x) & Round(x) -> Green(x))\nTEXT:\tRound, white people are cold.\nFOL:\tall x. (Round(x) & White(x) -> Cold(x))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the rabbit.\nFOL:\tLikes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse does not like the rabbit.\nFOL:\t-Likes(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tIf something is round then it chases the rabbit.\nFOL:\tall x. (Round(x) -> Chases(x, Rabbit))\nTEXT:\tIf something chases the cow then it is young.\nFOL:\tall x. (Chases(x, Cow) -> Young(x))\nTEXT:\tIf the bald eagle likes the rabbit and the rabbit chases the cow then the bald eagle does not visit the cow.\nFOL:\t(Likes(BaldEagle, Rabbit) & Chases(Rabbit, Cow)) -> -Visits(BaldEagle, Cow)\nTEXT:\tIf the bald eagle chases the rabbit then the rabbit is round.\nFOL:\tChases(BaldEagle, Rabbit) -> Round(Rabbit)\nTEXT:\tIf something is young and it likes the rabbit then it is green.\nFOL:\tall x. (Young(x) & Likes(x, Rabbit) -> Green(x))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf the rabbit likes the bald eagle then the bald eagle is round.\nFOL:\tLikes(Rabbit, BaldEagle) -> Round(BaldEagle)\nTEXT:\tIf something chases the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tIf something is green and it likes the cow then it visits the rabbit.\nFOL:\tall x. (Green(x) & Likes(x, Cow) -> Visits(x, Rabbit))\nTEXT:\tThe mouse likes the rabbit.\nFOL:\tLikes(Mouse, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the rabbit.\nFOL:\tLikes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse does not like the rabbit.\nFOL:\t-Likes(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tIf something is round then it chases the rabbit.\nFOL:\tall x. (Round(x) -> Chases(x, Rabbit))\nTEXT:\tIf something chases the cow then it is young.\nFOL:\tall x. (Chases(x, Cow) -> Young(x))\nTEXT:\tIf the bald eagle likes the rabbit and the rabbit chases the cow then the bald eagle does not visit the cow.\nFOL:\t(Likes(BaldEagle, Rabbit) & Chases(Rabbit, Cow)) -> -Visits(BaldEagle, Cow)\nTEXT:\tIf the bald eagle chases the rabbit then the rabbit is round.\nFOL:\tChases(BaldEagle, Rabbit) -> Round(Rabbit)\nTEXT:\tIf something is young and it likes the rabbit then it is green.\nFOL:\tall x. (Young(x) & Likes(x, Rabbit) -> Green(x))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf the rabbit likes the bald eagle then the bald eagle is round.\nFOL:\tLikes(Rabbit, BaldEagle) -> Round(BaldEagle)\nTEXT:\tIf something chases the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tIf something is green and it likes the cow then it visits the rabbit.\nFOL:\tall x. (Green(x) & Likes(x, Cow) -> Visits(x, Rabbit))\nTEXT:\tThe mouse likes the rabbit.\nFOL:\tLikes(Mouse, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the rabbit.\nFOL:\tLikes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse does not like the rabbit.\nFOL:\t-Likes(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tIf something is round then it chases the rabbit.\nFOL:\tall x. (Round(x) -> Chases(x, Rabbit))\nTEXT:\tIf something chases the cow then it is young.\nFOL:\tall x. (Chases(x, Cow) -> Young(x))\nTEXT:\tIf the bald eagle likes the rabbit and the rabbit chases the cow then the bald eagle does not visit the cow.\nFOL:\t(Likes(BaldEagle, Rabbit) & Chases(Rabbit, Cow)) -> -Visits(BaldEagle, Cow)\nTEXT:\tIf the bald eagle chases the rabbit then the rabbit is round.\nFOL:\tChases(BaldEagle, Rabbit) -> Round(Rabbit)\nTEXT:\tIf something is young and it likes the rabbit then it is green.\nFOL:\tall x. ((Young(x) & Likes(x, Rabbit)) -> Green(x))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf the rabbit likes the bald eagle then the bald eagle is round.\nFOL:\tLikes(Rabbit, BaldEagle) -> Round(BaldEagle)\nTEXT:\tIf something chases the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tIf something is green and it likes the cow then it visits the rabbit.\nFOL:\tall x. ((Green(x) & Likes(x, Cow)) -> Visits(x, Rabbit))\nTEXT:\tThe mouse likes the rabbit.\nFOL:\tLikes(Mouse, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChase(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the rabbit.\nFOL:\tLike(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisit(BaldEagle, Cow)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChase(Mouse, Rabbit)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLike(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLike(Mouse, Cow)\nTEXT:\tThe mouse does not like the rabbit.\nFOL:\t-Like(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChase(Rabbit, Mouse)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLike(Rabbit, Cow)\nTEXT:\tIf something is round then it chases the rabbit.\nFOL:\tall x. (Round(x) -> Chase(x, Rabbit))\nTEXT:\tIf something chases the cow then it is young.\nFOL:\tall x. (Chase(x, Cow) -> Young(x))\nTEXT:\tIf the bald eagle likes the rabbit and the rabbit chases the cow then the bald eagle does not visit the cow.\nFOL:\t(Like(BaldEagle, Rabbit) & Chase(Rabbit, Cow)) -> -Visit(BaldEagle, Cow)\nTEXT:\tIf the bald eagle chases the rabbit then the rabbit is round.\nFOL:\tChase(BaldEagle, Rabbit) -> Round(Rabbit)\nTEXT:\tIf something is young and it likes the rabbit then it is green.\nFOL:\tall x. ((Young(x) & Like(x, Rabbit)) -> Green(x))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf the rabbit likes the bald eagle then the bald eagle is round.\nFOL:\tLike(Rabbit, BaldEagle) -> Round(BaldEagle)\nTEXT:\tIf something chases the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Chase(x, BaldEagle) -> Like(x, BaldEagle))\nTEXT:\tIf something is green and it likes the cow then it visits the rabbit.\nFOL:\tall x. ((Green(x) & Like(x, Cow)) -> Visit(x, Rabbit))\nTEXT:\tThe mouse likes the rabbit.\nFOL:\tLike(Mouse, Rabbit)\nANSWER:\tFalse\n", "TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle likes the rabbit.\nFOL:\tLikes(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow is not young.\nFOL:\t-Young(Cow)\nTEXT:\tThe mouse chases the rabbit.\nFOL:\tChases(Mouse, Rabbit)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the cow.\nFOL:\tLikes(Mouse, Cow)\nTEXT:\tThe mouse does not like the rabbit.\nFOL:\t-Likes(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the mouse.\nFOL:\tChases(Rabbit, Mouse)\nTEXT:\tThe rabbit is kind.\nFOL:\tKind(Rabbit)\nTEXT:\tThe rabbit is young.\nFOL:\tYoung(Rabbit)\nTEXT:\tThe rabbit likes the cow.\nFOL:\tLikes(Rabbit, Cow)\nTEXT:\tIf something is round then it chases the rabbit.\nFOL:\tall x. (Round(x) -> Chases(x, Rabbit))\nTEXT:\tIf something chases the cow then it is young.\nFOL:\tall x. (Chases(x, Cow) -> Young(x))\nTEXT:\tIf the bald eagle likes the rabbit and the rabbit chases the cow then the bald eagle does not visit the cow.\nFOL:\t(Likes(BaldEagle, Rabbit) & Chases(Rabbit, Cow) -> -Visits(BaldEagle, Cow))\nTEXT:\tIf the bald eagle chases the rabbit then the rabbit is round.\nFOL:\t(Chases(BaldEagle, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something is young and it likes the rabbit then it is green.\nFOL:\tall x. (Young(x) & Likes(x, Rabbit) -> Green(x))\nTEXT:\tIf something is green then it is round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf the rabbit likes the bald eagle then the bald eagle is round.\nFOL:\t(Likes(Rabbit, BaldEagle) -> Round(BaldEagle))\nTEXT:\tIf something chases the bald eagle then it likes the bald eagle.\nFOL:\tall x. (Chases(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tIf something is green and it likes the cow then it visits the rabbit.\nFOL:\tall x. (Green(x) & Likes(x, Cow) -> Visits(x, Rabbit))\nTEXT:\tThe mouse likes the rabbit.\nFOL:\tLikes(Mouse, Rabbit)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tIf Anne is young then Anne is red.\nFOL:\tYoung(Anne) -> Red(Anne)\nTEXT:\tAll smart people are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll young people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf someone is young and white then they are blue.\nFOL:\tall x. ((Young(x) & White(x)) -> Blue(x))\nTEXT:\tIf someone is quiet and red then they are white.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> White(x))\nTEXT:\tAll red, blue people are smart.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Smart(x))\nTEXT:\tAll white people are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tSmart, red people are round.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Round(x))\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tIf Anne is young then Anne is red.\nFOL:\tYoung(Anne) -> Red(Anne)\nTEXT:\tAll smart people are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll young people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf someone is young and white then they are blue.\nFOL:\tall x. ((Young(x) & White(x)) -> Blue(x))\nTEXT:\tIf someone is quiet and red then they are white.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> White(x))\nTEXT:\tAll red, blue people are smart.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Smart(x))\nTEXT:\tAll white people are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tSmart, red people are round.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Round(x))\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tIf Anne is young then Anne is red.\nFOL:\tYoung(Anne) -> Red(Anne)\nTEXT:\tAll smart people are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll young people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf someone is young and white then they are blue.\nFOL:\tall x. ((Young(x) & White(x)) -> Blue(x))\nTEXT:\tIf someone is quiet and red then they are white.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> White(x))\nTEXT:\tAll red, blue people are smart.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Smart(x))\nTEXT:\tAll white people are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tSmart, red people are round.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Round(x))\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tIf Anne is young then Anne is red.\nFOL:\tYoung(Anne) -> Red(Anne)\nTEXT:\tAll smart people are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll young people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf someone is young and white then they are blue.\nFOL:\tall x. ((Young(x) & White(x)) -> Blue(x))\nTEXT:\tIf someone is quiet and red then they are white.\nFOL:\tall x. ((Quiet(x) & Red(x)) -> White(x))\nTEXT:\tAll red, blue people are smart.\nFOL:\tall x. ((Red(x) & Blue(x)) -> Smart(x))\nTEXT:\tAll white people are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tSmart, red people are round.\nFOL:\tall x. ((Smart(x) & Red(x)) -> Round(x))\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tIf Anne is young then Anne is red.\nFOL:\tYoung(Anne) -> Red(Anne)\nTEXT:\tAll smart people are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll young people are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf someone is young and white then they are blue.\nFOL:\tall x. (Young(x) & White(x) -> Blue(x))\nTEXT:\tIf someone is quiet and red then they are white.\nFOL:\tall x. (Quiet(x) & Red(x) -> White(x))\nTEXT:\tAll red, blue people are smart.\nFOL:\tall x. (Red(x) & Blue(x) -> Smart(x))\nTEXT:\tAll white people are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tSmart, red people are round.\nFOL:\tall x. (Smart(x) & Red(x) -> Round(x))\nTEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog visits the rabbit.\nFOL:\tVisits(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone visits the cat then they are cold.\nFOL:\tall x. (Visits(x, Cat) -> Cold(x))\nTEXT:\tIf someone visits the cat then they need the rabbit.\nFOL:\tall x. (Visits(x, Cat) -> Needs(x, Rabbit))\nTEXT:\tIf someone likes the dog then they visit the cat.\nFOL:\tall x. (Likes(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone is rough then they like the rabbit.\nFOL:\tall x. (Rough(x) -> Likes(x, Rabbit))\nTEXT:\tIf someone needs the dog then they visit the cat.\nFOL:\tall x. (Needs(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the dog.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Dog))\nTEXT:\tIf the dog visits the rabbit and the rabbit visits the dog then the dog is nice.\nFOL:\tVisits(Dog, Rabbit) & Visits(Rabbit, Dog) -> Nice(Dog)\nTEXT:\tThe cat does not need the cat.\nFOL:\t-Needs(Cat, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog visits the rabbit.\nFOL:\tVisits(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone visits the cat then they are cold.\nFOL:\tall x. (Visits(x, Cat) -> Cold(x))\nTEXT:\tIf someone visits the cat then they need the rabbit.\nFOL:\tall x. (Visits(x, Cat) -> Needs(x, Rabbit))\nTEXT:\tIf someone likes the dog then they visit the cat.\nFOL:\tall x. (Likes(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone is rough then they like the rabbit.\nFOL:\tall x. (Rough(x) -> Likes(x, Rabbit))\nTEXT:\tIf someone needs the dog then they visit the cat.\nFOL:\tall x. (Needs(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the dog.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Dog))\nTEXT:\tIf the dog visits the rabbit and the rabbit visits the dog then the dog is nice.\nFOL:\t(Visits(Dog, Rabbit) & Visits(Rabbit, Dog)) -> Nice(Dog)\nTEXT:\tThe cat does not need the cat.\nFOL:\t-Needs(Cat, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog visits the rabbit.\nFOL:\tVisits(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone visits the cat then they are cold.\nFOL:\tall x. (Visits(x, Cat) -> Cold(x))\nTEXT:\tIf someone visits the cat then they need the rabbit.\nFOL:\tall x. (Visits(x, Cat) -> Needs(x, Rabbit))\nTEXT:\tIf someone likes the dog then they visit the cat.\nFOL:\tall x. (Likes(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone is rough then they like the rabbit.\nFOL:\tall x. (Rough(x) -> Likes(x, Rabbit))\nTEXT:\tIf someone needs the dog then they visit the cat.\nFOL:\tall x. (Needs(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the dog.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Dog))\nTEXT:\tIf the dog visits the rabbit and the rabbit visits the dog then the dog is nice.\nFOL:\t(Visits(Dog, Rabbit) & Visits(Rabbit, Dog)) -> Nice(Dog)\nTEXT:\tThe cat does not need the cat.\nFOL:\t-Needs(Cat, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog visits the rabbit.\nFOL:\tVisits(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone visits the cat then they are cold.\nFOL:\tall x. (Visits(x, Cat) -> Cold(x))\nTEXT:\tIf someone visits the cat then they need the rabbit.\nFOL:\tall x. (Visits(x, Cat) -> Needs(x, Rabbit))\nTEXT:\tIf someone likes the dog then they visit the cat.\nFOL:\tall x. (Likes(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone is rough then they like the rabbit.\nFOL:\tall x. (Rough(x) -> Likes(x, Rabbit))\nTEXT:\tIf someone needs the dog then they visit the cat.\nFOL:\tall x. (Needs(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the dog.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Dog))\nTEXT:\tIf the dog visits the rabbit and the rabbit visits the dog then the dog is nice.\nFOL:\t(Visits(Dog, Rabbit) & Visits(Rabbit, Dog)) -> Nice(Dog)\nTEXT:\tThe cat does not need the cat.\nFOL:\t-Needs(Cat, Cat)\nANSWER:\tTrue\n", "TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is rough.\nFOL:\tRough(Cat)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe cow likes the dog.\nFOL:\tLikes(Cow, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog visits the rabbit.\nFOL:\tVisits(Dog, Rabbit)\nTEXT:\tThe rabbit is blue.\nFOL:\tBlue(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit visits the cow.\nFOL:\tVisits(Rabbit, Cow)\nTEXT:\tIf someone visits the cat then they are cold.\nFOL:\tall x. (Visits(x, Cat) -> Cold(x))\nTEXT:\tIf someone visits the cat then they need the rabbit.\nFOL:\tall x. (Visits(x, Cat) -> Needs(x, Rabbit))\nTEXT:\tIf someone likes the dog then they visit the cat.\nFOL:\tall x. (Likes(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone is rough then they like the rabbit.\nFOL:\tall x. (Rough(x) -> Likes(x, Rabbit))\nTEXT:\tIf someone needs the dog then they visit the cat.\nFOL:\tall x. (Needs(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the dog.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Dog))\nTEXT:\tIf the dog visits the rabbit and the rabbit visits the dog then the dog is nice.\nFOL:\t(Visits(Dog, Rabbit) & Visits(Rabbit, Dog)) -> Nice(Dog)\nTEXT:\tThe cat does not need the cat.\nFOL:\t-Needs(Cat, Cat)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tIf something likes the rabbit then it likes the cow.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Cow))\nTEXT:\tIf something visits the rabbit and it needs the mouse then it needs the rabbit.\nFOL:\tall x. ((Visits(x, Rabbit) & Needs(x, Mouse)) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the rabbit and the rabbit needs the bald eagle then the bald eagle needs the rabbit.\nFOL:\tall x. ((Likes(x, Rabbit) & Needs(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf something likes the cow then it visits the bald eagle.\nFOL:\tall x. (Likes(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something is nice then it needs the rabbit.\nFOL:\tall x. (Nice(x) -> Needs(x, Rabbit))\nTEXT:\tIf the cow is nice and the cow likes the rabbit then the cow is green.\nFOL:\t(Nice(Cow) & Likes(Cow, Rabbit)) -> Green(Cow)\nTEXT:\tIf something visits the bald eagle then the bald eagle likes the rabbit.\nFOL:\tall x. (Visits(x, BaldEagle) -> Likes(BaldEagle, Rabbit))\nTEXT:\tIf something is kind and round then it likes the mouse.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Likes(x, Mouse))\nTEXT:\tIf something visits the rabbit then it likes the bald eagle.\nFOL:\tall x. (Visits(x, Rabbit) -> Likes(x, BaldEagle))\nTEXT:\tThe bald eagle does not visit the bald eagle.\nFOL:\t-Visits(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tIf something likes the rabbit then it likes the cow.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Cow))\nTEXT:\tIf something visits the rabbit and it needs the mouse then it needs the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) & Needs(x, Mouse) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the rabbit and the rabbit needs the bald eagle then the bald eagle needs the rabbit.\nFOL:\tall x. (Likes(x, Rabbit) & Needs(Rabbit, BaldEagle) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf something likes the cow then it visits the bald eagle.\nFOL:\tall x. (Likes(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something is nice then it needs the rabbit.\nFOL:\tall x. (Nice(x) -> Needs(x, Rabbit))\nTEXT:\tIf the cow is nice and the cow likes the rabbit then the cow is green.\nFOL:\t(Nice(Cow) & Likes(Cow, Rabbit)) -> Green(Cow)\nTEXT:\tIf something visits the bald eagle then the bald eagle likes the rabbit.\nFOL:\tall x. (Visits(x, BaldEagle) -> Likes(BaldEagle, Rabbit))\nTEXT:\tIf something is kind and round then it likes the mouse.\nFOL:\tall x. (Kind(x) & Round(x) -> Likes(x, Mouse))\nTEXT:\tIf something visits the rabbit then it likes the bald eagle.\nFOL:\tall x. (Visits(x, Rabbit) -> Likes(x, BaldEagle))\nTEXT:\tThe bald eagle does not visit the bald eagle.\nFOL:\t-Visits(BaldEagle, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tIf something likes the rabbit then it likes the cow.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Cow))\nTEXT:\tIf something visits the rabbit and it needs the mouse then it needs the rabbit.\nFOL:\tall x. ((Visits(x, Rabbit) & Needs(x, Mouse)) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the rabbit and the rabbit needs the bald eagle then the bald eagle needs the rabbit.\nFOL:\tall x. ((Likes(x, Rabbit) & Needs(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf something likes the cow then it visits the bald eagle.\nFOL:\tall x. (Likes(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something is nice then it needs the rabbit.\nFOL:\tall x. (Nice(x) -> Needs(x, Rabbit))\nTEXT:\tIf the cow is nice and the cow likes the rabbit then the cow is green.\nFOL:\t(Nice(Cow) & Likes(Cow, Rabbit)) -> Green(Cow)\nTEXT:\tIf something visits the bald eagle then the bald eagle likes the rabbit.\nFOL:\tall x. (Visits(x, BaldEagle) -> Likes(BaldEagle, Rabbit))\nTEXT:\tIf something is kind and round then it likes the mouse.\nFOL:\tall x. ((Kind(x) & Round(x)) -> Likes(x, Mouse))\nTEXT:\tIf something visits the rabbit then it likes the bald eagle.\nFOL:\tall x. (Visits(x, Rabbit) -> Likes(x, BaldEagle))\nTEXT:\tThe bald eagle does not visit the bald eagle.\nFOL:\t-Visits(BaldEagle, BaldEagle)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tIsGreen(Mouse)\nTEXT:\tThe mouse is nice.\nFOL:\tIsNice(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tIsYoung(Mouse)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tIf something likes the rabbit then it likes the cow.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Cow))\nTEXT:\tIf something visits the rabbit and it needs the mouse then it needs the rabbit.\nFOL:\tall x. ((Visits(x, Rabbit) & Needs(x, Mouse)) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the rabbit and the rabbit needs the bald eagle then the bald eagle needs the rabbit.\nFOL:\tall x. ((Likes(x, Rabbit) & Needs(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf something likes the cow then it visits the bald eagle.\nFOL:\tall x. (Likes(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something is nice then it needs the rabbit.\nFOL:\tall x. (IsNice(x) -> Needs(x, Rabbit))\nTEXT:\tIf the cow is nice and the cow likes the rabbit then the cow is green.\nFOL:\t(IsNice(Cow) & Likes(Cow, Rabbit)) -> IsGreen(Cow)\nTEXT:\tIf something visits the bald eagle then the bald eagle likes the rabbit.\nFOL:\tall x. (Visits(x, BaldEagle) -> Likes(BaldEagle, Rabbit))\nTEXT:\tIf something is kind and round then it likes the mouse.\nFOL:\tall x. ((IsKind(x) & IsRound(x)) -> Likes(x, Mouse))\nTEXT:\tIf something visits the rabbit then it likes the bald eagle.\nFOL:\tall x. (Visits(x, Rabbit) -> Likes(x, BaldEagle))\nTEXT:\tThe bald eagle does not visit the bald eagle.\nFOL:\t-Visits(BaldEagle, BaldEagle)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle visits the cow.\nFOL:\tVisits(BaldEagle, Cow)\nTEXT:\tThe cow likes the rabbit.\nFOL:\tLikes(Cow, Rabbit)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is nice.\nFOL:\tNice(Mouse)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe rabbit likes the mouse.\nFOL:\tLikes(Rabbit, Mouse)\nTEXT:\tIf something likes the rabbit then it likes the cow.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(x, Cow))\nTEXT:\tIf something visits the rabbit and it needs the mouse then it needs the rabbit.\nFOL:\tall x. (Visits(x, Rabbit) & Needs(x, Mouse) -> Needs(x, Rabbit))\nTEXT:\tIf something likes the rabbit and the rabbit needs the bald eagle then the bald eagle needs the rabbit.\nFOL:\tall x. (Likes(x, Rabbit) & Needs(Rabbit, BaldEagle) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf something likes the cow then it visits the bald eagle.\nFOL:\tall x. (Likes(x, Cow) -> Visits(x, BaldEagle))\nTEXT:\tIf something is nice then it needs the rabbit.\nFOL:\tall x. (Nice(x) -> Needs(x, Rabbit))\nTEXT:\tIf the cow is nice and the cow likes the rabbit then the cow is green.\nFOL:\t(Nice(Cow) & Likes(Cow, Rabbit)) -> Green(Cow)\nTEXT:\tIf something visits the bald eagle then the bald eagle likes the rabbit.\nFOL:\tall x. (Visits(x, BaldEagle) -> Likes(BaldEagle, Rabbit))\nTEXT:\tIf something is kind and round then it likes the mouse.\nFOL:\tall x. (Kind(x) & Round(x) -> Likes(x, Mouse))\nTEXT:\tIf something visits the rabbit then it likes the bald eagle.\nFOL:\tall x. (Visits(x, Rabbit) -> Likes(x, BaldEagle))\nTEXT:\tThe bald eagle does not visit the bald eagle.\nFOL:\t-Visits(BaldEagle, BaldEagle)\nANSWER:\tTrue\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is quiet and cold then they are rough.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Rough(x))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf someone is quiet and rough then they are big.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Fiona is red then Fiona is cold.\nFOL:\tRed(Fiona) -> Cold(Fiona)\nTEXT:\tAll red, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tQuiet, smart people are rough.\nFOL:\tall x. ((Quiet(x) & Smart(x)) -> Rough(x))\nTEXT:\tAll cold people are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is quiet and cold then they are rough.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Rough(x))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf someone is quiet and rough then they are big.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Fiona is red then Fiona is cold.\nFOL:\tRed(Fiona) -> Cold(Fiona)\nTEXT:\tAll red, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tQuiet, smart people are rough.\nFOL:\tall x. ((Quiet(x) & Smart(x)) -> Rough(x))\nTEXT:\tAll cold people are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is quiet and cold then they are rough.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Rough(x))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf someone is quiet and rough then they are big.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Fiona is red then Fiona is cold.\nFOL:\tRed(Fiona) -> Cold(Fiona)\nTEXT:\tAll red, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tQuiet, smart people are rough.\nFOL:\tall x. ((Quiet(x) & Smart(x)) -> Rough(x))\nTEXT:\tAll cold people are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is quiet and cold then they are rough.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Rough(x))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf someone is quiet and rough then they are big.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Fiona is red then Fiona is cold.\nFOL:\tRed(Fiona) -> Cold(Fiona)\nTEXT:\tAll red, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tQuiet, smart people are rough.\nFOL:\tall x. ((Quiet(x) & Smart(x)) -> Rough(x))\nTEXT:\tAll cold people are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is quiet and cold then they are rough.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Rough(x))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tBig people are nice.\nFOL:\tall x. (Big(x) -> Nice(x))\nTEXT:\tAll red people are quiet.\nFOL:\tall x. (Red(x) -> Quiet(x))\nTEXT:\tIf someone is quiet and rough then they are big.\nFOL:\tall x. ((Quiet(x) & Rough(x)) -> Big(x))\nTEXT:\tIf Fiona is red then Fiona is cold.\nFOL:\t(Red(Fiona) -> Cold(Fiona))\nTEXT:\tAll red, nice people are smart.\nFOL:\tall x. ((Red(x) & Nice(x)) -> Smart(x))\nTEXT:\tQuiet, smart people are rough.\nFOL:\tall x. ((Quiet(x) & Smart(x)) -> Rough(x))\nTEXT:\tAll cold people are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tHarry is not big.\nFOL:\t-Big(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is red then it is kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is rough and red then it is nice.\nFOL:\tall x. (Rough(x) & Red(x) -> Nice(x))\nTEXT:\tAll furry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tIf something is rough then it is kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is red then it is kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is rough and red then it is nice.\nFOL:\tall x. ((Rough(x) & Red(x)) -> Nice(x))\nTEXT:\tAll furry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tIf something is rough then it is kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is red then it is kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is rough and red then it is nice.\nFOL:\tall x. (Rough(x) & Red(x) -> Nice(x))\nTEXT:\tAll furry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tIf something is rough then it is kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is red then it is kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is rough and red then it is nice.\nFOL:\tall x. (Rough(x) & Red(x) -> Nice(x))\nTEXT:\tAll furry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tIf something is rough then it is kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is red then it is kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is rough and red then it is nice.\nFOL:\tall x. (Rough(x) & Red(x) -> Nice(x))\nTEXT:\tAll furry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tQuiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tIf something is rough then it is kind.\nFOL:\tall x. (Rough(x) -> Kind(x))\nTEXT:\tAnne is not furry.\nFOL:\t-Furry(Anne)\nANSWER:\tFalse\n"], ["TEXT:\tThe bear does not see the dog.\nFOL:\t-See(Bear, Dog)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSee(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSee(Rabbit, Dog)\nTEXT:\tIf the lion eats the bear then the bear does not eat the dog.\nFOL:\tall x. all y. ((Lion(x) & Bear(y) & Eats(x, y)) -> -Eats(y, Dog))\nTEXT:\tIf the bear does not see the dog then the bear is red.\nFOL:\tall x. ((Bear(x) & -See(x, Dog)) -> Red(x))\nTEXT:\tIf something eats the rabbit then the rabbit eats the bear.\nFOL:\tall x. ((Eats(x, Rabbit)) -> Eats(Rabbit, Bear))\nTEXT:\tIf something eats the bear then the bear needs the lion.\nFOL:\tall x. ((Eats(x, Bear)) -> Needs(Bear, Lion))\nTEXT:\tIf something needs the lion then the lion eats the bear.\nFOL:\tall x. ((Needs(x, Lion)) -> Eats(Lion, Bear))\nTEXT:\tIf something is red and it eats the bear then the bear does not see the lion.\nFOL:\tall x. ((Red(x) & Eats(x, Bear)) -> -See(Bear, Lion))\nTEXT:\tIf something is red and it does not eat the dog then the dog sees the rabbit.\nFOL:\tall x. ((Red(x) & -Eats(x, Dog)) -> See(Dog, Rabbit))\nTEXT:\tIf something sees the rabbit then it is not big.\nFOL:\tall x. (See(x, Rabbit) -> -Big(x))\nTEXT:\tIf something is rough and it does not see the rabbit then the rabbit eats the lion.\nFOL:\tall x. ((Rough(x) & -See(x, Rabbit)) -> Eats(Rabbit, Lion))\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not see the dog.\nFOL:\t-See(Bear, Dog)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSee(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSee(Rabbit, Dog)\nTEXT:\tIf the lion eats the bear then the bear does not eat the dog.\nFOL:\tall x. all y. (Eats(x, y) & Lion(x) & Bear(y) -> -Eats(y, Dog))\nTEXT:\tIf the bear does not see the dog then the bear is red.\nFOL:\tall x. all y. (-See(x, y) & Bear(x) & Dog(y) -> Red(x))\nTEXT:\tIf something eats the rabbit then the rabbit eats the bear.\nFOL:\tall x. all y. (Eats(x, y) & Rabbit(y) -> Eats(y, Bear))\nTEXT:\tIf something eats the bear then the bear needs the lion.\nFOL:\tall x. all y. (Eats(x, y) & Bear(y) -> Needs(y, Lion))\nTEXT:\tIf something needs the lion then the lion eats the bear.\nFOL:\tall x. all y. (Needs(x, y) & Lion(y) -> Eats(y, Bear))\nTEXT:\tIf something is red and it eats the bear then the bear does not see the lion.\nFOL:\tall x. all y. all z. (Red(x) & Eats(x, y) & Bear(y) -> -See(y, z) & Lion(z))\nTEXT:\tIf something is red and it does not eat the dog then the dog sees the rabbit.\nFOL:\tall x. all y. all z. (Red(x) & -Eats(x, y) & Dog(y) -> See(y, z) & Rabbit(z))\nTEXT:\tIf something sees the rabbit then it is not big.\nFOL:\tall x. all y. (See(x, y) & Rabbit(y) -> -Big(x))\nTEXT:\tIf something is rough and it does not see the rabbit then the rabbit eats the lion.\nFOL:\tall x. all y. all z. (Rough(x) & -See(x, y) & Rabbit(y) -> Eats(y, z) & Lion(z))\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not see the dog.\nFOL:\t-Sees(Bear, Dog)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tIf the lion eats the bear then the bear does not eat the dog.\nFOL:\tall x. all y. (Eats(x, y) & Lion(x) & Bear(y) -> -Eats(y, Dog))\nTEXT:\tIf the bear does not see the dog then the bear is red.\nFOL:\tall x. (Bear(x) & -Sees(x, Dog) -> Red(x))\nTEXT:\tIf something eats the rabbit then the rabbit eats the bear.\nFOL:\tall x. all y. (Eats(x, y) & Rabbit(y) -> Eats(y, Bear))\nTEXT:\tIf something eats the bear then the bear needs the lion.\nFOL:\tall x. all y. (Eats(x, y) & Bear(y) -> Needs(y, Lion))\nTEXT:\tIf something needs the lion then the lion eats the bear.\nFOL:\tall x. all y. (Needs(x, y) & Lion(y) -> Eats(y, Bear))\nTEXT:\tIf something is red and it eats the bear then the bear does not see the lion.\nFOL:\tall x. all y. (Red(x) & Eats(x, y) & Bear(y) -> -Sees(y, Lion))\nTEXT:\tIf something is red and it does not eat the dog then the dog sees the rabbit.\nFOL:\tall x. all y. (Red(x) & -Eats(x, Dog) -> Sees(Dog, Rabbit))\nTEXT:\tIf something sees the rabbit then it is not big.\nFOL:\tall x. all y. (Sees(x, y) & Rabbit(y) -> -Big(x))\nTEXT:\tIf something is rough and it does not see the rabbit then the rabbit eats the lion.\nFOL:\tall x. all y. (Rough(x) & -Sees(x, Rabbit) -> Eats(Rabbit, Lion))\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not see the dog.\nFOL:\t-Sees(Bear, Dog)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tIf the lion eats the bear then the bear does not eat the dog.\nFOL:\tall x. (Eats(Lion, x) & Bear(x) -> -Eats(x, Dog))\nTEXT:\tIf the bear does not see the dog then the bear is red.\nFOL:\tall x. (-Sees(Bear, Dog) & Bear(x) -> Red(x))\nTEXT:\tIf something eats the rabbit then the rabbit eats the bear.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(Rabbit, Bear))\nTEXT:\tIf something eats the bear then the bear needs the lion.\nFOL:\tall x. (Eats(x, Bear) -> Needs(Bear, Lion))\nTEXT:\tIf something needs the lion then the lion eats the bear.\nFOL:\tall x. (Needs(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tIf something is red and it eats the bear then the bear does not see the lion.\nFOL:\tall x. (Red(x) & Eats(x, Bear) -> -Sees(Bear, Lion))\nTEXT:\tIf something is red and it does not eat the dog then the dog sees the rabbit.\nFOL:\tall x. (Red(x) & -Eats(x, Dog) -> Sees(Dog, Rabbit))\nTEXT:\tIf something sees the rabbit then it is not big.\nFOL:\tall x. (Sees(x, Rabbit) -> -Big(x))\nTEXT:\tIf something is rough and it does not see the rabbit then the rabbit eats the lion.\nFOL:\tall x. (Rough(x) & -Sees(x, Rabbit) -> Eats(Rabbit, Lion))\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bear does not see the dog.\nFOL:\t-See(Bear, Dog)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion needs the rabbit.\nFOL:\tNeeds(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSee(Lion, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSee(Rabbit, Dog)\nTEXT:\tIf the lion eats the bear then the bear does not eat the dog.\nFOL:\tEats(Lion, Bear) -> -Eats(Bear, Dog)\nTEXT:\tIf the bear does not see the dog then the bear is red.\nFOL:\t-See(Bear, Dog) -> Red(Bear)\nTEXT:\tIf something eats the rabbit then the rabbit eats the bear.\nFOL:\tall x. (Eats(x, Rabbit) -> Eats(Rabbit, Bear))\nTEXT:\tIf something eats the bear then the bear needs the lion.\nFOL:\tall x. (Eats(x, Bear) -> Needs(Bear, Lion))\nTEXT:\tIf something needs the lion then the lion eats the bear.\nFOL:\tall x. (Needs(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tIf something is red and it eats the bear then the bear does not see the lion.\nFOL:\tall x. ((Red(x) & Eats(x, Bear)) -> -See(Bear, Lion))\nTEXT:\tIf something is red and it does not eat the dog then the dog sees the rabbit.\nFOL:\tall x. ((Red(x) & -Eats(x, Dog)) -> See(Dog, Rabbit))\nTEXT:\tIf something sees the rabbit then it is not big.\nFOL:\tall x. (See(x, Rabbit) -> -Big(x))\nTEXT:\tIf something is rough and it does not see the rabbit then the rabbit eats the lion.\nFOL:\tall x. ((Rough(x) & -See(x, Rabbit)) -> Eats(Rabbit, Lion))\nTEXT:\tThe bear needs the lion.\nFOL:\tNeeds(Bear, Lion)\nANSWER:\tTrue\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf Erin is rough then Erin is furry.\nFOL:\tRough(Erin) -> Furry(Erin)\nTEXT:\tIf someone is round and blue then they are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, furry people are round.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Round(x))\nTEXT:\tIf Bob is quiet and Bob is round then Bob is kind.\nFOL:\t(Quiet(Bob) & Round(Bob)) -> Kind(Bob)\nTEXT:\tIf someone is kind then they are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll furry, cold people are blue.\nFOL:\tall x. (Furry(x) & Cold(x) -> Blue(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf Erin is rough then Erin is furry.\nFOL:\tRough(Erin) -> Furry(Erin)\nTEXT:\tIf someone is round and blue then they are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, furry people are round.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Round(x))\nTEXT:\tIf Bob is quiet and Bob is round then Bob is kind.\nFOL:\t(Quiet(Bob) & Round(Bob)) -> Kind(Bob)\nTEXT:\tIf someone is kind then they are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll furry, cold people are blue.\nFOL:\tall x. (Furry(x) & Cold(x) -> Blue(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf Erin is rough then Erin is furry.\nFOL:\tRough(Erin) -> Furry(Erin)\nTEXT:\tIf someone is round and blue then they are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, furry people are round.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Round(x))\nTEXT:\tIf Bob is quiet and Bob is round then Bob is kind.\nFOL:\t(Quiet(Bob) & Round(Bob)) -> Kind(Bob)\nTEXT:\tIf someone is kind then they are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll furry, cold people are blue.\nFOL:\tall x. (Furry(x) & Cold(x) -> Blue(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tUncertain\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf Erin is rough then Erin is furry.\nFOL:\tRough(Erin) -> Furry(Erin)\nTEXT:\tIf someone is round and blue then they are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, furry people are round.\nFOL:\tall x. ((Quiet(x) & Furry(x)) -> Round(x))\nTEXT:\tIf Bob is quiet and Bob is round then Bob is kind.\nFOL:\t(Quiet(Bob) & Round(Bob)) -> Kind(Bob)\nTEXT:\tIf someone is kind then they are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll furry, cold people are blue.\nFOL:\tall x. ((Furry(x) & Cold(x)) -> Blue(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tTrue\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is not furry.\nFOL:\t-Furry(Harry)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tIf Erin is rough then Erin is furry.\nFOL:\tRough(Erin) -> Furry(Erin)\nTEXT:\tIf someone is round and blue then they are rough.\nFOL:\tall x. (Round(x) & Blue(x) -> Rough(x))\nTEXT:\tQuiet, furry people are round.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Round(x))\nTEXT:\tIf Bob is quiet and Bob is round then Bob is kind.\nFOL:\t(Quiet(Bob) & Round(Bob)) -> Kind(Bob)\nTEXT:\tIf someone is kind then they are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tAll furry, cold people are blue.\nFOL:\tall x. (Furry(x) & Cold(x) -> Blue(x))\nTEXT:\tBob is not blue.\nFOL:\t-Blue(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Bob is big then Bob is nice.\nFOL:\tBig(Bob) -> Nice(Bob)\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is kind and white then they are smart.\nFOL:\tall x. ((Kind(x) & White(x)) -> Smart(x))\nTEXT:\tNice, round people are kind.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Kind(x))\nTEXT:\tKind, white people are nice.\nFOL:\tall x. ((Kind(x) & White(x)) -> Nice(x))\nTEXT:\tIf someone is smart then they are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tKind, nice people are white.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Bob is big then Bob is nice.\nFOL:\tBig(Bob) -> Nice(Bob)\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is kind and white then they are smart.\nFOL:\tall x. (Kind(x) & White(x) -> Smart(x))\nTEXT:\tNice, round people are kind.\nFOL:\tall x. (Nice(x) & Round(x) -> Kind(x))\nTEXT:\tKind, white people are nice.\nFOL:\tall x. (Kind(x) & White(x) -> Nice(x))\nTEXT:\tIf someone is smart then they are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tKind, nice people are white.\nFOL:\tall x. (Kind(x) & Nice(x) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Bob is big then Bob is nice.\nFOL:\tBig(Bob) -> Nice(Bob)\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is kind and white then they are smart.\nFOL:\tall x. ((Kind(x) & White(x)) -> Smart(x))\nTEXT:\tNice, round people are kind.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Kind(x))\nTEXT:\tKind, white people are nice.\nFOL:\tall x. ((Kind(x) & White(x)) -> Nice(x))\nTEXT:\tIf someone is smart then they are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tKind, nice people are white.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Bob is big then Bob is nice.\nFOL:\tBig(Bob) -> Nice(Bob)\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is kind and white then they are smart.\nFOL:\tall x. (Kind(x) & White(x) -> Smart(x))\nTEXT:\tNice, round people are kind.\nFOL:\tall x. (Nice(x) & Round(x) -> Kind(x))\nTEXT:\tKind, white people are nice.\nFOL:\tall x. (Kind(x) & White(x) -> Nice(x))\nTEXT:\tIf someone is smart then they are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tKind, nice people are white.\nFOL:\tall x. (Kind(x) & Nice(x) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Bob is big then Bob is nice.\nFOL:\tBig(Bob) -> Nice(Bob)\nTEXT:\tIf Bob is round then Bob is furry.\nFOL:\tRound(Bob) -> Furry(Bob)\nTEXT:\tIf someone is furry then they are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tBig people are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf someone is kind and white then they are smart.\nFOL:\tall x. (Kind(x) & White(x) -> Smart(x))\nTEXT:\tNice, round people are kind.\nFOL:\tall x. (Nice(x) & Round(x) -> Kind(x))\nTEXT:\tKind, white people are nice.\nFOL:\tall x. (Kind(x) & White(x) -> Nice(x))\nTEXT:\tIf someone is smart then they are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tKind, nice people are white.\nFOL:\tall x. (Kind(x) & Nice(x) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf someone is kind and red then they are quiet.\nFOL:\tall x. ((Kind(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll smart people are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGreen, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf Harry is green then Harry is smart.\nFOL:\t(Green(Harry) -> Smart(Harry))\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll white, nice people are kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tIf someone is quiet then they are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf someone is kind and red then they are quiet.\nFOL:\tall x. ((Kind(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll smart people are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGreen, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf Harry is green then Harry is smart.\nFOL:\t(Green(Harry) -> Smart(Harry))\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll white, nice people are kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tIf someone is quiet then they are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf someone is kind and red then they are quiet.\nFOL:\tall x. ((Kind(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll smart people are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGreen, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf Harry is green then Harry is smart.\nFOL:\tGreen(Harry) -> Smart(Harry)\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll white, nice people are kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tIf someone is quiet then they are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf someone is kind and red then they are quiet.\nFOL:\tall x. ((Kind(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll smart people are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGreen, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf Harry is green then Harry is smart.\nFOL:\tGreen(Harry) -> Smart(Harry)\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll white, nice people are kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tIf someone is quiet then they are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf someone is kind and red then they are quiet.\nFOL:\tall x. ((Kind(x) & Red(x)) -> Quiet(x))\nTEXT:\tAll smart people are green.\nFOL:\tall x. (Smart(x) -> Green(x))\nTEXT:\tGreen, quiet people are red.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Red(x))\nTEXT:\tIf Harry is green then Harry is smart.\nFOL:\tGreen(Harry) -> Smart(Harry)\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tAll white, nice people are kind.\nFOL:\tall x. ((White(x) & Nice(x)) -> Kind(x))\nTEXT:\tIf someone is quiet then they are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tAll quiet people are kind.\nFOL:\tall x. (Quiet(x) -> Kind(x))\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tIf something is white then it is not quiet.\nFOL:\tall x. (White(x) -> -Quiet(x))\nTEXT:\tAll young, green things are round.\nFOL:\tall x. ((Young(x) & Green(x)) -> Round(x))\nTEXT:\tAll green, white things are kind.\nFOL:\tall x. ((Green(x) & White(x)) -> Kind(x))\nTEXT:\tIf something is young and not furry then it is kind.\nFOL:\tall x. ((Young(x) & -Furry(x)) -> Kind(x))\nTEXT:\tAll round, green things are kind.\nFOL:\tall x. ((Round(x) & Green(x)) -> Kind(x))\nTEXT:\tIf Charlie is white then Charlie is green.\nFOL:\tWhite(Charlie) -> Green(Charlie)\nTEXT:\tKind, green things are white.\nFOL:\tall x. ((Kind(x) & Green(x)) -> White(x))\nTEXT:\tAll furry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is quiet and Dave is furry then Dave is not kind.\nFOL:\t(Quiet(Dave) & Furry(Dave)) -> -Kind(Dave)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tIf something is white then it is not quiet.\nFOL:\tall x. (White(x) -> -Quiet(x))\nTEXT:\tAll young, green things are round.\nFOL:\tall x. ((Young(x) & Green(x)) -> Round(x))\nTEXT:\tAll green, white things are kind.\nFOL:\tall x. ((Green(x) & White(x)) -> Kind(x))\nTEXT:\tIf something is young and not furry then it is kind.\nFOL:\tall x. ((Young(x) & -Furry(x)) -> Kind(x))\nTEXT:\tAll round, green things are kind.\nFOL:\tall x. ((Round(x) & Green(x)) -> Kind(x))\nTEXT:\tIf Charlie is white then Charlie is green.\nFOL:\tWhite(Charlie) -> Green(Charlie)\nTEXT:\tKind, green things are white.\nFOL:\tall x. ((Kind(x) & Green(x)) -> White(x))\nTEXT:\tAll furry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is quiet and Dave is furry then Dave is not kind.\nFOL:\t(Quiet(Dave) & Furry(Dave)) -> -Kind(Dave)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tIf something is white then it is not quiet.\nFOL:\tall x. (White(x) -> -Quiet(x))\nTEXT:\tAll young, green things are round.\nFOL:\tall x. (Young(x) & Green(x) -> Round(x))\nTEXT:\tAll green, white things are kind.\nFOL:\tall x. (Green(x) & White(x) -> Kind(x))\nTEXT:\tIf something is young and not furry then it is kind.\nFOL:\tall x. (Young(x) & -Furry(x) -> Kind(x))\nTEXT:\tAll round, green things are kind.\nFOL:\tall x. (Round(x) & Green(x) -> Kind(x))\nTEXT:\tIf Charlie is white then Charlie is green.\nFOL:\tWhite(Charlie) -> Green(Charlie)\nTEXT:\tKind, green things are white.\nFOL:\tall x. (Kind(x) & Green(x) -> White(x))\nTEXT:\tAll furry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is quiet and Dave is furry then Dave is not kind.\nFOL:\t(Quiet(Dave) & Furry(Dave)) -> -Kind(Dave)\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tIf something is white then it is not quiet.\nFOL:\tall x. (White(x) -> -Quiet(x))\nTEXT:\tAll young, green things are round.\nFOL:\tall x. (Young(x) & Green(x) -> Round(x))\nTEXT:\tAll green, white things are kind.\nFOL:\tall x. (Green(x) & White(x) -> Kind(x))\nTEXT:\tIf something is young and not furry then it is kind.\nFOL:\tall x. (Young(x) & -Furry(x) -> Kind(x))\nTEXT:\tAll round, green things are kind.\nFOL:\tall x. (Round(x) & Green(x) -> Kind(x))\nTEXT:\tIf Charlie is white then Charlie is green.\nFOL:\t(White(Charlie) -> Green(Charlie))\nTEXT:\tKind, green things are white.\nFOL:\tall x. (Kind(x) & Green(x) -> White(x))\nTEXT:\tAll furry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is quiet and Dave is furry then Dave is not kind.\nFOL:\t(Quiet(Dave) & Furry(Dave) -> -Kind(Dave))\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nANSWER:\tUncertain\n", "TEXT:\tBob is not furry.\nFOL:\t-Furry(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tIf something is white then it is not quiet.\nFOL:\tall x. (White(x) -> -Quiet(x))\nTEXT:\tAll young, green things are round.\nFOL:\tall x. ((Young(x) & Green(x)) -> Round(x))\nTEXT:\tAll green, white things are kind.\nFOL:\tall x. ((Green(x) & White(x)) -> Kind(x))\nTEXT:\tIf something is young and not furry then it is kind.\nFOL:\tall x. ((Young(x) & -Furry(x)) -> Kind(x))\nTEXT:\tAll round, green things are kind.\nFOL:\tall x. ((Round(x) & Green(x)) -> Kind(x))\nTEXT:\tIf Charlie is white then Charlie is green.\nFOL:\t(White(Charlie) -> Green(Charlie))\nTEXT:\tKind, green things are white.\nFOL:\tall x. ((Kind(x) & Green(x)) -> White(x))\nTEXT:\tAll furry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tIf Dave is quiet and Dave is furry then Dave is not kind.\nFOL:\t(Quiet(Dave) & Furry(Dave) -> -Kind(Dave))\nTEXT:\tGary is not kind.\nFOL:\t-Kind(Gary)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear visits the squirrel.\nFOL:\tVisits(Bear, Squirrel)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tIf something is nice and it chases the lion then it sees the lion.\nFOL:\tall x. ((Nice(x) & Chases(x, Lion)) -> Sees(x, Lion))\nTEXT:\tIf something is round then it sees the lion.\nFOL:\tall x. (Round(x) -> Sees(x, Lion))\nTEXT:\tIf something is nice then it chases the mouse.\nFOL:\tall x. (Nice(x) -> Chases(x, Mouse))\nTEXT:\tIf something visits the squirrel and it is red then the squirrel chases the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & Red(x)) -> Chases(Squirrel, Lion))\nTEXT:\tIf the bear visits the mouse then the mouse chases the squirrel.\nFOL:\t(Visits(Bear, Mouse) -> Chases(Mouse, Squirrel))\nTEXT:\tIf something sees the lion then the lion chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(Lion, Bear))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf something chases the mouse then it chases the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion visits the bear.\nFOL:\tall x. (Chases(x, Lion) -> Visits(Lion, Bear))\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear visits the squirrel.\nFOL:\tVisits(Bear, Squirrel)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tIf something is nice and it chases the lion then it sees the lion.\nFOL:\tall x. ((Nice(x) & Chases(x, Lion)) -> Sees(x, Lion))\nTEXT:\tIf something is round then it sees the lion.\nFOL:\tall x. (Round(x) -> Sees(x, Lion))\nTEXT:\tIf something is nice then it chases the mouse.\nFOL:\tall x. (Nice(x) -> Chases(x, Mouse))\nTEXT:\tIf something visits the squirrel and it is red then the squirrel chases the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & Red(x)) -> Chases(Squirrel, Lion))\nTEXT:\tIf the bear visits the mouse then the mouse chases the squirrel.\nFOL:\tVisits(Bear, Mouse) -> Chases(Mouse, Squirrel)\nTEXT:\tIf something sees the lion then the lion chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(Lion, Bear))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf something chases the mouse then it chases the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion visits the bear.\nFOL:\tall x. (Chases(x, Lion) -> Visits(Lion, Bear))\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear visits the squirrel.\nFOL:\tVisits(Bear, Squirrel)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tIf something is nice and it chases the lion then it sees the lion.\nFOL:\tall x. ((Nice(x) & Chases(x, Lion)) -> Sees(x, Lion))\nTEXT:\tIf something is round then it sees the lion.\nFOL:\tall x. (Round(x) -> Sees(x, Lion))\nTEXT:\tIf something is nice then it chases the mouse.\nFOL:\tall x. (Nice(x) -> Chases(x, Mouse))\nTEXT:\tIf something visits the squirrel and it is red then the squirrel chases the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & Red(x)) -> Chases(Squirrel, Lion))\nTEXT:\tIf the bear visits the mouse then the mouse chases the squirrel.\nFOL:\t(Visits(Bear, Mouse) -> Chases(Mouse, Squirrel))\nTEXT:\tIf something sees the lion then the lion chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(Lion, Bear))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf something chases the mouse then it chases the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion visits the bear.\nFOL:\tall x. (Chases(x, Lion) -> Visits(Lion, Bear))\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nANSWER:\tTrue\n", "TEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear visits the squirrel.\nFOL:\tVisits(Bear, Squirrel)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tIf something is nice and it chases the lion then it sees the lion.\nFOL:\tall x. (Nice(x) & Chases(x, Lion) -> Sees(x, Lion))\nTEXT:\tIf something is round then it sees the lion.\nFOL:\tall x. (Round(x) -> Sees(x, Lion))\nTEXT:\tIf something is nice then it chases the mouse.\nFOL:\tall x. (Nice(x) -> Chases(x, Mouse))\nTEXT:\tIf something visits the squirrel and it is red then the squirrel chases the lion.\nFOL:\tall x. (Visits(x, Squirrel) & Red(x) -> Chases(Squirrel, Lion))\nTEXT:\tIf the bear visits the mouse then the mouse chases the squirrel.\nFOL:\tVisits(Bear, Mouse) -> Chases(Mouse, Squirrel)\nTEXT:\tIf something sees the lion then the lion chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(Lion, Bear))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf something chases the mouse then it chases the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion visits the bear.\nFOL:\tall x. (Chases(x, Lion) -> Visits(Lion, Bear))\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bear sees the squirrel.\nFOL:\tSees(Bear, Squirrel)\nTEXT:\tThe bear visits the squirrel.\nFOL:\tVisits(Bear, Squirrel)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse visits the squirrel.\nFOL:\tVisits(Mouse, Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel visits the bear.\nFOL:\tVisits(Squirrel, Bear)\nTEXT:\tIf something is nice and it chases the lion then it sees the lion.\nFOL:\tall x. ((Nice(x) & Chases(x, Lion)) -> Sees(x, Lion))\nTEXT:\tIf something is round then it sees the lion.\nFOL:\tall x. (Round(x) -> Sees(x, Lion))\nTEXT:\tIf something is nice then it chases the mouse.\nFOL:\tall x. (Nice(x) -> Chases(x, Mouse))\nTEXT:\tIf something visits the squirrel and it is red then the squirrel chases the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & Red(x)) -> Chases(Squirrel, Lion))\nTEXT:\tIf the bear visits the mouse then the mouse chases the squirrel.\nFOL:\t(Visits(Bear, Mouse) -> Chases(Mouse, Squirrel))\nTEXT:\tIf something sees the lion then the lion chases the bear.\nFOL:\tall x. (Sees(x, Lion) -> Chases(Lion, Bear))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tIf something chases the mouse then it chases the lion.\nFOL:\tall x. (Chases(x, Mouse) -> Chases(x, Lion))\nTEXT:\tIf something chases the lion then the lion visits the bear.\nFOL:\tall x. (Chases(x, Lion) -> Visits(Lion, Bear))\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is not quiet.\nFOL:\t-Quiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBig things are not white.\nFOL:\tall x. (Big(x) -> -White(x))\nTEXT:\tIf something is young and blue then it is white.\nFOL:\tall x. ((Young(x) & Blue(x)) -> White(x))\nTEXT:\tQuiet, green things are blue.\nFOL:\tall x. ((Quiet(x) & Green(x)) -> Blue(x))\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Blue(x))\nTEXT:\tIf something is nice and young then it is quiet.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Quiet(x))\nTEXT:\tNice, blue things are quiet.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf Anne is quiet and Anne is green then Anne is young.\nFOL:\t((Quiet(Anne) & Green(Anne)) -> Young(Anne))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is not quiet.\nFOL:\t-Quiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBig things are not white.\nFOL:\tall x. (Big(x) -> -White(x))\nTEXT:\tIf something is young and blue then it is white.\nFOL:\tall x. ((Young(x) & Blue(x)) -> White(x))\nTEXT:\tQuiet, green things are blue.\nFOL:\tall x. ((Quiet(x) & Green(x)) -> Blue(x))\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Blue(x))\nTEXT:\tIf something is nice and young then it is quiet.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Quiet(x))\nTEXT:\tNice, blue things are quiet.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf Anne is quiet and Anne is green then Anne is young.\nFOL:\t(Quiet(Anne) & Green(Anne)) -> Young(Anne)\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is not quiet.\nFOL:\t-Quiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t-Quiet(Gary)\nTEXT:\tBig things are not white.\nFOL:\tall x. (Big(x) -> -White(x))\nTEXT:\tIf something is young and blue then it is white.\nFOL:\tall x. ((Young(x) & Blue(x)) -> White(x))\nTEXT:\tQuiet, green things are blue.\nFOL:\tall x. ((Quiet(x) & Green(x)) -> Blue(x))\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Blue(x))\nTEXT:\tIf something is nice and young then it is quiet.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Quiet(x))\nTEXT:\tNice, blue things are quiet.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf Anne is quiet and Anne is green then Anne is young.\nFOL:\t((Quiet(Anne) & Green(Anne)) -> Young(Anne))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tAnne is not green.\nFOL:\t-Green(Anne)\nANSWER:\tFalse\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is not quiet.\nFOL:\t- Quiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t- Quiet(Gary)\nTEXT:\tBig things are not white.\nFOL:\tall x. (Big(x) -> -White(x))\nTEXT:\tIf something is young and blue then it is white.\nFOL:\tall x. ((Young(x) & Blue(x)) -> White(x))\nTEXT:\tQuiet, green things are blue.\nFOL:\tall x. ((Quiet(x) & Green(x)) -> Blue(x))\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Blue(x))\nTEXT:\tIf something is nice and young then it is quiet.\nFOL:\tall x. ((Nice(x) & Young(x)) -> Quiet(x))\nTEXT:\tNice, blue things are quiet.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Quiet(x))\nTEXT:\tIf Anne is quiet and Anne is green then Anne is young.\nFOL:\t(Quiet(Anne) & Green(Anne)) -> Young(Anne)\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tAnne is not green.\nFOL:\t- Green(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is not quiet.\nFOL:\t- Quiet(Erin)\nTEXT:\tGary is not quiet.\nFOL:\t- Quiet(Gary)\nTEXT:\tBig things are not white.\nFOL:\tall x. (Big(x) -> - White(x))\nTEXT:\tIf something is young and blue then it is white.\nFOL:\tall x. (Young(x) & Blue(x) -> White(x))\nTEXT:\tQuiet, green things are blue.\nFOL:\tall x. (Quiet(x) & Green(x) -> Blue(x))\nTEXT:\tIf something is green then it is blue.\nFOL:\tall x. (Green(x) -> Blue(x))\nTEXT:\tIf something is green and nice then it is blue.\nFOL:\tall x. (Green(x) & Nice(x) -> Blue(x))\nTEXT:\tIf something is nice and young then it is quiet.\nFOL:\tall x. (Nice(x) & Young(x) -> Quiet(x))\nTEXT:\tNice, blue things are quiet.\nFOL:\tall x. (Nice(x) & Blue(x) -> Quiet(x))\nTEXT:\tIf Anne is quiet and Anne is green then Anne is young.\nFOL:\t(Quiet(Anne) & Green(Anne) -> Young(Anne))\nTEXT:\tNice things are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tAnne is not green.\nFOL:\t- Green(Anne)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll young, white things are round.\nFOL:\tall x. ((Young(x) & White(x)) -> Round(x))\nTEXT:\tIf something is nice and green then it is white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tCold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tYoung, green things are nice.\nFOL:\tall x. ((Young(x) & Green(x)) -> Nice(x))\nTEXT:\tIf something is big and green then it is nice.\nFOL:\tall x. ((Big(x) & Green(x)) -> Nice(x))\nTEXT:\tWhite, nice things are young.\nFOL:\tall x. ((White(x) & Nice(x)) -> Young(x))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tWhite, round things are green.\nFOL:\tall x. ((White(x) & Round(x)) -> Green(x))\nTEXT:\tAll cold, round things are big.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Big(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll young, white things are round.\nFOL:\tall x. ((Young(x) & White(x)) -> Round(x))\nTEXT:\tIf something is nice and green then it is white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tCold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tYoung, green things are nice.\nFOL:\tall x. ((Young(x) & Green(x)) -> Nice(x))\nTEXT:\tIf something is big and green then it is nice.\nFOL:\tall x. ((Big(x) & Green(x)) -> Nice(x))\nTEXT:\tWhite, nice things are young.\nFOL:\tall x. ((White(x) & Nice(x)) -> Young(x))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tWhite, round things are green.\nFOL:\tall x. ((White(x) & Round(x)) -> Green(x))\nTEXT:\tAll cold, round things are big.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Big(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll young, white things are round.\nFOL:\tall x. ((Young(x) & White(x)) -> Round(x))\nTEXT:\tIf something is nice and green then it is white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tCold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tYoung, green things are nice.\nFOL:\tall x. ((Young(x) & Green(x)) -> Nice(x))\nTEXT:\tIf something is big and green then it is nice.\nFOL:\tall x. ((Big(x) & Green(x)) -> Nice(x))\nTEXT:\tWhite, nice things are young.\nFOL:\tall x. ((White(x) & Nice(x)) -> Young(x))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tWhite, round things are green.\nFOL:\tall x. ((White(x) & Round(x)) -> Green(x))\nTEXT:\tAll cold, round things are big.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Big(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tTrue\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll young, white things are round.\nFOL:\tall x. ((Young(x) & White(x)) -> Round(x))\nTEXT:\tIf something is nice and green then it is white.\nFOL:\tall x. ((Nice(x) & Green(x)) -> White(x))\nTEXT:\tCold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tYoung, green things are nice.\nFOL:\tall x. ((Young(x) & Green(x)) -> Nice(x))\nTEXT:\tIf something is big and green then it is nice.\nFOL:\tall x. ((Big(x) & Green(x)) -> Nice(x))\nTEXT:\tWhite, nice things are young.\nFOL:\tall x. ((White(x) & Nice(x)) -> Young(x))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tWhite, round things are green.\nFOL:\tall x. ((White(x) & Round(x)) -> Green(x))\nTEXT:\tAll cold, round things are big.\nFOL:\tall x. ((Cold(x) & Round(x)) -> Big(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll young, white things are round.\nFOL:\tall x. (Young(x) & White(x) -> Round(x))\nTEXT:\tIf something is nice and green then it is white.\nFOL:\tall x. (Nice(x) & Green(x) -> White(x))\nTEXT:\tCold things are round.\nFOL:\tall x. (Cold(x) -> Round(x))\nTEXT:\tYoung, green things are nice.\nFOL:\tall x. (Young(x) & Green(x) -> Nice(x))\nTEXT:\tIf something is big and green then it is nice.\nFOL:\tall x. (Big(x) & Green(x) -> Nice(x))\nTEXT:\tWhite, nice things are young.\nFOL:\tall x. (White(x) & Nice(x) -> Young(x))\nTEXT:\tAll green things are cold.\nFOL:\tall x. (Green(x) -> Cold(x))\nTEXT:\tWhite, round things are green.\nFOL:\tall x. (White(x) & Round(x) -> Green(x))\nTEXT:\tAll cold, round things are big.\nFOL:\tall x. (Cold(x) & Round(x) -> Big(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is cold and quiet then they are white.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is cold and big then they are young.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Young(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is smart and white then they are furry.\nFOL:\tall x. ((Smart(x) & White(x)) -> Furry(x))\nTEXT:\tAll furry people are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is cold and quiet then they are white.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is cold and big then they are young.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Young(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is smart and white then they are furry.\nFOL:\tall x. ((Smart(x) & White(x)) -> Furry(x))\nTEXT:\tAll furry people are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is cold and quiet then they are white.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is cold and big then they are young.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Young(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is smart and white then they are furry.\nFOL:\tall x. ((Smart(x) & White(x)) -> Furry(x))\nTEXT:\tAll furry people are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is cold and quiet then they are white.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is cold and big then they are young.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Young(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is smart and white then they are furry.\nFOL:\tall x. ((Smart(x) & White(x)) -> Furry(x))\nTEXT:\tAll furry people are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tFalse\n", "TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is cold and quiet then they are white.\nFOL:\tall x. ((Cold(x) & Quiet(x)) -> White(x))\nTEXT:\tIf someone is cold and big then they are young.\nFOL:\tall x. ((Cold(x) & Big(x)) -> Young(x))\nTEXT:\tAll furry people are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tQuiet people are cold.\nFOL:\tall x. (Quiet(x) -> Cold(x))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tIf someone is smart and white then they are furry.\nFOL:\tall x. ((Smart(x) & White(x)) -> Furry(x))\nTEXT:\tAll furry people are big.\nFOL:\tall x. (Furry(x) -> Big(x))\nTEXT:\tHarry is not cold.\nFOL:\t-Cold(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is not green.\nFOL:\t\u00acGreen(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tKind, blue people are quiet.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Quiet(x))\nTEXT:\tRough, round people are quiet.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Quiet(x))\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll rough, kind people are green.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll green, round people are young.\nFOL:\tall x. ((Green(x) & Round(x)) -> Young(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf Charlie is rough then Charlie is blue.\nFOL:\tRough(Charlie) -> Blue(Charlie)\nTEXT:\tDave is not young.\nFOL:\t\u00acYoung(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is not green.\nFOL:\t-Green(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tKind, blue people are quiet.\nFOL:\tall x. (Kind(x) & Blue(x) -> Quiet(x))\nTEXT:\tRough, round people are quiet.\nFOL:\tall x. (Rough(x) & Round(x) -> Quiet(x))\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll rough, kind people are green.\nFOL:\tall x. (Rough(x) & Kind(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll green, round people are young.\nFOL:\tall x. (Green(x) & Round(x) -> Young(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf Charlie is rough then Charlie is blue.\nFOL:\tRough(Charlie) -> Blue(Charlie)\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is not green.\nFOL:\t-Green(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tKind, blue people are quiet.\nFOL:\tall x. (Kind(x) & Blue(x) -> Quiet(x))\nTEXT:\tRough, round people are quiet.\nFOL:\tall x. (Rough(x) & Round(x) -> Quiet(x))\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll rough, kind people are green.\nFOL:\tall x. (Rough(x) & Kind(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll green, round people are young.\nFOL:\tall x. (Green(x) & Round(x) -> Young(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf Charlie is rough then Charlie is blue.\nFOL:\tRough(Charlie) -> Blue(Charlie)\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is not green.\nFOL:\t-Green(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tKind, blue people are quiet.\nFOL:\tall x. (Kind(x) & Blue(x) -> Quiet(x))\nTEXT:\tRough, round people are quiet.\nFOL:\tall x. (Rough(x) & Round(x) -> Quiet(x))\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll rough, kind people are green.\nFOL:\tall x. (Rough(x) & Kind(x) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll green, round people are young.\nFOL:\tall x. (Green(x) & Round(x) -> Young(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf Charlie is rough then Charlie is blue.\nFOL:\tRough(Charlie) -> Blue(Charlie)\nTEXT:\tDave is not young.\nFOL:\t-Young(Dave)\nANSWER:\tUncertain\n", "TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is not green.\nFOL:\t\u00acGreen(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tKind, blue people are quiet.\nFOL:\tall x. ((Kind(x) & Blue(x)) -> Quiet(x))\nTEXT:\tRough, round people are quiet.\nFOL:\tall x. ((Rough(x) & Round(x)) -> Quiet(x))\nTEXT:\tRound people are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf someone is blue then they are green.\nFOL:\tall x. (Blue(x) -> Green(x))\nTEXT:\tAll rough, kind people are green.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Green(x))\nTEXT:\tIf someone is quiet then they are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tAll green, round people are young.\nFOL:\tall x. ((Green(x) & Round(x)) -> Young(x))\nTEXT:\tAll kind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tIf Charlie is rough then Charlie is blue.\nFOL:\tRough(Charlie) -> Blue(Charlie)\nTEXT:\tDave is not young.\nFOL:\t\u00acYoung(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf Dave is white then Dave is kind.\nFOL:\tWhite(Dave) -> Kind(Dave)\nTEXT:\tIf Gary is big and Gary is kind then Gary is smart.\nFOL:\t(Big(Gary) & Kind(Gary)) -> Smart(Gary)\nTEXT:\tIf Erin is round and Erin is kind then Erin is rough.\nFOL:\t(Round(Erin) & Kind(Erin)) -> Rough(Erin)\nTEXT:\tAll kind, rough things are smart.\nFOL:\tall x. (Kind(x) & Rough(x)) -> Smart(x)\nTEXT:\tKind, smart things are big.\nFOL:\tall x. (Kind(x) & Smart(x)) -> Big(x)\nTEXT:\tAll big things are round.\nFOL:\tall x. Big(x) -> Round(x)\nTEXT:\tIf something is nice then it is white.\nFOL:\tall x. Nice(x) -> White(x)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf Dave is white then Dave is kind.\nFOL:\tWhite(Dave) -> Kind(Dave)\nTEXT:\tIf Gary is big and Gary is kind then Gary is smart.\nFOL:\t(Big(Gary) & Kind(Gary)) -> Smart(Gary)\nTEXT:\tIf Erin is round and Erin is kind then Erin is rough.\nFOL:\t(Round(Erin) & Kind(Erin)) -> Rough(Erin)\nTEXT:\tAll kind, rough things are smart.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Smart(x))\nTEXT:\tKind, smart things are big.\nFOL:\tall x. ((Kind(x) & Smart(x)) -> Big(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf something is nice then it is white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf Dave is white then Dave is kind.\nFOL:\tWhite(Dave) -> Kind(Dave)\nTEXT:\tIf Gary is big and Gary is kind then Gary is smart.\nFOL:\t(Big(Gary) & Kind(Gary)) -> Smart(Gary)\nTEXT:\tIf Erin is round and Erin is kind then Erin is rough.\nFOL:\t(Round(Erin) & Kind(Erin)) -> Rough(Erin)\nTEXT:\tAll kind, rough things are smart.\nFOL:\tall x. (Kind(x) & Rough(x) -> Smart(x))\nTEXT:\tKind, smart things are big.\nFOL:\tall x. (Kind(x) & Smart(x) -> Big(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf something is nice then it is white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf Dave is white then Dave is kind.\nFOL:\tWhite(Dave) -> Kind(Dave)\nTEXT:\tIf Gary is big and Gary is kind then Gary is smart.\nFOL:\t(Big(Gary) & Kind(Gary)) -> Smart(Gary)\nTEXT:\tIf Erin is round and Erin is kind then Erin is rough.\nFOL:\t(Round(Erin) & Kind(Erin)) -> Rough(Erin)\nTEXT:\tAll kind, rough things are smart.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Smart(x))\nTEXT:\tKind, smart things are big.\nFOL:\tall x. ((Kind(x) & Smart(x)) -> Big(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf something is nice then it is white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tTrue\n", "TEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is rough.\nFOL:\tRough(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tIf Dave is white then Dave is kind.\nFOL:\tWhite(Dave) -> Kind(Dave)\nTEXT:\tIf Gary is big and Gary is kind then Gary is smart.\nFOL:\t(Big(Gary) & Kind(Gary)) -> Smart(Gary)\nTEXT:\tIf Erin is round and Erin is kind then Erin is rough.\nFOL:\t(Round(Erin) & Kind(Erin)) -> Rough(Erin)\nTEXT:\tAll kind, rough things are smart.\nFOL:\tall x. ((Kind(x) & Rough(x)) -> Smart(x))\nTEXT:\tKind, smart things are big.\nFOL:\tall x. ((Kind(x) & Smart(x)) -> Big(x))\nTEXT:\tAll big things are round.\nFOL:\tall x. (Big(x) -> Round(x))\nTEXT:\tIf something is nice then it is white.\nFOL:\tall x. (Nice(x) -> White(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf someone is round and young then they are blue.\nFOL:\tall x. (Round(x) & Young(x) -> Blue(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tNice, blue people are white.\nFOL:\tall x. (Nice(x) & Blue(x) -> White(x))\nTEXT:\tAll big, nice people are young.\nFOL:\tall x. (Big(x) & Nice(x) -> Young(x))\nTEXT:\tIf someone is nice and round then they are green.\nFOL:\tall x. (Nice(x) & Round(x) -> Green(x))\nTEXT:\tAll young, blue people are round.\nFOL:\tall x. (Young(x) & Blue(x) -> Round(x))\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf someone is round and young then they are blue.\nFOL:\tall x. ((Round(x) & Young(x)) -> Blue(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tNice, blue people are white.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> White(x))\nTEXT:\tAll big, nice people are young.\nFOL:\tall x. ((Big(x) & Nice(x)) -> Young(x))\nTEXT:\tIf someone is nice and round then they are green.\nFOL:\tall x. ((Nice(x) & Round(x)) -> Green(x))\nTEXT:\tAll young, blue people are round.\nFOL:\tall x. ((Young(x) & Blue(x)) -> Round(x))\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf someone is round and young then they are blue.\nFOL:\tall x. (Round(x) & Young(x) -> Blue(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tNice, blue people are white.\nFOL:\tall x. (Nice(x) & Blue(x) -> White(x))\nTEXT:\tAll big, nice people are young.\nFOL:\tall x. (Big(x) & Nice(x) -> Young(x))\nTEXT:\tIf someone is nice and round then they are green.\nFOL:\tall x. (Nice(x) & Round(x) -> Green(x))\nTEXT:\tAll young, blue people are round.\nFOL:\tall x. (Young(x) & Blue(x) -> Round(x))\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf someone is round and young then they are blue.\nFOL:\tall x. (Round(x) & Young(x) -> Blue(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tNice, blue people are white.\nFOL:\tall x. (Nice(x) & Blue(x) -> White(x))\nTEXT:\tAll big, nice people are young.\nFOL:\tall x. (Big(x) & Nice(x) -> Young(x))\nTEXT:\tIf someone is nice and round then they are green.\nFOL:\tall x. (Nice(x) & Round(x) -> Green(x))\nTEXT:\tAll young, blue people are round.\nFOL:\tall x. (Young(x) & Blue(x) -> Round(x))\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is big.\nFOL:\tBig(Anne)\nTEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf someone is round and young then they are blue.\nFOL:\tall x. (Round(x) & Young(x) -> Blue(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tNice, blue people are white.\nFOL:\tall x. (Nice(x) & Blue(x) -> White(x))\nTEXT:\tAll big, nice people are young.\nFOL:\tall x. (Big(x) & Nice(x) -> Young(x))\nTEXT:\tIf someone is nice and round then they are green.\nFOL:\tall x. (Nice(x) & Round(x) -> Green(x))\nTEXT:\tAll young, blue people are round.\nFOL:\tall x. (Young(x) & Blue(x) -> Round(x))\nTEXT:\tWhite people are nice.\nFOL:\tall x. (White(x) -> Nice(x))\nTEXT:\tGary is not green.\nFOL:\t-Green(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something chases the bald eagle then the bald eagle is green.\nFOL:\tall x. (Chases(x, BaldEagle) -> Green(BaldEagle))\nTEXT:\tIf something is green and it likes the bald eagle then the bald eagle is round.\nFOL:\tall x. ((Green(x) & Likes(x, BaldEagle)) -> Round(BaldEagle))\nTEXT:\tIf something chases the cat and the cat is cold then it likes the bald eagle.\nFOL:\tall x. ((Chases(x, Cat) & Cold(Cat)) -> Likes(x, BaldEagle))\nTEXT:\tIf something sees the mouse and the mouse sees the cat then the cat sees the bald eagle.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(Mouse, Cat)) -> Sees(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it is cold.\nFOL:\tall x. (Sees(x, BaldEagle) -> Cold(x))\nTEXT:\tIf the bald eagle likes the mouse then the bald eagle chases the cat.\nFOL:\t(Likes(BaldEagle, Mouse) -> Chases(BaldEagle, Cat))\nTEXT:\tIf something is green then it likes the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse sees the mouse.\nFOL:\tSees(Mouse, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something chases the bald eagle then the bald eagle is green.\nFOL:\tall x. (Chases(x, BaldEagle) -> Green(BaldEagle))\nTEXT:\tIf something is green and it likes the bald eagle then the bald eagle is round.\nFOL:\tall x. ((Green(x) & Likes(x, BaldEagle)) -> Round(BaldEagle))\nTEXT:\tIf something chases the cat and the cat is cold then it likes the bald eagle.\nFOL:\tall x. ((Chases(x, Cat) & Cold(Cat)) -> Likes(x, BaldEagle))\nTEXT:\tIf something sees the mouse and the mouse sees the cat then the cat sees the bald eagle.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(Mouse, Cat)) -> Sees(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it is cold.\nFOL:\tall x. (Sees(x, BaldEagle) -> Cold(x))\nTEXT:\tIf the bald eagle likes the mouse then the bald eagle chases the cat.\nFOL:\t(Likes(BaldEagle, Mouse) -> Chases(BaldEagle, Cat))\nTEXT:\tIf something is green then it likes the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse sees the mouse.\nFOL:\tSees(Mouse, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something chases the bald eagle then the bald eagle is green.\nFOL:\tall x. (Chases(x, BaldEagle) -> Green(BaldEagle))\nTEXT:\tIf something is green and it likes the bald eagle then the bald eagle is round.\nFOL:\tall x. (Green(x) & Likes(x, BaldEagle) -> Round(BaldEagle))\nTEXT:\tIf something chases the cat and the cat is cold then it likes the bald eagle.\nFOL:\tall x. (Chases(x, Cat) & Cold(Cat) -> Likes(x, BaldEagle))\nTEXT:\tIf something sees the mouse and the mouse sees the cat then the cat sees the bald eagle.\nFOL:\tall x. (Sees(x, Mouse) & Sees(Mouse, Cat) -> Sees(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it is cold.\nFOL:\tall x. (Sees(x, BaldEagle) -> Cold(x))\nTEXT:\tIf the bald eagle likes the mouse then the bald eagle chases the cat.\nFOL:\tLikes(BaldEagle, Mouse) -> Chases(BaldEagle, Cat)\nTEXT:\tIf something is green then it likes the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse sees the mouse.\nFOL:\tSees(Mouse, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something chases the bald eagle then the bald eagle is green.\nFOL:\tall x. (Chases(x, BaldEagle) -> Green(BaldEagle))\nTEXT:\tIf something is green and it likes the bald eagle then the bald eagle is round.\nFOL:\tall x. ((Green(x) & Likes(x, BaldEagle)) -> Round(BaldEagle))\nTEXT:\tIf something chases the cat and the cat is cold then it likes the bald eagle.\nFOL:\tall x. ((Chases(x, Cat) & Cold(Cat)) -> Likes(x, BaldEagle))\nTEXT:\tIf something sees the mouse and the mouse sees the cat then the cat sees the bald eagle.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(Mouse, Cat)) -> Sees(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it is cold.\nFOL:\tall x. (Sees(x, BaldEagle) -> Cold(x))\nTEXT:\tIf the bald eagle likes the mouse then the bald eagle chases the cat.\nFOL:\t(Likes(BaldEagle, Mouse) -> Chases(BaldEagle, Cat))\nTEXT:\tIf something is green then it likes the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse sees the mouse.\nFOL:\tSees(Mouse, Mouse)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle sees the cat.\nFOL:\tSees(BaldEagle, Cat)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat is green.\nFOL:\tGreen(Cat)\nTEXT:\tThe cat sees the bald eagle.\nFOL:\tSees(Cat, BaldEagle)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the bald eagle.\nFOL:\tSees(Squirrel, BaldEagle)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something chases the bald eagle then the bald eagle is green.\nFOL:\tall x. (Chases(x, BaldEagle) -> Green(BaldEagle))\nTEXT:\tIf something is green and it likes the bald eagle then the bald eagle is round.\nFOL:\tall x. ((Green(x) & Likes(x, BaldEagle)) -> Round(BaldEagle))\nTEXT:\tIf something chases the cat and the cat is cold then it likes the bald eagle.\nFOL:\tall x. ((Chases(x, Cat) & Cold(Cat)) -> Likes(x, BaldEagle))\nTEXT:\tIf something sees the mouse and the mouse sees the cat then the cat sees the bald eagle.\nFOL:\tall x. ((Sees(x, Mouse) & Sees(Mouse, Cat)) -> Sees(Cat, BaldEagle))\nTEXT:\tIf something sees the bald eagle then it is cold.\nFOL:\tall x. (Sees(x, BaldEagle) -> Cold(x))\nTEXT:\tIf the bald eagle likes the mouse then the bald eagle chases the cat.\nFOL:\t(Likes(BaldEagle, Mouse) -> Chases(BaldEagle, Cat))\nTEXT:\tIf something is green then it likes the mouse.\nFOL:\tall x. (Green(x) -> Likes(x, Mouse))\nTEXT:\tThe mouse sees the mouse.\nFOL:\tSees(Mouse, Mouse)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow sees the cat.\nFOL:\tSees(Cow, Cat)\nTEXT:\tThe cow does not see the dog.\nFOL:\t-Sees(Cow, Dog)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog does not need the tiger.\nFOL:\t-Needs(Dog, Tiger)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something is cold and blue then it sees the dog.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf something needs the cat then the cat visits the dog.\nFOL:\tall x. (Needs(x, Cat) -> Visits(Cat, Dog))\nTEXT:\tIf something visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf something needs the dog and the dog needs the cat then the cat sees the tiger.\nFOL:\tall x. ((Needs(x, Dog) & Needs(Dog, Cat)) -> Sees(Cat, Tiger))\nTEXT:\tIf something sees the dog then it visits the cat.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger is red then it needs the cat.\nFOL:\tall x. ((Sees(x, Tiger) & Red(Tiger)) -> Needs(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger sees the dog then the tiger visits the dog.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(Tiger, Dog)) -> Visits(Tiger, Dog))\nTEXT:\tThe tiger needs the cat.\nFOL:\tNeeds(Tiger, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow sees the cat.\nFOL:\tSees(Cow, Cat)\nTEXT:\tThe cow does not see the dog.\nFOL:\t-Sees(Cow, Dog)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog does not need the tiger.\nFOL:\t-Needs(Dog, Tiger)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something is cold and blue then it sees the dog.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf something needs the cat then the cat visits the dog.\nFOL:\tall x. (Needs(x, Cat) -> Visits(Cat, Dog))\nTEXT:\tIf something visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf something needs the dog and the dog needs the cat then the cat sees the tiger.\nFOL:\tall x. ((Needs(x, Dog) & Needs(Dog, Cat)) -> Sees(Cat, Tiger))\nTEXT:\tIf something sees the dog then it visits the cat.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger is red then it needs the cat.\nFOL:\tall x. ((Sees(x, Tiger) & Red(Tiger)) -> Needs(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger sees the dog then the tiger visits the dog.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(Tiger, Dog)) -> Visits(Tiger, Dog))\nTEXT:\tThe tiger needs the cat.\nFOL:\tNeeds(Tiger, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow sees the cat.\nFOL:\tSees(Cow, Cat)\nTEXT:\tThe cow does not see the dog.\nFOL:\t-See(Cow, Dog)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSee(Cow, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog does not need the tiger.\nFOL:\t-Needs(Dog, Tiger)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSee(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSee(Tiger, Cat)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSee(Tiger, Cow)\nTEXT:\tIf something is cold and blue then it sees the dog.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> See(x, Dog))\nTEXT:\tIf something visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf something needs the cat then the cat visits the dog.\nFOL:\tall x. (Needs(x, Cat) -> Visits(Cat, Dog))\nTEXT:\tIf something visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf something needs the dog and the dog needs the cat then the cat sees the tiger.\nFOL:\tall x. ((Needs(x, Dog) & Needs(Dog, Cat)) -> See(Cat, Tiger))\nTEXT:\tIf something sees the dog then it visits the cat.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger is red then it needs the cat.\nFOL:\tall x. ((Sees(x, Tiger) & Red(Tiger)) -> Needs(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger sees the dog then the tiger visits the dog.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(Tiger, Dog)) -> Visits(Tiger, Dog))\nTEXT:\tThe tiger needs the cat.\nFOL:\tNeeds(Tiger, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow sees the cat.\nFOL:\tSees(Cow, Cat)\nTEXT:\tThe cow does not see the dog.\nFOL:\t- Sees(Cow, Dog)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog does not need the tiger.\nFOL:\t- Needs(Dog, Tiger)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something is cold and blue then it sees the dog.\nFOL:\tall x. ((Cold(x) & Blue(x)) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf something needs the cat then the cat visits the dog.\nFOL:\tall x. (Needs(x, Cat) -> Visits(Cat, Dog))\nTEXT:\tIf something visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf something needs the dog and the dog needs the cat then the cat sees the tiger.\nFOL:\tall x. ((Needs(x, Dog) & Needs(Dog, Cat)) -> Sees(Cat, Tiger))\nTEXT:\tIf something sees the dog then it visits the cat.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger is red then it needs the cat.\nFOL:\tall x. ((Sees(x, Tiger) & Red(Tiger)) -> Needs(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger sees the dog then the tiger visits the dog.\nFOL:\tall x. ((Sees(x, Tiger) & Sees(Tiger, Dog)) -> Visits(Tiger, Dog))\nTEXT:\tThe tiger needs the cat.\nFOL:\tNeeds(Tiger, Cat)\nANSWER:\tUncertain", "TEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat needs the cow.\nFOL:\tNeeds(Cat, Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow sees the cat.\nFOL:\tSees(Cow, Cat)\nTEXT:\tThe cow does not see the dog.\nFOL:\t-Sees(Cow, Dog)\nTEXT:\tThe cow sees the tiger.\nFOL:\tSees(Cow, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog needs the cow.\nFOL:\tNeeds(Dog, Cow)\nTEXT:\tThe dog does not need the tiger.\nFOL:\t-Needs(Dog, Tiger)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe dog visits the cat.\nFOL:\tVisits(Dog, Cat)\nTEXT:\tThe dog visits the cow.\nFOL:\tVisits(Dog, Cow)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger sees the cat.\nFOL:\tSees(Tiger, Cat)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something is cold and blue then it sees the dog.\nFOL:\tall x. (Cold(x) & Blue(x) -> Sees(x, Dog))\nTEXT:\tIf something visits the dog then the dog visits the tiger.\nFOL:\tall x. (Visits(x, Dog) -> Visits(Dog, Tiger))\nTEXT:\tIf something needs the cat then the cat visits the dog.\nFOL:\tall x. (Needs(x, Cat) -> Visits(Cat, Dog))\nTEXT:\tIf something visits the tiger then the tiger is blue.\nFOL:\tall x. (Visits(x, Tiger) -> Blue(Tiger))\nTEXT:\tIf something needs the dog and the dog needs the cat then the cat sees the tiger.\nFOL:\tall x. (Needs(x, Dog) & Needs(Dog, Cat) -> Sees(Cat, Tiger))\nTEXT:\tIf something sees the dog then it visits the cat.\nFOL:\tall x. (Sees(x, Dog) -> Visits(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger is red then it needs the cat.\nFOL:\tall x. (Sees(x, Tiger) & Red(Tiger) -> Needs(x, Cat))\nTEXT:\tIf something sees the tiger and the tiger sees the dog then the tiger visits the dog.\nFOL:\tall x. (Sees(x, Tiger) & Sees(Tiger, Dog) -> Visits(Tiger, Dog))\nTEXT:\tThe tiger needs the cat.\nFOL:\tNeeds(Tiger, Cat)\nANSWER:\tFalse"], ["TEXT:\tAnne is not rough.\nFOL:\t-rough(Anne)\nTEXT:\tBob is blue.\nFOL:\tblue(Bob)\nTEXT:\tErin is not furry.\nFOL:\t-furry(Erin)\nTEXT:\tErin is red.\nFOL:\tred(Erin)\nTEXT:\tGary is big.\nFOL:\tbig(Gary)\nTEXT:\tGary is not cold.\nFOL:\t-cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tfurry(Gary)\nTEXT:\tIf something is blue then it is rough.\nFOL:\tall x. (blue(x) -> rough(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (red(x) -> rough(x))\nTEXT:\tIf Gary is rough then Gary is not blue.\nFOL:\t(rough(Gary) -> -blue(Gary))\nTEXT:\tRough things are red.\nFOL:\tall x. (rough(x) -> red(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (big(x) -> quiet(x))\nTEXT:\tAll cold things are big.\nFOL:\tall x. (cold(x) -> big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (red(x) -> big(x))\nTEXT:\tIf something is blue and not rough then it is big.\nFOL:\tall x. ((blue(x) & -rough(x)) -> big(x))\nTEXT:\tQuiet, big things are not cold.\nFOL:\tall x. ((quiet(x) & big(x)) -> -cold(x))\nTEXT:\tGary is quiet.\nFOL:\tquiet(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is blue then it is rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tIf Gary is rough then Gary is not blue.\nFOL:\tRough(Gary) -> -Blue(Gary)\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tAll cold things are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is blue and not rough then it is big.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Big(x))\nTEXT:\tQuiet, big things are not cold.\nFOL:\tall x. ((Quiet(x) & Big(x)) -> -Cold(x))\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is blue then it is rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tIf Gary is rough then Gary is not blue.\nFOL:\tRough(Gary) -> -Blue(Gary)\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tAll cold things are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is blue and not rough then it is big.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Big(x))\nTEXT:\tQuiet, big things are not cold.\nFOL:\tall x. ((Quiet(x) & Big(x)) -> -Cold(x))\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is blue then it is rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tIf Gary is rough then Gary is not blue.\nFOL:\tRough(Gary) -> -Blue(Gary)\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tAll cold things are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is blue and not rough then it is big.\nFOL:\tall x. (Blue(x) & -Rough(x) -> Big(x))\nTEXT:\tQuiet, big things are not cold.\nFOL:\tall x. ((Quiet(x) & Big(x)) -> -Cold(x))\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nANSWER:\tTrue\n", "TEXT:\tAnne is not rough.\nFOL:\t-Rough(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is not cold.\nFOL:\t-Cold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is blue then it is rough.\nFOL:\tall x. (Blue(x) -> Rough(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tIf Gary is rough then Gary is not blue.\nFOL:\t(Rough(Gary) -> -Blue(Gary))\nTEXT:\tRough things are red.\nFOL:\tall x. (Rough(x) -> Red(x))\nTEXT:\tBig things are quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tAll cold things are big.\nFOL:\tall x. (Cold(x) -> Big(x))\nTEXT:\tIf something is red then it is big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is blue and not rough then it is big.\nFOL:\tall x. ((Blue(x) & -Rough(x)) -> Big(x))\nTEXT:\tQuiet, big things are not cold.\nFOL:\tall x. ((Quiet(x) & Big(x)) -> -Cold(x))\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nANSWER:\tTrue\n"], ["TEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is not round.\nFOL:\t-Round(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll red, round people are quiet.\nFOL:\tall x. ((Red(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is round and smart then they are not red.\nFOL:\tall x. ((Round(x) & Smart(x)) -> -Red(x))\nTEXT:\tAll white people are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tQuiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is red and not white then they are not green.\nFOL:\tall x. ((Red(x) & -White(x)) -> -Green(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is not round.\nFOL:\t-Round(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll red, round people are quiet.\nFOL:\tall x. ((Red(x) & Round(x)) -> Quiet(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is round and smart then they are not red.\nFOL:\tall x. ((Round(x) & Smart(x)) -> -Red(x))\nTEXT:\tAll white people are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tQuiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is red and not white then they are not green.\nFOL:\tall x. ((Red(x) & -White(x)) -> -Green(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is not round.\nFOL:\t-Round(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll red, round people are quiet.\nFOL:\tall x. (Red(x) & Round(x) -> Quiet(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is round and smart then they are not red.\nFOL:\tall x. (Round(x) & Smart(x) -> -Red(x))\nTEXT:\tAll white people are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tQuiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is red and not white then they are not green.\nFOL:\tall x. (Red(x) & -White(x) -> -Green(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tTrue\n", "TEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is not round.\nFOL:\t-Round(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll red, round people are quiet.\nFOL:\tall x. (Red(x) & Round(x) -> Quiet(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is round and smart then they are not red.\nFOL:\tall x. (Round(x) & Smart(x) -> -Red(x))\nTEXT:\tAll white people are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tQuiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is red and not white then they are not green.\nFOL:\tall x. (Red(x) & -White(x) -> -Green(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tUncertain\n", "TEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is not round.\nFOL:\t-Round(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll red, round people are quiet.\nFOL:\tall x. (Red(x) & Round(x) -> Quiet(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is round and smart then they are not red.\nFOL:\tall x. ((Round(x) & Smart(x)) -> -Red(x))\nTEXT:\tAll white people are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tQuiet people are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tIf someone is red and not white then they are not green.\nFOL:\tall x. ((Red(x) & -White(x)) -> -Green(x))\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChases(Dog, Squirrel)\nTEXT:\tThe dog does not visit the lion.\nFOL:\t-Visits(Dog, Lion)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSees(Squirrel, Lion)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tThe squirrel does not visit the lion.\nFOL:\t-Visits(Squirrel, Lion)\nTEXT:\tIf something visits the squirrel then it is red.\nFOL:\tall x. (Visits(x, Squirrel) -> Red(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is blue then it visits the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tIf the squirrel chases the lion then the squirrel is young.\nFOL:\t(Chases(Squirrel, Lion) -> Young(Squirrel))\nTEXT:\tIf something visits the squirrel and it is red then the squirrel is young.\nFOL:\tall x. ((Visits(x, Squirrel) & Red(x)) -> Young(Squirrel))\nTEXT:\tIf the dog visits the bald eagle then the dog is not kind.\nFOL:\t(Visits(Dog, BaldEagle) -> -Kind(Dog))\nTEXT:\tIf something is kind and it sees the bald eagle then the bald eagle chases the dog.\nFOL:\tall x. ((Kind(x) & Sees(x, BaldEagle)) -> Chases(BaldEagle, Dog))\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nANSWER:\tTrue", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChases(Dog, Squirrel)\nTEXT:\tThe dog does not visit the lion.\nFOL:\t-Visits(Dog, Lion)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSees(Squirrel, Lion)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tThe squirrel does not visit the lion.\nFOL:\t-Visits(Squirrel, Lion)\nTEXT:\tIf something visits the squirrel then it is red.\nFOL:\tall x. (Visits(x, Squirrel) -> Red(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is blue then it visits the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tIf the squirrel chases the lion then the squirrel is young.\nFOL:\tChases(Squirrel, Lion) -> Young(Squirrel)\nTEXT:\tIf something visits the squirrel and it is red then the squirrel is young.\nFOL:\tall x. ((Visits(x, Squirrel) & Red(x)) -> Young(Squirrel))\nTEXT:\tIf the dog visits the bald eagle then the dog is not kind.\nFOL:\tVisits(Dog, BaldEagle) -> -Kind(Dog)\nTEXT:\tIf something is kind and it sees the bald eagle then the bald eagle chases the dog.\nFOL:\tall x. ((Kind(x) & Sees(x, BaldEagle)) -> Chases(BaldEagle, Dog))\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChase(BaldEagle, Dog)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSee(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChase(Dog, Squirrel)\nTEXT:\tThe dog does not visit the lion.\nFOL:\t-Visit(Dog, Lion)\nTEXT:\tThe lion chases the dog.\nFOL:\tChase(Lion, Dog)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChase(Squirrel, Dog)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSee(Squirrel, Dog)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSee(Squirrel, Lion)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisit(Squirrel, Dog)\nTEXT:\tThe squirrel does not visit the lion.\nFOL:\t-Visit(Squirrel, Lion)\nTEXT:\tIf something visits the squirrel then it is red.\nFOL:\tall x. (Visit(x, Squirrel) -> Red(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is blue then it visits the squirrel.\nFOL:\tall x. (Blue(x) -> Visit(x, Squirrel))\nTEXT:\tIf the squirrel chases the lion then the squirrel is young.\nFOL:\tChase(Squirrel, Lion) -> Young(Squirrel)\nTEXT:\tIf something visits the squirrel and it is red then the squirrel is young.\nFOL:\tall x. ((Visit(x, Squirrel) & Red(x)) -> Young(Squirrel))\nTEXT:\tIf the dog visits the bald eagle then the dog is not kind.\nFOL:\tVisit(Dog, BaldEagle) -> -Kind(Dog)\nTEXT:\tIf something is kind and it sees the bald eagle then the bald eagle chases the dog.\nFOL:\tall x. ((Kind(x) & See(x, BaldEagle)) -> Chase(BaldEagle, Dog))\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisit(BaldEagle, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChases(BaldEagle, Dog)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSees(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChases(Dog, Squirrel)\nTEXT:\tThe dog does not visit the lion.\nFOL:\t-Visits(Dog, Lion)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChases(Squirrel, Dog)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSees(Squirrel, Lion)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisits(Squirrel, Dog)\nTEXT:\tThe squirrel does not visit the lion.\nFOL:\t-Visits(Squirrel, Lion)\nTEXT:\tIf something visits the squirrel then it is red.\nFOL:\tall x. (Visits(x, Squirrel) -> Red(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is blue then it visits the squirrel.\nFOL:\tall x. (Blue(x) -> Visits(x, Squirrel))\nTEXT:\tIf the squirrel chases the lion then the squirrel is young.\nFOL:\tChases(Squirrel, Lion) -> Young(Squirrel)\nTEXT:\tIf something visits the squirrel and it is red then the squirrel is young.\nFOL:\tall x. ((Visits(x, Squirrel) & Red(x)) -> Young(Squirrel))\nTEXT:\tIf the dog visits the bald eagle then the dog is not kind.\nFOL:\tVisits(Dog, BaldEagle) -> -Kind(Dog)\nTEXT:\tIf something is kind and it sees the bald eagle then the bald eagle chases the dog.\nFOL:\tall x. ((Kind(x) & Sees(x, BaldEagle)) -> Chases(BaldEagle, Dog))\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisits(BaldEagle, Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle chases the dog.\nFOL:\tChase(BaldEagle, Dog)\nTEXT:\tThe bald eagle is blue.\nFOL:\tBlue(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bald eagle sees the squirrel.\nFOL:\tSee(BaldEagle, Squirrel)\nTEXT:\tThe dog chases the squirrel.\nFOL:\tChase(Dog, Squirrel)\nTEXT:\tThe dog does not visit the lion.\nFOL:\t-Visit(Dog, Lion)\nTEXT:\tThe lion chases the dog.\nFOL:\tChase(Lion, Dog)\nTEXT:\tThe lion is red.\nFOL:\tRed(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe squirrel chases the dog.\nFOL:\tChase(Squirrel, Dog)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSee(Squirrel, Dog)\nTEXT:\tThe squirrel sees the lion.\nFOL:\tSee(Squirrel, Lion)\nTEXT:\tThe squirrel visits the dog.\nFOL:\tVisit(Squirrel, Dog)\nTEXT:\tThe squirrel does not visit the lion.\nFOL:\t-Visit(Squirrel, Lion)\nTEXT:\tIf something visits the squirrel then it is red.\nFOL:\tall x. (Visit(x, Squirrel) -> Red(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tIf something is blue then it visits the squirrel.\nFOL:\tall x. (Blue(x) -> Visit(x, Squirrel))\nTEXT:\tIf the squirrel chases the lion then the squirrel is young.\nFOL:\tChase(Squirrel, Lion) -> Young(Squirrel)\nTEXT:\tIf something visits the squirrel and it is red then the squirrel is young.\nFOL:\tall x. ((Visit(x, Squirrel) & Red(x)) -> Young(Squirrel))\nTEXT:\tIf the dog visits the bald eagle then the dog is not kind.\nFOL:\tVisit(Dog, BaldEagle) -> -Kind(Dog)\nTEXT:\tIf something is kind and it sees the bald eagle then the bald eagle chases the dog.\nFOL:\tall x. ((Kind(x) & See(x, BaldEagle)) -> Chase(BaldEagle, Dog))\nTEXT:\tThe bald eagle visits the squirrel.\nFOL:\tVisit(BaldEagle, Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat likes the mouse.\nFOL:\tLikes(Cat, Mouse)\nTEXT:\tThe lion eats the bald eagle.\nFOL:\tEats(Lion, BaldEagle)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cat.\nFOL:\tSees(Lion, Cat)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is young and cold then it sees the bald eagle.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and it eats the cat then the cat is young.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, Cat)) -> Young(Cat))\nTEXT:\tIf something sees the bald eagle and it is rough then the bald eagle sees the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Rough(x)) -> Sees(BaldEagle, Cat))\nTEXT:\tIf something is kind then it eats the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is cold and it sees the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Cold(x) & Sees(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf something is rough then it sees the bald eagle.\nFOL:\tall x. (Rough(x) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the cat then the cat is green.\nFOL:\tall x. (Likes(x, Cat) -> Green(Cat))\nTEXT:\tThe bald eagle does not see the cat.\nFOL:\t-Sees(BaldEagle, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat likes the mouse.\nFOL:\tLikes(Cat, Mouse)\nTEXT:\tThe lion eats the bald eagle.\nFOL:\tEats(Lion, BaldEagle)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cat.\nFOL:\tSees(Lion, Cat)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is young and cold then it sees the bald eagle.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and it eats the cat then the cat is young.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, Cat)) -> Young(Cat))\nTEXT:\tIf something sees the bald eagle and it is rough then the bald eagle sees the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Rough(x)) -> Sees(BaldEagle, Cat))\nTEXT:\tIf something is kind then it eats the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is cold and it sees the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Cold(x) & Sees(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf something is rough then it sees the bald eagle.\nFOL:\tall x. (Rough(x) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the cat then the cat is green.\nFOL:\tall x. (Likes(x, Cat) -> Green(Cat))\nTEXT:\tThe bald eagle does not see the cat.\nFOL:\t-Sees(BaldEagle, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat likes the mouse.\nFOL:\tLikes(Cat, Mouse)\nTEXT:\tThe lion eats the bald eagle.\nFOL:\tEats(Lion, BaldEagle)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cat.\nFOL:\tSees(Lion, Cat)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is young and cold then it sees the bald eagle.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and it eats the cat then the cat is young.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, Cat)) -> Young(Cat))\nTEXT:\tIf something sees the bald eagle and it is rough then the bald eagle sees the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Rough(x)) -> Sees(BaldEagle, Cat))\nTEXT:\tIf something is kind then it eats the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is cold and it sees the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Cold(x) & Sees(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf something is rough then it sees the bald eagle.\nFOL:\tall x. (Rough(x) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the cat then the cat is green.\nFOL:\tall x. (Likes(x, Cat) -> Green(Cat))\nTEXT:\tThe bald eagle does not see the cat.\nFOL:\t-Sees(BaldEagle, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat likes the mouse.\nFOL:\tLikes(Cat, Mouse)\nTEXT:\tThe lion eats the bald eagle.\nFOL:\tEats(Lion, BaldEagle)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cat.\nFOL:\tSees(Lion, Cat)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is young and cold then it sees the bald eagle.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and it eats the cat then the cat is young.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, Cat)) -> Young(Cat))\nTEXT:\tIf something sees the bald eagle and it is rough then the bald eagle sees the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Rough(x)) -> Sees(BaldEagle, Cat))\nTEXT:\tIf something is kind then it eats the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is cold and it sees the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Cold(x) & Sees(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf something is rough then it sees the bald eagle.\nFOL:\tall x. (Rough(x) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the cat then the cat is green.\nFOL:\tall x. (Likes(x, Cat) -> Green(Cat))\nTEXT:\tThe bald eagle does not see the cat.\nFOL:\t-Sees(BaldEagle, Cat)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat likes the mouse.\nFOL:\tLikes(Cat, Mouse)\nTEXT:\tThe lion eats the bald eagle.\nFOL:\tEats(Lion, BaldEagle)\nTEXT:\tThe lion sees the bald eagle.\nFOL:\tSees(Lion, BaldEagle)\nTEXT:\tThe lion sees the cat.\nFOL:\tSees(Lion, Cat)\nTEXT:\tThe mouse eats the bald eagle.\nFOL:\tEats(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse eats the lion.\nFOL:\tEats(Mouse, Lion)\nTEXT:\tThe mouse is cold.\nFOL:\tCold(Mouse)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse likes the bald eagle.\nFOL:\tLikes(Mouse, BaldEagle)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tIf something is young and cold then it sees the bald eagle.\nFOL:\tall x. ((Young(x) & Cold(x)) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and it eats the cat then the cat is young.\nFOL:\tall x. ((Likes(x, BaldEagle) & Eats(x, Cat)) -> Young(Cat))\nTEXT:\tIf something sees the bald eagle and it is rough then the bald eagle sees the cat.\nFOL:\tall x. ((Sees(x, BaldEagle) & Rough(x)) -> Sees(BaldEagle, Cat))\nTEXT:\tIf something is kind then it eats the bald eagle.\nFOL:\tall x. (Kind(x) -> Eats(x, BaldEagle))\nTEXT:\tIf something is cold and it sees the bald eagle then the bald eagle is rough.\nFOL:\tall x. ((Cold(x) & Sees(x, BaldEagle)) -> Rough(BaldEagle))\nTEXT:\tIf something is rough then it sees the bald eagle.\nFOL:\tall x. (Rough(x) -> Sees(x, BaldEagle))\nTEXT:\tIf something likes the cat then the cat is green.\nFOL:\tall x. (Likes(x, Cat) -> Green(Cat))\nTEXT:\tThe bald eagle does not see the cat.\nFOL:\t- Sees(BaldEagle, Cat)\nANSWER:\tUncertain\n"], ["TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. ((Red(x) & Young(x)) -> Blue(x))\nTEXT:\tIf Anne is smart then Anne is cold.\nFOL:\tSmart(Anne) -> Cold(Anne)\nTEXT:\tYoung people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll blue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tIf Anne is cold then Anne is kind.\nFOL:\tCold(Anne) -> Kind(Anne)\nTEXT:\tIf Erin is young and Erin is blue then Erin is kind.\nFOL:\t(Young(Erin) & Blue(Erin)) -> Kind(Erin)\nTEXT:\tAll round people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. (Red(x) & Young(x) -> Blue(x))\nTEXT:\tIf Anne is smart then Anne is cold.\nFOL:\tSmart(Anne) -> Cold(Anne)\nTEXT:\tYoung people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll blue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tIf Anne is cold then Anne is kind.\nFOL:\tCold(Anne) -> Kind(Anne)\nTEXT:\tIf Erin is young and Erin is blue then Erin is kind.\nFOL:\t(Young(Erin) & Blue(Erin)) -> Kind(Erin)\nTEXT:\tAll round people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. ((Red(x) & Young(x)) -> Blue(x))\nTEXT:\tIf Anne is smart then Anne is cold.\nFOL:\tSmart(Anne) -> Cold(Anne)\nTEXT:\tYoung people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll blue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tIf Anne is cold then Anne is kind.\nFOL:\tCold(Anne) -> Kind(Anne)\nTEXT:\tIf Erin is young and Erin is blue then Erin is kind.\nFOL:\t(Young(Erin) & Blue(Erin)) -> Kind(Erin)\nTEXT:\tAll round people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. ((Red(x) & Young(x)) -> Blue(x))\nTEXT:\tIf Anne is smart then Anne is cold.\nFOL:\tSmart(Anne) -> Cold(Anne)\nTEXT:\tYoung people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll blue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tIf Anne is cold then Anne is kind.\nFOL:\tCold(Anne) -> Kind(Anne)\nTEXT:\tIf Erin is young and Erin is blue then Erin is kind.\nFOL:\t(Young(Erin) & Blue(Erin)) -> Kind(Erin)\nTEXT:\tAll round people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tUncertain\n", "TEXT:\tAnne is blue.\nFOL:\tBlue(Anne)\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is kind.\nFOL:\tKind(Fiona)\nTEXT:\tAll red, young people are blue.\nFOL:\tall x. (Red(x) & Young(x) -> Blue(x))\nTEXT:\tIf Anne is smart then Anne is cold.\nFOL:\tSmart(Anne) -> Cold(Anne)\nTEXT:\tYoung people are smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tAll blue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tIf Fiona is round then Fiona is kind.\nFOL:\tRound(Fiona) -> Kind(Fiona)\nTEXT:\tIf Anne is cold then Anne is kind.\nFOL:\tCold(Anne) -> Kind(Anne)\nTEXT:\tIf Erin is young and Erin is blue then Erin is kind.\nFOL:\t(Young(Erin) & Blue(Erin)) -> Kind(Erin)\nTEXT:\tAll round people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nANSWER:\tUncertain\n"], ["TEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow does not visit the mouse.\nFOL:\t-Visits(Cow, Mouse)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe lion is not rough.\nFOL:\t-Rough(Lion)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the mouse and the mouse visits the lion then it is round.\nFOL:\tall x. (Eats(x, Mouse) & Visits(Mouse, Lion) -> Round(x))\nTEXT:\tIf the cow likes the lion and the cow visits the lion then the cow visits the rabbit.\nFOL:\t(Likes(Cow, Lion) & Visits(Cow, Lion)) -> Visits(Cow, Rabbit)\nTEXT:\tIf the lion likes the cow then the lion does not eat the rabbit.\nFOL:\t(Likes(Lion, Cow)) -> -Eats(Lion, Rabbit)\nTEXT:\tIf the mouse eats the lion then the mouse does not eat the cow.\nFOL:\t(Eats(Mouse, Lion)) -> -Eats(Mouse, Cow)\nTEXT:\tIf something likes the lion then the lion eats the mouse.\nFOL:\tall x. (Likes(x, Lion) -> Eats(Lion, Mouse))\nTEXT:\tIf something visits the cow and it likes the lion then the lion does not eat the mouse.\nFOL:\tall x. (Visits(x, Cow) & Likes(x, Lion)) -> -Eats(Lion, Mouse)\nTEXT:\tIf something eats the lion then it likes the cow.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, Cow))\nTEXT:\tThe lion does not like the cow.\nFOL:\t-Likes(Lion, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow does not visit the mouse.\nFOL:\t-Visits(Cow, Mouse)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe lion is not rough.\nFOL:\t-Rough(Lion)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the mouse and the mouse visits the lion then it is round.\nFOL:\tall x. (Eats(x, Mouse) & Visits(Mouse, Lion) -> Round(x))\nTEXT:\tIf the cow likes the lion and the cow visits the lion then the cow visits the rabbit.\nFOL:\t(Likes(Cow, Lion) & Visits(Cow, Lion) -> Visits(Cow, Rabbit))\nTEXT:\tIf the lion likes the cow then the lion does not eat the rabbit.\nFOL:\t(Likes(Lion, Cow) -> -Eats(Lion, Rabbit))\nTEXT:\tIf the mouse eats the lion then the mouse does not eat the cow.\nFOL:\t(Eats(Mouse, Lion) -> -Eats(Mouse, Cow))\nTEXT:\tIf something likes the lion then the lion eats the mouse.\nFOL:\tall x. (Likes(x, Lion) -> Eats(Lion, Mouse))\nTEXT:\tIf something visits the cow and it likes the lion then the lion does not eat the mouse.\nFOL:\tall x. (Visits(x, Cow) & Likes(x, Lion) -> -Eats(Lion, Mouse))\nTEXT:\tIf something eats the lion then it likes the cow.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, Cow))\nTEXT:\tThe lion does not like the cow.\nFOL:\t-Likes(Lion, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow does not visit the mouse.\nFOL:\t-Visits(Cow, Mouse)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe lion is not rough.\nFOL:\t-Rough(Lion)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the mouse and the mouse visits the lion then it is round.\nFOL:\tall x. (Eats(x, Mouse) & Visits(Mouse, Lion) -> Round(x))\nTEXT:\tIf the cow likes the lion and the cow visits the lion then the cow visits the rabbit.\nFOL:\tLikes(Cow, Lion) & Visits(Cow, Lion) -> Visits(Cow, Rabbit)\nTEXT:\tIf the lion likes the cow then the lion does not eat the rabbit.\nFOL:\tLikes(Lion, Cow) -> -Eats(Lion, Rabbit)\nTEXT:\tIf the mouse eats the lion then the mouse does not eat the cow.\nFOL:\tEats(Mouse, Lion) -> -Eats(Mouse, Cow)\nTEXT:\tIf something likes the lion then the lion eats the mouse.\nFOL:\tall x. (Likes(x, Lion) -> Eats(Lion, Mouse))\nTEXT:\tIf something visits the cow and it likes the lion then the lion does not eat the mouse.\nFOL:\tall x. (Visits(x, Cow) & Likes(x, Lion) -> -Eats(Lion, Mouse))\nTEXT:\tIf something eats the lion then it likes the cow.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, Cow))\nTEXT:\tThe lion does not like the cow.\nFOL:\t-Likes(Lion, Cow)\nANSWER:\tTrue\n", "TEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow does not visit the mouse.\nFOL:\t-Visits(Cow, Mouse)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe lion is not rough.\nFOL:\t-Rough(Lion)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the mouse and the mouse visits the lion then it is round.\nFOL:\tall x. (Eats(x, Mouse) & Visits(Mouse, Lion) -> Round(x))\nTEXT:\tIf the cow likes the lion and the cow visits the lion then the cow visits the rabbit.\nFOL:\t(Likes(Cow, Lion) & Visits(Cow, Lion) -> Visits(Cow, Rabbit))\nTEXT:\tIf the lion likes the cow then the lion does not eat the rabbit.\nFOL:\t(Likes(Lion, Cow) -> -Eats(Lion, Rabbit))\nTEXT:\tIf the mouse eats the lion then the mouse does not eat the cow.\nFOL:\t(Eats(Mouse, Lion) -> -Eats(Mouse, Cow))\nTEXT:\tIf something likes the lion then the lion eats the mouse.\nFOL:\tall x. (Likes(x, Lion) -> Eats(Lion, Mouse))\nTEXT:\tIf something visits the cow and it likes the lion then the lion does not eat the mouse.\nFOL:\tall x. (Visits(x, Cow) & Likes(x, Lion) -> -Eats(Lion, Mouse))\nTEXT:\tIf something eats the lion then it likes the cow.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, Cow))\nTEXT:\tThe lion does not like the cow.\nFOL:\t-Likes(Lion, Cow)\nANSWER:\tUncertain\n", "TEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow eats the mouse.\nFOL:\tEats(Cow, Mouse)\nTEXT:\tThe cow likes the lion.\nFOL:\tLikes(Cow, Lion)\nTEXT:\tThe cow does not visit the mouse.\nFOL:\t-Visits(Cow, Mouse)\nTEXT:\tThe cow visits the rabbit.\nFOL:\tVisits(Cow, Rabbit)\nTEXT:\tThe lion is not rough.\nFOL:\t-Rough(Lion)\nTEXT:\tThe lion visits the mouse.\nFOL:\tVisits(Lion, Mouse)\nTEXT:\tThe mouse eats the rabbit.\nFOL:\tEats(Mouse, Rabbit)\nTEXT:\tThe mouse visits the lion.\nFOL:\tVisits(Mouse, Lion)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEats(Rabbit, Lion)\nTEXT:\tKind things are big.\nFOL:\tall x. (Kind(x) -> Big(x))\nTEXT:\tIf something is round then it eats the lion.\nFOL:\tall x. (Round(x) -> Eats(x, Lion))\nTEXT:\tIf something eats the mouse and the mouse visits the lion then it is round.\nFOL:\tall x. (Eats(x, Mouse) & Visits(Mouse, Lion) -> Round(x))\nTEXT:\tIf the cow likes the lion and the cow visits the lion then the cow visits the rabbit.\nFOL:\t(Likes(Cow, Lion) & Visits(Cow, Lion)) -> Visits(Cow, Rabbit)\nTEXT:\tIf the lion likes the cow then the lion does not eat the rabbit.\nFOL:\tLikes(Lion, Cow) -> -Eats(Lion, Rabbit)\nTEXT:\tIf the mouse eats the lion then the mouse does not eat the cow.\nFOL:\tEats(Mouse, Lion) -> -Eats(Mouse, Cow)\nTEXT:\tIf something likes the lion then the lion eats the mouse.\nFOL:\tall x. (Likes(x, Lion) -> Eats(Lion, Mouse))\nTEXT:\tIf something visits the cow and it likes the lion then the lion does not eat the mouse.\nFOL:\tall x. ((Visits(x, Cow) & Likes(x, Lion)) -> -Eats(Lion, Mouse))\nTEXT:\tIf something eats the lion then it likes the cow.\nFOL:\tall x. (Eats(x, Lion) -> Likes(x, Cow))\nTEXT:\tThe lion does not like the cow.\nFOL:\t-Likes(Lion, Cow)\nANSWER:\tUncertain\n"], ["TEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion likes the mouse.\nFOL:\tLikes(Lion, Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel does not see the lion.\nFOL:\t-Sees(Squirrel, Lion)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice and it sees the mouse then the mouse sees the lion.\nFOL:\tall x. ((Nice(x) & Sees(x, Mouse)) -> Sees(Mouse, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something sees the lion and the lion is cold then the lion visits the dog.\nFOL:\tall x. ((Sees(x, Lion) & Cold(Lion)) -> Visits(Lion, Dog))\nTEXT:\tIf the dog visits the lion and the lion likes the squirrel then the lion visits the mouse.\nFOL:\t((Visits(Dog, Lion) & Likes(Lion, Squirrel)) -> Visits(Lion, Mouse))\nTEXT:\tIf something visits the dog then it visits the squirrel.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Squirrel))\nTEXT:\tIf something visits the squirrel and it is not cold then the squirrel likes the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & -Cold(x)) -> Likes(Squirrel, Lion))\nTEXT:\tThe squirrel is nice.\nFOL:\tNice(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion likes the mouse.\nFOL:\tLikes(Lion, Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel does not see the lion.\nFOL:\t-Sees(Squirrel, Lion)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice and it sees the mouse then the mouse sees the lion.\nFOL:\tall x. ((Nice(x) & Sees(x, Mouse)) -> Sees(Mouse, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something sees the lion and the lion is cold then the lion visits the dog.\nFOL:\tall x. ((Sees(x, Lion) & Cold(Lion)) -> Visits(Lion, Dog))\nTEXT:\tIf the dog visits the lion and the lion likes the squirrel then the lion visits the mouse.\nFOL:\t((Visits(Dog, Lion) & Likes(Lion, Squirrel)) -> Visits(Lion, Mouse))\nTEXT:\tIf something visits the dog then it visits the squirrel.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Squirrel))\nTEXT:\tIf something visits the squirrel and it is not cold then the squirrel likes the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & -Cold(x)) -> Likes(Squirrel, Lion))\nTEXT:\tThe squirrel is nice.\nFOL:\tNice(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion likes the mouse.\nFOL:\tLikes(Lion, Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel does not see the lion.\nFOL:\t-Sees(Squirrel, Lion)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice and it sees the mouse then the mouse sees the lion.\nFOL:\tall x. ((Nice(x) & Sees(x, Mouse)) -> Sees(Mouse, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something sees the lion and the lion is cold then the lion visits the dog.\nFOL:\tall x. ((Sees(x, Lion) & Cold(Lion)) -> Visits(Lion, Dog))\nTEXT:\tIf the dog visits the lion and the lion likes the squirrel then the lion visits the mouse.\nFOL:\t((Visits(Dog, Lion) & Likes(Lion, Squirrel)) -> Visits(Lion, Mouse))\nTEXT:\tIf something visits the dog then it visits the squirrel.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Squirrel))\nTEXT:\tIf something visits the squirrel and it is not cold then the squirrel likes the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & -Cold(x)) -> Likes(Squirrel, Lion))\nTEXT:\tThe squirrel is nice.\nFOL:\tNice(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion likes the mouse.\nFOL:\tLikes(Lion, Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel does not see the lion.\nFOL:\t-Sees(Squirrel, Lion)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice and it sees the mouse then the mouse sees the lion.\nFOL:\tall x. ((Nice(x) & Sees(x, Mouse)) -> Sees(Mouse, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something sees the lion and the lion is cold then the lion visits the dog.\nFOL:\tall x. ((Sees(x, Lion) & Cold(Lion)) -> Visits(Lion, Dog))\nTEXT:\tIf the dog visits the lion and the lion likes the squirrel then the lion visits the mouse.\nFOL:\t((Visits(Dog, Lion) & Likes(Lion, Squirrel)) -> Visits(Lion, Mouse))\nTEXT:\tIf something visits the dog then it visits the squirrel.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Squirrel))\nTEXT:\tIf something visits the squirrel and it is not cold then the squirrel likes the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & -Cold(x)) -> Likes(Squirrel, Lion))\nTEXT:\tThe squirrel is nice.\nFOL:\tNice(Squirrel)\nANSWER:\tTrue\n", "TEXT:\tThe dog sees the squirrel.\nFOL:\tSees(Dog, Squirrel)\nTEXT:\tThe dog visits the mouse.\nFOL:\tVisits(Dog, Mouse)\nTEXT:\tThe lion is nice.\nFOL:\tNice(Lion)\nTEXT:\tThe lion likes the dog.\nFOL:\tLikes(Lion, Dog)\nTEXT:\tThe lion likes the mouse.\nFOL:\tLikes(Lion, Mouse)\nTEXT:\tThe mouse likes the lion.\nFOL:\tLikes(Mouse, Lion)\nTEXT:\tThe squirrel is blue.\nFOL:\tBlue(Squirrel)\nTEXT:\tThe squirrel likes the dog.\nFOL:\tLikes(Squirrel, Dog)\nTEXT:\tThe squirrel likes the mouse.\nFOL:\tLikes(Squirrel, Mouse)\nTEXT:\tThe squirrel sees the dog.\nFOL:\tSees(Squirrel, Dog)\nTEXT:\tThe squirrel does not see the lion.\nFOL:\t-Sees(Squirrel, Lion)\nTEXT:\tThe squirrel sees the mouse.\nFOL:\tSees(Squirrel, Mouse)\nTEXT:\tIf something is blue then it is nice.\nFOL:\tall x. (Blue(x) -> Nice(x))\nTEXT:\tIf something is nice and it sees the mouse then the mouse sees the lion.\nFOL:\tall x. ((Nice(x) & Sees(x, Mouse)) -> Sees(Mouse, Lion))\nTEXT:\tIf something sees the lion then the lion is cold.\nFOL:\tall x. (Sees(x, Lion) -> Cold(Lion))\nTEXT:\tIf something sees the lion and the lion is cold then the lion visits the dog.\nFOL:\tall x. ((Sees(x, Lion) & Cold(Lion)) -> Visits(Lion, Dog))\nTEXT:\tIf the dog visits the lion and the lion likes the squirrel then the lion visits the mouse.\nFOL:\t((Visits(Dog, Lion) & Likes(Lion, Squirrel)) -> Visits(Lion, Mouse))\nTEXT:\tIf something visits the dog then it visits the squirrel.\nFOL:\tall x. (Visits(x, Dog) -> Visits(x, Squirrel))\nTEXT:\tIf something visits the squirrel and it is not cold then the squirrel likes the lion.\nFOL:\tall x. ((Visits(x, Squirrel) & -Cold(x)) -> Likes(Squirrel, Lion))\nTEXT:\tThe squirrel is nice.\nFOL:\tNice(Squirrel)\nANSWER:\tTrue\n"], ["TEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the dog.\nFOL:\tEats(Rabbit, Dog)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger eats the rabbit.\nFOL:\tEats(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something chases the tiger then it sees the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Sees(x, Cow))\nTEXT:\tIf the dog sees the rabbit then the dog chases the tiger.\nFOL:\tSees(Dog, Rabbit) -> Chases(Dog, Tiger)\nTEXT:\tIf something chases the dog and the dog sees the tiger then it is kind.\nFOL:\tall x. ((Chases(x, Dog) & Sees(Dog, Tiger)) -> Kind(x))\nTEXT:\tIf the rabbit sees the dog then the rabbit sees the cow.\nFOL:\tSees(Rabbit, Dog) -> Sees(Rabbit, Cow)\nTEXT:\tIf something sees the cow then it is nice.\nFOL:\tall x. (Sees(x, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it eats the dog then the cow eats the dog.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Dog)) -> Eats(Cow, Dog))\nTEXT:\tIf something is nice and it sees the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Nice(x) & Sees(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something is nice and it chases the cow then the cow is nice.\nFOL:\tall x. ((Nice(x) & Chases(x, Cow)) -> Nice(Cow))\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the dog.\nFOL:\tEats(Rabbit, Dog)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger eats the rabbit.\nFOL:\tEats(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something chases the tiger then it sees the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Sees(x, Cow))\nTEXT:\tIf the dog sees the rabbit then the dog chases the tiger.\nFOL:\tSees(Dog, Rabbit) -> Chases(Dog, Tiger)\nTEXT:\tIf something chases the dog and the dog sees the tiger then it is kind.\nFOL:\tall x. ((Chases(x, Dog) & Sees(Dog, Tiger)) -> Kind(x))\nTEXT:\tIf the rabbit sees the dog then the rabbit sees the cow.\nFOL:\tSees(Rabbit, Dog) -> Sees(Rabbit, Cow)\nTEXT:\tIf something sees the cow then it is nice.\nFOL:\tall x. (Sees(x, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it eats the dog then the cow eats the dog.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Dog)) -> Eats(Cow, Dog))\nTEXT:\tIf something is nice and it sees the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Nice(x) & Sees(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something is nice and it chases the cow then the cow is nice.\nFOL:\tall x. ((Nice(x) & Chases(x, Cow)) -> Nice(Cow))\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nANSWER:\tFalse\n", "TEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the dog.\nFOL:\tEats(Rabbit, Dog)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger eats the rabbit.\nFOL:\tEats(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something chases the tiger then it sees the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Sees(x, Cow))\nTEXT:\tIf the dog sees the rabbit then the dog chases the tiger.\nFOL:\tSees(Dog, Rabbit) -> Chases(Dog, Tiger)\nTEXT:\tIf something chases the dog and the dog sees the tiger then it is kind.\nFOL:\tall x. ((Chases(x, Dog) & Sees(Dog, Tiger)) -> Kind(x))\nTEXT:\tIf the rabbit sees the dog then the rabbit sees the cow.\nFOL:\tSees(Rabbit, Dog) -> Sees(Rabbit, Cow)\nTEXT:\tIf something sees the cow then it is nice.\nFOL:\tall x. (Sees(x, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it eats the dog then the cow eats the dog.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Dog)) -> Eats(Cow, Dog))\nTEXT:\tIf something is nice and it sees the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Nice(x) & Sees(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something is nice and it chases the cow then the cow is nice.\nFOL:\tall x. ((Nice(x) & Chases(x, Cow)) -> Nice(Cow))\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nANSWER:\tUncertain\n", "TEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the dog.\nFOL:\tEats(Rabbit, Dog)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger eats the rabbit.\nFOL:\tEats(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something chases the tiger then it sees the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Sees(x, Cow))\nTEXT:\tIf the dog sees the rabbit then the dog chases the tiger.\nFOL:\t(Sees(Dog, Rabbit) -> Chases(Dog, Tiger))\nTEXT:\tIf something chases the dog and the dog sees the tiger then it is kind.\nFOL:\tall x. ((Chases(x, Dog) & Sees(Dog, Tiger)) -> Kind(x))\nTEXT:\tIf the rabbit sees the dog then the rabbit sees the cow.\nFOL:\t(Sees(Rabbit, Dog) -> Sees(Rabbit, Cow))\nTEXT:\tIf something sees the cow then it is nice.\nFOL:\tall x. (Sees(x, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it eats the dog then the cow eats the dog.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Dog)) -> Eats(Cow, Dog))\nTEXT:\tIf something is nice and it sees the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Nice(x) & Sees(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something is nice and it chases the cow then the cow is nice.\nFOL:\tall x. ((Nice(x) & Chases(x, Cow)) -> Nice(Cow))\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nANSWER:\tTrue\n", "TEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe dog chases the cow.\nFOL:\tChases(Dog, Cow)\nTEXT:\tThe dog chases the tiger.\nFOL:\tChases(Dog, Tiger)\nTEXT:\tThe dog eats the cow.\nFOL:\tEats(Dog, Cow)\nTEXT:\tThe dog sees the rabbit.\nFOL:\tSees(Dog, Rabbit)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit eats the dog.\nFOL:\tEats(Rabbit, Dog)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe tiger chases the rabbit.\nFOL:\tChases(Tiger, Rabbit)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger eats the rabbit.\nFOL:\tEats(Tiger, Rabbit)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger is nice.\nFOL:\tNice(Tiger)\nTEXT:\tThe tiger sees the cow.\nFOL:\tSees(Tiger, Cow)\nTEXT:\tIf something chases the tiger then it sees the cow.\nFOL:\tall x. (Chases(x, Tiger) -> Sees(x, Cow))\nTEXT:\tIf the dog sees the rabbit then the dog chases the tiger.\nFOL:\t(Sees(Dog, Rabbit) -> Chases(Dog, Tiger))\nTEXT:\tIf something chases the dog and the dog sees the tiger then it is kind.\nFOL:\tall x. ((Chases(x, Dog) & Sees(Dog, Tiger)) -> Kind(x))\nTEXT:\tIf the rabbit sees the dog then the rabbit sees the cow.\nFOL:\t(Sees(Rabbit, Dog) -> Sees(Rabbit, Cow))\nTEXT:\tIf something sees the cow then it is nice.\nFOL:\tall x. (Sees(x, Cow) -> Nice(x))\nTEXT:\tIf something chases the cow and it eats the dog then the cow eats the dog.\nFOL:\tall x. ((Chases(x, Cow) & Eats(x, Dog)) -> Eats(Cow, Dog))\nTEXT:\tIf something is nice and it sees the rabbit then the rabbit chases the tiger.\nFOL:\tall x. ((Nice(x) & Sees(x, Rabbit)) -> Chases(Rabbit, Tiger))\nTEXT:\tIf something is nice then it eats the dog.\nFOL:\tall x. (Nice(x) -> Eats(x, Dog))\nTEXT:\tIf something is nice and it chases the cow then the cow is nice.\nFOL:\tall x. ((Nice(x) & Chases(x, Cow)) -> Nice(Cow))\nTEXT:\tThe dog is not nice.\nFOL:\t-Nice(Dog)\nANSWER:\tFalse\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Harry is kind then Harry is round.\nFOL:\tKind(Harry) -> Round(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Red(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tAll round, red things are white.\nFOL:\tall x. ((Round(x) & Red(x)) -> White(x))\nTEXT:\tIf Harry is round and Harry is big then Harry is furry.\nFOL:\t(Round(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tAll big, quiet things are furry.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Furry(x))\nTEXT:\tAll kind things are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Harry is kind then Harry is round.\nFOL:\tKind(Harry) -> Round(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. (Furry(x) & Big(x) -> Red(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tAll round, red things are white.\nFOL:\tall x. (Round(x) & Red(x) -> White(x))\nTEXT:\tIf Harry is round and Harry is big then Harry is furry.\nFOL:\t(Round(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tAll big, quiet things are furry.\nFOL:\tall x. (Big(x) & Quiet(x) -> Furry(x))\nTEXT:\tAll kind things are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Harry is kind then Harry is round.\nFOL:\tKind(Harry) -> Round(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. (Furry(x) & Big(x) -> Red(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tAll round, red things are white.\nFOL:\tall x. (Round(x) & Red(x) -> White(x))\nTEXT:\tIf Harry is round and Harry is big then Harry is furry.\nFOL:\t(Round(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tAll big, quiet things are furry.\nFOL:\tall x. (Big(x) & Quiet(x) -> Furry(x))\nTEXT:\tAll kind things are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Harry is kind then Harry is round.\nFOL:\tKind(Harry) -> Round(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. (Furry(x) & Big(x) -> Red(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tAll round, red things are white.\nFOL:\tall x. (Round(x) & Red(x) -> White(x))\nTEXT:\tIf Harry is round and Harry is big then Harry is furry.\nFOL:\t(Round(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tAll big, quiet things are furry.\nFOL:\tall x. (Big(x) & Quiet(x) -> Furry(x))\nTEXT:\tAll kind things are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tUncertain\n", "TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tErin is big.\nFOL:\tBig(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tIf Harry is kind then Harry is round.\nFOL:\tKind(Harry) -> Round(Harry)\nTEXT:\tFurry, big things are red.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Red(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tAll round, red things are white.\nFOL:\tall x. ((Round(x) & Red(x)) -> White(x))\nTEXT:\tIf Harry is round and Harry is big then Harry is furry.\nFOL:\t(Round(Harry) & Big(Harry)) -> Furry(Harry)\nTEXT:\tFurry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tAll big, quiet things are furry.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Furry(x))\nTEXT:\tAll kind things are red.\nFOL:\tall x. (Kind(x) -> Red(x))\nTEXT:\tAnne is not red.\nFOL:\t-Red(Anne)\nANSWER:\tTrue\n"], ["TEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone is cold and they like the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tIf someone likes the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone is big then they chase the cat.\nFOL:\tall x. (Big(x) -> Chases(x, Cat))\nTEXT:\tIf someone likes the rabbit then the rabbit sees the cat.\nFOL:\tall x. (Likes(x, Rabbit) -> Sees(Rabbit, Cat))\nTEXT:\tIf someone sees the cat then the cat is red.\nFOL:\tall x. (Sees(x, Cat) -> Red(Cat))\nTEXT:\tIf the cat sees the rabbit then the cat is cold.\nFOL:\t(Sees(Cat, Rabbit) -> Cold(Cat))\nTEXT:\tIf someone sees the squirrel then the squirrel chases the rabbit.\nFOL:\tall x. (Sees(x, Squirrel) -> Chases(Squirrel, Rabbit))\nTEXT:\tIf someone likes the squirrel then they like the cat.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tIf someone is cold and red then they chase the rabbit.\nFOL:\tall x. (Cold(x) & Red(x) -> Chases(x, Rabbit))\nTEXT:\tThe cat does not chase the squirrel.\nFOL:\t-Chases(Cat, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone is cold and they like the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tIf someone likes the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone is big then they chase the cat.\nFOL:\tall x. (Big(x) -> Chases(x, Cat))\nTEXT:\tIf someone likes the rabbit then the rabbit sees the cat.\nFOL:\tall x. (Likes(x, Rabbit) -> Sees(Rabbit, Cat))\nTEXT:\tIf someone sees the cat then the cat is red.\nFOL:\tall x. (Sees(x, Cat) -> Red(Cat))\nTEXT:\tIf the cat sees the rabbit then the cat is cold.\nFOL:\t(Sees(Cat, Rabbit) -> Cold(Cat))\nTEXT:\tIf someone sees the squirrel then the squirrel chases the rabbit.\nFOL:\tall x. (Sees(x, Squirrel) -> Chases(Squirrel, Rabbit))\nTEXT:\tIf someone likes the squirrel then they like the cat.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tIf someone is cold and red then they chase the rabbit.\nFOL:\tall x. (Cold(x) & Red(x) -> Chases(x, Rabbit))\nTEXT:\tThe cat does not chase the squirrel.\nFOL:\t-Chases(Cat, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone is cold and they like the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tIf someone likes the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone is big then they chase the cat.\nFOL:\tall x. (Big(x) -> Chases(x, Cat))\nTEXT:\tIf someone likes the rabbit then the rabbit sees the cat.\nFOL:\tall x. (Likes(x, Rabbit) -> Sees(Rabbit, Cat))\nTEXT:\tIf someone sees the cat then the cat is red.\nFOL:\tall x. (Sees(x, Cat) -> Red(Cat))\nTEXT:\tIf the cat sees the rabbit then the cat is cold.\nFOL:\tSees(Cat, Rabbit) -> Cold(Cat)\nTEXT:\tIf someone sees the squirrel then the squirrel chases the rabbit.\nFOL:\tall x. (Sees(x, Squirrel) -> Chases(Squirrel, Rabbit))\nTEXT:\tIf someone likes the squirrel then they like the cat.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tIf someone is cold and red then they chase the rabbit.\nFOL:\tall x. (Cold(x) & Red(x) -> Chases(x, Rabbit))\nTEXT:\tThe cat does not chase the squirrel.\nFOL:\t-Chases(Cat, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone is cold and they like the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tIf someone likes the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone is big then they chase the cat.\nFOL:\tall x. (Big(x) -> Chases(x, Cat))\nTEXT:\tIf someone likes the rabbit then the rabbit sees the cat.\nFOL:\tall x. (Likes(x, Rabbit) -> Sees(Rabbit, Cat))\nTEXT:\tIf someone sees the cat then the cat is red.\nFOL:\tall x. (Sees(x, Cat) -> Red(Cat))\nTEXT:\tIf the cat sees the rabbit then the cat is cold.\nFOL:\tSees(Cat, Rabbit) -> Cold(Cat)\nTEXT:\tIf someone sees the squirrel then the squirrel chases the rabbit.\nFOL:\tall x. (Sees(x, Squirrel) -> Chases(Squirrel, Rabbit))\nTEXT:\tIf someone likes the squirrel then they like the cat.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tIf someone is cold and red then they chase the rabbit.\nFOL:\tall x. (Cold(x) & Red(x) -> Chases(x, Rabbit))\nTEXT:\tThe cat does not chase the squirrel.\nFOL:\t-Chases(Cat, Squirrel)\nANSWER:\tFalse\n", "TEXT:\tThe cat chases the squirrel.\nFOL:\tChases(Cat, Squirrel)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat sees the squirrel.\nFOL:\tSees(Cat, Squirrel)\nTEXT:\tThe rabbit chases the squirrel.\nFOL:\tChases(Rabbit, Squirrel)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel sees the tiger.\nFOL:\tSees(Squirrel, Tiger)\nTEXT:\tThe tiger chases the squirrel.\nFOL:\tChases(Tiger, Squirrel)\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tThe tiger sees the squirrel.\nFOL:\tSees(Tiger, Squirrel)\nTEXT:\tIf someone is cold and they like the tiger then the tiger likes the rabbit.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> Likes(Tiger, Rabbit))\nTEXT:\tIf someone likes the rabbit then the rabbit likes the tiger.\nFOL:\tall x. (Likes(x, Rabbit) -> Likes(Rabbit, Tiger))\nTEXT:\tIf someone is big then they chase the cat.\nFOL:\tall x. (Big(x) -> Chases(x, Cat))\nTEXT:\tIf someone likes the rabbit then the rabbit sees the cat.\nFOL:\tall x. (Likes(x, Rabbit) -> Sees(Rabbit, Cat))\nTEXT:\tIf someone sees the cat then the cat is red.\nFOL:\tall x. (Sees(x, Cat) -> Red(Cat))\nTEXT:\tIf the cat sees the rabbit then the cat is cold.\nFOL:\t(Sees(Cat, Rabbit) -> Cold(Cat))\nTEXT:\tIf someone sees the squirrel then the squirrel chases the rabbit.\nFOL:\tall x. (Sees(x, Squirrel) -> Chases(Squirrel, Rabbit))\nTEXT:\tIf someone likes the squirrel then they like the cat.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(x, Cat))\nTEXT:\tIf someone is cold and red then they chase the rabbit.\nFOL:\tall x. (Cold(x) & Red(x) -> Chases(x, Rabbit))\nTEXT:\tThe cat does not chase the squirrel.\nFOL:\t-Chases(Cat, Squirrel)\nANSWER:\tFalse\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Fiona is furry then Fiona is nice.\nFOL:\tFurry(Fiona) -> Nice(Fiona)\nTEXT:\tIf Fiona is nice and Fiona is red then Fiona is furry.\nFOL:\t(Nice(Fiona) & Red(Fiona)) -> Furry(Fiona)\nTEXT:\tAll white things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is big then it is white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is furry then it is quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Fiona is not nice and Fiona is not furry then Fiona is quiet.\nFOL:\t(-Nice(Fiona) & -Furry(Fiona)) -> Quiet(Fiona)\nTEXT:\tBig, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Fiona is furry then Fiona is nice.\nFOL:\tFurry(Fiona) -> Nice(Fiona)\nTEXT:\tIf Fiona is nice and Fiona is red then Fiona is furry.\nFOL:\tNice(Fiona) & Red(Fiona) -> Furry(Fiona)\nTEXT:\tAll white things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is big then it is white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is furry then it is quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Fiona is not nice and Fiona is not furry then Fiona is quiet.\nFOL:\t-Nice(Fiona) & -Furry(Fiona) -> Quiet(Fiona)\nTEXT:\tBig, quiet things are rough.\nFOL:\tall x. (Big(x) & Quiet(x) -> Rough(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Fiona is furry then Fiona is nice.\nFOL:\tFurry(Fiona) -> Nice(Fiona)\nTEXT:\tIf Fiona is nice and Fiona is red then Fiona is furry.\nFOL:\t(Nice(Fiona) & Red(Fiona)) -> Furry(Fiona)\nTEXT:\tAll white things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is big then it is white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is furry then it is quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Fiona is not nice and Fiona is not furry then Fiona is quiet.\nFOL:\t(-Nice(Fiona) & -Furry(Fiona)) -> Quiet(Fiona)\nTEXT:\tBig, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Fiona is furry then Fiona is nice.\nFOL:\tFurry(Fiona) -> Nice(Fiona)\nTEXT:\tIf Fiona is nice and Fiona is red then Fiona is furry.\nFOL:\t(Nice(Fiona) & Red(Fiona)) -> Furry(Fiona)\nTEXT:\tAll white things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is big then it is white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is furry then it is quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Fiona is not nice and Fiona is not furry then Fiona is quiet.\nFOL:\t(-Nice(Fiona) & -Furry(Fiona)) -> Quiet(Fiona)\nTEXT:\tBig, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n", "TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf Fiona is furry then Fiona is nice.\nFOL:\tFurry(Fiona) -> Nice(Fiona)\nTEXT:\tIf Fiona is nice and Fiona is red then Fiona is furry.\nFOL:\t(Nice(Fiona) & Red(Fiona)) -> Furry(Fiona)\nTEXT:\tAll white things are red.\nFOL:\tall x. (White(x) -> Red(x))\nTEXT:\tAll white things are furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is big then it is white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tAll nice things are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tIf something is furry then it is quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tIf Fiona is not nice and Fiona is not furry then Fiona is quiet.\nFOL:\t(-Nice(Fiona) & -Furry(Fiona)) -> Quiet(Fiona)\nTEXT:\tBig, quiet things are rough.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Rough(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nANSWER:\tTrue\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is green and not big then it is not furry.\nFOL:\tall x. ((Green(x) & -Big(x)) -> -Furry(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tAll round things are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, nice things are smart.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Smart(x))\nTEXT:\tAll furry things are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tBig things are white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is green and not big then it is not furry.\nFOL:\tall x. ((Green(x) & -Big(x)) -> -Furry(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tAll round things are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, nice things are smart.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Smart(x))\nTEXT:\tAll furry things are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tBig things are white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is green and not big then it is not furry.\nFOL:\tall x. ((Green(x) & -Big(x)) -> -Furry(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tAll round things are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, nice things are smart.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Smart(x))\nTEXT:\tAll furry things are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tBig things are white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is green and not big then it is not furry.\nFOL:\tall x. ((Green(x) & -Big(x)) -> -Furry(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tAll round things are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, nice things are smart.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Smart(x))\nTEXT:\tAll furry things are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tBig things are white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n", "TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is green.\nFOL:\tGreen(Bob)\nTEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is green and not big then it is not furry.\nFOL:\tall x. ((Green(x) & -Big(x)) -> -Furry(x))\nTEXT:\tIf something is round then it is furry.\nFOL:\tall x. (Round(x) -> Furry(x))\nTEXT:\tAll round things are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll green, nice things are smart.\nFOL:\tall x. ((Green(x) & Nice(x)) -> Smart(x))\nTEXT:\tAll furry things are round.\nFOL:\tall x. (Furry(x) -> Round(x))\nTEXT:\tBig things are white.\nFOL:\tall x. (Big(x) -> White(x))\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nANSWER:\tUncertain\n"], ["TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is round then they are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tGreen people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is red and furry then they are green.\nFOL:\tall x. (Red(x) & Furry(x) -> Green(x))\nTEXT:\tGreen, kind people are cold.\nFOL:\tall x. (Green(x) & Kind(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tFalse\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is round then they are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tGreen people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is red and furry then they are green.\nFOL:\tall x. (Red(x) & Furry(x) -> Green(x))\nTEXT:\tGreen, kind people are cold.\nFOL:\tall x. (Green(x) & Kind(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tUncertain\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is round then they are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tGreen people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is red and furry then they are green.\nFOL:\tall x. (Red(x) & Furry(x) -> Green(x))\nTEXT:\tGreen, kind people are cold.\nFOL:\tall x. (Green(x) & Kind(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tFalse\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is round then they are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tGreen people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is red and furry then they are green.\nFOL:\tall x. (Red(x) & Furry(x) -> Green(x))\nTEXT:\tGreen, kind people are cold.\nFOL:\tall x. (Green(x) & Kind(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tFalse\n", "TEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tDave is green.\nFOL:\tGreen(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is kind.\nFOL:\tKind(Gary)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tIf someone is round then they are cold.\nFOL:\tall x. (Round(x) -> Cold(x))\nTEXT:\tGreen people are round.\nFOL:\tall x. (Green(x) -> Round(x))\nTEXT:\tIf someone is red and furry then they are green.\nFOL:\tall x. (Red(x) & Furry(x) -> Green(x))\nTEXT:\tGreen, kind people are cold.\nFOL:\tall x. (Green(x) & Kind(x) -> Cold(x))\nTEXT:\tIf someone is cold then they are furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart then they are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tDave is not smart.\nFOL:\t-Smart(Dave)\nANSWER:\tUncertain\n"], ["TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the cow.\nFOL:\tLikes(Lion, Cow)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf someone eats the cow and they are big then the cow likes the bald eagle.\nFOL:\tall x. (Eats(x, Cow) & Big(x) -> Likes(Cow, BaldEagle))\nTEXT:\tIf someone eats the lion then they chase the lion.\nFOL:\tall x. (Eats(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf someone eats the bald eagle then the bald eagle chases the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Tiger))\nTEXT:\tRound, big people are green.\nFOL:\tall x. (Person(x) & Round(x) & Big(x) -> Green(x))\nTEXT:\tIf someone chases the lion and the lion chases the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Chases(x, Lion) & Chases(Lion, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone chases the tiger and they are blue then the tiger eats the lion.\nFOL:\tall x. (Chases(x, Tiger) & Blue(x) -> Eats(Tiger, Lion))\nTEXT:\tIf someone is green then they chase the bald eagle.\nFOL:\tall x. (Green(x) -> Chases(x, BaldEagle))\nTEXT:\tCold people are blue.\nFOL:\tall x. (Person(x) & Cold(x) -> Blue(x))\nTEXT:\tIf the cow is cold and the cow chases the bald eagle then the cow is green.\nFOL:\t(Cold(Cow) & Chases(Cow, BaldEagle) -> Green(Cow))\nTEXT:\tThe cow does not chase the lion.\nFOL:\t-Chases(Cow, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the cow.\nFOL:\tLikes(Lion, Cow)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf someone eats the cow and they are big then the cow likes the bald eagle.\nFOL:\tall x. (Eats(x, Cow) & Big(x) -> Likes(Cow, BaldEagle))\nTEXT:\tIf someone eats the lion then they chase the lion.\nFOL:\tall x. (Eats(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf someone eats the bald eagle then the bald eagle chases the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Tiger))\nTEXT:\tRound, big people are green.\nFOL:\tall x. (Person(x) & Big(x) & Round(x) -> Green(x))\nTEXT:\tIf someone chases the lion and the lion chases the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Chases(x, Lion) & Chases(Lion, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone chases the tiger and they are blue then the tiger eats the lion.\nFOL:\tall x. (Chases(x, Tiger) & Blue(x) -> Eats(Tiger, Lion))\nTEXT:\tIf someone is green then they chase the bald eagle.\nFOL:\tall x. (Green(x) -> Chases(x, BaldEagle))\nTEXT:\tCold people are blue.\nFOL:\tall x. (Person(x) & Cold(x) -> Blue(x))\nTEXT:\tIf the cow is cold and the cow chases the bald eagle then the cow is green.\nFOL:\tCold(Cow) & Chases(Cow, BaldEagle) -> Green(Cow)\nTEXT:\tThe cow does not chase the lion.\nFOL:\t-Chases(Cow, Lion)\nANSWER:\tTrue\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the cow.\nFOL:\tLikes(Lion, Cow)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf someone eats the cow and they are big then the cow likes the bald eagle.\nFOL:\tall x. (Eats(x, Cow) & Big(x) -> Likes(Cow, BaldEagle))\nTEXT:\tIf someone eats the lion then they chase the lion.\nFOL:\tall x. (Eats(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf someone eats the bald eagle then the bald eagle chases the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Tiger))\nTEXT:\tRound, big people are green.\nFOL:\tall x. (Round(x) & Big(x) -> Green(x))\nTEXT:\tIf someone chases the lion and the lion chases the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Chases(x, Lion) & Chases(Lion, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone chases the tiger and they are blue then the tiger eats the lion.\nFOL:\tall x. (Chases(x, Tiger) & Blue(x) -> Eats(Tiger, Lion))\nTEXT:\tIf someone is green then they chase the bald eagle.\nFOL:\tall x. (Green(x) -> Chases(x, BaldEagle))\nTEXT:\tCold people are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tIf the cow is cold and the cow chases the bald eagle then the cow is green.\nFOL:\t(Cold(Cow) & Chases(Cow, BaldEagle) -> Green(Cow))\nTEXT:\tThe cow does not chase the lion.\nFOL:\t-Chases(Cow, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the cow.\nFOL:\tLikes(Lion, Cow)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf someone eats the cow and they are big then the cow likes the bald eagle.\nFOL:\tall x. (Eats(x, Cow) & Big(x) -> Likes(Cow, BaldEagle))\nTEXT:\tIf someone eats the lion then they chase the lion.\nFOL:\tall x. (Eats(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf someone eats the bald eagle then the bald eagle chases the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Tiger))\nTEXT:\tRound, big people are green.\nFOL:\tall x. (Round(x) & Big(x) -> Green(x))\nTEXT:\tIf someone chases the lion and the lion chases the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Chases(x, Lion) & Chases(Lion, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone chases the tiger and they are blue then the tiger eats the lion.\nFOL:\tall x. (Chases(x, Tiger) & Blue(x) -> Eats(Tiger, Lion))\nTEXT:\tIf someone is green then they chase the bald eagle.\nFOL:\tall x. (Green(x) -> Chases(x, BaldEagle))\nTEXT:\tCold people are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tIf the cow is cold and the cow chases the bald eagle then the cow is green.\nFOL:\tCold(Cow) & Chases(Cow, BaldEagle) -> Green(Cow)\nTEXT:\tThe cow does not chase the lion.\nFOL:\t-Chases(Cow, Lion)\nANSWER:\tUncertain\n", "TEXT:\tThe bald eagle is green.\nFOL:\tGreen(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe cow eats the bald eagle.\nFOL:\tEats(Cow, BaldEagle)\nTEXT:\tThe cow eats the lion.\nFOL:\tEats(Cow, Lion)\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is round.\nFOL:\tRound(Cow)\nTEXT:\tThe cow likes the tiger.\nFOL:\tLikes(Cow, Tiger)\nTEXT:\tThe lion chases the tiger.\nFOL:\tChases(Lion, Tiger)\nTEXT:\tThe lion eats the cow.\nFOL:\tEats(Lion, Cow)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is big.\nFOL:\tBig(Lion)\nTEXT:\tThe lion is green.\nFOL:\tGreen(Lion)\nTEXT:\tThe lion likes the cow.\nFOL:\tLikes(Lion, Cow)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tIf someone eats the cow and they are big then the cow likes the bald eagle.\nFOL:\tall x. (Eats(x, Cow) & Big(x) -> Likes(Cow, BaldEagle))\nTEXT:\tIf someone eats the lion then they chase the lion.\nFOL:\tall x. (Eats(x, Lion) -> Chases(x, Lion))\nTEXT:\tIf someone eats the bald eagle then the bald eagle chases the tiger.\nFOL:\tall x. (Eats(x, BaldEagle) -> Chases(BaldEagle, Tiger))\nTEXT:\tRound, big people are green.\nFOL:\tall x. (Round(x) & Big(x) -> Green(x))\nTEXT:\tIf someone chases the lion and the lion chases the bald eagle then the bald eagle is cold.\nFOL:\tall x. (Chases(x, Lion) & Chases(Lion, BaldEagle) -> Cold(BaldEagle))\nTEXT:\tIf someone chases the tiger and they are blue then the tiger eats the lion.\nFOL:\tall x. (Chases(x, Tiger) & Blue(x) -> Eats(Tiger, Lion))\nTEXT:\tIf someone is green then they chase the bald eagle.\nFOL:\tall x. (Green(x) -> Chases(x, BaldEagle))\nTEXT:\tCold people are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tIf the cow is cold and the cow chases the bald eagle then the cow is green.\nFOL:\t(Cold(Cow) & Chases(Cow, BaldEagle) -> Green(Cow))\nTEXT:\tThe cow does not chase the lion.\nFOL:\t-Chases(Cow, Lion)\nANSWER:\tUncertain\n"]]